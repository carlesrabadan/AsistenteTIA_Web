tud del resto del telegrama. A continuación, se efectúa una
segunda llamada de AG_(L)RECV con la longitud restante. La evaluación de los datos de
usuario recibidos se efectúa después de la recepción completa.

Parámetros
Los parámetros de la instrucción MODBUSCP se dividen en dos grupos:
● Parámetros de inicialización
Los parámetros de inicialización se evalúan solo durante la llamada en el OB100 y se
aplican en el DB de instancia. Los parámetros de inicialización están marcados con "sí" en
la tabla, en la columna "INIT".
La modificación de un parámetro de inicialización durante el funcionamiento no tiene
ningún efecto. Después de modificar este parámetro, p. ej., en el modo Test, debe
inicializarse de nuevo el DB de instancia mediante "STOP > RUN" de la CPU.
● Parámetros del tiempo de ejecución
Los parámetros del tiempo de ejecución pueden modificarse en el funcionamiento cíclico.
En el modo de operación "S7 es cliente", sin embargo, no es conveniente modificar los
parámetros de entrada mientras haya una petición en curso. Con las preparativos para la
siguiente petición y las modificaciones de parámetros asociadas, debe esperarse hasta
que la petición anterior haya finalizado con DONE_NDR o ERROR.
En el modo de operación "S7 es servidor" solo pueden evaluarse los parámetros de salida
con DONE_NDR activado.
Los parámetros de salida son indicadores dinámicos y, por tanto, solo están disponibles
durante 1 ciclo de la CPU. Para poderlos procesar posteriormente o verlos en la tabla de
variables, se deben copiar en otras áreas de memoria.
En las áreas de valores para los distintos parámetros también deben tenerse en cuenta, las
limitaciones específicas de la CPU, si las hay.
Parámetros

Decl.

Tipo

Descripción

Rango de valo‐
res

Init

id (Página 7302)

IN

WORD

ID de conexión del editor "Dispositivos y redes"

De 1 a 64

Sí

db_param (Pági‐
na 7302)

IN

BLOCK_DB

Número del DB de parámetros

Depende de la
CPU

Sí

MONITOR (Pági‐ IN
na 7308)

TIME

Tiempo de vigilancia para la recepción de datos del in‐
terlocutor
El tiempo mínimo ajustable es 20 ms

T#20ms hasta
T#+24d20h31
m23s647ms

No

REG_KEY (Pági‐ IN
na 7297)

STRING[17]

Clave del registro para la concesión de licencia

Character

No

Programación del PLC
Manual de programación y manejo, 11/2019

7295

Instrucciones
4.2 Instrucciones
Parámetros

Decl.

Tipo

Descripción

Rango de valo‐
res

Init

ENQ_ENR (Pági‐ IN
na 7308)

BOOL

S7 es cliente: Lanzamiento de petición con flanco posi‐
tivo
S7 es servidor: Listo para recepción con nivel positivo

TRUE/FALSE

No

LICENSED

OUT

BOOL

Estado de licencia del bloque
El bloque tiene licencia
El bloque no tiene licencia

BUSY

OUT

BOOL

Estado de ejecución de las funciones AG_(L)SEND o
AG_(L)RECV
En ejecución
No en ejecución

TRUE
FALSE

No

No
TRUE
FALSE

DONE_NDR

OUT

BOOL

S7 es cliente: TRUE: la petición activada ha terminado
sin error
S7 es servidor: TRUE: se ha ejecutado y ha respondido
a la solicitud del cliente

TRUE/FALSE

No

ERROR (Pági‐
na 7302)

OUT

BOOL

Se ha producido un fallo
No se ha producido ningún fallo

TRUE
FALSE

No

STATUS (Pági‐
na 7302)

OUT

WORD

Número de error

De 0 a FFFF

No

STATUS_FUNC
(Página 7302)

OUT

STRING[8]

Nombre de la función que ha causado el error en STA‐
TUS

Character

No

IDENT_CODE
(Página 7297)

OUT

STRING[18]

Identificación para la licencia
Solicite la licencia con esta cadena de identificación.

Character

No

UNIT (Pági‐
na 7307)

IN/O
UT

BYTE

Unit Identifier (INPUT en la función CLIENT, OUTPUT
en la función SERVER)

De 0 a 255

No

DATA_TYPE
(Página 7307)

IN/O
UT

BYTE

Tipo de datos por procesar (INPUT en la función
CLIENT, OUTPUT en la función SERVER)

No

Coils

1

Inputs

2

Holding Register

3

Input Register

4

START_AD‐
DRESS (Pági‐
na 7307)

IN/O
UT

WORD

Dirección inicial MODBUS (INPUT en la función
CLIENT, OUTPUT en la función SERVER)

De 0 a 65535

LENGTH (Pági‐
na 7307)

IN/O
UT

WORD

Número de valores por procesar (INPUT en la función
CLIENT, OUTPUT en la función SERVER)

WRITE_READ
(Página 7307)

7296

IN/O
UT

BOOL

No

No

Coils: Función de lectura

De 1 a 2000

Coils: Función de escritura

De 1 a 1968

Inputs: Función de lectura

De 1 a 2000

Holding Register: Función de lectura

De 1 a 125

Holding Register: Función de escritura

De 1 a 123

Input Register: Función de lectura

De 1 a 125

INPUT en la función CLIENT, OUTPUT en la función
SERVER
Acceso de escritura o lectura

TRUE/FALSE

No

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
Llamada de la instrucción MODBUSCP (Página 7284)

Concesión de licencia con los parámetros IDENT_CODE y REG_KEY
Descripción
Se debe obtener una licencia para la instrucción MODBUSCP en cada CPU por separado. La
licencia se concede en 2 pasos:
● lectura del IDENT_CODE y
● introducción del código de validación REG_KEY (clave del Registro).
Para ello, el OB121 debe estar presente en la CPU.
Para la lectura del IDENT_CODE proceda de la manera siguiente:
1. Parametrice la instrucción MODBUSCP de acuerdo con sus requisitos en un OB cíclico y
en el OB100. Cargue el programa en la CPU y póngala en RUN.
2. Abra el DB de instancia de la instrucción Modbus y haga clic en el botón "Observar todos".
3. En la salida IDENT_CODE se visualiza una cadena de caracteres de 18 dígitos.

Figura 4-68

Programación del PLC
Manual de programación y manejo, 11/2019

Modbus/TCP CP: IDENT_CODE en el DB

7297

Instrucciones
4.2 Instrucciones
4. Copie este string mediante copiar/pegar desde el bloque de datos al formulario
SOFTWARE REGISTRATION FORM. Este formulario se encuentra en el CD de
instalación.
Introduzca el n.º de licencia del embalaje del producto en el formulario.

Figura 4-69

Modbus/TCP CP: IDENT_CODE y formulario de licencia

5. Envíe el formulario mediante una Service Request (solicitud de servicio) al Customer
Support (https://support.industry.siemens.com/my/ww/en/requests/#createRequest).
Luego recibirá el código de validación para la CPU.
El código de validación REG_KEY se debe indicar en cada instrucción MODBUSCP. La clave
REG_KEY debe guardarse en un bloque de datos global a través del cual todas las
instrucciones MODBUSCP recibirán el código de validación necesario.

7298

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Para la introducción del código de validación REG_KEY proceda del modo siguiente:
● Mediante "Agregar nuevo bloque…" inserte un bloque de datos global nuevo con un
nombre simbólico unívoco, p. ej. "DB_Licencia".
● Defina un parámetro REG_KEY con el tipo de datos STRING[17] en este bloque.

Figura 4-70

REG_KEY en DB

● Copie el código de validación de 17 dígitos determinado mediante Copiar/Pegar en la
columna 'Valor de arranque'.
● En el OB cíclico, en el parámetro REG_KEY de la instrucción MODBUSCP, introduzca el
valor "DB_Licencia.REG_KEY".
● Cargue los bloques modificados en la CPU. La introducción del código de validación se
puede realizar durante el tiempo de ejecución, no es necesario pasar de STOP -> RUN.
La comunicación Modbus/TCP a través de la instrucción MODBUSCP ahora tiene licencia
para esta CPU; el bit de salida LICENSED es TRUE.
Falta la concesión de licencia o esta es errónea
Si no se introdujo ningún código de validación o si este es incorrecto, el SF-LED (en S7-300)
o INTF-LED (en S7-400) de la CPU parpadea y se realiza cíclicamente una entrada en el búfer
de diagnóstico relativa a la falta de licencia. El número de error por falta de licencia es
W#16#A090.

Figura 4-71

Búfer de diagnóstico con A090

Programación del PLC
Manual de programación y manejo, 11/2019

7299

Instrucciones
4.2 Instrucciones

ADVERTENCIA
En caso de que el OB121 falte en el controlador, la CPU pasa al estado STOP.

En caso de que falte el código de validación o este sea incorrecto, se procesa la comunicación
Modbus/TCP; sin embargo, en la salida STATUS se muestra constantemente W#16#A090
"No existe ninguna licencia válida". El bit de salida LICENSED es FALSE.

Mapeo de direcciones
Interpretación de las direcciones MODBUS/TCP
El modelo de datos MODBUS contiene las siguientes áreas:
● Coils
● Inputs
● Holding Register
● Input Register
En algunos sistemas, como los PLC MODICON, la distinción de estas áreas de memoria se
realiza mediante la dirección de registro o la dirección de bit. Así, por ejemplo, el Holding
Register con Offset 0 se denomina Register 40001 (tipo de memoria 4xxxx, Reference 0001).
Siempre da lugar a confusión porque, en algunos manuales, se describe y se hace referencia
a la dirección de registro del Application Layer y, en otros, a la dirección de registro/dirección
de bit transmitida realmente en el protocolo.
La instrucción MODBUSCP utiliza, en sus parámetros start_x, end_x y START_ADDRESS, la
dirección Modbus/TCP realmente transmitida. Por tanto, con cada código de función se
pueden transferir direcciones de registro/direcciones de bits de 0000H a FFFFH.

Ejemplo
Las direcciones Modbus se pueden indicar en formato decimal o hexadecimal en el DB de
parámetros.

7300

Parámetros

Notación decimal

Notación hexadeci‐
mal

Significado

data_type_1

1

B#16#1

Coils

db_1

10

W#16#A

DB 10

start_1

640

W#16#280

Dirección inicial: 640

end_1

1250

W#16#4E2

Dirección final:

data_type_2

3

B#16#3

Holding Register

db_2

11

W#16#B

DB 11

start_2

0

W#16#0

Dirección inicial: 0

end_2

499

W#16#1F3

Dirección final:

1250

499

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
data_type_3

3

B#16#3

Holding Register

db_3

12

W#16#C

DB 12

start_3

720

W#16#2D0

Dirección inicial: 720

end_3

900

W#16#384

Dirección final:

900

En la siguiente figura se muestra una comparativa de las áreas de memoria SIMATIC con la
partición de memoria orientada a registro y a bit de los dispositivos Modbus/TCP. Se hace
referencia a la parametrización mencionada anteriormente.
En el dispositivo Modbus
Las direcciones Modbus resaltadas en negro afectan al Data Link Layer, mientras que las
grises afectan al Application Layer.
En SIMATIC
Las direcciones SIMATIC representadas en la columna "Offset" son el Offset en el DB. Los
números de registro Modbus se indican entre corchetes.

Figura 4-72

Modbus/TCP: Mapeo de direcciones

Programación del PLC
Manual de programación y manejo, 11/2019

7301

Instrucciones
4.2 Instrucciones

Parámetros ID y DB_PARAM
Descripción
ID
Para cada conexión configurada en STEP 7 (editor "Dispositivos y redes"), se asigna una ID
de conexión. La ID de conexión describe de forma unívoca la conexión entre la CPU y el
interlocutor a través del CP. Esta ID de conexión se configura en el bloque de parámetros de
conexión que contiene el bloque de datos de parámetros. Esta ID debe introducirse aquí.
El rango de valores de este parámetro es de 1 a 64.
DB_PARAM
El parámetro db_param indica el número del bloque de datos de parámetros, en el cual se
encuentra el tipo de datos PLC MB_CP_PARAM. En este bloque de datos de parámetros se
guardan los parámetros específicos de conexión y de Modbus que son necesarios para la
comunicación entre la CPU y el interlocutor.
El rango de valores de este parámetro depende de la CPU. El número de DB 0 no se admite
ya que se reserva para el sistema. El número de DB se introduce en texto explícito con el
formato "DBxy".
Si se deben realizar varias conexiones, el bloque de datos de parámetros puede contener los
parámetros necesarios de todas las conexiones de forma secuencial. También es posible
crear un bloque de datos de parámetros aparte para cada conexión.

Consulte también
Descripción MODBUSCP (Página 7292)
Bloque de datos de parámetros (Página 7287)

Parámetros DONE_NDR, ERROR, STATUS y STATUS_FUNC
Descripción
DONE_NDR
En el modo de operación "S7 es cliente" la petición activada ha terminado sin errores. En una
función de lectura, los datos de respuesta ya se han introducido en el DB desde el servidor; en
una función de escritura, la respuesta se ha recibido en el telegrama de solicitud desde el
servidor.
En el modo de operación "S7 es servidor" la salida muestra un intercambio de telegramas con
el cliente finalizado sin errores. En los parámetros DATA_TYPE, START_ADDRESS,
LENGTH, WRITE_READ y UNIT se muestran los parámetros de petición del cliente. Estas
salidas solo son válidas siempre que esté activado DONE_NDR.
ERROR
Si se activa esta salida, significa que se ha detectado un error.
En el modo de operación "S7 es cliente" la petición activada ha finalizado con errores. El
número de error correspondiente se muestra en la salida STATUS.

7302

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
En el modo de operación "S7 es servidor" se ha detectado un error en un telegrama de solicitud
del cliente o al enviar el telegrama de respuesta. El número de error correspondiente se
muestra en la salida STATUS.
STATUS
La salida STATUS muestra el número de error si ERROR está activado.
Se sigue mostrando información de estado en esta salida.
Las instrucciones MODBUSCP, MB_CPCLI y MB_CPSRV se utilizan en los bloques estándar
SFC6, SFC20, SFC24, SFC51 y SFC52, así como AG_SEND/AG_LSEND y AG_RECV/
AG_LRECV. Los mensajes de error de estas instrucciones se transmiten sin modificar a
STATUS.
STATUS_FUNC
En este parámetro se muestra como string de caracteres el nombre de la función que ha
causado el error.
Status (Hex) Texto del evento

Solución

A001

El bloque de datos de parámetros es demasiado corto.

Corrija la longitud del DB de parámetros.

A002

El parámetro end_x es menor que el start_x.

Corrija los datos en start_x y end_x.

A003

Un DB en el que se deben mapear direcciones MODBUS es dema‐
siado corto.
Longitud mínima:
en registros:
(end_x - start_x + 1 ) * 2 + 2
- en valores de bit:
(end_x - start_x ) / 8 + 3
otras causas posibles:
• S7 es cliente: parámetros de llamada incorrectos
• S7 es servidor: rango de direcciones incorrecto en el telegrama
de solicitud del cliente. El CP responde con un telegrama de ex‐
cepción.

Amplíe el DB.
S7 es cliente:
Corrija los parámetros de petición
START_ ADDRESS o LENGTH.
S7 es servidor:
Cambie la solicitud del cliente.

A004

Solo S7 es cliente:
Se ha indicado una combinación inadmisible de DATA_TYPE y
WRITE_READ.

Corrija los parámetros de llamada. Solo
se pueden escribir los tipos de datos 1 y
3.

A005

S7 es cliente:
Se ha indicado un valor inadmisible en el parámetro LENGTH.
S7 es servidor:
El número de registros/bits en el telegrama de solicitud es inadmi‐
sible. El CP responde con un telegrama de excepción.

S7 es cliente:
Corrija el parámetro LENGTH.
S7 es servidor:
Modifique el número en el telegrama de
solicitud.

Rangos de valores:

A006

Lectura de coils/inputs

De 1 a 2000

Escritura de coils

De 1 a 1968

Lectura del registro

De 1 a 125

Escritura de Holding Register

De 1 a 123

El área indicada mediante DATA_TYPE, START_ADDRESS y
LENGTH no existe en data_type_1 hasta data_type_8.
S7 es servidor:
El CP responde con un telegrama de excepción.

Programación del PLC
Manual de programación y manejo, 11/2019

S7 es cliente: Corrija la combinación de
la parametrización DATA_TYPE,
START_ ADDRESS y LENGTH.
S7 es servidor: Modifique la solicitud del
cliente o corrija la parametrización en
data_type_x.

7303

Instrucciones
4.2 Instrucciones
Status (Hex) Texto del evento

Solución

A007

S7 es cliente: Se ha parametrizado un tiempo de vigilancia no válido
en MONITOR. Se debe introducir un valor >= 20 ms.

Corrija la parametrización.

A008

Dentro del tiempo de vigilancia parametrizado MONITOR el
AG_RECV activado no notifica ninguna recepción, p. ej., interlocu‐
tor no listo.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

Verifique los ajustes y, dado el caso, los
mensajes de error del interlocutor. Veri‐
fique si el interlocutor puede necesitar
un identificador UNIT determinado.

A009

S7 es cliente: El Transaction Identifier TI recibido es diferente del
enviado.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

Compruebe los datos del interlocutor
con ayuda de un registro de telegramas.

A00A

S7 es cliente: La UNIT recibida es diferente de la enviada.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

A00B

S7 es cliente: El código de función que se ha recibido es distinto del
enviado.
S7 es servidor: Se ha recibido un código de función no válido. El CP
responde con un telegrama de excepción.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

S7 es cliente:
Compruebe los datos del interlocutor
con ayuda de un registro de telegramas.
S7 es servidor:
Modifique la solicitud del cliente. La ins‐
trucción MODBUSCP procesa los códi‐
gos de función 1, 2, 3, 4, 5, 6, 15 y 16.

A00C

El número de bytes recibido no se corresponde con el número de
bits/de registros.
S7 es servidor: El CP envía un telegrama de excepción.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

Compruebe los datos del interlocutor
con ayuda de un registro de telegramas.

A00D

Solo con S7 es cliente: La dirección de registro/bit o el número de
registros/bits del telegrama de respuesta es diferente al del tele‐
grama de solicitud.

A00E

La indicación de longitud del encabezado de telegrama específico Compruebe los datos del interlocutor
de Modbus no coincide con el número de registros/bits o el número con ayuda de un registro de telegramas.
de bytes indicados del telegrama. La instrucción rechaza los datos.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

A00F

Se ha recibido un Protocol Identifier distinto de 0.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

A010

En los parámetros de db_1 a db_8 se ha asignado un número de DB Corrija la parametrización en db_x.
por duplicado.

A011

En el parámetro de entrada DATA_TYPE se ha indicado un valor
inadmisible (los valores admitidos son 1, 2, 3 y 4).

Corrija los parámetros de llamada.

A012

Las áreas parametrizadas data_type_1 y data_type_2 se solapan.

A013

Las áreas parametrizadas data_type_1 y data_type_3 se solapan.

A014

Las áreas parametrizadas data_type_1 y data_type_4 se solapan.

A015

Las áreas parametrizadas data_type_1 y data_type_5 se solapan.

Corrija la parametrización.
Las áreas de datos no deben disponer
de ningún área común de direcciones
de registro.

A016

Las áreas parametrizadas data_type_1 y data_type_6 se solapan.

A017

Las áreas parametrizadas data_type_1 y data_type_7 se solapan.

A018

Las áreas parametrizadas data_type_1 y data_type_8 se solapan.

7304

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Status (Hex) Texto del evento

Solución

A019

Uno de los parámetros db_x se ha ajustado a 0, aunque el da‐
ta_type_x pertinente está parametrizado con > 0. El número de DB0
no se puede utilizar, ya que se reserva para el sistema.

Corrija la parametrización en db_x a > 0.
Si utiliza FB recopilador de datos, com‐
pruebe la parametrización en CFC.

A01A

Longitud incorrecta en el encabezado: Están permitidos de 3 a 253
bytes.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

Compruebe los datos del interlocutor
con ayuda de un registro de telegramas.

A01B

S7 es servidor y código de función 5:
Se ha recibido un estado no válido para Coil.
Se envía un telegrama de excepción.

A01E

Se han recibido datos no válidos que no pueden ser asignados.
Todas las conexiones a través del puerto 502 se interrumpen y se
establecen de nuevo.

A01F

La instrucción MODBUSCP está en un estado operativo no permi‐ Póngase en contacto con el Product
tido.
Support.

A023

Las áreas parametrizadas data_type_2 y data_type_3 se solapan.

A024

Las áreas parametrizadas data_type_2 y data_type_4 se solapan.

A025

Las áreas parametrizadas data_type_2 y data_type_5 se solapan.

A026

Las áreas parametrizadas data_type_2 y data_type_6 se solapan.

A027

Las áreas parametrizadas data_type_2 y data_type_7 se solapan.

A028

Las áreas parametrizadas data_type_2 y data_type_8 se solapan.

A034

Las áreas parametrizadas data_type_3 y data_type_4 se solapan.

A035

Las áreas parametrizadas data_type_3 y data_type_5 se solapan.

A036

Las áreas parametrizadas data_type_3 y data_type_6 se solapan.

A037

Las áreas parametrizadas data_type_3 y data_type_7 se solapan.

A038

Las áreas parametrizadas data_type_3 y data_type_8 se solapan.

A045

Las áreas parametrizadas data_type_4 y data_type_5 se solapan.

A046

Las áreas parametrizadas data_type_4 y data_type_6 se solapan.

A047

Las áreas parametrizadas data_type_4 y data_type_7 se solapan.

A048

Las áreas parametrizadas data_type_4 y data_type_8 se solapan.

A056

Las áreas parametrizadas data_type_5 y data_type_6 se solapan.

A057

Las áreas parametrizadas data_type_5 y data_type_7 se solapan.

A058

Las áreas parametrizadas data_type_5 y data_type_8 se solapan.

A067

Las áreas parametrizadas data_type_6 y data_type_7 se solapan.

A068

Las áreas parametrizadas data_type_6 y data_type_8 se solapan.

A078

Las áreas parametrizadas data_type_7 y data_type_8 se solapan.

A079

La ID de conexión indicada en el parámetro id no se encuentra en
el DB de parámetros.

A07A

Se ha indicado un valor inadmisible en el parámetro id (rango de
valores de 1 a 64).

A07B

La ID indicada está duplicada en el DB de parámetros.

A07C

En el parámetro data_type_x se ha indicado un valor inadmisible
(los valores admitidos van de 0 a 4).

Programación del PLC
Manual de programación y manejo, 11/2019

Controle el mensaje de error del interlo‐
cutor. Dado el caso, compruebe los da‐
tos con un registro de telegramas.

Corrija la parametrización.
Las áreas de datos no deben disponer
de ningún área común de direcciones
de registro.

Corrija la parametrización en la entrada
id.

Corrija la parametrización en el DB de
parámetros.

7305

Instrucciones
4.2 Instrucciones
Status (Hex) Texto del evento

Solución

A07D

El parámetro data_type_1 no contiene ninguna entrada. El área de
parámetros "_1" es el área inicial y se debe parametrizar.

Corrija la parametrización en el DB de
parámetros.

A07E

En db_x se ha indicado el número del DB de instancia de la ins‐
trucción MODBUSCP.

A080

En el OB100 y en el OB cíclico, para la instrucción MODBUS se han
empleado varios DB de instancia.

A081

Compruebe los datos del interlocutor
Solo con S7 es cliente y código de función 5:
Los datos del telegrama de respuesta no son el eco de la solicitud. con ayuda de un registro de telegramas.

A082

Solo con S7 es cliente y código de función 6:
El valor de registro recibido es distinto del enviado.

A083

S7 es cliente: se ha lanzado una petición mientras la petición ante‐ No lance una nueva petición hasta que
rior aún estaba en curso. No se ejecuta la petición.
la petición anterior haya finalizado con
DONE_ NDR = TRUE o ERROR =
TRUE.

A085

Debido a un acceso de escritura no permitido ha aparecido un error
interno durante la comprobación de la licencia.

Compruebe si en el programa S7 hay
algún acceso de escritura no permitido
al DB de licencia. No está permitido mo‐
dificar la estructura de REG_KEY. Dirí‐
jase al Product Support si es necesario.

A086

Se ha intentado escribir en un bloque de datos protegido contra
escritura.

Quite la protección contra escritura o
utilice otro DB.

A090

La instrucción MODBUSCP aún no tiene licencia para esta CPU.
Esta es una información de estado. El bit ERROR no está activado.
La comunicación MODBUS también funciona sin licencia.

Consulte el código de identificación pa‐
ra esta CPU en la salida IDENT_CODE
y solicite con él el código de validación.
Consulte el capítulo "Concesión de li‐
cencia (Página 7297)".

A091

Solo con S7 es cliente: Como respuesta se ha recibido un telegra‐ El interlocutor no soporta la función so‐
ma de excepción con código de excepción 1.
licitada.

A092

Solo con S7 es cliente: Como respuesta se ha recibido un telegra‐ Corrija LENGTH o START_ADDRESS
en la llamada de FB.
ma de excepción con código de excepción 2.
Se ha producido un acceso a una dirección inexistente/no admitida
en el interlocutor.

A093

Solo con S7 es cliente: Como respuesta se ha recibido un telegra‐ El interlocutor no puede procesar el te‐
ma de excepción con código de excepción 3.
legrama recibido (p. ej., no soporta la
longitud solicitada).

A094

Solo con S7 es cliente: Como respuesta se ha recibido un telegra‐ El interlocutor se encuentra en un esta‐
ma de excepción con código de excepción 4.
do en que no es capaz de procesar el
telegrama recibido.

A095

Solo con S7 es cliente: Como respuesta se ha recibido un telegra‐ Compruebe los mensajes de error del
ma de excepción con código de excepción desconocido.
interlocutor y, dado el caso, verifique los
datos con un registro de telegramas.

El bloque MODBUS debe llamarse en el
OB de arranque y en OB cíclico con el
mismo DB de instancia.

Compruebe los datos del interlocutor
con ayuda de un registro de telegramas.

Consulte también
Descripción MODBUSCP (Página 7292)

7306

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros DATA_TYPE, START_ADDRESS, LENGTH, WRITE_READ y UNIT
Descripción
En el modo de operación "S7 es cliente" se trata de parámetros de entrada, mientras que en
el modo de operación "S7 es servidor" son parámetros de salida.
DATA_TYPE
El parámetro DATA_TYPE indica qué tipo de datos Modbus/TCP se procesa con el telegrama
actual. Se admiten los valores siguientes:
Coils
Inputs
Holding Register
Input Register

B#16#1
B#16#2
B#16#3
B#16#4

Los distintos tipos de datos mantienen una relación directa con los códigos de función
utilizados.
Tipo de datos

DATA_TYPE

Función

Longitud

single_write

Código de fun‐
ción

Coils

1

leer

cualquiera

irrelevante

1

Coils

1

escribir

1

TRUE

5

Coils

1

escribir

1

FALSE

15

Coils

1

escribir

>1

irrelevante

15

Inputs

2

leer

cualquiera

irrelevante

2

Holding Register

3

leer

cualquiera

irrelevante

3

Holding Register

3

escribir

1

TRUE

6

Holding Register

3

escribir

1

FALSE

16

Holding Register

3

escribir

>1

irrelevante

16

Input Register

4

leer

cualquiera

irrelevante

4

START_ADDRESS
El parámetro START_ADDRESS determina la primera dirección Modbus/TCP que se lee o se
escribe.
LENGTH
El parámetro LENGTH determina el número de valores Modbus/TCP que se leen o se escriben.
En las funciones de lectura, para Holding e Input Register es posible un máximo de 125
registros por telegrama. Para Coils e Inputs es posible un máximo de 2000 bits. En las
funciones de escritura, para Holding Register el número máximo es de 123 registros y para
Coils, de 1968 bits. Los registros o valores de bit procesados con un telegrama de solicitud
deben encontrarse dentro de un DB.
WRITE_READ
Este parámetro define si se debe ejecutar una función de lectura o escritura. Si la entrada/
salida tiene el valor FALSE, se trata de una función de lectura. El valor TRUE define una
función de escritura.

Programación del PLC
Manual de programación y manejo, 11/2019

7307

Instrucciones
4.2 Instrucciones
Solo se pueden escribir Holding Register y Coils. Input Register e Inputs únicamente se
pueden leer.
UNIT
En la función "S7 es cliente" el parámetro UNIT es un parámetro de entrada. Esta entrada se
debe ajustar de acuerdo con los requisitos. La instrucción aplica este valor al telegrama de
solicitud y lo verifica al recibir la respuesta.
El parámetro UNIT se utiliza típicamente en convertidores de protocolo para direccionar
esclavos serie que se esconden detrás de una dirección IP común.
La mayoría de dispositivos pueden responder a UNIT = 1.
En la función "S7 es servidor" el parámetro UNIT es un parámetro de salida. La instrucción
aplica este valor deel telegrama de solicitud a la respuesta. La salida se activa cuando la
petición finaliza con un valor recibido.

Consulte también
Descripción MODBUSCP (Página 7292)

Parámetros ENQ_ENR y MONITOR
Descripción
ENQ_ENR
Modo de operación "S7 es cliente":
Con un flanco positivo se inicia la transferencia de datos. Con los valores de los parámetros de
entrada DATA_TYPE,START_ADDRESS, LENGTH, WRITE_READ y UNIT se genera el
telegrama de solicitud. Puede enviarse una nueva petición si la anterior ha finalizado con
DONE_NDR o ERROR.
Modo de operación "S7 es servidor":
Con un nivel positivo en la entrada se activa la instrucción. Pueden recibirse telegramas del
cliente.
En caso de una entrada ENQ_ENR no activada y una conexión establecida, se rechazarán los
datos recibidos.
MONITOR
El tiempo de vigilancia MONITOR vigila la entrada de datos del interlocutor. El tiempo de
vigilancia se indica en el formato de hora T#... Se recomienda un tiempo de vigilancia de aprox.
1,5 s.
En el modo de operación "S7 es cliente", con el tiempo MONITOR el servidor vigila la entrada
de la totalidad del telegrama de respuesta. En caso de sobrepasar el tiempo de vigilancia, la
petición activada finalizará con error. El tiempo comienza después de finalizar la transmisión
del telegrama de solicitud y termina después de recibir los datos completamente.
En el modo de operación "S7 es servidor", con el tiempo MONITOR se vigila la entrada de la
segunda parte del telegrama. Si se rebasa el tiempo de vigilancia, se notifica un error. El tiempo
comienza después de recibir el encabezado del telegrama Modbus/TCP específico y termina
después de finalizar la recepción del telegrama de solicitud.

7308

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
Descripción MODBUSCP (Página 7292)

CPs SIMATIC NET
Industrial Ethernet
Introducción de Ethernet
Indicaciones generales
Instrucciones disponibles
La lista siguiente muestra los números de los bloques de programa (instrucciones) tal y como
se suministran. Los números pueden ser modificados por el usuario.
Tenga en cuenta que se tienen que utilizar instrucciones diferentes para S7-300 y S7-400
(bibliotecas separadas).
Servicio de comunicación / área de fun‐
ciones

Tipo de instrucciones

Biblioteca
CP 300

CP 400
x

SEND / RECEIVE

AG_SEND

x

(Servicios de comunicación abiertos)

AG_RECV

x

AG_LSEND

x

x

2)

x

AG_LRECV

x

2)

x

AG_LOCK

x

x

AG_UNLOCK

x

x

AG_CNTEX

x

x 3)

AG_CNTRL

x

x 3)

Conexiones de comunicación programa‐
das

IP_CONFIG

x

x

Comunicación S7

BSEND

x

BRCV

x

PUT

x

GET

x

USEND

x

URCV

x

C_CNTRL

x

FTP_CMD

x

FTP

Programación del PLC
Manual de programación y manejo, 11/2019

x

7309

Instrucciones
4.2 Instrucciones
Servicio de comunicación / área de fun‐
ciones

Tipo de instrucciones

Biblioteca
CP 300

PROFINET IO

PNIO_SEND

x

PNIO_RECV

x

PNIO_RW_REC

x

PNIO_ALARM

x

CP 400

1) El PN_InOut / PN_InOut_Fast se entrega conjuntamente con la herramienta de ingeniería SIMATIC iMap.
2) No debe utilizarse para CPs actuales y ya no forma parte de la entrega de la biblioteca actual SIMATIC_NET_CP
3) Depende del tipo de CP

¿Qué versión de instrucciones se debe utilizar?
Las descripciones siguientes contienen también referencias a comportamientos discrepantes
en caso de versiones de instrucciones diferentes. Preste también atención a la identificación
de versión de las instrucciones utilizadas por usted.
Encontrará una edición actual del historial de la versión para las instrucciones SIMATIC NET
bajo la siguiente ID de artículo:
9836605 (http://support.automation.siemens.com/WW/view/de/9836605)
Las bibliotecas globales instaladas con el Automation Workbench contienen las versiones de
instrucciones actuales del momento de la habilitación del Workbench.
Nota
Se recomienda utilizar siempre las versiones de instrucciones actuales para todos los tipos de
módulos.
Encontrará informaciones sobre las versiones de instrucciones actuales así como las
instrucciones actuales en nuestro Customer Support en Internet, desde donde las podrá
descargar:
http://support.automation.siemens.com/WW/view/de/8797900
En el caso de tipos de módulos menos recientes, esta recomendación presupone que usted
utilice la versión de firmware actual para este tipo de módulo.

7310

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Instrucciones en caso de repuesto
Se entiende por caso de sustitución en este contexto la sustitución de un módulo por otro
módulo de versión eventualmente más moderna.
Nota
Tenga en cuenta que, en el caso de utilizar recambios, en el programa de usuario se deben
utilizar solo las instrucciones autorizadas para el tipo de CP configurado.
Se recomienda utilizar siempre las versiones de instrucciones actuales para todos los tipos de
módulos. En el caso de tipos de módulos menos recientes, esta recomendación presupone
que usted utilice la versión de firmware actual para este tipo de módulo.
Más información acerca de casos de sustitución, encontrará en nuestro Customer Support en
Internet.
Los manuales de producto específicos de los CPs S7 informan sobre la compatibilidad de los
CPs S7 y las instrucciones correspondientes.

Consulte también
Manual de programación "Funciones (FC) y bloques de función (FB) para CPs SIMATIC NET
S7" (http://support.automation.siemens.com/ww/view/de/30564821)

Parametrización de la llamada de las instrucciones
Antes de pasar a describir en detalle las instrucciones, se ofrecen aquí algunas informaciones
de índole general sobre la llamada y la parametrización de las instrucciones.
Aquí se pueden dar informaciones generales sobre los siguientes grupos de parámetros,
existentes en todas las instrucciones:
● Parámetros para coordinación de CP y enlaces (parámetros de entrada)
● Parámetros para definir una determinada área de datos de la CPU (parámetros de entrada)
● Informaciones sobre estado/status (parámetros de salida)

Llamar instrucciones de comunicación para S7-300
ATENCIÓN
No se permite llamar las instrucciones de comunicación para S7-300 en varios niveles de
proceso. Si, por ejemplo, llama una instrucción de comunicación en OB1 y en OB35, el
procesamiento de la instrucción podría ser interrumpido por el OB de prioridad
respectivamente superior.
Si llama instrucciones en varios OBs, tiene que procurar, a través de la programación, que
una instrucción de comunicación en procesamiento no sea interrumpida por otra instrucción
de comunicación (por ejemplo, por medio de las instrucciones del sistema Bloquear/Liberar
alarmas).

Programación del PLC
Manual de programación y manejo, 11/2019

7311

Instrucciones
4.2 Instrucciones

Parámetros para definir una determinada área de datos de la CPU (parámetros de entrada)
Indicar el área de datos en la CPU
Al llamar una instrucción transmite usted la dirección y la longitud del área de datos de la CPU
en la que se deben disponer o almacenar datos útiles o bien que puede contener otras
informaciones relativas a la parametrización.
Para el direccionamiento de esta área se utiliza el tipo de datos del puntero ANY.

Informaciones sobre estado/status (parámetros de salida)
Evaluar indicaciones de estados
Para la evaluación del estado se tienen que evaluar estos parámetros en el programa de
usuario:
● DONE o NDR
Estos parámetros (DONE en el caso de peticiones de envío o NDR para peticiones de
recepción) notifica la conclusión (con resultado positivo) de una ejecución de la petición.
● ERROR
Notifica que la petición no se ha podido ejecutar sin errores.
● STATUS
El parámetro proporciona información detallada sobre la ejecución de la petición. Se
pueden proporcionar indicaciones de estado ya durante la ejecución de la petición
(DONE=0 y ERROR=0).
Nota
Tenga en cuenta que las indicaciones de estado DONE, NDR, ERROR y STATUS se
actualizan con cada llamada de una instrucción.

Indicaciones de estado al arrancar el CP
Al rearrancar el CP Ethernet, los parámetros de salida de la instrucción se resetean como
sigue:
● DONE = 0
● NDR = 0
● ERROR = 0
● STATUS =
– 8180H en el caso de AG_RECV / AG_LRECV
– 8181H en el caso de AG_SEND / AG_LSEND / AG_SSEND

7312

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Instrucciones para los Servicios de comunicación abiertos (interfaz SEND/RECEIVE)
Instrucciones para la interfaz SEND/RECEIVE
Panorámica
En la interfaz SEND/RECEIVE están disponibles las siguientes instrucciones para la
transmisión de datos:
Instrucción

utilizable para 1)

S7-300

S7-400

AG_SEND

x

AG_RECV

x

x

Significado
para enviar datos

x

para recibir datos

AG_LSEND

x

para enviar datos

AG_LRECV

x

para recibir datos

AG_SSEND

x

para enviar datos

AG_SRECV

x

para recibir datos

1) Observaciones sobre las instrucciones para S7-300 y S7-400
● para S7-300 rige:
– En las versiones actuales de los CPs Ethernet se utilizan exclusivamente AG_SEND y
AG_RECV; la longitud de datos puede ser aquí de hasta 8192 bytes.
– En CP S7–300 (hasta 6GK7 343–1EX10–0XE0 con firmware V2.2), se deberá utilizar
AG_LRECV para conexiones TCP en lugar de AG_RECV.
● para S7-400 rige:
– En el caso de AG_SEND / AG_RECV, la longitud de datos por petición está limitada a
<=240 bytes.
Los registros más largos (hasta 8192 bytes) se pueden transmitir con la ayuda de las
instrucciones AG_LSEND o AG_LRECV.
– AG_SSEND y AG_SRECV sirven para la transmisión acelerada de datos, utilizando una
comunicación optimizada entre la CPU y el CP en la estación S7. La comunicación
rápida no tiene repercusiones en la comunicación LAN. Las dos instrucciones son
soportadas a partir de STEP 7 V5.4 SP3.
– En S7–400 no se puede utilizar AG_RECV para conexiones TCP, sino solo las
instrucciones AG_LRECV o AG_SRECV.

Informaciones adicionales
Infórmese sobre al área de datos a la que se da soporte para el CP S7 utilizado por usted en
el manual específico. Encontrará una tabla general de las versiones de instrucciones en el
historial de bloques SIMATIC NET.

Programación del PLC
Manual de programación y manejo, 11/2019

7313

Instrucciones
4.2 Instrucciones

Uso
El esquema siguiente explica la aplicación de las instrucciones aquí descritos para la
transferencia de datos bidireccional a través de una conexión configurada.
&38

(WKHUQHW&3

(WKHUQHW&3

&38

3URJUDPDGH
XVXDULR
67(3

3URJUDPDGH
XVXDULR
67(3

&DPSRVGHGDWRV
GHXVXDULR

&DPSRVGHGDWRV
GHXVXDULR

$*B6(1'

HQYLDU

UHFLELU

$*B5(&9

HQYLDU

$*B6(1'

(QODFH
$*B5(&9

UHFLELU

Indicar el área de datos en la CPU
Al llamar una instrucción se transfiere la dirección y la longitud del área de datos a la CPU.
Tenga en cuenta que la longitud máxima del área de datos depende del tipo y de la versión de
instrucción utilizados.
● AG_SEND y AG_RECV
Con estas instrucciones se pueden enviar o recibir, hasta la versión V3.0, 240 bytes como
máximo. Las versiones actuales permiten para S7-300 un área de datos de hasta 8192
bytes. En el caso de S7-400 se tienen que seguir utilizando AG_LSEND / AG_LRECV para
la transmisión de áreas de datos mayores.
● AG_LSEND / AG_LRECV
En el caso de los CPs de S7-400, así como en el de versiones anteriores de S7-300 solo
es posible transmitir áreas de datos mayores por medio de AG_LSEND o AG_LRECV.
Consulte en la información de producto correspondiente al CP el área de datos a que se da
soporte.
● AG_SSEND / AG_SRECV
Con CPs de S7−400, que soportan la comunicación PROFINET junto con CPUs a partir de
la versión 5.1, los datos se pueden transmitir por medio de AG_SSEND o AG_SRECV con
una velocidad de transmisión superior (esto no es válido para el CP 443−1 Advanced
6GK7 443–1EX41–0XE0).
Los tipos de CPs compatibles con CPUs a partir de la versión 5.1 se pueden consultar en
el manual de producto del CP (capítulo "Condiciones para el uso").
La tabla siguiente indica los límites válidos para los diferentes tipos de conexión.

7314

INSTRUCCIÓN

ISO-Transport

ISO-on-TCP

TCP

UDP

AG_LSEND (S7-400)
AG_SEND (S7-300)

8192 bytes

8192 bytes

8192 bytes

2048 bytes

AG_SEND (S7-400)

240 bytes

240 bytes

240 bytes

240 bytes

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
INSTRUCCIÓN

ISO-Transport

ISO-on-TCP

TCP

UDP

AG_LRECV (S7-400)
AG_RECV (S7-300)

8192 bytes

8192 bytes

8192 bytes

2048 bytes

AG_RECV (S7-400)

240 bytes

240 bytes

240 bytes

240 bytes

AG_SSEND (S7-400)
AG_SRECV (S7-400)

1452 bytes

1452 bytes

1452 bytes

1452 bytes

Nota
En cuanto a la longitud del área de datos transmitible en el caso de versiones menos recientes
de los CPs Ethernet, tenga en cuenta lo dicho en la información de producto / el manual de
producto del CP Ethernet utilizado.

Aplicación sin encabezado de petición
En el caso de una conexión especificada, los parámetros de dirección y petición son definidos
por la configuración de la conexión. Por lo tanto, el programa de usuario solo proporciona los
datos de usuario en el área de datos UDP al enviar con AG_SEND / AG_LSEND / AG_SSEND,
o los recibe con AG_RECV / AG_LRECV / AG_SRECV.

Aplicación con encabezado de petición
Las conexiones UDP libres exigen un encabezado de petición en el área de datos de usuario.
Vea en la ilustración siguiente la estructura del búfer de peticiones y el significado y el
emplazamiento (high byte / low byte) de los parámetros en el encabezado de la petición.
&DPSRGHGDWRVGHXVXDULR
3RUW
%¼IHUGHSHWLFLRQHV

'LUHFFLµQ,3

&DEHFHUDGH
SHWLFLµQ

 + +LJK%\WH 

(% + /RZ%\WH 

%\WH

(+

% +

%\WH

 +

 +

%\WH

%\WHGDWRV

%\WHGDWRV

%\WH

%\WHGDWRV

%\WHGDWRV

'DWRV¼WLOHV

Figura 4-73

%\WH

Enviar y recibir a través de una conexión UDP libre por programa

● En la figura (entradas hexadecimal) se parte, a modo de ejemplo, de la siguiente dirección
IP: 142.11.40.35;
● Para la dirección de puerto 1003 se tiene que introducir, por ejemplo: para byte High: 03H;
para byte Low: EBH.
● El área de datos de usuario puede tener hasta 2048 bytes. Pueden transmitirse hasta 2042
bytes de datos de usuario. 6 bytes están reservados para el encabezado de la petición.
Tenga en cuenta que la longitud de datos indicada al llamar la instrucción (parámetro LEN)
ha de contener el encabezado y los datos de usuario.

Programación del PLC
Manual de programación y manejo, 11/2019

7315

Instrucciones
4.2 Instrucciones

No modificar los parámetros de llamada hasta después de la confirmación de la petición
Nota
Los parámetros de llamada en la interfaz de llamada de las instrucciones AG_SEND o
AG_RECV no se pueden modificar, tras la activación de la llamada, hasta después de que la
instrucción haya confirmado la ejecución de la petición con DONE=1 o con ERROR=1.
Si no se tiene en cuenta esto, puede suceder que se cancele con error la ejecución de la
petición.

Indicador de estado en la interfaz de llamada de la instrucción; particularidades de AG_SEND /
AG_RECV (S7-300)
El comportamiento siguiente solo es aplicable a S7-300 con bloques de programa a partir de
la versión V4.0.
En el caso de AG_SEND y AG_RECV obtendrá las indicaciones citadas a continuación en los
siguientes casos operativos:
● El CP se encuentra en STOP.
● La conexión no está configurada.
● La conexión no está establecida.
● La conexión está cancelada.
Indicaciones:
● AG_SEND:
DONE=0; ERROR=1; Status=8183H
● AG_RECV:
DONE=0; ERROR=0; Status=8180H
o
DONE=0; ERROR=1; Status=8183H

Consulte también
Indicaciones generales (Página 7309)

AG_SEND / AG_LSEND / AG_SSEND
AG_SEND / AG_LSEND / AG_SSEND (Ind.Ethernet)
Descripción
AG_SEND / AG_LSEND / AG_SSEND transfieren datos al CP Ethernet para su transmisión a
través de una conexión configurada.
El área de datos indicada puede ser un área de marcas o un área de bloques de datos.

7316

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Si ha sido posible enviar a través de Ethernet todo el área de datos de usuario, esto se señaliza
para notificar la ejecución correcta.
Observación:
Todos los datos siguientes son igualmente válidos para AG_SEND, AG_LSEND y
AG_SSEND, a no ser que se indique lo contrario.

Llamada
Interfaz de llamada en representación FUP
$*B6(1'$*B/6(1'$*B66(1'
%22/

$&7

,17

'21(

%22/

,'

(5525

%22/

:25'

/$''5

67$786

:25'

$1<

6(1'

,17

/(1

Nota
Si desea utilizar la instrucción AG_SSEND, al configurar las conexiones tendrá que
seleccionar en las propiedades de la conexión el modo "SPEED SEND/RECV".

Consulte también
Parámetros en el caso de AG_SEND / AG_LSEND / AG_SSEND (IE) (Página 7318)
Parámetros DONE, ERROR, STATUS (Página 7319)
AG_SEND / AG_LSEND (PROFIBUS) (Página 7462)
Manual de programación "Funciones (FC) y bloques de función (FB) para CPs SIMATIC NET
S7" (http://support.automation.siemens.com/ww/view/de/30564821)

Programación del PLC
Manual de programación y manejo, 11/2019

7317

Instrucciones
4.2 Instrucciones

Parámetros en el caso de AG_SEND / AG_LSEND / AG_SSEND (IE)
Explicación de los parámetros formales
La tabla representada a continuación explica los parámetros formales para las instrucciones
AG_SEND / AG_LSEND / AG_SSEND:
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

ACT

INPUT

BOOL

0,1

En el caso de una llamada de la instrucción con ACT = 1
se envían LEN Bytes del área de datos indicada con el
parámetro SEND.
En el caso de una llamada de la instrucción con ACT = 0
se actualizan las indicaciones de estado DONE, ERROR
y STATUS.

ID

INPUT

INT

1,2...64
(S7-400)

En el parámetro ID se indica el número de la conexión.

1,2...16
(S7-300)
LADDR

INPUT

WORD

Dirección inicial del módulo
Al configurar el CP con STEP 7 aparece la dirección ini‐
cial del módulo en la tabla de configuración. Indique aquí
esta dirección.

SEND

INPUT

ANY

Indicar la dirección y la longitud
La dirección del área de datos remite como alternativa a:
● Área de marcas
● Área de bloques de datos

LEN

INPUT

INT

en caso de ISO-Trans‐ Cantidad de bytes que se deben enviar junto con la pe‐
tición desde el área de datos. Este número puede estar
port e ISO-on-TCP /
comprendido entre 1 y "dato de longitud en parámetro
TCP:
SEND".
1,2,...8192 (o hasta

"dato de longitud en pa‐ ● Considerar el tipo de instrucciones:
rámetro SEND")
– para S7-300
Con las versiones actuales de AG_SEND se
en UDP:
pueden transmitir hasta 8192 bytes (2048 bytes
con UDP).
1,2,...2048 (o hasta
"dato de longitud en pa‐
– para S7-400
rámetro SEND")
Con AG_SEND, el área de datos generalmente
está limitada a 240 bytes, como máximo.

En S7-400 considerar:
● Rendimiento incrementado en caso de registros
cortos:
la transmisión de registros de hasta 240 bytes tiene
lugar con un rendimiento incrementado. Esto es
válido con independencia del tipo utilizado
(AG_SEND / AG_LSEND).
● Con AG_SSEND, el área de datos está limitado a
como máximo 1452 bytes.

7318

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

DONE

OUTPUT

BOOL

0: Petición en curso
1: Petición ejecutada

El parámetro de estado indica si la petición se ha ejecu‐
tado sin errores.
Mientras DONE = 0, no se puede impulsar ninguna otra
petición. En caso de aceptarse la petición, el CP pone
DONE a 0.

ERROR

OUTPUT

BOOL

0: 1: caso de error

Indicador de error

STATUS

OUTPUT

WORD

Consulte el significado en relación con los parámetros
DONE y STATUS en Parámetros DONE, ERROR, STA‐
TUS (Página 7319)
Indicador de estado
Consulte el significado en relación con los parámetros
DONE y ERROR en Parámetros DONE, ERROR, STA‐
TUS (Página 7319)

Consulte también
AG_SEND / AG_LSEND / AG_SSEND (Ind.Ethernet) (Página 7316)

Parámetros DONE, ERROR, STATUS
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho
sobre el parámetro de salida RET_VAL en las descripciones de los bloques de programa del
sistema referenciados.
Puede consultar mediante STEP 7 los bloques de programa del sistema que se utilizan y los
que son relevantes para la evaluación de errores.

Tabla 4-414 Códigos de condición AG_SEND / AG_LSEND / AG_SSEND
DONE

ERROR

STATUS

Significado

1

0

0000H

Petición terminada sin errores.

0

0

0000H

Ninguna petición en proceso.

0

0

8181H

Petición en curso.

0

1

7000H

Este código es solo posible en S7-400: La instrucción se ha llamado con ACT=0; pero la
petición no se procesa.

0

1

8183H

Falta la configuración o el servicio ISO/TCP en el CP Ethernet no ha sido aún arrancado.

0

1

8184H

● Se ha indicado un tipo de datos no permitido para el parámetro SEND.
● Error del sistema (el área de datos fuente tiene errores).

Programación del PLC
Manual de programación y manejo, 11/2019

7319

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8185H

Parámetro LEN mayor que el área fuente SEND.

0

1

8186H

Parámetro ID no válido.
● ID != 1,2....16 (S7-300)
● ID != 1,2....64.(S7-400)

0

1

8302H

No hay recursos de recepción en la estación de destino. La estación receptora no puede
procesar con suficiente rapidez los datos recibidos o no ofrece recursos de recepción.

0

1

8304H

La conexión no está establecida. La petición de emisión solo se debería emitir de nuevo
tras un tiempo de espera > 100 ms.

0

1

8311H

Estación de destino no accesible bajo la dirección Ethernet indicada.

0

1

8312H

Error Ethernet en el CP.

0

1

8F22H

Área de origen no valida, p. ej.:
Área no existente en DB
Parámetro LEN < 0

0

1

8F24H

Error de área al leer un parámetro.

0

1

8F28H

Error de alineación al leer un parámetro.

0

1

8F32H

El parámetro contiene número de DB demasiado alto.

0

1

8F33H

Número de DB erróneo

0

1

8F3AH

Área de destino no cargada (DB).

0

1

8F42H

Retardo en acuse al leer un parámetro del
área de periferia.

0

1

8F44H

Está bloqueado el acceso a un parámetro a leer en el procesamiento de la instrucción.

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible

0

1

8090H

p. ej., parámetro LEN = 0 .
● No existe módulo con esta dirección inicial de módulo;
● La instrucción utilizada no es acorde con la familia de sistemas utilizada (se tienen
que utilizar instrucciones diferentes para S7-300 y S7-400).
0

1

8091H

La dirección base lógica no está en formato de palabra doble.

0

1

8092H

En la referencia ANY se ha indicado un tipo distinto de BYTE.
(solo para S7-400)

0

1

80A4H

La conexión de bus K entre CPU y CP no está establecida.
(en CPUs con versiones más actuales)

0

1

80B0H

El módulo no conoce el registro.

0

1

80B1H

Longitud (en parámetro LEN) errónea.

0

1

80B2H

La conexión de bus K entre CPU y CP no está establecida.

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Recursos ocupados (memoria) temporalmente en la CPU.

0

1

80C4H

Error de comunicación
se presenta temporalmente; por ello es conveniente una repetición en el programa de
usuario

0

7320

1

80D2H

Dirección inicial del módulo errónea.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
AG_SEND / AG_LSEND / AG_SSEND (Ind.Ethernet) (Página 7316)

AG_RECV / AG_LRECV / AG_SRECV
AG_RECV / AG_LRECV / AG_SRECV (Ind.Ethernet)
Descripción
La instrucción AG_RECV / AG_LRECV / AG_SRECV importa del CP Ethernet los datos
transmitidos a través de una conexión configurada.
El área de datos indicada para la toma de datos puede ser un área de marcas o un área de
bloques de datos.
Se señala que la función ha sido ejecutada sin errores cuando se hayan podido recibir los
datos del CP Ethernet.
Observación:
Todos los datos siguientes son igualmente válidos para AG_RECV y AG_LRECV /
AG_SRECV, a no ser que se indique lo contrario.

Llamada
Interfaz de llamada en representación FUP
$*B5(&9$*B/5(&9$*B65(&9
1'5

%22/

,17

,'

(5525

%22/

:25'

/$''5

67$786

:25'

$1<

5(&9

/(1

,17

Nota
Si desea utilizar la instrucción AG_SRECV, al configurar las conexiones tendrá que
seleccionar en las propiedades de la conexión el modo "SPEED SEND/RECV".

Consulte también
AG_RECV / AG_LRECV (PROFIBUS) (Página 7469)
Parámetros en el caso de AG_RECV / AG_LRECV / AG_SRECV (IE) (Página 7322)
Parámetros DONE, ERROR, STATUS (IE) (Página 7323)

Programación del PLC
Manual de programación y manejo, 11/2019

7321

Instrucciones
4.2 Instrucciones

Parámetros en el caso de AG_RECV / AG_LRECV / AG_SRECV (IE)
Explicación de los parámetros formales
La tabla representada a continuación explica los parámetros formales para las instrucciones
AG_RECV / AG_LRECV / AG_SRECV:
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

ID

INPUT

INT

1,2...64 (S7-400)
1,2...16 (S7-300)

En el parámetro ID se indica el número de la conexión
ISO-Transport.

LADDR

INPUT

WORD

Dirección inicial del módulo
Al configurar el CP con STEP 7 aparece la dirección
inicial del módulo en la tabla de configuración. Indique
aquí esta dirección.

RECV

INPUT

ANY

Indicar la dirección y la longitud
La dirección del área de datos remite como alternativa a:
● Área de marcas
● Área de bloques de datos
Para la longitud, considerar lo siguiente:
La transmisión de registros de hasta 212 bytes se efec‐
túa con mayor rendimiento si en el parámetro RECV se
limita también a 212 bytes la longitud.
Observe para AG_SRECV:
En el caso de AG_SRECV, tiene que ajustar RECV
siempre a la longitud máxima del búfer de recepción de
1452 bytes. En otro caso se pueden producir, en ciertas
situaciones, los siguientes errores:
NDR=0; ERROR=1; STATUS=8185H

NDR

OUTPUT

BOOL

0: 1: nuevos datos

El parámetro indica si se han adoptado nuevos datos.
Consulte el significado en relación con los parámetros
ERROR y STATUS en AG_RECV / AG_LRECV /
AG_SRECV (Ind.Ethernet) (Página 7321)

ERROR

OUTPUT

BOOL

0: 1: caso de error

Indicador de error
Consulte el significado en relación con los parámetros
NDR y STATUS en AG_RECV / AG_LRECV /
AG_SRECV (Ind.Ethernet) (Página 7321)

7322

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

STATUS

OUTPUT

WORD

LEN

OUTPUT

INT

Rango de valores

Descripción
Indicador de estado
Consulte el significado en relación con los parámetros
NDR y ERROR en AG_RECV / AG_LRECV /
AG_SRECV (Ind.Ethernet) (Página 7321)

en ISO-Transport e
ISO-on-TCP:

Indica el número de bytes que se han tomado del CP
Ethernet en el área de datos.

1,2,...8192

Considerar el tipo de instrucciones:

en UDP:

● para S7-300
Con las versiones actuales de AG_RECV se pueden
transmitir hasta 8192 bytes (2048 bytes con UDP).

1,2,...2048

● para S7-400
Con el AG_RECV, el área de datos generalmente
está limitada a 240 bytes, como máximo.
Con el AG_SRECV, el área de datos está limitada a
1452 bytes, como máximo.

Parámetros DONE, ERROR, STATUS (IE)
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por los parámetros
NDR, ERROR y STATUS, que tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho
sobre el parámetro de salida RET_VAL en las descripciones de los bloques de programa del
sistema referenciados.
Puede consultar mediante STEP 7 los bloques de programa del sistema que se utilizan y los
que son relevantes para la evaluación de errores.

Tabla 4-415 Códigos de condición - AG_RECV / AG_LRECV / AG_SRECV
NDR

ERROR

STATUS

Significado

1

0

0000H

Nuevos datos aceptados.

0

0

8180H

Todavía no hay datos (no para AG_SRECV).

0

0

8181H

Petición en curso.

0

1

8183H

● Falta la configuración;
● El servicio ISO-Transport no se ha iniciado aún en el CP Ethernet;
● La conexión no está establecida.

0

1

8184H

● Se ha indicado un tipo de datos no permitido para el parámetro RECV.
● Error del sistema.

0

1

8185H

Búfer de destino (RECV) demasiado pequeño.

Programación del PLC
Manual de programación y manejo, 11/2019

7323

Instrucciones
4.2 Instrucciones
NDR

ERROR

STATUS

Significado

0

1

8186H

Parámetro ID no válido.
ID != 1,2....16 (S7-300).
ID != 1,2....64.(S7-400)

0

1

8304H

La conexión no está establecida. La petición de recepción solo se debería emitir de nuevo
tras un tiempo de espera >100 ms.

0

1

8F23H

Área fuente no valida, p. ej.:

0

1

8F25H

Error de área al escribir un parámetro.

0

1

8F29H

Error de alineación al escribir un parámetro

0

1

8F30H

El parámetro está en el 1er. bloque de datos actual protegido de escritura.

0

1

8F31H

El parámetro está en el segundo bloque de datos actual protegido de escritura.

0

1

8F32H

El parámetro contiene número de DB demasiado alto.

0

1

8F33H

Error de número de DB

0

1

8F3AH

Área de destino no cargada (DB).

Área no presente en DB.

0

1

8F43H

Retardo en acuse al escribir un parámetro en el área de periferia.

0

1

8F45H

La dirección del parámetro que debe escribirse está bloqueada en la pista de acceso.

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.

0

1

8090H

● No existe ningún módulo con esta dirección inicial del módulo o CPU en STOP
● La instrucción utilizada no es acorde con la familia de sistemas utilizada (se tienen
que utilizar instrucciones diferentes para S7-300 y S7-400).

0

1

8091H

La dirección base lógica no está en formato de palabra doble.

0

1

8092H

En la referencia ANY se ha indicado un tipo distinto de BYTE.
(solo para S7-400)

0

1

80A0H

Acuse negativo al leer del módulo.

0

1

80A4H

La conexión de bus K entre CPU y CP no está establecida.

0

1

80B0H

El módulo no conoce el registro.

0

1

80B1H

Posibles causas:
● El área de destino no es válida.
● El área de destino es demasiado pequeña.
● El área de destino para los datos de recepción no se ha calculado bien.
Solución: realice otra llamada de recepción con el tamaño máximo del búfer de recep‐
ción. Esto sirve independientemente del tipo de conexión (Unicast/Multicast/Broadcast)
y de la familia de dispositivos (S7-300 / S7-400).

0

1

80B2H

La conexión de bus K entre CPU y CP no está establecida.

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Recursos ocupados (memoria) temporalmente en la CPU.

0

1

80C4H

Error de comunicación
se presenta temporalmente; por ello es conveniente una repetición en el programa de
usuario

0

7324

1

80D2H

Dirección inicial del módulo errónea.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
AG_RECV / AG_LRECV / AG_SRECV (Ind.Ethernet) (Página 7321)

Instrucciones para coordinación de accesos en caso de FETCH/WRITE
Instrucciones para coordinación de accesos en caso de FETCH/WRITE
Panorámica
Para la función FETCH/WRITE están disponibles las siguientes instrucciones para la
coordinación de accesos:
Instrucción

utilizable para

Significado

S7-300

S7-400

AG_LOCK

x

x

Bloqueo del acceso externo a datos
mediante FETCH/WRITE.

AG_UNLOCK

x

x

Liberación del acceso externo a da‐
tos mediante FETCH/WRITE.

Tener en cuenta la configuración
Si utiliza AG_LOCK y AG_UNLOCK, para CPs en estaciones S7-400 debe introducir las
siguientes indicaciones en la configuración:
● en "Propiedades > Direcciones"
Se tiene que seleccionar la opción "Ajuste de direcciones para LOCK/UNLOCK", si existe
tal posibilidad de selección.

Forma de trabajar
Con estas instrucciones tiene la posibilidad de coordinar el acceso a áreas de memoria del
sistema de manera que no se generen y transmitan datos incoherentes. El control tiene lugar
en este caso desde el programa de usuario instalado en la CPU S7, que puede bloquear, si
procede, por medio de la llamada de AG_LOCK un acceso externo de FETCH/WRITE.
Después de un cierto tiempo o una vez concluido el acceso de escritura/lectura propio, se
puede liberar de nuevo el acceso externo por medio de una petición de AG_UNLOCK.
Además se puede aprovechar el hecho de que el bloqueo de acceso sólo es válido en el enlace
FETCH/WRITE indicado en la llamada. Si se configuran varios enlaces FETCH/WRITE, éstos
se pueden utilizar, por ejemplo, concretamente para determinadas áreas de memoria del
sistema y se puede realizar así una coordinación de accesos correspondientemente selectiva.
La siguiente representación muestra el desarrollo cronológico usual de una coordinación de
accesos a la memoria en el programa de usuario, controlada por AG_LOCK y AG_UNLOCK.

Programación del PLC
Manual de programación y manejo, 11/2019

7325

Instrucciones
4.2 Instrucciones

&LFORQ

&LFORQ

&LFORQ

^
^

^
^



&LFORQP

&3(WKHUQHW

3URJUDPDGHXVXDULR
FLFOR&38

,QWHUORFXWRU

$*B/2&.
/2&.(' 
$*B/2&.

$FFHVR)(7&+:5,7(
HQ'%[HQFXUVR

/2&.(' 

$*B/2&.
/2&.(' 

)(7&+:5,7(

)(7&+:5,7(UHFKD]DGR

3URFHVDPLHQWRGHGDWRV
HQ'%[

$*B81/2&.

67$786 [
$FFHVR)(7&+:5,7(
HQ'%[HQFXUVR

7LHPSR

7LHPSR

7LHPSR

La petición de bloqueo tiene que ser supervisada primero en el programa de usuario a través
de lo indicado en el parámetro de retorno LOCKED. Mientras se indique LOCKED=0, se tiene
que partir de que todavía está en marcha un acceso externo FETCH/WRITE.
Con LOCKED=1 se indica que el bloqueo está activado; ahora se pueden modificar datos
desde el programa de usuario.
La indicación de estado se actualiza con cada llamada de la instrucción.

7326

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

AG_LOCK
AG_LOCK
Descripción
Con ayuda de la instrucción AG_LOCK se bloquea el intercambio de datos mediante FETCH
o WRITE a través de la conexión seleccionada por el parámetro ID. La salida LOCKED indica
si el bloqueo ha dado resultado o no. Si el bloqueo ha sido infructuoso, la petición se tiene que
impulsar de nuevo en un siguiente ciclo de CPU.
La salida STATUS indica el estado del CP para esta conexión.

Llamada
Interfaz de llamada en representación FUP
$*B/2&.

,'

/2&.('

/$''5

67$786

Consulte también
Parámetros en el caso de AG_LOCK (Página 7327)
Parámetro STATUS (Página 7328)

Parámetros en el caso de AG_LOCK
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para AG_LOCK:
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

ID

INPUT

INT

1,2...16 para S7-300

En el parámetro ID se indica el número de la conexión.

LADDR

INPUT

WORD

1,2...64 para S7-400
Dirección inicial del módulo
Al configurar el CP con STEP 7 aparece la dirección
inicial del módulo en la tabla de configuración. Indique
aquí esta dirección.

Programación del PLC
Manual de programación y manejo, 11/2019

7327

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

LOCKED

OUTPUT

BOOL

0: (aún) no bloqueado
1: bloqueado

Indicación del estado del bloqueo de acceso solicitado
en la conexión FETCH/WRITE indicada.

STATUS

OUTPUT

WORD

Indicador de estado
Consulte el significado en Parámetro STATUS (Pági‐
na 7328)

Consulte también
AG_LOCK (Página 7327)

Parámetro STATUS
Códigos de condición
La tabla siguiente muestra el significado de las informaciones que tienen que ser evaluadas
por el programa de usuario.
Tabla 4-416 Códigos de condición de AG_LOCK
STATUS

Significado

7000H

El CP no procesa ninguna petición

7001H

FETCH en curso

7002H

WRITE en curso

8183H

FETCH/WRITE no configurado para esta conexión (solo para S7-400)

8186H

El número de ID no está en el rango permitido (p. ej. 1...64 para CPs S7-400 Industrial Ethernet)

80A4H

La conexión de bus K entre CPU y CP no está establecida (en caso de versiones de CPU más recientes).

80B0H

El módulo no conoce el registro.

80B1H

Longitud (en parámetro LEN) errónea.

80B2H

La conexión de bus K entre CPU y CP no está establecida.

80C0H

No se puede leer el registro.

80C1H

El registro indicado está siendo procesado.

80C2H

Hay demasiadas peticiones pendientes.

80C3H

Recursos ocupados (memoria) temporalmente en la CPU.

80C4H

Error de comunicación
se presenta temporalmente; por ello es conveniente una repetición en el programa de usuario.

80D2H

Dirección inicial del módulo errónea.

Consulte también
AG_LOCK (Página 7327)

7328

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

AG_UNLOCK
AG_UNLOCK
Descripción
La instrucción AG_UNLOCK permite habilitar el acceso externo a las áreas de memoria de
usuario de la CPU S7. A continuación es posible acceder con FETCH o WRITE a través de la
conexión seleccionada por el parámetro ID.
Esto ha estado precedido de un bloqueo de acceso por AG_LOCK.

Llamada
Interfaz de llamada en representación FUP
$*B81/2&.

,'

67$786

/$''5

Forma de trabajar
Para volver a habilitar la conexión, la instrucción debe volver a desactivar el bit de petición
LOCK. La instrucción indica además el estado actual con mensajes de error.

Consulte también
Parámetro STATUS (Página 7330)
Parámetros en el caso de AG_UNLOCK (Página 7330)

Programación del PLC
Manual de programación y manejo, 11/2019

7329

Instrucciones
4.2 Instrucciones

Parámetros en el caso de AG_UNLOCK
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para
AG_UNLOCK:
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

ID

INPUT

INT

1,2...16 para S7-300

En el parámetro ID se indica el número de la conexión.
(v. Configuración)

1,2...64 para S7-400
LADDR

INPUT

WORD

Dirección inicial del módulo
Al configurar el CP con STEP 7 aparece la dirección
inicial del módulo. Indique aquí esta dirección.

STATUS

OUTPUT

WORD

Indicador de estado:
Consulte el significado en Parámetro STATUS (Pági‐
na 7330)

Consulte también
AG_UNLOCK (Página 7329)

Parámetro STATUS
Códigos de condición
La tabla siguiente informa sobre la indicación de STATUS (código de condición) que tiene que
ser evaluada por el programa de usuario.
Tabla 4-417 Códigos de condición de AG_UNLOCK
STATUS

Significado

7000H

El CP no procesa ninguna petición

7001H

FETCH en curso

7002H

WRITE en curso

8183H

FETCH/WRITE no configurado para esta conexión (solo para S7-400)

8186H

El número de ID no está en el rango permitido (p. ej. 1...64 para CPs S7-400 Industrial Ethernet)

80A4H

La conexión de bus K entre CPU y CP no está establecida (en caso de versiones de CPU más recientes).

80B0H

El módulo no conoce el registro.

80B1H

Longitud (en parámetro LEN) errónea.

80B2H

La conexión de bus K entre CPU y CP no está establecida.

80C0H

No se puede leer el registro.

80C1H

El registro indicado está siendo procesado.

80C2H

Hay demasiadas peticiones pendientes.

80C3H

Recursos ocupados (memoria) temporalmente en la CPU.

7330

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
STATUS

Significado

80C4H

Error de comunicación
se presenta temporalmente; por ello es conveniente una repetición en el programa de usuario.

80D2H

Dirección inicial del módulo errónea.

Consulte también
AG_UNLOCK (Página 7329)

Instrucciones para el diagnóstico del enlace
AG_CNTEX
AG_CNTEX
Significado y funcionamiento
Con la instrucción AG_CNTEX existe la posibilidad de diagnosticar conexiones y activar
dispositivos en la red mediante el comando ping. Si es necesario se puede inicializar un nuevo
establecimiento de conexión a través de AG_CNTEX.
Nota
AG_CNTRL y AG_CNTEX
El bloque de programa AG_CNTEX ofrece ampliaciones con respecto al bloque de programa
AG_CNTRL.
Algunas funciones del AG_CNTRL se incluyen en el AG_CNTEX y pueden utilizarse de la
misma forma en la interfaz del programa de usuario.
Las acciones siguientes se pueden ejecutar a través de comandos parametrizables:
● Lectura de informaciones sobre la conexión
Sobre la base de informaciones de estado para todas las conexiones del CP o solo para
algunas de ellas puede decidir si es conveniente resetear las conexiones.
● Reset de conexiones configuradas
Es posible resetear conexiones concretas o todas las conexiones de un CP.
● Cancelar la conexión activa y establecerla de nuevo
● Leer tipos de conexión configurados en el CP (ampliación respecto a AG_CNTRL)
● Enviar comando PING (ampliación respecto a AG_CNTRL)
Existe la posibilidad de comprobar si un dispositivo concreto está accesible en la red.

Programación del PLC
Manual de programación y manejo, 11/2019

7331

Instrucciones
4.2 Instrucciones
Los comandos del bloque de programa AG_CNTEX solo se permiten para conexiones SEND/
RECV, que se basan en los protocolos ISO / RFC / TCP / UDP.
Nota
Disponibilidad en la librería del bloque
Si el bloque de programa AG_CNTEX aún no está disponible en la librería de bloques
SIMATIC_NET_CP, instale la librería de bloques SIMATIC NET actual, que se encuentra en
Internet bajo la siguiente ID de artículo:
Enlace: (https://support.industry.siemens.com/cs/ww/es/view/109481127)

Interfaz de llamada
Interfaz de llamada en representación FUP
$*B&17(;
%22/

$&7

'21(

%22/

,17

,'

(5525

%22/

:25'

/$''5

67$786

:25'

,17

&0'

5(68/7

':25'

$1<

3,1*

5(68/7

':25'

Consulte también
Funcionamiento de la función PING (Página 7332)
Parámetros con AG_CNTEX (Página 7334)
Parámetros DONE, ERROR, STATUS (Página 7335)
Comandos y resultados de las peticiones - AG_CNTEX (Página 7337)

Funcionamiento de la función PING
Funcionamiento / secuencia de llamada
Con el comando PING CMD=8 se consigue que el CP deposite 4 peticiones PING
consecutivas de la red en la dirección IP indicada en la petición. El eco PING es esperado por
el CP dentro del intervalo especificado en el bloque de peticiones PING.
El CP registra los tiempos de respuesta y los deposita en los parámetros RESULT 1/2.
Los dos parámetros RESULT 1/2 se consultan mediante el comando PING CMD=9. En cuanto
se han respondido las 4 peticiones PING o bien se ha excedido su tiempo de vigilancia
especificado, la ejecución se confirma en el parámetro DONE=1. El resultado PING puede

7332

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
consultarse en un tiempo máximo de 30 segundos; después, las entradas de RESULT ya no
son válidas.
Nota
PING requiere una conexión configurada
El comando PING requiere que como mínimo esté configurada una conexión para la interfaz
SEND/RECEIVE (TCP, ISO-on-TCP, ISO-Transport, UDP)

Varias peticiones PING al mismo tiempo
Es posible depositar un máximo de 4 peticiones PING simultáneas en diferentes direcciones
IP. Para ello se debe utilizar el mismo DB instancia en cada caso para las peticiones PING. No
es posible depositar más peticiones PING hasta que se haya procesado al menos una de las
que están en curso.
Si se depositan demasiadas peticiones PING al mismo tiempo, se muestra un mensaje de error
(parámetro STATUS = 828AH).

¿Cuándo se han procesado las peticiones PING?
Las peticiones PING se consideran procesadas cuando se cumple una de las condiciones
siguientes:
● El resultado PING se ha leído;
● El resultado PING no se ha leído pero han transcurrido 30 segundos desde que el resultado
PING está disponible.

Consulte también
AG_CNTEX (Página 7331)
Comandos y resultados de las peticiones - AG_CNTEX (Página 7337)

Programación del PLC
Manual de programación y manejo, 11/2019

7333

Instrucciones
4.2 Instrucciones

Parámetros con AG_CNTEX
Explicación de los parámetros formales
La tabla siguiente explica todos los parámetros formales de la función AG_CNTEX:
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

ACT

INPUT

BOOL

0, 1

El FB se tiene que llamar con ACT=1.
Al llamar con ACT=0 no se produce llamada de la fun‐
ción y el bloque se abandona de inmediato.

ID

INPUT

INT

● 1, 2, .., n,
o bien
● 0

En el parámetro ID se indica el número de la conexión.
El número de conexión se tiene que tomar de la confi‐
guración. n es el número máximo de conexiones y de‐
pende del producto (S7-300 o S7-400).
En una llamada que redirecciona todas las conexiones
se debe indicar la ID 0. Esto se refiere a lo siguiente:
● las funciones CN_STATUS_ALL (CMD 3) y
CN_RESET_ALL (CMD 4)
● comando PING con CMD 8 o CMD 9

LADDR

INPUT

WORD

Dirección inicial del módulo
Al configurar el CP con STEP 7 aparece la dirección
inicial del módulo. Indique aquí esta dirección.

CMD

INPUT

INT

Comando a FB AG_CNTEX

PING

INPUT

ANY

Hace referencia al bloque de datos (p. ej. DB) que con‐
tiene la estructura de datos para el comando PING.
El bloque de datos contiene la dirección IP así como,
opcionalmente, los datos sobre la vigilancia de tiempo y
sobre el número de bytes que deben transferirse en la
petición PING.
Para la estructura de datos véase más abajo

DONE

OUTPUT

BOOL

0:
la petición está en pro‐
cesamiento o aún no se
ha lanzado
1:
petición ejecutada

El parámetro de estado indica si la petición se ha desa‐
rrollado correctamente.
Consulte el significado en relación con los parámetros
ERROR y STATUS en Parámetros DONE, ERROR,
STATUS (Página 7335)
Nota:
con DONE=1 se puede evaluar RESULT

ERROR

STATUS

OUTPUT

OUTPUT

BOOL

WORD

0: ningún error

Indicador de error

1: caso de error

Consulte el significado en relación con los parámetros
DONE y STATUS en Parámetros DONE, ERROR, STA‐
TUS (Página 7335)
Indicador de estado
Consulte el significado en relación con los parámetros
DONE y ERROR en Parámetros DONE, ERROR, STA‐
TUS (Página 7335)

RESULT1

OUTPUT

DWORD

Respuesta a AG_CNTEX según comando.

RESULT2

OUTPUT

DWORD

Respuesta de la parte 2 a AG_CNTEX según comando.

7334

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Bloque de datos PING
El parámetro PING hace referencia a un bloque de datos con la siguiente estructura:
Parámetro

Tipo de datos

Rango de valores

Nota

Dirección IP

ARRAY [1..4] of Byte

TIMEOUT

INT

1 - 60000 ms

Indicación opcional; valor
predeterminado = 1000 ms

Size

INT

1 - 1000 bytes

Indicación opcional; valor
predeterminado = 32 bytes

Consulte también
AG_CNTEX (Página 7331)

Parámetros DONE, ERROR, STATUS
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
Adicionalmente se tienen que evaluar los resultados de comandos en los parámetros
RESULT1/2 según Comandos y resultados de las peticiones - AG_CNTEX (Página 7337).
Tabla 4-418 Códigos de condición AG_CNTEX
DONE

ERROR

STATUS

Significado

1

0

0000H

Se ha transmitido con éxito una petición (CMD) al CP (p. ej. RESET) o se ha leído con
éxito un estado del CP.
Se han podido evaluar los parámetros RESULT1/2.

0

0

0000H

No se ha producido aún ninguna llamada de bloque o el bloque de programa se llama con
ACT=0.

0

0

8181H

Petición en curso
La llamada del bloque se tiene que repetir con los mismos parámetros, hasta que se
notifique DONE o ERROR.

0

1

8183H

Falta la configuración o no se ha iniciado aún el servicio en el CP Ethernet.

0

1

8184H

Error de sistema o tipo de parámetro erróneo. La causa puede ser:
● El tipo de datos del puntero ANY para el parámetro PING no es correcto.
● El puntero ANY hace referencia a una dirección de bit impar.

0

1

8186H

El parámetro ID no es válido. La ID admisible depende del comando seleccionado.

0

1

8187H

El parámetro CMD no es válido.

0

1

8090H

Significados posibles:
● No existe un módulo con esta dirección inicial de módulo;
● El bloque de programa utilizado no es acorde con la familia de sistemas utilizada (se
tienen que utilizar bloques de programa diferentes para S7-300 y S7-400);
● Este módulo no da soporte a esta función.

Programación del PLC
Manual de programación y manejo, 11/2019

7335

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8091H

La dirección inicial del módulo no está en la trama de doble palabra.

0

1

8092H

La dirección inicial del módulo es incorrecta.

0

1

80B0H

El módulo no conoce el registro.

0

1

80B2H

La conexión de bus K entre CPU y CP no está establecida. En el sistema H, la CPU
correspondiente se encuentra en el estado operativo STOP.

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Recursos ocupados (memoria) temporalmente en la CPU.

0

1

80C4H

Error de comunicación
El error se presenta temporalmente; por ello es conveniente una repetición en el progra‐
ma de usuario.

0

1

8286H

El valor de la indicación "Timeout" en el bloque de datos PING está fuera del rango de
valores válido.

0

1

8287H

La dirección IP indicada en el DB PING está reservada y, por tanto, no es admisible.

0

1

8288H

La indicación solo aparece con el comando de petición de resultado PING.
Significados posibles:
● La dirección IP no ha sido alcanzada por el comando PING (por ejemplo porque el CP
se ha puesto en modo STOP después de que se haya depositado el comando de
petición PING);
● El resultado PING ya se ha leído;
● El resultado PING no se ha leído dentro del intervalo máximo de 30 segundos.

0

1

8289H

El volumen de datos de la petición PING ha excedido el rango admisible (máximo 1000
bytes; consulte la estructura de datos del comando PING)

0

1

828AH

Ya se están procesando 4 peticiones PING. No se admiten peticiones nuevas hasta que
se hayan procesado las existentes.

0

1

828BH

Ya se está procesando una petición PING para la dirección IP indicada. Utilice el co‐
mando de petición de resultado PING para concluir el procesamiento en curso.

Consulte también
AG_CNTEX (Página 7331)

7336

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Comandos y resultados de las peticiones - AG_CNTEX
Comandos y evaluación de los resultados de la petición
Vea en las tablas siguientes los comandos posibles y los resultados evaluables en los
parámetros RESULT1/2.
Nota
Evaluación de comandos para tipos de CP o versiones de firmware menos recientes
Los comandos descritos a continuación son compatibles con tipos de CP o versiones de
firmware actuales. Observe las indicaciones adicionales que aparecen bajo la siguiente
referencia en Internet:
http://support.automation.siemens.com/WW/view/de/33414377 (http://
support.automation.siemens.com/ww/view/es/33414377)

Tabla 4-419 Comandos a FC AG_CNTRL.
CMD

Significado

0

NOP – no operation
Se pasa por el bloque sin petición al CP.
RESULT (para CMD = 0)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

Secuencia sin error

RESULT2

0000 0000H

Valor predeterminado

Programación del PLC
Manual de programación y manejo, 11/2019

7337

Instrucciones
4.2 Instrucciones

CMD

Significado

1

CN_STATUS – connection status
Este comando proporciona el estado de la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Si estuviera activado el bit 15 (identificador de reset), se desactiva automáticamente (este comportamiento
concuerda con la petición CN_CLEAR_RESET - véase CMD = 5).
RESULT (para CMD = 1)

Valor / Significado

Parámetro

Valor Hex/rango

Bit

RESULT1

0000 000*H

Bits 0-3: códigos de condición para el sentido de emisión
(valores excluidos: 0x2)
Bit 0

Tipo de conexión
● 0: no hay conexión de transmisión ni recepción
● 1: la conexión está reservada para peticiones de
transmisión y recepción

Bit 1

Estado de la petición actual
● 0: Ninguna petición de emisión en proceso
● 1: Petición de emisión en proceso

Bits 2+3

Petición precedente:
● 00: Ninguna información disponible sobre la petición
de emisión precedente
● 01: Petición de emisión precedente concluida
positivamente
● 10: Petición de emisión precedente concluida
negativamente

7338

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CMD

Significado

1

CN_STATUS – connection status (continuación para CMD=1)
Este comando proporciona el estado de la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Si estuviera activado el bit 15 (identificador de reset), se desactiva automáticamente (este comportamiento
concuerda con la petición CN_CLEAR_RESET - véase CMD = 5).
RESULT (para CMD = 1)

Valor / Significado

Parámetro

Valor Hex/rango

Bit

RESULT1

0000 00*0H

Bits 4−7: códigos de condición para el sentido de recepción
(valores excluidos: 0x2)
Bit 4

Tipo de conexión
● 0: no hay conexión de transmisión ni recepción
● 1: la conexión está reservada para peticiones de
transmisión y recepción

Bit 5

Estado de la petición actual
● 0: Ninguna petición de recepción en proceso
● 1: Petición de recepción en proceso

Bits 6+7

Petición precedente:
● 00: Ninguna información disponible sobre la petición
de recepción precedente
● 01: Petición de recepción precedente concluida
positivamente
● 10: Petición de recepción precedente concluida
negativamente

Programación del PLC
Manual de programación y manejo, 11/2019

7339

Instrucciones
4.2 Instrucciones

CMD

Significado

1

CN_STATUS – connection status (continuación para CMD=1)
Este comando proporciona el estado de la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Si estuviera activado el bit 15 (identificador de reset), se desactiva automáticamente (este comportamiento
concuerda con la petición CN_CLEAR_RESET - véase CMD = 5).
RESULT (para CMD = 1)

Valor / Significado

Parámetro

Valor Hex/rango

Bit

RESULT1

0000 0*00H

Bits 8-11: Códigos de condición para FETCH/WRITE
(valores excluidos:0x3,0x7,0x8,0xB,0xF)
Bit 8

Tipo de conexión:
● 0: ninguna conexión FETCH
● 1: conexión reservada para peticiones FETCH

Bit 9

Tipo de conexión:
● 0: ninguna conexión WRITE
● 1: conexión reservada para peticiones WRITE

Bit 10

Estado de la petición (FETCH/WRITE):
● 0: Estado de la petición OK
● 1: Estado de la petición NOT OK
este identificador se pone en los siguientes casos:

Bit 11

–

La petición ha sido acusada negativamente por la
CPU

–

La petición no se ha podido transmitir a la CPU por
estar la conexión en el estado "LOCKED".

–

La petición ha sido rechazada porque el
encabezado FETCH/WRITE no tenía la estructura
correcta.

Estado de petición FETCH/WRITE
● 0: ninguna petición en curso
● 1: en curso una petición de LAN

7340

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CMD

Significado

1

CN_STATUS – connection status (continuación para CMD=1)
Este comando proporciona el estado de la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Si estuviera activado el bit 15 (identificador de reset), se desactiva automáticamente (este comportamiento
concuerda con la petición CN_CLEAR_RESET - véase CMD = 5).
RESULT (para CMD = 1)

Valor / Significado

Parámetro

Valor Hex/rango

Bit

RESULT1

0000 *000H

Bits 12-15: Informaciones generales del CP
(valores excluidos: 0x3,0xB)
Bit 12 + 13

Información sobre el estado de la conexión:
(disponible solo para conexiones SEND/RECV que utili‐
cen los protocolos ISO/RFC/TCP; en caso de UDP se
emiten las informaciones internas correspondientes)
● 00: conexión deshecha
● 01: estableciéndose la conexión
● 10: deshaciéndose la conexión
● 11: conexión establecida

Bit 14

Información del CP:
● 0: CP en STOP
● 1: CP en RUN

Bit 15

Identificador de reset
● 0: no se ha ejecutado aún ningún reset de la conexión
a través de AG_CNTEX o se ha retirado la
identificación de reset.
● 1: se ha realizado un reset de la conexión a través de
AG_CNTEX.

RESULT1

**** 0000H

Bits 16-31: Reservado
0 – reservado para futuras ampliaciones

RESULT2

0000 0000H

– reservado para futuras extensiones

Programación del PLC
Manual de programación y manejo, 11/2019

7341

Instrucciones
4.2 Instrucciones

CMD

Significado

2

CN_RESET – connection reset
Este comando resetea la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
El reset de la conexión provoca una cancelación de la misma y un nuevo establecimiento (activo o pasivo, según
la configuración). Se borran los datos recibidos en el momento de la cancelación de la conexión, pero todavía no
adoptados en el programa de usuario.
Se genera adicionalmente una entrada en el búfer de diagnóstico, en la que se puede ver el resultado de la
petición.
RESULT (para CMD = 2)
Parámetro

Valor Hex/rango

RESULT1

0000 0001H

Significado
La petición de Reset se ha transmitido con éxito al CP.
Se han impulsado la cancelación de la conexión y su sub‐
siguiente establecimiento.

RESULT2

CMD
3

0000 0002H

La petición de Reset no se ha podido transmitir al CP por
no estar iniciado el servicio en el CP (p. ej. CP en STOP).

0000 0000H

Valor predeterminado

Significado
CN_STATUS_ALL – all connections status
Este comando proporciona en los parámetros RESULT1/2 (en total 8 bytes de información colectiva) el estado
de conexión de todas las conexiones (establecidas/deshechas).
El parámetro ID tiene que estar puesto a "0" (se verifica en cuanto a 0).
El CP se ha seleccionado a través del parámetro LADDR.
Si se necesitan, se pueden obtener informaciones detalladas sobre una conexión deshecha o no configurada a
través de una nueva llamada de estado, dirigida a la conexión, con CMD=1.
RESULT (para CMD = 3)

Significado

Parámetro

Valor Hex/rango

RESULT1

**** ****H

Para cada conexión:

32 bits con la siguiente validez:

● 0 – conexión deshecha / no configurada

● Para S7-400: Bits 0-31 para
conexiones 1 - 32

● 1 – conexión establecida

● Para S7-300: Bits 0-15 para
conexiones 1 - 16
RESULT2

7342

**** ****H

Para cada conexión:

32 bits con la siguiente validez:

● 0 – conexión deshecha / no configurada

● Para S7-400: Bits 0-31 para
conexiones 33 - 64

● 1 – conexión establecida

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CMD

Significado

4

CN_RESET_ALL – all connections reset
Este comando resetea todas las conexiones.
El parámetro ID tiene que estar puesto a "0" (se verifica en cuanto a 0).
El CP se ha seleccionado a través del parámetro LADDR.
El reset de las conexiones provoca una cancelación de las mismas y un nuevo establecimiento (activo o pasivo,
según la configuración). Se borran los datos recibidos en el momento de la cancelación de la conexión, pero
todavía no adoptados en el programa de usuario.
Se genera adicionalmente una entrada en el búfer de diagnóstico, en la que se puede ver el resultado de la
petición.
RESULT (para CMD = 4)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición de Reset se ha transmitido con éxito al CP. Se
han impulsado la cancelación y el subsiguiente estableci‐
miento de todas las conexiones.

RESULT1

0000 0002H

La petición de Reset no se ha podido transmitir al CP por
no estar iniciado el servicio en el CP (p. ej. CP en STOP).

RESULT2

0000 0000H

Valor predeterminado

CMD

Significado

5

CN_CLEAR_RESET – inicialización de la identificación de Reset
Este comando resetea el identificador de reset (bit 15 en RESULT1) para la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Esta petición se ejecuta también automáticamente al leer el estado de la conexión (CMD=1); la petición enviable
por separado aquí descrita solo se necesita por lo tanto en casos especiales.
RESULT (para CMD = 5)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición de Clear se ha transmitido con éxito al CP.

RESULT1

0000 0002H

La petición de Clear no se ha podido transmitir al CP por no
estar iniciado el servicio en el CP (p. ej. CP en STOP).

RESULT2

0000 0000H

Valor predeterminado

Programación del PLC
Manual de programación y manejo, 11/2019

7343

Instrucciones
4.2 Instrucciones

CMD

Significado

6

CN_DISCON − connection disconnect
Este comando resetea la conexión que se había seleccionado con ID y LADDR.
El reset de la conexión se realiza con una cancelación de la misma.
Los datos guardados eventualmente en la pila se pierden sin advertencia. Después de esto no se produce ningún
establecimiento automático de la conexión. La conexión se puede restablecer con la petición de Control
CN_STARTCON. Se crea una entrada en el búfer de diagnóstico, en la que se puede ver el resultado de la
petición.
RESULT (para CMD = 6)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición se ha transmitido con éxito al CP. Se ha inicia‐
do la cancelación de la conexión.

RESULT1

0000 0002H

La petición no se ha podido transmitir al CP por no estar
iniciado el servicio en el CP (p. ej. CP en STOP).

RESULT2

0000 0000H

Valor predeterminado

CMD

Significado

7

CN_STARTCON − start connection
Este comando establece una conexión seleccionada con ID y LADDR y que se canceló antes con la petición de
Control CN_DISCON. Se crea una entrada en el búfer de diagnóstico, en la que se puede ver el resultado de la
petición.
RESULT (para CMD = 7)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición de establecimiento de la conexión se ha trans‐
mitido con éxito al CP. Se ha iniciado el establecimiento de
la conexión.

RESULT1

0000 0002H

La petición de establecimiento de la conexión no se ha
podido transmitir al CP por no estar iniciado el servicio en
el CP (p. ej. CP en STOP).

RESULT2

0000 0000H

Valor predeterminado

CMD

Significado

8

PING_REQUEST - Enviar petición PING
Este comando envía una petición PING al CP. Seguidamente, el CP ordena 4 peticiones eco PING para la
dirección IP indicada.
RESULT (para CMD = 8)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición PING se ha enviado correctamente al CP.

RESULT2

0000 0002H

No ha sido posible enviar correctamente la petición PING
al CP porque el servicio correspondiente no estaba acce‐
sible en el CP.
La causa posible es, por ejemplo: CP en modo STOP.

7344

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CMD

Significado

9

PING_RESULT - Consultar resultado PING
Este comando envía una consulta de resultado PING al CP. El CP transfiere los resultados de las 4 peticiones eco
PING realizadas en el parámetro RESULT.
La llamada no se considera correcta hasta que el CP ha concluido las 4 peticiones eco PING.
RESULT (para CMD = 9)
Parámetro

Valor Hex/rango

RESULT1

**** ****H

Significado
1. palabra:
tiempo de respuesta en ms a la 1.ª petición eco PING.
2. palabra:
tiempo de respuesta en ms a la 2.ª petición eco PING.
Ejemplo:
0005 FFFFH
eco 1 -> recibida tras 5 ms
eco 2 -> sin eco en el tiempo de vigilancia indicado,

RESULT2

**** ****H

1. palabra:
tiempo de respuesta en ms a la 3.ª petición eco PING.
2. palabra:
tiempo de respuesta en ms a la 4.ª petición eco PING.
Ejemplo:
0002 3456H
eco 3 -> recibida tras 2 ms
eco 4 -> recibida tras 13398 ms

Rango de valores para palabras de datos en RESULT1 / RESULT 2:
0000H

no utilizado

0001H ... EA60H

Tiempo de respuesta en ms
0001H = 1 ms
EA60H = 60000 ms

EA61H ... FFFEH

no utilizado

FFFFH

Timeout: sin eco dentro del tiempo de vigilancia especifi‐
cado.

Programación del PLC
Manual de programación y manejo, 11/2019

7345

Instrucciones
4.2 Instrucciones

CMD

Significado

10

CONN_TYPE - Tipo de conexión
Este comando induce al CP a indicar el tipo de conexión actual para la ID de conexión indicada.
RESULT (para CMD = 10)
Parámetro

Valor Hex/rango

RESULT1

0000 000*H

Significado
La petición proporciona los valores siguientes para los po‐
sibles tipos de conexión:
0: no se ha creado ninguna conexión
1: conexión UDP
2: conexión SMTP
3: conexión TCP
4: conexión UDP libre
5: conexión FTP
6: conexión ISO-Transport
7: conexión ISO-on-TCP

RESULT2

0000 0000H

Valor predeterminado

Consulte también
Observe las indicaciones adicionales que aparecen bajo la siguiente ID de artículo en las
preguntas frecuentes (FAQ): http://support.automation.siemens.com/WW/view/de/33414377
(http://support.automation.siemens.com/ww/view/es/33414377)

Consulte también
AG_CNTEX (Página 7331)
Funcionamiento de la función PING (Página 7332)

7346

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

AG_CNTRL para el diagnóstico del enlace
AG_CNTRL
Descripción
Con la instrucción AG_CNTRL se tiene la posibilidad de diagnosticar conexiones. Si fuera
necesario se puede inicializar un nuevo establecimiento de la conexión a través de la
instrucción.
Nota
AG_CNTRL y AG_CNTEX
La instrucción AG_CNTEX ofrece ampliaciones con respecto a la instrucción AG_CNTRL.
Todas las funciones del AG_CNTRL se incluyen en el AG_CNTEX y pueden utilizarse de la
misma forma en la interfaz del programa de usuario.
Las acciones siguientes se pueden ejecutar a través de comandos parametrizables:
● Lectura de informaciones sobre la conexión
Sobre la base de informaciones de estado para todas las conexiones del CP o solo para
algunas de ellas puede decidir si es conveniente resetear las conexiones.
● Reset de conexiones configuradas
Es posible resetear conexiones concretas o todas las conexiones de un CP.
● Cancelar la conexión activa y establecerla de nuevo
Los comandos de la instrucción AG_CNTRL solo se permiten para conexiones SEND/RECV,
que se basan en los protocolos ISO / RFC / TCP / UDP.

Interfaz de llamada
Interfaz de llamada en representación FUP
$*B&175/
%22/

$&7

'21(

%22/

,17

,'

(5525

%22/

:25'

/$''5

67$786

:25'

,17

&0'

5(68/7

':25'

5(68/7

':25'

Informaciones adicionales
FAQ con ID de artículo 33414377 (http://support.automation.siemens.com/WW/view/de/
33414377)

Programación del PLC
Manual de programación y manejo, 11/2019

7347

Instrucciones
4.2 Instrucciones

Consulte también
Parámetros en el caso de AG_CNTRL (Página 7348)
Parámetros DONE, ERROR, STATUS (Página 7349)
Comandos y resultados de las peticiones AG_CNTRL (Página 7350)

Parámetros en el caso de AG_CNTRL
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para AG_CNTRL:
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

ACT

INPUT

BOOL

0, 1

AG_UNLOCK se tiene que llamar con ACT=1.
Al llamar con ACT=0 no se produce la llamada de la
función y la instrucción se abandona de inmediato.

ID

INPUT

INT

● 1, 2, .., n,
o bien
● 0

En el parámetro ID se indica el número de la conexión.
El número de conexión se tiene que tomar de la confi‐
guración. n es el número máximo de conexiones y de‐
pende del producto (S7-300 o S7-400).
En caso de una llamada dirigida a todas las conexiones,
(función _ALL con CMD 3 o 4) se tiene que indicar ID 0.

LADDR

INPUT

WORD

Dirección inicial del módulo
Al configurar el CP con STEP 7 aparece la dirección
inicial del módulo en la tabla de configuración. Indique
aquí esta dirección.

CMD

INPUT

INT

DONE

OUTPUT

BOOL

Comando a AG_CNTRL.
0:
la petición está en pro‐
cesamiento o aún no se
ha lanzado
1:
petición ejecutada

El parámetro de estado indica si la petición se ha desa‐
rrollado correctamente.
Consulte el significado en relación con los parámetros
ERROR y STATUS en Parámetros DONE, ERROR,
STATUS (Página 7349)
Nota:
con DONE=1 se puede evaluar RESULT

ERROR

STATUS

OUTPUT

OUTPUT

BOOL

WORD

0: ningún error

Indicador de error

1: caso de error

Consulte el significado en relación con los parámetros
DONE y STATUS en Parámetros DONE, ERROR, STA‐
TUS (Página 7349)
Indicador de estado
Consulte el significado en relación con los parámetros
DONE y ERROR en Parámetros DONE, ERROR, STA‐
TUS (Página 7349)

RESULT1

OUTPUT

DWORD

Respuesta según comando a AG_CNTRL.

RESULT2

OUTPUT

DWORD

evaluar solo para S7-400:
Respuesta de la parte 2 según comando a AG_CNTRL.

7348

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
AG_CNTRL (Página 7347)

Parámetros DONE, ERROR, STATUS
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
Adicionalmente se tienen que evaluar los resultados de comandos en los parámetros
RESULT1/2 según "Comandos y resultados de las peticiones AG_CNTRL (Página 7350)".
Tabla 4-420 Códigos de condición de AG_CNTRL
DONE

ERROR

STATUS

Significado

1

0

0000H

Se ha transmitido con éxito una petición (CMD) al CP (p. ej. RESET) o se ha leído con
éxito un estado del CP.
Se han podido evaluar los parámetros RESULT1/2.

0

0

0000H

No se ha producido aún ninguna llamada de la instrucción o esta se ha llamado con
ACT=0.

0

0

8181H

Petición en curso
La llamada de la instrucción se tiene que repetir con los mismos parámetros, hasta que
se notifique DONE o ERROR.

0

1

8183H

Falta la configuración o no se ha iniciado aún el servicio en el CP Ethernet.

0

1

8186H

El parámetro ID no es válido. La ID admisible depende del comando seleccionado; véase
Parámetro CMD en Comandos y resultados de las peticiones AG_CNTRL (Página 7350).

0

1

8187H

El parámetro CMD no es válido.

0

1

8188H

Error de secuencia en el control de ACT (observación: esta indicación no se presenta en
la versión de producto del CP / del firmware).

0

1

8189H

La versión de CP / firmware utilizada no da soporte a AG_CNTRL.
El código de condición se pone en caso de llamada en un CP3431-EX20 con firmware a
partir de V1.3.9; en otros tipos de CP, en lugar de esto se envía el código de condición
80B0H.
Nota: el AG_CNTRL en la versión V1.0 es soportado por CPs a partir de CP 343-1 EX21/
GX21; en estos no aparece este código de condición.

0

1

8090H

● No existe un módulo con esta dirección inicial de módulo.
o bien
● La instrucción utilizada no es acorde con la familia de sistemas utilizada (se tienen
que utilizar instrucciones diferentes para S7-300 y S7-400).
o bien
● Este módulo no da soporte a esta función.

0

1

8091H

La dirección inicial del módulo no está en la trama de doble palabra.

0

1

80B0H

El módulo no conoce el registro.

0

1

80B2H

La conexión de bus K entre CPU y CP no está establecida. En el sistema H, la CPU
correspondiente se encuentra en el estado operativo STOP.

0

1

80C0H

No se puede leer el registro.

Programación del PLC
Manual de programación y manejo, 11/2019

7349

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Recursos ocupados (memoria) temporalmente en la CPU.

0

1

80C4H

Error de comunicación
El error se presenta temporalmente; por ello es conveniente una repetición en el progra‐
ma de usuario.

0

1

80D2H

La dirección inicial del módulo es incorrecta.

Consulte también
AG_CNTRL (Página 7347)

Comandos y resultados de las peticiones AG_CNTRL
Comandos y evaluación de los resultados de la petición
Vea en las tablas siguientes los comandos posibles y los resultados evaluables en los
parámetros RESULT1/2.
Tabla 4-421 Comandos a AG_CNTRL
CMD

Significado

0

NOP – no operation
Se pasa por AG_CNTRL sin petición al CP.
RESULT (para CMD = 0)

7350

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

Secuencia sin error

RESULT2

0000 0000H

Valor predeterminado

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CMD

Significado

1

CN_STATUS – connection status
Este comando proporciona el estado de la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Si estuviera activado el bit 15 (identificador de reset), se desactiva automáticamente (este comportamiento
concuerda con la petición CN_CLEAR_RESET - véase CMD = 5).
RESULT (para CMD = 1)

Valor / Significado

Parámetro

Valor Hex/rango

Bit

RESULT1

0000 000*H

Bits 0-3: códigos de condición para el sentido de emisión
(valores excluidos: 0x2)
Bit 0

Tipo de conexión
● 0: no hay conexión de transmisión ni recepción
● 1: la conexión está reservada para peticiones de
transmisión y recepción

Bit 1

Estado de la petición actual
● 0: Ninguna petición de emisión en proceso
● 1: Petición de emisión en proceso

Bits 2+3

Petición precedente:
● 00: Ninguna información disponible sobre la petición
de emisión precedente
● 01: Petición de emisión precedente concluida
positivamente
● 10: Petición de emisión precedente concluida
negativamente

Programación del PLC
Manual de programación y manejo, 11/2019

7351

Instrucciones
4.2 Instrucciones

CMD

Significado

1

CN_STATUS – connection status (continuación para CMD=1)
Este comando proporciona el estado de la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Si estuviera activado el bit 15 (identificador de reset), se desactiva automáticamente (este comportamiento
concuerda con la petición CN_CLEAR_RESET - véase CMD = 5).
RESULT (para CMD = 1)

Valor / Significado

Parámetro

Valor Hex/rango

Bit

RESULT1

0000 00*0H

Bits 4−7: códigos de condición para el sentido de recepción
(valores excluidos: 0x2)
Bit 4

Tipo de conexión
● 0: no hay conexión de transmisión ni recepción
● 1: la conexión está reservada para peticiones de
transmisión y recepción

Bit 5

Estado de la petición actual
● 0: Ninguna petición de recepción en proceso
● 1: Petición de recepción en proceso

Bits 6+7

Petición precedente:
● 00: Ninguna información disponible sobre la petición
de recepción precedente
● 01: Petición de recepción precedente concluida
positivamente
● 10: Petición de recepción precedente concluida
negativamente

7352

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CMD

Significado

1

CN_STATUS – connection status (continuación para CMD=1)
Este comando proporciona el estado de la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Si estuviera activado el bit 15 (identificador de reset), se desactiva automáticamente (este comportamiento
concuerda con la petición CN_CLEAR_RESET - véase CMD = 5).
RESULT (para CMD = 1)

Valor / Significado

Parámetro

Valor Hex/rango

Bit

RESULT1

0000 0*00H

Bits 8-11: Códigos de condición para FETCH/WRITE
(valores excluidos:0x3,0x7,0x8,0xB,0xF)
Bit 8

Tipo de conexión:
● 0: ninguna conexión FETCH
● 1: conexión reservada para peticiones FETCH

Bit 9

Tipo de conexión:
● 0: ninguna conexión WRITE
● 1: conexión reservada para peticiones WRITE

Bit 10

Estado de la petición (FETCH/WRITE):
● 0: Estado de la petición OK
● 1: Estado de la petición NOT OK
este identificador se pone en los siguientes casos:

Bit 11

–

La petición ha sido acusada negativamente por la
CPU

–

La petición no se ha podido transmitir a la CPU por
estar la conexión en el estado "LOCKED".

–

La petición ha sido rechazada porque el
encabezado FETCH/WRITE no tenía la estructura
correcta.

Estado de petición FETCH/WRITE
● 0: ninguna petición en curso
● 1: en curso una petición de LAN

Programación del PLC
Manual de programación y manejo, 11/2019

7353

Instrucciones
4.2 Instrucciones

CMD

Significado

1

CN_STATUS – connection status (continuación para CMD=1)
Este comando proporciona el estado de la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Si estuviera activado el bit 15 (identificador de reset), se desactiva automáticamente (este comportamiento
concuerda con la petición CN_CLEAR_RESET - véase CMD = 5).
RESULT (para CMD = 1)

Valor / Significado

Parámetro

Valor Hex/rango

Bit

RESULT1

0000 *000H

Bits 12-15: Informaciones generales del CP
(valores excluidos: 0x3,0xB)
Bit 12 + 13

Información sobre el estado de la conexión:
(disponible solo para conexiones SEND/RECV que utili‐
cen los protocolos ISO/RFC/TCP; en caso de UDP se
emiten las informaciones internas correspondientes)
● 00: conexión deshecha
● 01: estableciéndose la conexión
● 10: deshaciéndose la conexión
● 11: conexión establecida

Bit 14

Información del CP:
● 0: CP en STOP
● 1: CP en RUN

Bit 15

Identificador de reset
● 0: No se ha ejecutado aún ningún reset de la conexión
a través de AG_CNTRL o se ha retirado la
identificación de reset.
● 1: Se ha realizado un reset de la conexión mediante la
instrucción de control.

7354

RESULT1

**** 0000H

Bits 16-31: Reservado
0 – reservado para futuras ampliaciones

RESULT2

0000 0000H

– reservado para futuras extensiones

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CMD

Significado

2

CN_RESET – connection reset
Este comando resetea la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
El reset de la conexión provoca una cancelación de la misma y un nuevo establecimiento (activo o pasivo, según
la configuración). Se borran los datos recibidos en el momento de la cancelación de la conexión, pero todavía no
adoptados en el programa de usuario.
Se genera adicionalmente una entrada en el búfer de diagnóstico, en la que se puede ver el resultado de la
petición.
RESULT (para CMD = 2)
Parámetro

Valor Hex/rango

RESULT1

0000 0001H

Significado
La petición de Reset se ha transmitido con éxito al CP.
Se han impulsado la cancelación de la conexión y su sub‐
siguiente establecimiento.

RESULT2

CMD
3

0000 0002H

La petición de Reset no se ha podido transmitir al CP por
no estar iniciado el servicio en el CP (p. ej. CP en STOP).

0000 0000H

Valor predeterminado

Significado
CN_STATUS_ALL – all connections status
Este comando proporciona en los parámetros RESULT1/2 (en total 8 bytes de información colectiva) el estado
de conexión de todas las conexiones (establecidas/deshechas).
El parámetro ID tiene que estar puesto a "0" (se verifica en cuanto a 0).
El CP se ha seleccionado a través del parámetro LADDR.
Si se necesitan, se pueden obtener informaciones detalladas sobre una conexión deshecha o no configurada a
través de una nueva llamada de estado, dirigida a la conexión, con CMD=1.
RESULT (para CMD = 3)
Parámetro

Valor Hex/rango

RESULT1

**** ****H

Significado
32 Bit: conexión 1 - 32
● 0 – conexión deshecha / no configurada
● 1 – conexión establecida

RESULT2

**** ****H

32 Bit: conexión 33 - 64
● 0 – conexión deshecha / no configurada
● 1 – conexión establecida

Programación del PLC
Manual de programación y manejo, 11/2019

7355

Instrucciones
4.2 Instrucciones

CMD

Significado

4

CN_RESET_ALL – all connections reset:
Este comando resetea todas las conexiones.
El parámetro ID tiene que estar puesto a "0" (se verifica en cuanto a 0).
El CP se ha seleccionado a través del parámetro LADDR.
El reset de las conexiones provoca una cancelación de las mismas y un nuevo establecimiento (activo o pasivo,
según la configuración). Se borran los datos recibidos en el momento de la cancelación de la conexión, pero
todavía no adoptados en el programa de usuario.
Se genera adicionalmente una entrada en el búfer de diagnóstico, en la que se puede ver el resultado de la
petición.
RESULT (para CMD = 4)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición de Reset se ha transmitido con éxito al CP. Se
han impulsado la cancelación y el subsiguiente estableci‐
miento de todas las conexiones.

RESULT1

0000 0002H

La petición de Reset no se ha podido transmitir al CP por
no estar iniciado el servicio en el CP (p. ej. CP en STOP).

RESULT2

0000 0000H

Valor predeterminado

CMD

Significado

5

CN_CLEAR_RESET – inicialización de la identificación de Reset
Este comando resetea el identificador de reset (bit 15 en RESULT1) para la conexión seleccionada con la ID.
El CP se ha seleccionado a través del parámetro LADDR.
Esta petición se ejecuta también automáticamente al leer el estado de la conexión (CMD=1); la petición enviable
por separado aquí descrita solo se necesita por lo tanto en casos especiales.
RESULT (para CMD = 5)

7356

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición de Clear se ha transmitido con éxito al CP.

RESULT1

0000 0002H

La petición de Clear no se ha podido transmitir al CP por no
estar iniciado el servicio en el CP (p. ej. CP en STOP).

RESULT2

0000 0000H

Valor predeterminado

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CMD

Significado

6

CN_DISCON − connection disconnect
Este comando resetea la conexión que se había seleccionado con ID y LADDR.
El reset de la conexión se realiza con una cancelación de la misma.
Los datos guardados eventualmente en la pila se pierden sin advertencia. Después de esto no se produce ningún
establecimiento automático de la conexión. La conexión se puede restablecer con la petición de control
CN_STARTCON. Se crea una entrada en el búfer de diagnóstico, en la que se puede ver el resultado de la
petición.
RESULT (para CMD = 6)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición se ha transmitido con éxito al CP. Se ha inicia‐
do la cancelación de la conexión.

RESULT1

0000 0002H

La petición no se ha podido transmitir al CP por no estar
iniciado el servicio en el CP (p. ej. CP en STOP).

RESULT2

0000 0000H

Valor predeterminado

CMD

Significado

7

CN_STARTCON − start connection
Este comando establece una conexión seleccionada con ID y LADDR y que se canceló antes con la petición de
control CN_DISCON. Se crea una entrada en el búfer de diagnóstico, en la que se puede ver el resultado de la
petición.
RESULT (para CMD = 6)

Significado

Parámetro

Valor Hex/rango

RESULT1

0000 0001H

La petición de establecimiento de la conexión se ha trans‐
mitido con éxito al CP. Se ha iniciado el establecimiento de
la conexión.

RESULT1

0000 0002H

La petición de establecimiento de la conexión no se ha
podido transmitir al CP por no estar iniciado el servicio en
el CP (p. ej. CP en STOP).

RESULT2

0000 0000H

Valor predeterminado

Informaciones adicionales
Observe las indicaciones adicionales que aparecen bajo la siguiente ID de artículo en las
preguntas frecuentes (FAQ): 33414377 (http://support.automation.siemens.com/WW/view/es/
33414377)

Consulte también
AG_CNTRL (Página 7347)

Programación del PLC
Manual de programación y manejo, 11/2019

7357

Instrucciones
4.2 Instrucciones

Instrucciones para PROFINET IO
Instrucciones para PROFINET IO
Panorámica
Para la transmisión cíclica de datos en la interfaz PROFINET IO están disponibles las
instrucciones citadas a continuación. El significado de las instrucciones difiere dependiendo de
que el CP se utilice como PROFINET IO-Controller o como PROFINET IO-Device en un equipo
S7.
Instrucción

utilizable para

S7-300

S7-400

PNIO_SEND

x

Significado

-

Dependiendo del modo de funcionamien‐
to del CP:
● En el PROFINET IO-Controller
Recibir datos de salida de procesos
de los PROFINET IO-Devices.
● En el PROFINET IO-Device
Transmitir datos de entrada de
procesos al PROFINET IO-Controller.

PNIO_RECV

x

-

Dependiendo del modo de funcionamien‐
to del CP:
● En el PROFINET IO-Controller
Recibir datos de entrada de procesos
de los PROFINET IO-Devices.
● En el PROFINET IO-Device
Recibir datos de salida de procesos
del PROFINET IO-Controller.

Para CPs en funcionamiento paralelo de PROFINET IO−Controller e IO-Device están
disponibles las instrucciones a partir de la versión 2.0.
Para la transmisión de datos acíclica (registros de datos, informaciones de alarma) en la
interfaz PROFINET IO están disponibles las instrucciones citadas a continuación. Ambas
instrucciones se pueden utilizar sólo en el modo de PROFINET IO-Controller.
Instrucción

utilizable para

S7-300

S7-400

PNIO_RW_REC

x

Significado
-

● Leer registro de datos
(de un PROFINET IO-Device)
● Escribir registro de datos
(en un PROFINET IO-Device)

PNIO_ALARM

7358

x

-

Recibir informaciones de alarma de
los PROFINET IO-Devices

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Instrucciones para la transmisión cíclica de datos útiles
PNIO_SEND
PNIO_SEND
Descripción
La instrucción PNIO_SEND se utiliza para la transferencia de datos en los modos de
funcionamiento del CP como controlador PROFINET IO o dispositivo PROFINET IO.
● Funcionamiento como controlador PROFINET IO
La instrucción transfiere los datos de proceso (salidas) de un área de salida indicada al CP,
para su transmisión a los dispositivos PROFINET IO y proporciona como indicador de
estado el IO Consumer Status (IOCS) de las salidas de los dispositivos PROFINET IO.
● Funcionamiento como dispositivo PROFINET IO
La instrucción lee las entradas de procesos pretratadas de la CPU en el dispositivo
PROFINET IO y las transfiere al controlador PROFINET IO (direcciones de entrada
configuradas). Adicionalmente, la instrucción proporciona como indicador de estado el IO
Consumer Status (IOCS) del controlador PROFINET IO.
Los datos de proceso pretratados se ponen a disposición en un DB o en el área de marcas.
Para CPs en funcionamiento paralelo de controlador y dispositivo PROFINET IO está
disponible la instrucción a partir de la versión 2.0. Con el parámetro adicional MODE se ajusta
el modo de operación para el que se debe llamar la instrucción.

Interfaz de llamada (versión 2.0)
Interfaz de llamada en representación FUP
31,2B6(1'
:25'

&3/$''5

%<7(
,17
$1<

'21(

%22/

02'(

(5525

%22/

/(1

67$786

:25'

6(1'

,2&6
&+(&.B,2&6

$1<
%22/

Consulte también
Comportamiento general de las instrucciones para PROFINET IO (Página 7372)
Coherencia de los datos (Página 7373)
Parámetros en el caso de PNIO_SEND (Página 7360)
Parámetros DONE, ERROR, STATUS (IE) (Página 7364)

Programación del PLC
Manual de programación y manejo, 11/2019

7359

Instrucciones
4.2 Instrucciones

Parámetros en el caso de PNIO_SEND
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la instrucción
PNIO_SEND:
Parámetro

Declaración Tipo de da‐
tos

Rango de valores

Descripción

CPLADDR

INPUT

WORD

-

Dirección inicial del módulo

MODE

INPUT

BYTE

Valores para X:

Indicación en forma XY (hexadecimal):

● 0YH: los bits de estado se
transfieren a IOCS.

● X ajusta la transferencia de
información de estado.

(parámetros a
partir de la ver‐
sión 2.0)

● Y indica el modo de operación del CP
● 8YH: limitación a aviso de
grupo en CHECK_IOCS;
como controlador IO o dispositivo IO.
ningún bit de estado en IOCS. Observaciones sobre la compatibilidad:
Valores para Y:
● La instrucción de la versión 1.0 se
● X0H:
–

Modo de controlador IO

–

Modo de dispositivo IO
(cuando no hay
funcionamiento paralelo)

Hay compatibilidad con la
instrucción en la versión 1.0

puede seguir utilizando si el CP no
opera en paralelo como controlador
IO y como dispositivo IO.

● La instrucción de la versión a partir de
2.0 se comporta con MODE=0 como
la instrucción de la versión 1.0.

● X1H: modo de dispositivo IO
(con funcionamiento paralelo)

7360

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración Tipo de da‐
tos

SEND

IN_OUT

Rango de valores

ANY (como La dirección del área de datos re‐
VARTYPE mite como alternativa a:
solo se per‐ ● Área de marcas
mite BYTE)
● Área de bloques de datos

Descripción
Indicar la dirección y la longitud
Modo de controlador IO:
La longitud debería ser acorde con la lon‐
gitud total configurada de la periferia des‐
centralizada; los huecos en las direccio‐
nes se transmiten conjuntamente.
La longitud puede ser también menor que
la longitud total de la periferia descentra‐
lizada, por ejemplo si la instrucción se lla‐
ma varas veces en 1 OB. Sin embargo
debe tener la longitud total en al menos
una llamada.
Modo de dispositivo IO:
La estructura de datos resulta del orden
de los slots de los módulos de entrada
configurados en la línea del controlador
PROFINET IO para este dispositivo PRO‐
FINET IO y de su longitud sin huecos en
direcciones.
(Observe al respecto las explicaciones
complementarias o los ejemplos relativos
a su CP en la Parte B de este manual,
específica del equipo)
Notas:
● La instrucción comienza con la
transmisión de datos con la dirección
0, independientemente de cómo haya
configurado las direcciones (con
independencia de la mínima dirección
configurada).
● No se permite indicar un área de
periferia, ya que primero tiene que
comprobar el IOCS en cuanto a
GOOD, antes de que se puedan
adoptar los datos en la periferia.

Programación del PLC
Manual de programación y manejo, 11/2019

7361

Instrucciones
4.2 Instrucciones
Parámetro

Declaración Tipo de da‐
tos

Rango de valores

Descripción

LEN

INPUT

Valor > 0

Longitud del sector de datos a transmitir
en bytes.

INT

Consulte la máxima longitud total
de las áreas de datos a transmitir
en la Parte B de este manual, es‐
pecífica del equipo, en el capitulo
“Datos de rendimiento“. Puede
ser diferente para el modo de
controlador y el modo de disposi‐
tivo.

La transmisión de los datos comienza for‐
zosamente con la dirección 0, con inde‐
pendencia de la configuración. Observe
que se tiene en cuenta la dirección IO "0"
con la longitud=1.
Modo de controlador IO:
● Aquí se tiene que indicar la dirección
configurada de valor más alto de los
dispositivos. Las distintas áreas no se
agrupan.
En el caso de una llamada repetida de
la instrucción, LEN puede ser también
menor que la mayor dirección. Al
menos en una llamada se debería
indicar la mayor dirección (véase el
parámetro "SEND").
● Los datos se transmiten en el orden
de las direcciones lógicas (como en
PROFIBUS DP).
Modo de dispositivo IO:
● Los datos se transmiten en el orden
de los slots, tal como se han
configurado los módulos de entrada
en la línea del controlador PROFINET
IO para este dispositivo PROFINET
IO.
Nota:
Tiene que asegurarse de que haya
coherencia entre la longitud aquí
programada y la configuración del
controlador PROFINET IO. En el caso
del dispositivo se transmite la longitud
total del área de datos, incluidas
eventuales lagunas.

DONE

OUTPUT

BOOL

0: 1: nuevos datos aceptados

El parámetro de estado indica si la peti‐
ción se ha desarrollado correctamente.

ERROR

OUTPUT

BOOL

0: -1: Error

Indicador de error

STATUS

OUTPUT

WORD

-

Indicador de estado

7362

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración Tipo de da‐
tos

Rango de valores

Descripción

CHECK_IOCS

OUTPUT

BOOL

0: todos los IOCS en GOOD

Bit auxiliar que señaliza si es necesario
evaluar el área de estado IOCS

IOCS

OUTPUT

ANY (como La dirección del área de datos re‐
VARTYPE mite como alternativa a:
solo se per‐ ● Área de marcas
mite BYTE)
● Área de bloques de datos

1: al menos un IOCS en BAD

Longitud:
Vea el valor máximo en la Parte B
de este manual, específica del
equipo, capítulo “Datos de rendi‐
miento“. Puede ser diferente para
el modo de controlador y el modo
de dispositivo.

Por cada byte de datos útiles se transmite
un bit de estado.
El dato de longitud depende de la longitud
en el parámetro LEN (un bit por cada byte)
= (longitud LEN + 7/ 8)
Modo de controlador:
conforme al parámetro SEND se transmi‐
ten también huecos en direcciones.
Huecos en direcciones se transmiten con
el estado GOOD.
Modo de dispositivo:
los huecos en direcciones no se transmi‐
ten.
La instrucción comienza con la transmi‐
sión del estado para la dirección 0.
Nota:
la longitud mínima del puntero ANY es
(longitud LEN + 7/ 8)

Nota
Tenga en cuenta que todos los parámetros de salida solo se deben evaluar cuando la
instrucción señalice DONE = 1 o ERROR = 1.
Nota
Tiene que partir de que el estado de IOCS suministrado no llega sincronizado en cuanto al
tiempo con los datos (parámetro SEND), sino con una demora equivalente al ciclo del
programa de usuario. Esto significa: Los datos de usuario y IOCS no son coherentes.

Consulte también
PNIO_SEND (Página 7359)

Programación del PLC
Manual de programación y manejo, 11/2019

7363

Instrucciones
4.2 Instrucciones

Parámetros DONE, ERROR, STATUS (IE)
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga también en cuenta lo indicado
en el manual de referencia STEP 7 Standard y funciones del sistema. Allí encontrará
informaciones en el capítulo "Evaluación de fallos con el parámetro de salida RET_VAL".
A través del diálogo de propiedades de las instrucciones aquí descritas se puede visualizar en
la ficha “Llamadas" qué instrucciones del sistema que son relevantes para la evaluación de
errores se utilizan.

Tabla 4-422 Códigos de condición PNIO_SEND
DONE

ERROR

STATUS

Significado

0

0

8180H

● Transfiriendo datos;
o bien
● El CP está en el estado operativo STOP.

0

0

8181H

1

0

0000H

Nuevos datos transferidos sin error.

0

1

8183H

● Falta configuración PROFINET IO;

El módulo no es compatible con la versión 2.0 de la instrucción.
Solución: utilizar la versión 1.0.

o bien
● CPLADDR incorrecta;
o bien
● El CP está en el estado operativo STOP.
o bien
● El conexionado de MODE no armoniza con la configuración del módulo o se tiene un
conexionado incorrecto con MODE > 1
Para el modo Device, adicionalmente:
● La conexión entre PROFINET IO-Controller y PROFINET IO-Device está
interrumpida,
o bien
● PROFINET IO-Controller no accesible
o bien
● Longitudes totales (configuración y parámetro LEN) no coherentes.
0

1

8184H

Error del sistema o tipo de parámetro no permitido.

0

1

8185H

El parámetro LEN es mayor que el área de origen SEND o el búfer de destino (IOCS) no
es suficientemente grande.

0

1

8F22H

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

7364

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8F23H

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado corto).

0

1

8F24H

Error de área al leer un parámetro.

0

1

8F25H

Error de área al escribir un parámetro.

0

1

8F28H

Error de alineación al leer un parámetro.

0

1

8F29H

Error de alineación al escribir un parámetro.

0

1

8F30H

El parámetro está en el 1er. bloque de datos act. protegido de escritura.

0

1

8F31H

El parámetro está en el segundo bloque de datos act. protegido de escritura.

0

1

8F32H

El parámetro contiene número de DB demasiado alto.

0

1

8F3AH

Área de destino no cargada (DB).

0

1

8F42H

Retardo en acuse al leer un parámetro del área de periferia.

0

1

8F43H

Retardo en acuse al escribir un parámetro en el área de periferia.

0

1

8F44H

Está bloqueado el acceso a un parámetro a leer para el procesamiento de la instrucción.

0

1

8F45H

Está bloqueado el acceso a un parámetro a escribir para el procesamiento de la instruc‐
ción.

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.

0

1

8090H

No existe ningún módulo con esta dirección.

0

1

80A0H

Acuse negativo al leer del módulo.

0

1

80A1H

Acuse negativo al escribir en el módulo.

0

1

80B0H

El módulo desconoce el registro.

0

1

80B1H

● La longitud de registro indicada es incorrecta.
o bien
● El CP pasa al estado STOP.

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Recursos (memoria) ocupados.

0

1

80C4H

Error de comunicación (aparece temporalmente; por ello es conveniente una repetición
en el programa de usuario.)

Consulte también
PNIO_SEND (Página 7359)

Programación del PLC
Manual de programación y manejo, 11/2019

7365

Instrucciones
4.2 Instrucciones

PNIO_RECV
PNIO_RECV
Descripción
La instrucción PNIO_RECV se utiliza para la transmisión de datos en los modos de
funcionamiento del CP como controlador PROFINET IO o dispositivo PROFINET IO.
● Funcionamiento como controlador PROFINET IO
La instrucción transfiere los datos de proceso de los dispositivos PROFINET IO (entradas
del controlador), así como el IO Provider Status (IOPS) de los dispositivos PROFINET IO
a las áreas de entrada indicadas.
● Funcionamiento como dispositivo PROFINET IO
La instrucción transfiere los datos de proceso transmitidos por el controlador PROFINET IO
(direcciones de salida configuradas), así como el IO Provider Status (IOPS) del controlador
PROFINET IO y los escribe en las áreas de datos reservadas para las salidas de procesos
en la CPU del dispositivo PROFINET IO.
Para CPs en funcionamiento paralelo de controlador y dispositivo PROFINET IO está
disponible la instrucción a partir de la versión 2.0. Con el parámetro adicional MODE se ajusta
el modo de operación para el que se debe llamar la instrucción.

Interfaz de llamada (versión 2.0)
Interfaz de llamada en representación FUP
31,2B5(&9
:25'

&3/$''5

%<7(

02'(

,17

/(1

5(&9

$1<

1'5

%22/

(5525

%22/

67$786

:25'

,236
&+(&.B,236
$''B,1)2

$1<
%22/
:25'

Consulte también
Comportamiento general de las instrucciones para PROFINET IO (Página 7372)
Coherencia de los datos (Página 7373)
Parámetros en el caso de PNIO_RECV (Página 7367)
Parámetros NDR, ERROR, STATUS (IE) (Página 7371)

7366

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros en el caso de PNIO_RECV
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la instrucción
PNIO_RECV:
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

CPLADDR

INPUT

WORD

-

Dirección inicial del módulo

MODE

INPUT

BYTE

Valores para X:

Indicación en forma XY (hexadecimal):

● 0YH: los bits de estado se
transfieren a IOCS.

● X ajusta la transferencia de información de
estado.

(parámetros
a partir de la
versión 2.0)

● 8YH: limitación a aviso de
● Y indica el modo de operación del CP
grupo en CHECK_IOCS;
como controlador IO o dispositivo IO.
ningún bit de estado en IOCS. Observaciones sobre la compatibilidad:
Valores para Y:
● La instrucción de la versión 1.0 se puede
● X0H:
–

Modo de controlador IO

–

Modo de dispositivo IO
(cuando no hay
funcionamiento paralelo)

Hay compatibilidad con la
instrucción en la versión 1.0

seguir utilizando si el CP no opera en
paralelo como controlador IO y como
dispositivo IO.

● La instrucción de la versión a partir de 2.0
se comporta con MODE=0 como la
instrucción de la versión 1.0.

● X1H: modo de dispositivo IO
(con funcionamiento paralelo)

Programación del PLC
Manual de programación y manejo, 11/2019

7367

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

RECV

IN_OUT

ANY (co‐
mo
VARTY‐
PE solo se
permite
BYTE)

La dirección del área de datos re‐ Indicar la dirección y la longitud
mite como alternativa a:
Modo de controlador IO:
● Área de marcas
La longitud debería ser acorde con la longitud
total configurada de la periferia descentraliza‐
● Área de bloques de datos
da; los huecos en las direcciones se transmi‐
ten conjuntamente.
La longitud puede ser también menor que la
longitud total de la periferia descentralizada,
por ejemplo si la instrucción se llama varas ve‐
ces en 1 OB. Sin embargo debe tener la lon‐
gitud total en al menos una llamada.
Modo de dispositivo IO:
La estructura de datos resulta del orden de las
ranuras (slots) de los módulos de salida confi‐
gurados en el ramal del PROFINET IO-Con‐
troller para este PROFINET IO-Device y de su
longitud sin huecos en direcciones.
Notas:
● La instrucción comienza con la transmisión
de datos con la dirección 0,
independientemente de cómo haya
configurado las direcciones (con
independencia de la mínima dirección
configurada).
● No se permite indicar un área de periferia,
ya que primero tiene que comprobar el
IOPS en cuanto a GOOD, antes de que se
puedan adoptar los datos en la periferia.

7368

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

LEN

INPUT

INT

Valor > 0

Longitud del sector de datos a transmitir en
bytes.

Consulte la máxima longitud total
de los datos a transmitir en la
Parte B de este manual en el ca‐
pitulo “Datos de rendimiento“.
Puede ser diferente para el modo
de controlador y el modo de dis‐
positivo.

La transmisión de los datos comienza forzosa‐
mente con la dirección 0, con independencia
de la configuración. Observe que se tiene en
cuenta la dirección IO "0" con la longitud=1.
Modo de controlador IO:
● Aquí se tiene que indicar la dirección
configurada de valor más alto de los
dispositivos. Las distintas áreas no se
agrupan.
En el caso de una llamada repetida de la
instrucción, LEN puede ser también menor
que la mayor dirección. Al menos en una
llamada se debería indicar la mayor
dirección (véase el parámetro "RECV").
● Los datos se transmiten en el orden de las
direcciones lógicas (como en PROFIBUS
DP).
Modo de dispositivo IO:
● Los datos se transmiten en el orden de los
slots, tal como se han configurado los
módulos de entrada en la línea del
controlador PROFINET IO para este
dispositivo PROFINET IO.
● Nota:
Tiene que asegurarse de que haya
coherencia entre la longitud aquí
programada y la configuración del
controlador PROFINET IO. En el caso del
dispositivo se transmite la longitud total del
área de datos, incluidas eventuales
lagunas.

NDR

OUTPUT

BOOL

0: 1: datos aceptados

El parámetro de estado indica si la petición se
ha desarrollado correctamente.

ERROR

OUTPUT

BOOL

0: 1: error

Indicador de error

STATUS

OUTPUT

WORD

-

Indicador de estado

CHECK_
IOPS

OUTPUT

BOOL

0: todos los IOPS en GOOD

Bit auxiliar que señaliza si es necesario eva‐
luar el área de estado IOPS

Programación del PLC
Manual de programación y manejo, 11/2019

1: al menos un IOPS en BAD

7369

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores

IOPS

OUTPUT

ANY (co‐
mo
VARTY‐
PE solo se
permite
BYTE)

La dirección del área de datos re‐ Por cada byte de datos útiles se transmite un
mite como alternativa a:
bit de estado.
● Área de marcas
● Área de bloques de datos
Longitud:
Consulte el valor máximo en la
Parte B de este manual en el ca‐
pítulo “Datos de rendimiento“.
Puede ser diferente para el modo
de controlador y el modo de dis‐
positivo.

Descripción

El dato de longitud depende de la longitud en
el parámetro RECV (un bit por cada byte)
= (longitud LEN + 7/ 8)
Modo Controller:
Conforme al parámetro RECV se transmiten
también huecos en direcciones.
Huecos en direcciones se transmiten con el
estado GOOD.
Modo Device:
Huecos en direcciones no se transmiten.
La instrucción comienza con la transmisión del
estado para la dirección 0.
Nota:
● La longitud mínima del puntero ANY es
(longitud LEN + 7/ 8)

ADD_INFO

OUTPUT

WORD

Información de diagnóstico adi‐
cional
En el modo Controller:
● 0: ninguna alarma
● >0: cantidad de alarmas
existentes
En el modo Device el parámetro
es siempre = 0.

Extensión de parámetro
Nota:
el parámetro ADD_INFO se actualiza también
aunque en el controlador PROFINET IO no
esté configurada ninguna dirección INPUT. En
este caso se llama la instrucción PNIO_RECV
con una longitud LEN > 0 (p. ej. LEN = 1 byte).
Transmite entonces una laguna de direccio‐
nes de 1 Byte.
La extensión de parámetros se puede utilizar
para CPs a partir de la siguiente versión de
firmware (FW):
● CP 343−1 (EX30) a partir de FW V2.0
● CP 343−1 Lean (CX10) a partir de FW V2.0
● CP 343−1 Advanced (GX30) a partir de
FW V1.0
En versiones de firmware más antiguas, el pa‐
rámetro está reservado.

Nota
Tenga en cuenta que todos los parámetros de salida solo se deben evaluar cuando la
instrucción señalice NDR = 1 o ERROR = 1.

Consulte también
PNIO_RECV (Página 7366)

7370

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros NDR, ERROR, STATUS (IE)
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por los parámetros
NDR, ERROR y STATUS, que tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga también en cuenta lo indicado
en el manual de referencia STEP 7 Standard y funciones del sistema. Allí encontrará
informaciones en el capítulo "Evaluación de fallos con el parámetro de salida RET_VAL".
A través del diálogo de propiedades de las instrucciones aquí descritas se puede visualizar en
la ficha “Llamadas" qué instrucciones del sistema que son relevantes para la evaluación de
errores se utilizan.

Tabla 4-423 Códigos de condición de PNIO_RECV
NDR

ERROR

STATUS

Significado

0

0

8180H

● Adoptando datos;
o bien
● El CP está en el estado operativo STOP.

0

0

8181H

1

0

0000H

Nuevos datos aceptados sin error.

0

1

8183H

● Falta configuración PROFINET IO;

El módulo no es compatible con la versión 2.0 de la instrucción.
Solución: utilizar la versión 1.0.

o bien
● CPLADDR incorrecta;
o bien
● El CP está en el estado operativo STOP.
o bien
● El conexionado de MODE no armoniza con la configuración del módulo o se tiene un
conexionado incorrecto con MODE > 1.
Para el modo Device, adicionalmente:
● La conexión entre PROFINET IO-Controller y PROFINET IO-Device está
interrumpida
o bien
● PROFINET IO-Controller no accesible
o bien
● Longitudes totales (configuración y parámetro LEN) no coherentes.
0

1

8184H

Error del sistema o tipo de parámetro no permitido.

0

1

8185H

Búfer de destino (RECV o IOCS) demasiado pequeño.

0

1

8F22H

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

Programación del PLC
Manual de programación y manejo, 11/2019

7371

Instrucciones
4.2 Instrucciones
NDR

ERROR

STATUS

Significado

0

1

8F23H

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado corto).

0

1

8F24H

Error de área al leer un parámetro.

0

1

8F25H

Error de área al escribir un parámetro.

0

1

8F28H

Error de alineación al leer un parámetro.

0

1

8F29H

Error de alineación al escribir un parámetro.

0

1

8F30H

El parámetro se encuentra en el 1er. bloque de datos act. protegido contra escritura.

0

1

8F31H

El parámetro está en el segundo bloque de datos act. protegido contra escritura.

0

1

8F32H

El parámetro contiene un número de DB demasiado alto.

0

1

8F3AH

Área de destino no cargada (DB).

0

1

8F42H

Retardo en acuse al leer un parámetro del área de periferia.

0

1

8F43H

Retardo en acuse al escribir un parámetro en el área de periferia.

0

1

8F44H

Está bloqueado el acceso a un parámetro a leer para el procesamiento de la instrucción.

0

1

8F45H

Está bloqueado el acceso a un parámetro a escribir para el procesamiento de la instruc‐
ción.

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.

0

1

8090H

No existe ningún módulo con esta dirección.

0

1

80A0H

Acuse negativo al leer del módulo.

0

1

80A1H

Acuse negativo al escribir en el módulo.

0

1

80B0H

El módulo no conoce el registro.

0

1

80B1H

● La longitud de registro indicada es incorrecta.
o bien
● El CP pasa al estado operativo STOP.

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Medio de servicio (memoria) ocupado.

0

1

80C4H

Error de comunicación (se produce temporalmente; por ello es conveniente una repeti‐
ción en el programa de usuario.)

Consulte también
PNIO_RECV (Página 7366)

Comportamiento general de las instrucciones para PROFINET IO
IO Consumer Status (IOCS) y IO Provider Status (IOPS)
En los dos interlocutores de comunicación, CPU/CP por un lado e IO-Device por otro, hay
disponible respectivamente una información de estado GOOD o BAD para los datos. Esta
información de estado se transmite paralela a los datos. El estado del interlocutor que envía los
datos se denomina IOPS (IO Provider Status) y el estado del interlocutor que los recibe IOCS
(IO Consumer Status).

7372

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El estado IOPS y el estado IOCS no son forzosamente idénticos. Puede ocurrir, por ejemplo,
que la CPU S7-300 se encuentre en el estado Stop (Output Disable o no se ejecutan
instrucciones PROFINET IO). En tal caso, el CP transmite, como PROFINET IO-Controller, el
estado BAD a los IO-Devices.

Relación entre llamada de la instrucción y datos IO
● Funcionamiento como PROFINET IO-Controller
Como PROFINET IO-Controller, el CP no supervisa la llamada cíclica de las instrucciones
PNIO_SEND/RECV. Si no se llaman las instrucciones, se considerarán válidos los últimos
datos IO y IOCS/IOPS transmitidos.
● Funcionamiento como PROFINET IO-Device
PNIO_SEND y PNIO_RECV tienen respectivamente un Watchdog propio. Dependiendo
del tiempo de ciclo de la CPU se deshace la conexión con el PROFINET IO-Controller si tras
la fase de inicialización no se llama ya más una de las dos instrucciones.

Optimización de la transmisión de datos (sólo en el modo de PROFINET IO-Controller)
Es posible llamar las instrucciones con una longitud (parámetro LEN) menor que la longitud
total configurada de los datos de E/S en el ramal PNIO.
Esto se puede aprovechar en el sentido de que datos críticos en cuanto al tiempo se transmitan
en cada ciclo de CPU, no transmitiéndose por el contrario en cada ciclo datos no críticos.
Ejemplo:
Transmita, por ejemplo, en cada ciclo sólo el primer sector de datos (datos críticos en cuanto
al tiempo) y en cada segundo ciclo la longitud total de los datos de E/S configurados. Para ello,
al configurar tiene que poner los datos críticos en cuanto al tiempo en el sector inferior (a partir
de la dirección de E/S 0).

Coherencia de los datos
Se transmite siempre todo el área de datos de entradas y salidas del controlador PROFINET
IO de forma completa y, por lo tanto, coherente.
● Funcionamiento como PROFINET IO-Controller
Independientemente de ello, indicando la longitud en la llamada de la instrucción tiene la
posibilidad de leer o emitir de forma coherente un área de datos de entrada o salida menor
que la configurada.
Observación: Tenga en cuenta, sin embargo, que en lo que se refiere a los "datos útiles IO",
dentro de un sistema PROFINET IO sólo se puede garantizar la coherencia de los datos dentro
de los distintos slots IO. Esto es independiente de que para las instrucciones aquí descritas se
garantice una transferencia de datos coherente entre la CPU y el IO-Controller.

Llamada de la instrucción
Sin embargo, para asegurar la coherencia de los datos sólo se debe acceder a los datos IO si
la instrucción se ha finalizado sin errores (parámetro Output NDR = TRUE). Además se tiene
que comprobar si el estado IOCS o IOPS para los datos es = GOOD.

Programación del PLC
Manual de programación y manejo, 11/2019

7373

Instrucciones
4.2 Instrucciones

Ejemplo
Normalmente (dependiendo de la longitud total de los datos IO), la instrucción se ejecuta a lo
largo de varios ciclos del programa de usuario, hasta que se notifica el indicador DONE/NDR
= 1.
/ODPDUHOEORTXH31,2B5(&9KDVWDTXH1'5 

&RPSUREDUHOHVWDGR,236GHORVGDWRVUHFLELGRV GH
31,2'HYLFHV 
VLHVQHFHVDULRSURFHGHUDOWUDWDPLHQWRGHHUURUHV

3UHSDUDU\WUDWDUGDWRVSUHSDUDUQXHYRVGDWRVGHVDOLGD


/ODPDUHOEORTXH31,2B6(1'KDVWDTXH'21( 

&RPSUREDUORVYDORUHVGHHVWDGR,2&6UHFLELGRVGHORV
31,2'HYLFHV
VLHVQHFHVDULRSURFHGHUDOWUDWDPLHQWRGHHUURUHV

Observación: El ciclo del programa de usuario y el ciclo del intercambio de datos IO entre el
controlador PROFINET IO y los dispositivos PROFINET IO son independientes el uno del otro.

Valores de sustitución
Casos de operación
La conexión de valores de sustitución se soporta para los dos casos de operación siguientes:
● Valores de sustitución en el arranque (cambio de estado operativo de la CPU de STOP a
RUN)
● Valores sustitutivos en caso de anomalías (desenchufado/enchufado o fallo/restauración
de la estación)

Valores de sustitución en el arranque
Las salidas se pueden inicializar con valores de sustitución poniendo en el OB de arranque un
marcador ("Arranque"). En régimen cíclico (OB1), evalúe entonces este marcador de
"arranque" para llamar, si procede, la instrucción PNIO_SEND con los valores de inicialización.

7374

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Valores sustitutivos en caso de anomalías (sólo en el modo de PROFINET IO-Controller)
En caso de avería (ha fallado el device/módulo) puede determinar qué módulos han fallado
consultando las informaciones de estado IOCS / IOPS. Entonces tiene la posibilidad de aplicar
valores sustitutivos.

PNIO_RW_REC
PNIO_RW_REC
Descripción
RW_REC sirve, en el modo de controlador PROFINET IO, tanto para la función "Leer registro"
como para la función "Escribir registro". RW_REC solo puede ejecutar una de las dos
funciones al mismo tiempo. La función “Leer registro" o “Escribir registro" se controla a través
del parámetro WRITE_REC.
Ejemplo: El indicativo del sistema y el indicativo de localización se le pueden comunicar al CP
a través de la función "Escribir registro" (en tanto estos parámetros no se hayan ajustado ya en
STEP 7 en el diálogo de propiedades del CP). Para ello se usa el registro de mantenimiento
“IM1" con el índice AFF1H.
Si desea detalles sobre los registros a los que se da soporte así como sobre su estructura,
puede consultarlos a través de la siguiente dirección de Internet:
http://support.automation.siemens.com/WW/view/de/19289930

Interfaz de llamada
Interfaz de llamada en representación FUP:
PNIO_RW_REC
WORD

CPLADDR

BOOL

WRITE_REC

WORD

ID

WORD

INDEX

INT

LEN

ANY

RECORD

Programación del PLC
Manual de programación y manejo, 11/2019

DONE

BOOL

ERROR

BOOL

STATUS

WORD

7375

Instrucciones
4.2 Instrucciones

Consulte también
Parámetros DONE, ERROR, STATUS (IE) (Página 7377)
Parámetros en el caso de PNIO_RW_REC (Página 7376)

Parámetros en el caso de PNIO_RW_REC
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la instrucción
PNIO_RW_REC:
Parámetro

Declara‐
ción

Tipo de da‐
tos

Valores posibles

Descripción

CPLADDR

INPUT

WORD

-

Dirección inicial del módulo

WRITE_REC

INPUT

BOOL

0: Leer registro de da‐
tos
1: Escribir registro

Tipo de petición;
El parámetro no se debe modificar durante el tiempo de
ejecución de la instrucción.

ID

INPUT

WORD

Dirección lógica del componente PROFINET IO (grupo
o módulo). En caso de un módulo de salida se tiene que
poner Bit 15
(ejemplo para la dirección de salida 5:
ID:=DW#16#8005).
En caso de un módulo mixto se tiene que indicar la
menor de ambas direcciones.

INDEX

INPUT

WORD

Números de los registros de datos que el usuario desea
Véase en la informa‐
ción del fabricante qué leer o escribir.
números de registro de
datos son soportados
por el grupo o el módu‐
lo.

DONE

OUTPUT

BOOL

0: 1: Registro de datos
transmitido correcta‐
mente

El parámetro de estado indica si se han aceptado nue‐
vos datos.

ERROR

OUTPUT

BOOL

0: 1: error

Indicación de fallo

STATUS

OUTPUT

WORD

0: ningún error
otro valor: error
(ver "Parámetros DO‐
NE, ERROR, STATUS
(IE) (Página 7377)")

Indicación de estado

7376

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declara‐
ción

Tipo de da‐
tos

Valores posibles

Descripción

LEN

IN_OUT

INT

La longitud máxima es
480 Byte.

● Leer registro de datos:
Parámetro OUTPUT puro; tras una lectura correcta
se indica aquí la longitud del registro de datos leído;
en otro caso 0.
● Escribir registro de datos:
Parámetro INPUT puro; el usuario tiene que indicar
aquí la longitud del registro de datos a escribir. La
longitud tiene que ser conforme a la definición del
registro de datos.

RECORD

IN_OUT

ANY (como
VARTYPE
se permi‐
ten BYTE,
WORD y
DWORD)

La dirección del sector
de datos remite como
alternativa a:
● Área de marcas
● Área de bloques de
datos
La longitud del puntero
Any tiene que ser ma‐
yor o igual a la defini‐
ción del registro de da‐
tos.

● Leer registro de datos:
Parámetro OUTPUT puro; tras una lectura correcta
se almacenan aquí los datos del registro de datos.
Si la longitud del puntero ANY es insuficiente, se
transmiten tantos datos como sea posible.
● Escribir registro de datos:
Parámetro INPUT puro; el usuario almacena aquí
los datos a escribir del registro de datos. La longitud
del puntero ANY tiene que ser al menos tal como
predetermina el parámetro LEN.

Consulte también
PNIO_RW_REC (Página 7375)

Parámetros DONE, ERROR, STATUS (IE)
Indicadores
La tabla siguiente informa sobre la indicación a evaluar por el programa de usuario, formada
por DONE, ERROR y STATUS.
Nota
Para las entradas con la codificación 8FxxH en STATUS, observe también lo indicado en el
manual de referencia "STEP 7 - Funciones del sistema y estándar para S7-300 y S7-400". Allí
encontrará informaciones en el capítulo "Evaluación de fallos con el parámetro de salida
RET_VAL".

Tabla 4-424 Indicadores PNIO_RW_REC
DONE

ERROR

STATUS

Significado

0

0

8180H

Transfiriendo datos

1

0

0000H

Registro de datos transmitido correctamente

Programación del PLC
Manual de programación y manejo, 11/2019

7377

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8183H

● Falta la configuración del controlador PROFINET IO,
● CPLADDR incorrecta
o bien
● CP en estado operativo STOP

0

1

8184H

Error del sistema o tipo de parámetro no permitido

0

1

8185H

Búfer de destino (RECORD) demasiado pequeño.

0

1

8F22H

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

0

1

8F23H

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado corto).

0

1

8F24H

Error de campo al leer un parámetro

0

1

8F25H

Error de campo al escribir un parámetro

0

1

8F28H

Error de alineación al leer un parámetro.

0

1

8F29H

Error de alineación al escribir un parámetro

0

1

8F30H

El parámetro está en el 1er. bloque de datos activo protegido de escritura

0

1

8F31H

El parámetro está en el segundo bloque de datos activo protegido de escritura

0

1

8F32H

El parámetro contiene número de DB demasiado grande

0

1

8F3AH

Área de destino no cargada (DB)

0

1

8F42H

Retardo en acuse al leer un parámetro del área de periferia

0

1

8F43H

Retardo en acuse al escribir un parámetro en el área de periferia

0

1

8F44H

Está bloqueado el acceso a un parámetro a leer para el procesamiento de la instrucción

0

1

8F45H

Está bloqueado el acceso a un parámetro a escribir para el procesamiento de la instruc‐
ción

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.

0

1

8090H

No existe módulo con esta dirección

0

1

80A0H

Acuse negativo al leer del módulo

0

1

80A1H

Acuse negativo al escribir en el módulo

0

1

80A3H

Error general del PROFINET IO-Context-Management

0

1

80A9H

PROFINET IO-Device o módulo señaliza un tipo no permitido

0

1

80B0H

El módulo no conoce el registro

0

1

80B1H

● La longitud de registro de datos indicada es incorrecta
o bien
● El CP pasa al estado STOP

0

1

80B2H

La dirección lógica o la ranura configurada no está ocupada

0

1

80B4H

PROFINET IO-Device o módulo señaliza un acceso a un sector no permitido

0

1

80B6H

PROFINET IO-Device o módulo deniega el acceso

0

1

80B8H

El módulo señaliza un parámetro no permitido

0

1

80C0H

No se puede leer el registro de datos

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Medios de operación (memoria) ocupados

0

1

80C4H

Error de comunicación (se presenta temporalmente; por ello es conveniente una repeti‐
ción en el programa de usuario.)

7378

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
PNIO_RW_REC (Página 7375)

PNIO_Alarm
PNIO_ALARM
Descripción
La instrucción PNIO_ALARM sirve para la evaluación de alarmas por un CP 343-1 empleado
como controlador PROFINET IO y se debería llamar en el programa de usuario del mismo si
en PNIO_RECV el parámetro ADD_INFO es distinto de 0. Tras una transmisión completa y sin
errores de todos los parámetros OUTPUT del PNIO_ALARM se confirman automáticamente
las alarmas recibidas.
Las alarmas se transmiten en el orden cronológico de su señalización al programa de usuario.
Alarmas más antiguas, aún no señalizadas al programa de usuario, que se tornen obsoletas
debido a otras alarmas más recientes, no son borradas por nuevas alarmas.
Nota
Mientras no se haya llamado aún PNIO_ALARM, las alarmas se acusan automáticamente a
nivel interno del CP.
Si PNIO_ALARM se ha llamado (al menos) una vez en el programa de usuario, también se
tiene que seguir llamando para acusar recibo de alarmas pendientes. Tal es el caso si la
instrucción PNIO_RECV presenta en el parámetro ADD_INFO un valor distinto de "0".
Si PNIO_ALARM no se vuelve a llamar después de haberlo llamado una o más veces en el
programa de usuario, no se acusa recibo de las alarmas y no está garantizado que la
representación de IO se actualice correctamente. Tal puede ser, por ejemplo, el caso tras una
alarma de retorno de estación. La necesidad de la llamada de la instrucción PNIO_ALARM solo
se puede anular con un rearranque del CP (desconexión y reconexión de la tensión).

Programación del PLC
Manual de programación y manejo, 11/2019

7379

Instrucciones
4.2 Instrucciones

Interfaz de llamada
Interfaz de llamada en representación FUP
PNIO_ALARM
WORD

CPLADDR

DONE

BOOL

ERROR

BOOL

NEW

BOOL

DWORD

MODE

STATUS

WORD

ANY

TINFO

ID

WORD

ANY

AINFO

LEN

INT

Consulte también
Parámetros DONE, NEW, ERROR, STATUS (IE) (Página 7382)
Parámetros en el caso de PNIO_ALARM (Página 7380)

Parámetros en el caso de PNIO_ALARM
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la instrucción
PNIO_ALARM:
Parámetro

Declaración Tipo de da‐
tos

Valores posibles

Descripción

CPLADDR

INPUT

WORD

-

Dirección inicial del módulo causante de error

DONE

OUTPUT

BOOL

0: 1: información de alar‐
ma transmitida correc‐
tamente

El parámetro de estado indica si la petición se ha desa‐
rrollado correctamente.
Con DONE = 1 se tiene que comprobar adicionalmente
el parámetro NEW.

ERROR

OUTPUT

BOOL

0: 1: error

Indicador de error

NEW

OUTPUT

BOOL

0: transmitiendo datos Con DONE = 1 y NEW = 1 se señaliza aquí una nueva
o no hay ninguna nue‐ alarma recibida.
va alarma
1: nueva alarma recibi‐
da y acusada

STATUS

7380

OUTPUT

WORD

0: ningún error
otro valor: error
(ver tabla 1–14)

Indicador de estado

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración Tipo de da‐
tos

ID

OUTPUT

Valores posibles

WORD

Descripción
Dirección inicial lógica del componente PNIO causante
de la alarma (grupo o módulo).
En caso de un módulo de salida se pone Bit 15 (ejemplo
para la dirección de salida 5: ID:=DW#16#8005).
En caso de un módulo mixto se indica la menor de am‐
bas direcciones.

LEN

OUTPUT

INT

MODE

IN_OUT

DWORD

0

Reservado

TINFO

IN_OUT

ANY (como
VARTYPE
se permiten
BYTE,
WORD y
DWORD)

La dirección del sector
de datos remite como
alternativa a:

(task information)

AINFO

IN_OUT

ANY (como
VARTYPE
se permiten
BYTE,
WORD y
DWORD)

Longitud de la información de alarma recibida (AINFO)

● Área de marcas
● Área de bloques
de datos

Área de destino para información de administración de
alarmas.
La información de inicio de OB de error (OB-Header =
Byte 0...19 de TINFO) es reproducida por el firmware
del CP, en la medida de lo posible.

La longitud del punte‐
ro Any tiene que ser
>= 32 bytes.

Véase también 1)

La dirección del sector
de datos remite como
alternativa a:

(alarm information)

● Área de marcas
● Área de bloques
de datos

Área de destino para información de cabecera e infor‐
mación adicional de alarma. Si ANY-Pointer AINFO es
demasiado pequeño, se recorta la información.
Véase también 1)

La longitud del punte‐
ro ANY tiene que ser
mayor o igual que la
máxima información
adicional de alarma
que se pueda recibir,
pero como máximo
1432 bytes (ver el pa‐
rámetro LEN)

1) Manual de referencia "STEP 7 - Funciones del sistema y estándar para S7-300 y S7-400",
Recibir alarma con la instrucción "RALRM"

Consulte también
PNIO_ALARM (Página 7379)

Programación del PLC
Manual de programación y manejo, 11/2019

7381

Instrucciones
4.2 Instrucciones

Parámetros DONE, NEW, ERROR, STATUS (IE)
Indicadores
La tabla siguiente informa sobre la indicación a evaluar por el programa de usuario, formada
por DONE, NEW, ERROR y STATUS.
Nota
Para las entradas con la codificación 8FxxH en STATUS, observe también lo indicado en el
manual de referencia "STEP 7 - Funciones del sistema y estándar para S7-300 y S7-400". Allí
encontrará informaciones en el capítulo "Evaluación de fallos con el parámetro de salida
RET_VAL".

Tabla 4-425 Indicadores PNIO_ALARM
DONE

NEW

ERROR

STATUS

Significado

0

0

0

8180H

Transfiriendo datos

1

1

0

0000H

Datos de alarma transmitidos correctamente y alarma acusada

1

0

0

0000H

No hay datos de alarma

0

0

1

8183H

● Falta la configuración del controlador PROFINET IO,
● CPLADDR incorrecta
o bien
● CP en estado operativo STOP

0

0

1

8184H

Error del sistema o tipo de parámetro no permitido

0

0

1

8185H

Búfer de destino (TINFO o AINFO) demasiado pequeño

0

0

1

8F22H

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

0

0

1

8F23H

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado corto).

0

0

1

8F24H

Error de campo al leer un parámetro

0

0

1

8F25H

Error de campo al escribir un parámetro

0

0

1

8F28H

Error de alineación al leer un parámetro.

0

0

1

8F29H

Error de alineación al escribir un parámetro

0

0

1

8F30H

El parámetro está en el 1er. bloque de datos activo protegido de escritura

0

0

1

8F31H

El parámetro está en el segundo bloque de datos activo protegido de escritura

0

0

1

8F32H

El parámetro contiene número de DB demasiado grande

0

0

1

8F3AH

Área de destino no cargada (DB)

0

0

1

8F42H

Retardo en acuse al leer un parámetro del área de periferia

0

0

1

8F43H

Retardo en acuse al escribir un parámetro en el área de periferia

0

0

1

8F44H

Está bloqueado el acceso a un parámetro a leer para el procesamiento de la
instrucción.

0

0

1

8F45H

Está bloqueado el acceso a un parámetro a escribir para el procesamiento de la
instrucción.

0

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.

0

0

1

8090H

No existe módulo con esta dirección

0

0

1

80A0H

Acuse negativo al leer del módulo

7382

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

NEW

ERROR

STATUS

Significado

0

0

1

80A1H

Acuse negativo al escribir en el módulo

0

0

1

80B0H

El módulo no conoce el registro

0

0

1

80B1H

● La longitud de registro de datos indicada es incorrecta
o bien
● El CP pasa al estado STOP

0

0

1

80C0H

No se puede leer el registro de datos

0

0

1

80C1H

El registro indicado está siendo procesado.

0

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

0

1

80C3H

Medios de operación (memoria) ocupados

0

0

1

80C4H

Error de comunicación (se presenta temporalmente; por ello es conveniente una
repetición en el programa de usuario.)

Consulte también
PNIO_ALARM (Página 7379)

PROFIenergy
PROFIenergy
Las funciones de PROFIenergy en PROFINET sirven para gestionar la energía de las
instalaciones. Aquí se incluye la desconexión planificada o espontánea de diferentes aparatos
de campo, grupos o unidades de proceso con el fin de ahorrar energía. La desconexión se lleva
a cabo en tiempos no productivos o en pausas de producción. Los datos energéticos y de
diagnóstico se pueden leer en aparatos integrados en el concepto de energía que, además,
soporten estas funciones.

Controlador PROFIenergy
Los comandos de desconexión los da el controlador de nivel superior; en PROFINET IO, el
controlador IO.
En SIMATIC S7-300, el controlador PROFIenergy puede ser el CP o una CPU S7-300 con
función PROFIenergy.

Dispositivos PROFIenergy
Los comandos del controlador PROFIenergy son procesados por el dispositivo IO con función
PROFIenergy, para desconectar aparatos conectados en el campo.
En el contexto de los bloques de programa PROFIenergy, se designa un dispositivo IO con
función PROFIenergy como dispositivo PROFIenergy. En SIMATIC S7-300, el dispositivo
PROFIenergy puede ser el CP o una CPU S7-300 con función PROFIenergy.

Programación del PLC
Manual de programación y manejo, 11/2019

7383

Instrucciones
4.2 Instrucciones

Dispositivos I
En SIMATIC S7, un dispositivo inteligente (dispositivo I) puede tener dispositivos
PROFIenergy subordinados. En este caso, el dispositivo I también puede funcionar como un
controlador PROFIenergy.

Modos de ahorro de energía y PE_MODE_ID
Muchos aparatos soportan sólo los estados operativos "operativo" (tensión conectada) y
"pausa" (tensión desconectada). En el controlador del dispositivo PROFIenergy es posible
configurar estados de ahorro de energía escalonados con diferentes modos de ahorro para
aquellos aparatos que lo soporten o para grupos. Con PROFIenergy, a los aparatos de campo
se les pueden asignar diferentes estados de consumo de energía.
Los distintos estados de consumo de energía se denominan "modos de ahorro de energía".
Para cada modo de ahorro de energía se especifica una "PE_MODE_ID" concreta.

Programación de las propiedades de los modos de ahorro de energía
Los detalles acerca de los modos de ahorro de energía (aparato de campo activado, duración
de la pausa, etc.) se programan en el programa de usuario de la CPU del dispositivo
PROFIenergy.

Bloques de programa PROFIenergy para el CP 300
Realización de las funciones de PROFIenergy en un S7-300
En el SIMATIC S7-300 se preparan las funciones PROFIenergy para el controlador IO y el
dispositivo IO mediante bloques de programa.
Tenga en cuenta que la CPU S7-300 y el CP 300 utilizan diferentes bloques de programa
PROFIenergy.

Especificación PROFIenergy
Las funciones de los bloques de programa PROFIenergy para el CP 300 se basan en la
siguiente especificación de la Organización de Usuarios PROFIBUS e.V. (PNO):
Common Application Profile PROFIenergy, Technical Specification for PROFINET,
Version 1.0, January 2010, Order No. 3.802

7384

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Bloques de programa PROFIenergy para el CP 300
Los bloques de programa PROFIenergy se llaman desde el programa de usuario de la CPU.
Para las funciones PROFIenergy del CP 300 están disponibles los siguientes bloques de
programa PROFIenergy:
● CP 300 como controlador IO:
– PE_START_END_CP
Bloque de programa para iniciar y finalizar pausas en la alimentación de energía así
como para predefinir determinados modos de ahorro de energía para el dispositivo
PROFIenergy.
– PE_CMD_CP
Bloque de programa para iniciar y finalizar pausas en la alimentación de energía,
predefinir determinados modos de ahorro de energía y consultar valores energéticos
medidos del dispositivo PROFIenergy.
Los dos bloques de programa pueden utilizarse alternativamente. En comparación con
PE_START_END_CP, PE_CMD_CP tiene una funcionalidad avanzada para integrar
valores energéticos medidos.
El bloque de programa debe llamarse por separado para cada dispositivo PROFIenergy.
– PE_DS3_WRITE_ET200_CP
No forma parte de los bloques de función PROFIenergy, pero complementa las
funciones de PROFIenergy de un ET 200S.
Con PE_DS3_WRITE_ET200_CP se definen los ajustes para el comportamiento de
conmutación de 8 slots como máximo (en este caso: módulos de potencia) del ET 200S.
● CP 300 como dispositivo IO:
– PE_I_DEV_CP
Recibe todos los comandos PROFIenergy y permite al programa de usuario ejecutar las
funciones de PROFIenergy.
Prepara los telegramas de respuesta del dispositivo IO para el controlador IO.
PE_I_DEV_CP se llama cíclicamente desde el programa de usuario del dispositivo IO.
– Bloques de programa complementarios (FC 0 - FC 8) para PE_I_DEV_CP:
Estos FCs preparan los datos de respuesta para PE_I_DEV_CP. Los FCs deben
llamarse en el programa de usuario y vincularse con PE_I_DEV_CP.
Si el dispositivo PROFIenergy es un I-Device que tiene dispositivos PROFIenergy
subordinados, en la CPU del I-Device se llama PE_START_END_CP o PE_CMD_CP para
los dispositivos PROFIenergy subordinados.

Bloques de sistema y programa para transferir registros
Los comandos PROFIenergy y la información de estado se intercambian entre el controlador
IO y el dispositivo IO mediante la lectura y escritura de registros. Esto se consigue por medio
de los bloques de programa RDREC y RWREC.

Programación del PLC
Manual de programación y manejo, 11/2019

7385

Instrucciones
4.2 Instrucciones
Los registros PROFIenergy se describen a continuación en los datos de respuesta de los
diferentes bloques de programa.
Nota
Llamadas de bloques
PE_START_END_CP, PE_CMD_CP, PE_I_DEV_CP y PE_DS3_WRITE_ET200_CP no
deben llamarse al mismo tiempo. No se puede llamar el siguiente bloque de programa hasta
que un bloque haya notificado "ningún error" (VALID = 1) o "error" (ERROR = 1).
El bloque de programa PNIO_RW_REC tampoco debe llamarse al mismo tiempo que
PE_START_END_CP, PE_CMD_CP, PE_I_DEV_CP o PE_DS3_WRITE_ET200_CP.

PE_START_END_CP
Significado y llamada - PE_START_END_CP
Significado y funcionamiento
PE_START_END_CP puede utilizarse como alternativa a PE_CMD_CP.
PE_START_END_CP se utiliza en el controlador IO. Provoca una pausa de ahorro de energía
o la finaliza en el dispositivo PROFIenergy asignado.
Este bloque de programa se utiliza preferentemente en controladores IO cuyos dispositivos IO
asignados tengan conectados únicamente aparatos de campo en los que no pueden o deben
leerse datos energéticos.
Los modos de ahorro de energía se configuran en el programa de usuario de la CPU del
dispositivo IO. El modo de ahorro de energía que se adopta realmente es notificado por el
dispositivo IO después de ejecutar PE_START_END_CP y devuelto en el parámetro
PE_MODE_ID.
El parámetro Pause_Time especifica la duración de la pasa de ahorro de energía para el
dispositivo IO. Mediante el bloque de programa PE_I_DEV_CP, en el dispositivo IO se
comprueba si la duración predefinida para la pausa es suficiente y si puede aplicarse.

7386

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Secuencia
3(B67$57B(1'B&3
3(B&0'B&3
&RQWURODGRU352),HQHUJ\

3(B,B'(9B&3
'LVSRVLWLYR352),HQHUJ\

3HWLFLµQGHHVFULWXUD
1(: 
5HVSXHVWDGHHVFULWXUD SRVLWLYD

3HWLFLµQGHOHFWXUD


PV

5HVSXHVWDGHOHFWXUD QHJDWLYD
5HFXUVRRFXSDGRDFWLYR

V

3HWLFLµQGHOHFWXUD

5HVSXHVWDGHOHFWXUD SRVLWLYD

V

7LHPSR

Figura 4-74

7LHPSR

Diagrama secuencial de las peticiones de escritura/lectura de PE_START_END_CP y
PE_CMD_CP

PE_START_END_CP utiliza WRREC para enviar un comando PROFIenergy al dispositivo IO
como petición de escritura. Seguidamente, PE_START_END_CP espera el acuse del
dispositivo IO. Para ello, cada 100 milisegundos se lee el registro de acuse con el bloque de
programa RDREC.
Mientras no llega el acuse del dispositivo IO, la petición de lectura se repite durante 10
segundos en intervalos de 100 milisegundos.
Los datos de respuesta del dispositivo IO se leen con el RDREC.

Programación del PLC
Manual de programación y manejo, 11/2019

7387

Instrucciones
4.2 Instrucciones

Interfaz de llamada en representación FUP
3(B67$57B(1'B&3
:25'

&3/$''5

3(B02'(B,'

%<7(

%22/

67$57

9$/,'

%22/

%22/

(1'

%86<

%22/

:25'

,'

(5525

%22/

7,0(

3$86(B7,0(

67$786

:25'

Explicación de los parámetros formales de PE_START_END_CP
Explicación de los parámetros formales de PE_START_END_CP
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

CPLADDR

INPUT

WORD

START

INPUT

BOOL

I, Q, M, D, L, const.

Dirección inicial del módulo del CP

● 1 = comando activo

Un flanco ascendente activa el comando
"Start_Pause" (iniciar pausa de ahorro de
energía)

● 0 = comando no activo
END

INPUT

BOOL

Descripción

● 1 = comando activo
● 0 = comando no activo

Un flanco ascendente activa el comando
"End_Pause" (finalizar pausa de ahorro de
energía)

ID

INPUT

WORD

Dirección lógica del dispositivo PROFIe‐
nergy de destino

PAUSE_
TIME

INPUT

TIME

T#-24D_20H_31M_23S_648MS
a
T#24D_20H_31M_23S_647MS

Temporizador IEC en incrementos de 1 ms,
entero con signo

PE_MODE_
ID

OUTPUT

BYTE

● 00h: tensión OFF (pausa)

ID del modo de ahorro de energía adoptado
por el dispositivo IO tras la ejecución del
comando.

VALID

OUTPUT

● 01h...FEh: configurable
● FFh: operativo
BOOL

0: 1: procesamiento finalizado co‐
rrectamente

BUSY

OUTPUT

BOOL

0: procesamiento finalizado, can‐
celado o todavía no iniciado

El parámetro de estado indica si la petición
se ha desarrollado correctamente.
Indicador del estado de procesamiento del
bloque de programa

1: procesamiento en curso

7388

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

ERROR

OUTPUT

BOOL

0: -

Indicador de error

1: error

Ver el significado en relación con el pará‐
metro STATUS en Indicadores de
PE_START_END_CP (Página 7389).

STATUS

OUTPUT

WORD

Indicador de estado
Ver el significado en relación con el pará‐
metro ERROR en Indicadores de
PE_START_END_CP (Página 7389).

Consulte también
Datos de respuesta (Página 7395)

Indicadores de PE_START_END_CP
Indicadores de PE_START_END_CP
PE_START_END_CP se basa en el bloque de programa PNIO_RW_REC y proporciona todos
los indicadores de PNIO_RW_REC, consulte los indicadores del bloque PNIO_RW_REC.
Además, se muestran los siguientes indicadores específicos de PROFIenergy. Los
indicadores de error de STATUS solo son válidos en relación con ERROR = 1.
Tabla 4-426 Indicadores específicos de PE_START_END_CP
STATUS

Significado

Errores específicos del bloque
8080h

Flanco ascendente simultáneamente a START y END

8081h

Conflicto de longitud con CMD_PARAM y CMD_PARAM_LEN

Errores específicos de PROFIenergy
FE01h

Service_Request_ID no válida

FE02h

Request_Reference no válida

FE03h

CMD_MODIFIER no válido

FE04h

Indicación no válida sobre la estructura de datos de un comando (Data_Structure_Identifier_RQ) en el tele‐
grama para el registro PROFIenergy de escritura

FE05h

Indicación no válida sobre la estructura de datos de un comando (Data_Structure_Identifier_RS) en el telegra‐
ma para el registro PROFIenergy de lectura

FE06h

Modo de ahorro de energía (PE_Mode_ID) no soportado

FE07h

La respuesta es más larga que la longitud de transferencia máx.

FE08h

Número de comandos no válido

FE09h

Block Type no válido (consulte el encabezado del telegrama)

FE0Ah

Block Length no válida (consulte el encabezado del telegrama)

FE0Bh

Block Version no válida (consulte el encabezado del telegrama)

FE50h

No hay ningún modo de ahorro de energía adecuado (PE_Mode_ID)

Programación del PLC
Manual de programación y manejo, 11/2019

7389

Instrucciones
4.2 Instrucciones
STATUS

Significado

FE51h

No se soporta el valor de PAUSE_TIME

FE52h

No se soporta PE_Mode_ID

Consulte los detalles relacionados con los parámetros de los errores específicos de
PROFIenergy en el capítulo AUTOHOTSPOT.

PE_CMD_CP
Significado y llamada - PE_CMD_CP
Significado y funcionamiento
PE_CMD_CP puede utilizarse como alternativa a PE_START_END_CP.
PE_CMD_CP se utiliza en el controlador IO y lanza una pausa de ahorro de energía o la finaliza
en el dispositivo PROFIenergy asignado. Adicionalmente, PE_CMD_CP puede leer otras
informaciones y valores energéticos medidos de un dispositivo IO.
Este bloque de programa se utiliza preferentemente en controladores IO cuyos dispositivos IO
asignados tengan conectados aparatos de campo de los que deben leerse datos energéticos
medidos.
Encontrará un diagrama de secuencia de las peticiones de escritura/lectura de PE_CMD_CP
en el capítulo AUTOHOTSPOT.
Los diferentes comandos que se transfieren al dispositivo IO con el bloque de programa tienen
asignadas "Service_Request_IDs" concretas. Las Service_Request_IDs 01...05 y 16 se
asignan en el parámetro CMD.
Con el parámetro CMD_MODIFIER se especifican con más detalle los comandos 04
(Query_Modes) y 16 (Query_Measurement).
El parámetro CMD_PARA asigna los valores de determinados parámetros a algunos
comandos mediante un puntero Any. El parámetro CMD_PARA_LEN define la longitud de
dichos parámetros.
El parámetro RESPONSE_DATA apunta al área de datos de respuesta del dispositivo IO.

7390

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Interfaz de llamada en representación FUP
3(B&0'B&3
:25'

&3/$''5

9$/,'

%22/

%22/

5(4

%86<

%22/

:25'

,'

(5525

%22/

%<7(

&0'

67$786

:25'

%<7(

&0'B02',),(5

$1<

&0'B3$5$

,17

&0'B3$5$B/(1

$1<

5(63216(B'$7$

$1<

Consulte también
Explicación de los parámetros formales de PE_CMD_CP (Página 7391)

Explicación de los parámetros formales de PE_CMD_CP
Explicación de los parámetros formales de PE_CMD_CP
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

CPLADDR

INPUT

WORD

Dirección inicial del módulo del CP

REQ

INPUT

BOOL

Con un flanco ascendente comienza la trans‐
ferencia de los comandos PROFIenergy.

ID

INPUT

WORD

Dirección lógica del dispositivo PROFIenergy
de destino

CMD

INPUT

BYTE

I, Q, M, D, L, const.

● 01: Start_Pause
● 02: End_Pause
● 03: Query_Modes
● 04: PEM_Status

Service_Request_ID del comando PROFIe‐
nergy.
Debajo de la tabla encontrará el significado
de los comandos.

● 05: PE_Identity
● 16: Query_Measurement

Programación del PLC
Manual de programación y manejo, 11/2019

7391

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

CMD_
MODIFIER

INPUT

BYTE

Modificador del comando PROFIenergy, sig‐
nificado:

Para "Start_Pause": 00
Para "End_Pause": 00
Para "Query_Modes":
● 01: List_Energy_Saving
_Modes
● 02: Get_Mode
Para "PEM_Status": 00
Para "PE_Identity": 00
Para "Query_Measurement":
● 01:
Get_Measurement_List
● 02:
Get_Measurement_Values

● Comando "Query_Modes"
–

Modificador 01: lee todos los modos
de ahorro de energía soportados
(PE_Mode_ID).

–

Modificador 02: lee los parámetros de
la PE_Mode_ID seleccionada.

● Comando "Query_Measurement"
–

Modificador 01: lee las
Measurement_IDs configuradas.

–

Modificador 02: lee los valores
medidos de las Measurement_IDs
seleccionadas.

Encontrará información sobre los parámetros
en el apartado del comando correspondiente
del capítulo AUTOHOTSPOT.
El modificador 00 significa "sin opciones".
CMD_PARA

INPUT

ANY

Puntero Any hacia parámetros para coman‐
dos
● Para comando 01 Start_Pause:
"Pause_Time"
● Para comando 02 End_Pause: irrelevante
● Para comando 03 Query_Modes:
–

Para modificador 01: irrelevante

–

Para modificador 02 Get_Mode:
"PE_Mode_ID"

● Para comando 04 PEM_Status:
irrelevante
● Para comando 05 PE_Identity: irrelevante
● Para comando 16 Query_Measurement:
–

Para modificador 01: irrelevante

–

Para modificador 02
Get_Measurement_Values:
Puntero ANY hacia la estructura de
datos con parámetros "Count" y
"Measurement_IDs"

Encontrará información sobre los parámetros
en el apartado del comando correspondiente
del capítulo AUTOHOTSPOT.
Se registra el área de datos completa del re‐
gistro que debe escribirse (Service_Data_Re‐
quest). Longitud máx.: 234 bytes
CMD_PA‐
RA_LEN

7392

INPUT

INT

Longitud real de los parámetros en CMD_PA‐
RA. Longitud máx.: 234 bytes

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

RESPONSE
_DATA

INOUT

ANY

Puntero hacia la dirección de los datos de
respuesta del dispositivo IO (telegrama com‐
pleto incl. Block Header)
Nota:
Si se ha seleccionado un rango demasiado
pequeño solo se guardará el número de
bytes configurado.

VALID

OUTPUT

BOOL

0: 1: procesamiento finalizado co‐
rrectamente

BUSY

OUTPUT

BOOL

El parámetro de estado del bloque de progra‐
ma indica si la petición se ha desarrollado
correctamente.

0: procesamiento todavía no ini‐ Indicador del estado de procesamiento del
ciado, finalizado o cancelado
bloque de programa
1: procesamiento en curso

ERROR

STATUS

OUTPUT

OUTPUT

BOOL

WORD

0: -

Indicador de error

1: error

Ver el significado en relación con el paráme‐
tro STATUS en AUTOHOTSPOT.
Indicador de estado
Ver el significado en relación con el paráme‐
tro ERROR en AUTOHOTSPOT.

Service_Request_IDs y significado de los comandos PROFIenergy
Los comandos PROFIenergy con Service_Request_ID 01...05 y 16 tienen el significado
siguiente:
● 01 = Start_Pause
Comando para iniciar una pausa de ahorro de energía.
El dispositivo IO selecciona el modo de ahorro de energía configurado. El modo de ahorro
de energía se notifica al controlador en los datos de respuesta.
● 02 = End_Pause
Comando para finalizar una pausa de ahorro de energía
● 03 = Query_Modes
Consulta los modos de ahorro de energía configurados en el dispositivo IO con toda la
información correspondiente de tiempo y energía.
Mediante el parámetro CMD_MODIFIER se detalla la información consultada:
– List_Energy_Saving_Modes
Lee todos los modos PROFIenergy soportados por el dispositivo IO.
– Get_Mode
Lee los datos del modo PROFIenergy seleccionado.
● 04 = PEM_Status
Consulta del modo de ahorro de energía adoptado realmente por el aparato de campo o por
el grupo.

Programación del PLC
Manual de programación y manejo, 11/2019

7393

Instrucciones
4.2 Instrucciones
● 05 = PE_Identity
Consulta los servicios PROFIenergy soportados por el dispositivo IO.
● 16 = Query_Measurement
Consulta datos energéticos del dispositivo IO.
Mediante el parámetro CMD_MODIFIER se detalla la información consultada:
– Get_Measurement_List
Lee todas las Measurement_IDs configuradas en el dispositivo IO.
– Get_Measurement_Values
Lee los valores energéticos medidos de las Measurement_IDs seleccionadas.

Comandos para distintas clases de aparatos
Los aparatos que pueden integrarse en conceptos PROFIenergy pueden dividirse en tres
clases, que son activadas por el controlador IO utilizando distintos comandos:
● Módulos E/S, actuadores, arrancadores de motor
Comandos soportados:
– Start_Pause, End_Pause
– Query_Modes, PEM_Status, PE_Identify
● Instrumentos de medida para magnitudes eléctricas
Comandos soportados:
– Query_Measurement
● Convertidores de frecuencia
Comandos soportados:
– Start_Pause, End_Pause
– Query_Modes, PEM_Status, PE_Identify
– Query_Measurement
También es posible consultar datos de magnitudes eléctricas que registran los
convertidores de frecuencia.

Indicadores de PE_CMD_CP
Indicadores de PE_CMD_CP
PE_CMD_CP se basa en el bloque de programa PNIO_RW_REC y proporciona todos los
indicadores de PNIO_RW_REC; consulte los indicadores del bloque PNIO_RW_REC.
Además, se muestran los siguientes indicadores específicos de PROFIenergy. Los
indicadores de error de STATUS solo son válidos en relación con ERROR = 1.
Tabla 4-427 Indicadores específicos de PE_CMD_CP
STATUS

Significado

Errores específicos del bloque
8081h

7394

Conflicto de longitud con CMD_PARAM y CMD_PARAM_LEN

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
STATUS

Significado

Errores específicos de PROFIenergy
FE01h

Service_Request_ID no válida

FE02h

Request_Reference no válida

FE03h

CMD_MODIFIER no válido

FE04h

Indicación no válida sobre la estructura de datos de un comando (Data_Structure_Identifier_RQ) en el tele‐
grama para el registro PROFIenergy de escritura

FE05h

Indicación no válida sobre la estructura de datos de un comando (Data_Structure_Identifier_RS) en el telegra‐
ma para el registro PROFIenergy de lectura

FE06h

No se soporta el modo de ahorro de energía (PE_Mode_ID)

FE07h

La respuesta es más larga que la longitud de transferencia máx.

FE08h

Número de comandos no válido

FE09h

Block Type no válido (consulte el encabezado del telegrama)

FE0Ah

Block Length no válida (consulte el encabezado del telegrama)

FE0Bh

Block Version no válida (consulte el encabezado del telegrama)

FE50h

No hay ningún modo de ahorro de energía adecuado (PE_Mode_ID)

FE51h

No se soporta el valor de PAUSE_TIME

FE52h

No se soporta PE_Mode_ID

Consulte los detalles relacionados con los parámetros de los errores específicos de
PROFIenergy en el capítulo AUTOHOTSPOT.

Datos de respuesta
Estructura de los datos de respuesta
Las tablas siguientes muestran la estructura del registro (80A0h) de los datos de respuesta de
PE_START_END_CP y PE_CMD_CP.
La tabla siguiente muestra una sinopsis de la estructura del registro de los datos de respuesta
devueltos de acuerdo con la especificación PROFIenergy. La composición del área "Service
Data Response" se describe a continuación para los diferentes comandos PROFIenergy.
Tabla 4-428 Estructura de los datos de respuesta
Definiciones de bloque Atributos

Valor

Block Header

0801h

BlockType
BlockLength

Tipo de datos
Unsigned16
Unsigned16

BlockVersionHigh

01h

Unsigned8

BlockVersionLow

00h

Unsigned8

Programación del PLC
Manual de programación y manejo, 11/2019

Descripción
Longitud de telegrama (sin los
campos "BlockType" y "Block‐
Length")

7395

Instrucciones
4.2 Instrucciones
Definiciones de bloque Atributos

Valor

Tipo de datos

Descripción

Response Header

01h...FFh

Unsigned8

01h: Start_Pause

Service_Request_ID

02h: End_Pause
03h: Query_Modes
04h: PEM_Status
05h: PE_Identify
06h...09h: - reservado 10h: Query_Measurement
11h...CF: - reservado D0h...FFh: específico del fabri‐
cante

Service Header Res‐
ponse

Request_Reference

01h...FFh

Unsigned8

Estado

01h...FFh

Unsigned8

Número de identificación de la
consulta (reflejado en la res‐
puesta del dispositivo IO)
00h: - reservado 01h: listo
02h: listo con error
03h: datos incompletos
04h...CFh: - reservado D0h...FFh: en función de la Ser‐
vice_Request_ID

Data_Structure_Identifier_RS

01h...FFh

Unsigned8

00h: - reservado 01h...FFh: estructura de datos
en función de la Service_Re‐
quest_ID
FFh: error

Service Data Respon‐
se

Datos de respuesta del disposi‐
tivo IO
En función del comando PRO‐
FIenergy correspondiente (des‐
crito a continuación)

Significado de "Service Data Request" y "Service Data Response"
Los apartados siguientes explican los valores de parámetros para los diferentes comandos
PROFIenergy en las consultas del controlador IO al dispositivo IO (Service Data Request) y la
estructura de los datos de respuesta del dispositivo IO (Service Data Response).
● Service Data Request
Valores de parámetros en la consulta del controlador IO
● Service Data Response
Estructura de los datos de respuesta del dispositivo IO

7396

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Comando PROFIenergy "Start_Pause"
● Service Data Request
– CMD = 01
– CMD_MODIFIER = 00
– CMD_PARA_LEN = 04
– CMD_PARA = puntero Any hacia el valor de "Pause_Time" (tipo de datos "TIME")
Temporizador IEC en incrementos de 1 ms, entero con signo
Valor: T#-24D_20H_31M_23S_648MS a T#24D_20H_31M_23S_647MS
● Service Data Response
Parámetro

Valor

Tipo de datos

PE_Mode_ID *

01h...FFh

Unsigned8

- reservado -

00h

Unsigned8

* Número de identificación del modo de ahorro de energía

Comando PROFIenergy "End_Pause"
● Service Data Request
– CMD = 02
– CMD_MODIFIER = 00
– CMD_PARA_LEN = 00
– CMD_PARA = irrelevante
● Service Data Response
Parámetro

Valor

Time_to_operate *

Tipo de datos
Unsigned32

* Tiempo previsto para conmutar el dispositivo PROFIenergy a "operativo" (ready_to_operate)

Comando PROFIenergy "Query_Modes" – List_Energy_Saving_Modes
● Service Data Request
– CMD = 03
– CMD_MODIFIER = 01
– CMD_PARA_LEN = 00
– CMD_PARA = irrelevante
● Service Data Response

Programación del PLC
Manual de programación y manejo, 11/2019

7397

Instrucciones
4.2 Instrucciones

Parámetro

Valor

Tipo de datos

Number_of_PE_Mode_IDs *

01h

Unsigned8

PE_Mode_IDs

Unsigned8-Array of Number_of_PE_Mo‐
de_IDs (Unique ID for mode)

* Número de modos de ahorro de energía

Comando PROFIenergy "Query_Modes" – Get_Mode
● Service Data Request
– CMD = 03
– CMD_MODIFIER = 02
– CMD_PARA_LEN = 01
– CMD_PARA = puntero Any hacia el valor de PE_MODE_ID (unsigned8)
● Service Data Response
Parámetro

Valor

Tipo de datos

PE_Mode_ID

01h...FFh

Unsigned8

PE_Mode_Attributes *

00h...01h

Unsigned8

Time_min_Pause

Unsigned32

Time_to_Pause

Unsigned32

Time_to_operate

Unsigned32

Time_min_length_of_stay

Unsigned32

Time_max_length_of_stay

Unsigned32

Mode_Power_Consumption

Float32

Energy_Consumption_to_pause

Float32

Energy_Consumption_to_operate

Float32

* Codificación del bit 0:
0 = solo están disponibles valores medidos de tiempo y energía estáticos.
1 = están disponibles valores medidos de tiempo y energía dinámicos.
Bits 1...7: reservados

Comando PROFIenergy "PEM_Status"
● Service Data Request
– CMD = 04
– CMD_MODIFIER = 00
– CMD_PARA_LEN = 00
– CMD_PARA = irrelevante
● Service Data Response

7398

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro

Valor

Tipo de datos

PE_Mode_ID_Source *

00h
01h...FEh
FFh

Unsigned8

PE_Mode_ID_Destination *

00h
01h...FEh
FFh

Unsigned8

Time_to_operate

Unsigned32

Remaining_time_to_destination

Unsigned32

Mode_Power_Consumption

Float32

Energy_Consumption_to_Destination

Float32

Energy_Consumption_to_operate

Float32

* Valores posibles de "PE_Mode_ID_Source" y "PE_Mode_ID_Destination":
00h: PE_Power_off (fuente de alimentación desconectada)
01h...FEh: libremente configurable
FFh: PE_Ready_to_operate (operativo)

Comando PROFIenergy "PE_Identify"
● Service Data Request
– CMD = 05
– CMD_MODIFIER = 00
– CMD_PARA_LEN = 00
– CMD_PARA = irrelevante
● Service Data Response
Parámetro

Valor

Tipo de datos

Count *

6

Unsigned8

Start_Pause **

01h

Unsigned8

End_Pause

02h

Unsigned8

Query_Modes

03h

Unsigned8

PEM_Status

04h

Unsigned8

PE_Identify

05h

Unsigned8

Query_Measurement ***

10h

Unsigned8

* Número de comandos PROFIenergy soportados
** Service_Request_ID del primer comando PROFIenergy soportado
*** Service_Request_ID del último comando PROFIenergy soportado

Programación del PLC
Manual de programación y manejo, 11/2019

7399

Instrucciones
4.2 Instrucciones

Comando PROFIenergy "Query_Measurement" – Get_Measurement_List
● Service Data Request
– CMD = 16
– CMD_MODIFIER = 01
– CMD_PARA_LEN = 00
– CMD_PARA = irrelevante
● Service Data Response
Parámetro

Valor

Tipo de datos

Count *

Unsigned8

- reservado -

Unsigned8

Measurement_ID **

Unsigned16

Accuracy_Domain 1

Unsigned8

Accuracy_Class

Unsigned8

Range

2

Float32

3

…
Measurement_ID ***

Unsigned16

Accuracy_Domain 1

Unsigned8

Accuracy_Class

Unsigned8

Range

2

3

Float32

* Número de Measurement_IDs
** Primera Measurement_ID soportada
*** Última Measurement_ID soportada
1

Dominio de precisión (rango 1...4):
0 = reservado
1 = porcentaje del rango de medición
2 = porcentaje del valor medido actual
3 = precisión conforme a IEC 61557‑12
4 = precisión conforme a EN 50470‑3 capítulo 8

2

Clase de precisión (rango 1...15):
0 = reservado
1 (0,01%) ... 15 (>20%)

3

Rango de medición si Accuracy_Domain = 1; de lo contrario, indefinido

Comando PROFIenergy "Query_Measurement" – Get_Measurement_Values
● Service Data Request
– CMD = 16
– CMD_MODIFIER = 02
– CMD_PARA_LEN = longitud de la estructura de datos en bytes
– CMD_PARA = puntero Any hacia una estructura de datos con la forma siguiente:

7400

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro

Valor

Tipo de datos

Count *

Unsigned8

- reservado -

Unsigned8

Measurement_ID **

Unsigned16

…
Measurement_ID ***

Unsigned16

* Número de Measurement_IDs
** Primer valor medido consultado
*** Último valor medido consultado

● Service Data Response
Parámetro

Valor

Count *

Unsigned8

- reservado Length_of_Structure

Tipo de datos
Unsigned8

0002h...FFFFh

Unsigned16

Measurement_Data_Structure_ID

1 = valor simple

Unsigned8

Measurement_ID **

00h...FFh

Unsigned16

1 = válido

Unsigned8

Status_of_Measurement_Value

2 = no disponible
3 = no disponible
temporalmente
Transmission_Data_Type

Float32

End_of_demand

Unsigned32 o Unsigned16

Length_of_Structure

Unsigned16

Measurement_Data_Structure_ID

Unsigned8

Measurement_ID ***

Unsigned16

Status_of_Measurement_Value

Unsigned8

Transmission_Data_Type

Float32

End_of_demand

Unsigned32 o Unsigned16

* Número de Measurement_IDs
** Primer valor medido consultado
*** Último valor medido consultado

Consulte también
Explicación de los parámetros formales de PE_START_END_CP (Página 7388)

Programación del PLC
Manual de programación y manejo, 11/2019

7401

Instrucciones
4.2 Instrucciones

PE_I_DEV_CP
Significado y llamada - PE_I_DEV_CP
Significado y funcionamiento
El bloque de programa PE_I_DEV_CP se utiliza en el dispositivo PROFIenergy, donde ejecuta
los comandos PROFIenergy del controlador IO. Los registros enviados por el controlador IO
(80A0h) son transmitidos a PE_I_DEV_CP por el firmware del CP. Los datos PROFIenergy del
dispositivo IO, a su vez, son puestos a disposición del controlador IO en forma de respuesta
por parte de PE_I_DEV_CP mediante el registro PROFIenergy (80A0h).
Los datos de respuesta de PE_I_DEV_CP se generan mediante las funciones
complementarias FC 0 a FC 8, consulte el capítulo AUTOHOTSPOT.

Interfaz de llamada en representación FUP
3(B,B'(9B&3
:25'

&3/$''5

&0'

,17

%22/

5(6(7

&0'B02',),(5

,17

%22/

9$/,'

&0'B3$5$
,1'(;

$1<

$1<
,17

1(:

%22/

(5525

%22/

67$786

:25'

5(63216(B'$7$

$1<

Explicación de los parámetros formales de PE_I_DEV_CP
Explicación de los parámetros formales de PE_I_DEV_CP
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

CPLADDR

INPUT

WORD

Dirección inicial del módulo del CP

RESET

INPUT

BOOL

I, Q, M, D, L, const.

Resetea el procesamiento del bloque de pro‐
grama.
NEW se pone a 0.

7402

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

VALID

INPUT

BOOL

Cuando se han escrito los datos de respues‐
ta en el área de memoria correspondiente del
dispositivo IO, el programa de usuario debe
poner VALID = 1. Seguidamente, el bloque
de programa pone los datos a disposición del
controlador IO.
NEW se pone a 0.

CMD

OUTPUT

INT

● 01: Start_Pause

ID de servicio del comando PROFIenergy

● 02: End_Pause
● 03: Query_Modes
● 04: PEM_Status
● 05: PE_Identity
● 16: Query_Measurement
CMD_
MODIFIER

OUTPUT

INT

● Modificador para
Start_Pause: 00
● Modificador para
End_Pause: 00
● Query_Modes,
modificador:
–

01 (List_Energy_
Saving_Modes)

–

02 (Get_Mode)

● Modificador para
PEM_Status: 00
● Modificador para
PE_Identity: 00
● Query_Measurement,
modificador:

CMD_PARA

OUTPUT

ANY

–

01 (Get_Measurement
_List)

–

02 (Get_Measurement
_Values)

Modificador de los comandos PROFIenergy
Significado de los modificadores para coman‐
dos:
● Comando "Query_Modes",
modificador:
–

01 (List_Energy_Saving_Modes):
lee todos los modos PROFIenergy
soportados

–

02 (Get_Mode):
lee los datos del modo PROFIenergy
seleccionado

● Comando "Query_Measurement",
modificador:
–

01 (Get_Measurement_List):
lee todas las Measurement_IDs
configuradas.

–

02 (Get_Measurement_Values):
lee los valores medidos de las
Measurement_IDs seleccionadas.

Puntero Any hacia los parámetros para los
siguientes modificadores de comandos (con‐
sulte el parámetro CMD_MODIFIER):
● Para "Get_Mode":
PE_Mode_ID (ID del modo de ahorro de
energía)longitud = 1
● Para
"Get_Measurement_Values":valores
medidos de las Measurement_IDs
longitud = máx. 236 bytes (telegrama
completo del comando del controlador sin
encabezado)

INDEX

OUTPUT

INT

Programación del PLC
Manual de programación y manejo, 11/2019

Número del registro PROFIenergy (80A0h)

7403

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

NEW

OUTPUT

BOOL

Descripción

0: procesamiento todavía no ini‐ Indicadores del estado de procesamiento del
ciado, finalizado o cancelado
bloque de programa
1: procesamiento en curso

ERROR

STATUS

OUTPUT

OUTPUT

BOOL

0: -

Indicador de error

1: error

Ver el significado en relación con el paráme‐
tro STATUS en Indicadores de
PE_I_DEV_CP (Página 7404).

WORD

Indicador de estado
Ver el significado en relación con el paráme‐
tro ERROR en Indicadores de
PE_I_DEV_CP (Página 7404).

RESPONSE
_DATA

INOUT

ANY

Consulte los "datos de respues‐ Puntero hacia el área de datos de respuesta
ta" del bloque de programa
del dispositivo IO (telegrama de respuesta
completo incluido encabezado).
El área de datos debe coincidir con la de los
bloques de programa complementarios FC 0
- FC 8 (parámetro"DATA_ERRORRSP").
Tamaño recomendado: mín. 244 bytes. Si el
área de datos es demasiado pequeña solo se
transferirán los datos de los bytes configura‐
dos.

Indicadores de PE_I_DEV_CP
Indicadores de PE_I_DEV_CP
PE_I_DEV_CP se basa en el bloque de programa PNIO_RW_REC y proporciona todos los
indicadores de PNIO_RW_REC; consulte los indicadores del bloque PNIO_RW_REC.

Bloques de programa complementarios para PE_I_DEV_CP
Vista general de los FCs
Función
Los bloques de programa complementarios de FC 0 a FC 8 soportan la preparación de datos
de respuesta que PE_I_DEV_CP pone a disposición del controlador:
● Hay una función separada para los datos de respuesta de cada bloque de programa
PROFIenergy (FC 1 - FC 8).
● FC 0 genera una respuesta negativa común para todos los comandos PROFIenergy.
Los FCs se llaman en el programa de usuario. En STEP 7 V5.5 se proporcionarán en la librería
estándar, en la carpeta "PROFIenergy".

7404

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Los FCs tienen algunos parámetros comunes y otros individuales para cada una. Algunos de
los parámetros comunes de los FCs se interconectan con parámetros de PE_I_DEV_CP. En
algunos de los parámetros de entrada individuales de los FCs, el usuario introduce los datos
de respuesta en forma de texto claro o los almacena en el área de memoria del dispositivo IO.

Vista general de los FCs
Se proporcionarán los siguientes bloques de programa complementarios:
Tabla 4-429 Vista general de los FCs complementarios
Número

Nombre

FC 0

PE_ERROR_RSP

FC 1

PE_START_RSP

FC 2

PE_END_RSP

FC 3

PE_LIST_MODES_RSP

FC 4

PE_GET_MODE_RSP

FC 5

PE_PEM_STATUS_RSP

FC 6

PE_IDENTIFY_RSP

FC 7

PE_MEASUREMENT_LIST_RSP

FC 8

PE_MEASUREMENT_VALUE_RSP

Interconexión de los FCs con PE_I_DEV_CP
Interconexión de los FCs con el bloque de programa PE_I_DEV_CP
3(B,B'(9B&3

%ORTXHVGHSURJUDPD
)&)&

&3/$''5 ,1
3DU£PHWURVHVSHF¯ILFRV
GH ,1 &0'

5(6(7 ,1
8VXDULR

&0'B3$5$ 287
,1'(; 287

287 (5525

(5525 287

287 67$786

67$786 287

,1 $&7,9$7(
,1 9$/,'

,1287 5(63216(B'$7$
287 &0'
8VXDULR

287 &0'B02',),(5

8VXDULR

287 1(:

(YDOXDFLµQ\UHVSXHVWDSRUSDUWHGHOXVXDULR

Programación del PLC
Manual de programación y manejo, 11/2019

8VXDULR

8VXDULR

9$/,' 287
'$7$B(5525563 ,1287
&0' ,1
&0'B02',),(5 ,1
1(: ,1

,QWURGXFFLµQSRUSDUWHGHOXVXDULR

7405

Instrucciones
4.2 Instrucciones
Figura 4-75

Interconexión de los FCs con PE_I_DEV_CP

Nota
La interconexión de los bloques de programa es obligatoria
PE_I_DEV_CP debe interconectarse con FC 0...FC 8 en los parámetros con fondo azul claro
que están asignados a los parámetros correspondientes de los FCs mediante flechas rojas.

Parámetros comunes de los FCs
Parámetros comunes de los bloques de programa complementarios FC 0 - FC 8
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

INPUT

BOOL

Hace que el bloque copie los parámetros de
entrada en el área de datos "DA‐
TA_ERRORRSP" cuando hay un flanco as‐
cendente. Seguidamente, el bloque lo rese‐
tea.

Parámetros de entrada
ACTIVATE

El usuario debe activarlo en un plazo de 10
segundos después de haberse detectado un
flanco ascendente en PE_I_DEV_NEW.
PE_I_DEV_NEW

INPUT

BOOL

Debe interconectarse con el parámetro de
salida NEW de PE_I_DEV_CP.

CMD

INPUT

INT

Debe interconectarse con el parámetro de
salida CMD de PE_I_DEV_CP.

CMD_MODIFIER

INPUT

INT

Debe interconectarse con el parámetro de
salida CMD_MODIFIER de PE_I_DEV_CP.

OUTPUT

ANY

Puntero hacia el área de datos en la que se
almacenan los datos de respuesta (telegra‐
ma de respuesta completo incluido encabe‐
zado).

El bloque solo se procesa cuando hay un 1.

Parámetros de salida
DATA_ERRORRSP

Debe interconectarse con el parámetro de
salida RESPONSE_DATA de
PE_I_DEV_CP.
Tamaño recomendado: mín. 244 bytes.
VALID

ERROR

OUTPUT

OUTPUT

BOOL

BOOL

0: -

Es activado por el bloque.

1: ningún error

Debe interconectarse con el parámetro de
entrada VALID de PE_I_DEV_CP.

0: ningún error

Indicador de error

1: error
STATUS

OUTPUT

WORD

0: ningún error

Indicador de estado
80B1h: error en la indicación de ANY (p. ej.
área errónea)

7406

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros individuales de los FCs
Parámetros individuales de FC 0 a FC 8
A continuación se describen los parámetros individuales de los FCs.

PE_ERROR_RSP
Genera una respuesta negativa si el comando PROFIenergy solicitante no se soporta en
general o temporalmente. La respuesta negativa es independiente del comando solicitante.
Tabla 4-430 Parámetros individuales de FC 0 PE_ERROR_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

ERROR_CODE

INPUT

BYTE

Número de error

PE_START_RSP
Inicia una pausa de ahorro de energía. Genera la respuesta al comando "Start_Pause".
Devuelve el modo de ahorro de energía que adopta el dispositivo.
Tabla 4-431 Parámetros individuales de FC 1 PE_START_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

PE_Mode_ID

INPUT

BYTE

ID del modo de ahorro de energía que adopta
el dispositivo o grupo.

Notificación de la PE_Mode_ID del modo de ahorro de energía que ha adoptado el aparato de
campo o el grupo.

PE_END_RSP
Genera la respuesta al comando "End_Pause".
Tabla 4-432 Parámetros individuales de FC 2 PE_END_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

Time_to_Operate

INPUT

DWORD

Tiempo necesario para cambiar del modo de
ahorro de energía actual a "operativo"
(Ready_to_Operate).

PE_LIST_MODES_RSP
Genera la respuesta al comando Query_Modes" > modificador "List_Modes" (lista de los
modos de ahorro de energía soportados).

Programación del PLC
Manual de programación y manejo, 11/2019

7407

Instrucciones
4.2 Instrucciones
Las IDs de los modos de ahorro de energía deben especificarse en el programa de usuario.
Tabla 4-433 Parámetros individuales de FC 3 PE_LIST_MODES_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

Number_of_PE_Mode_IDs

INPUT

BYTE

Número de modos de ahorro de energía sopor‐
tados

PE_Mode_ID

INPUT

ANY

● 00h
● 01h...FEh
● FFh

Puntero hacia el área en el que están almace‐
nados los modos de ahorro de energía.
El usuario debe almacenar aquí las IDs de los
modos de ahorro de energía. La ID de un modo
de ahorro de energía se configura en formato
Unsigned8. Rango admisible: de 1 a 254 bytes.

Si los aparatos de un grupo reaccionan de forma distinta en pausas de diferente longitud, es
posible establecer diferentes modos de ahorro de energía (PE_Mode). Los diferentes modos
de ahorro de energía reciben una PE_Mode_ID distinta.
Valore posibles para "PE_Mode_ID":
● 00h: PE_Power_off (fuente de alimentación desconectada)
● 01h...FEh: libremente configurable o específico del fabricante
● FFh: PE_Ready_to_operate (operativo)

PE_GET_MODE_RSP
Genera la respuesta al comando "Query_Modes" > Modifier "Get_Mode".
Tabla 4-434 Parámetros individuales de FC 4 PE_GET_MODE_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

PE_Mode_ID

INPUT

BYTE

ID de modo de ahorro de energía que se utiliza
actualmente

Time_Min_Pause *

INPUT

Unsigned32

Duración mín. de pausa para este modo de
ahorro de energía PE. Es la suma de los tres
parámetros:
● Time_to_Pause
● Time_to_operate
● Time_min_length_of_stay

Time_to_Pause *

INPUT

Unsigned32

Duración desde el flanco START hasta alcan‐
zar el modo de ahorro de energía solicitado

Time_to_operate *

INPUT

Unsigned32

Tiempo de conexión máx. hasta
PE_ready_to_operate
Time_to_operate puede utilizarse directamente
para los cálculos correspondientes. El valor
puede ser bien un valor MAX estático bien ser
calculado por el dispositivo PE.

Time_min_length_of_stay *

7408

INPUT

Unsigned32

Duración mínima de permanencia del dispositi‐
vo PE en este PE_Mode.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

Time_max_length_of_stay *

INPUT

Unsigned32

Duración máxima de permanencia del disposi‐
tivo PE en este PE_Mode.

Mode_Power
_Consumption **

INPUT

Float32

Consumo de energía en el PE_Mode actual
[kW]

Energy_Consumption
_to_pause **

INPUT

Float32

Consumo de energía de PE_ready_to_operate
hasta el PE_Mode actual [kWh]

Energy_Consumption
_to_operate **

INPUT

Float32

Consumo de energía del PE_Mode actual hasta
PE_ready_to_operate [kWh]

* El perfil PROFIenergy no especifica ningún formato de tiempo no válido.
Si la duración es ilimitada es posible indicar el valor máx. FFFFFFFFh.
Si la duración es cero es posible utilizar 00h.
** Si no se ha definido ningún valor de consumo de energía es posible indicar 0,0 (Float32).

PE_PEM_STATUS_RSP
Genera la respuesta al comando "PEM_STATUS".
Tabla 4-435 Parámetros individuales de FC 5 PE_PEM_STATUS_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

PE_Mode_ID_Source

INPUT

BYTE

ID del modo de ahorro de energía que se ha
adoptado realmente

● 00h
● 01h...FEh
● FFh

PE_Mode_ID_Destination

INPUT

BYTE

● 00h
● 01h...FEh

ID del modo de ahorro de energía especificado
por el controlador

● FFh
Time_to_operate *

INPUT

Unsigned32

Tiempo de conexión máx. hasta
PE_ready_to_operate
Time_to_operate puede utilizarse directamente
para los cálculos correspondientes. El valor
puede ser bien un valor MAX estático bien ser
calculado por el dispositivo PE.

Remaining_time_to
_destination *

INPUT

Unsigned32

Opcional: tiempo restante hasta el PE_Mode
solicitado. Valor dinámico o valor MAX estático

Mode_Power
_Consumption **

INPUT

Float32

Consumo de energía en el PE_Mode actual
[kW]

Energy_Consumption
_to_Destination **

INPUT

Float32

Consumo de energía hasta el PE_Mode solici‐
tado [kWh]

Energy_Consumption
_to_operate **

INPUT

Float32

Consumo de energía del PE_Mode actual hasta
PE_ready_to_operate [kWh]

* El perfil PROFIenergy no especifica ningún formato de tiempo no válido.
Si la duración es ilimitada es posible indicar el valor máx. FFFFFFFFh.
Si la duración es cero es posible utilizar 00h.
** Si no se ha definido ningún valor de consumo de energía es posible indicar 0,0 (Float32).

Programación del PLC
Manual de programación y manejo, 11/2019

7409

Instrucciones
4.2 Instrucciones
Valore posibles para "PE_Mode_ID_Source" y "PE_Mode_ID_Destination":
● 00h: PE_Power_off (fuente de alimentación desconectada)
● 01h...FEh: libremente configurable o específico del fabricante
● FFh: PE_Ready_to_operate (operativo)

PE_IDENTIFY_RSP
Genera la respuesta al comando "PE_Identify".
El usuario debe indicar los comandos PROFIenergy que se soportan.
Tabla 4-436 Parámetros individuales de FC 6 PE_IDENTIFY_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

Count

INPUT

BYTE

0...6

Número de comandos PROFIenergy soporta‐
dos

Start_Pause

INPUT

BOOL

0...1

● 1: el comando se soporta

End_Pause

INPUT

BOOL

0...1

● 1: el comando se soporta

● 0: el comando no se soporta
● 0: el comando no se soporta
Query_Modes

INPUT

BOOL

0...1

● 1: el comando se soporta
● 0: el comando no se soporta

PEM_Status

INPUT

BOOL

0...1

● 1: el comando se soporta
● 0: el comando no se soporta

PEM_Identify

INPUT

BOOL

0...1

● 1: el comando se soporta
● 0: el comando no se soporta

Query_Measurement

INPUT

BOOL

0...1

● 1: el comando se soporta
● 0: el comando no se soporta

7410

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

PE_MEASUREMENT_LIST_RSP
Genera la respuesta al comando "Query_Measurement" > Modifier "Get_Measurement_List".
Tabla 4-437 Parámetros individuales de FC 7 PE_MEASUREMENT_LIST_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

Count

INPUT

BYTE

Número de IDs de valor medido soportadas
(Measurement_ID)

Measurement_List

INPUT

ANY

Puntero hacia el área de datos con las IDs de
valor medido soportadas.
El usuario debe almacenar las IDs de valor me‐
dido en esta área de datos.
Es posible transferir un máximo de 29 IDs de
valor medido por telegrama.
Consulte la estructura de la matriz en el capítulo
AUTOHOTSPOT > "Query_Measurement" –
Get_Measurement_List.

PE_MEASUREMENT_VALUE_RSP
Genera la respuesta al comando "Query_Measurement" > Modifier
"Get_Measurement_Values".
Tabla 4-438 Parámetros individuales de FC 8 PE_MEASUREMENT_VALUE_RSP
Parámetro

Declaración

Tipo de datos Valores posi‐
bles

Descripción

Count

INPUT

BYTE

Número de Measurement_Values soportados

Measurement_Values

INPUT

ANY

Puntero hacia el área de datos de los valores
medidos (Measurement_Values).
El usuario debe almacenar los valores medidos
en esta área de datos.
Es posible transferir un máximo de 116 valores
medidos por telegrama.
Consulte la estructura de la matriz en el capítulo
AUTOHOTSPOT > "Query_Measurement" –
Get_Measurement_List.

Programación del PLC
Manual de programación y manejo, 11/2019

7411

Instrucciones
4.2 Instrucciones

PE_DS3_WRITE_ET200S_CP
Significado y llamada - PE_DS3_WRITE_ET200_CP
Significado y funcionamiento
En la CPU del CP 300 funcionando como controlador PROFIenergy se utiliza
PE_DS3_WRITE_ET200_CP para transferir ajustes del comportamiento de conmutación de
los módulos de potencia a un ET 200S. Es posible transferir el comportamiento de
conmutación para un máximo de 8 slots (en este caso: módulos de potencia).
PE_DS3_WRITE_ET200_CP no es un bloque de programa PROFIenergy.

Interfaz de llamada en representación FUP
3(B'6B:5,7(B(76B&3
:25'

&3/$''5

%86<

%22/

%22/

(1$%/(

'21(

%22/

:25'

,'

(5525

%22/

,17

6/27B12B

67$786

:25'

,17

)81&B


,17

6/27B12B

,17

)81&B

Explicación de los parámetros formales de PE_DS3_WRITE_ET200S_CP
Explicación de los parámetros formales de PE_DS3_WRITE_ET200_CP
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

CPLADDR

INPUT

WORD

Dirección inicial del módulo del CP

ENABLE

INPUT

BOOL

Con flanco ascendente comienza el procesa‐
miento del bloque de programa.

ID

INPUT

WORD

Dirección lógica del slot de encabezado del
dispositivo IO

SLOT_NO_1

INPUT

INT

Número de slot del primer módulo de poten‐
cia

7412

I, Q, M, D, L, const.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐ Valores posibles
tos

Descripción

FUNC_1

INPUT

INT

Definición del comportamiento de conmuta‐
ción para el módulo de potencia en relación al
inicio y fin de las pausas de ahorro de energía
● 0 (FALSE)
–

PAUSE_START:
no influye (el módulo de potencia
permanece conectado)

–

PAUSE_STOP:
vuelve a conectar el módulo de
potencia.

● 1 (TRUE)
–

PAUSE_START:
desconecta el módulo de potencia.

–

PAUSE_STOP:
vuelve a conectar el módulo de
potencia.

...

INPUT

INT

...

INPUT

INT

SLOT_NO_8

INPUT

INT

Número de slot del octavo módulo de poten‐
cia

FUNC_8

INPUT

INT

Consulte "FUNC_1"

BUSY

OUTPUT

BOOL

0: procesamiento todavía no ini‐ Indicador del estado de procesamiento del
ciado, finalizado o cancelado
bloque de programa
1: procesamiento en curso

DONE

OUTPUT

BOOL

0: 1: registro transferido correcta‐
mente

ERROR

OUTPUT

BOOL

0: -

El parámetro de estado indica si la petición se
ha desarrollado correctamente.
Indicador de error

1: error
STATUS

OUTPUT

WORD

Indicador de estado

Encontrará el significado de DONE, ERROR y STATUS en Indicadores de
PE_DS3_WRITE_ET200S_CP (Página 7413).

Indicadores de PE_DS3_WRITE_ET200S_CP
Indicadores de PE_DS3_WRITE_ET200_CP
PE_DS3_WRITE_ET200_CP se basa en el bloque de programa PNIO_RW_REC y
proporciona todos los indicadores de PNIO_RW_REC, consulte los indicadores del bloque
PNIO_RW_REC.

Programación del PLC
Manual de programación y manejo, 11/2019

7413

Instrucciones
4.2 Instrucciones

Instrucciones para enlaces programados
Sinopsis
Relación entre programación y configuración
Los enlaces en la interfaz SEND/RECEIVE, así como la configuración IP de un CP se
configuran con STEP 7 o bien mediante el programa de usuario durante el funcionamiento del
equipo S7. ¡En un CP no puede utilizarse una combinación de ambas variantes!

Principio de la configuración programada
Con una instrucción llamada en el programa de usuario se pueden transferir al CP datos de
configuración para enlaces de comunicación y la configuración IP (datos de sistema para CP).
%ORTXHGHGDWRVGHFRQILJXUDFLµQ
)%,3B&21),*

'DWRVGHVLVWHPD
SDUD&3
(QODFH
(QODFH

'DWRVGHFRQILJXUDFLµQ
WUDQVIHULGRVDO&3

(QODFHQ
QP£[ 

El DB de configuración puede cargarse en el CP en cualquier momento. Se sobrescriben los
enlaces y los datos de configuración (dirección IP, máscara de subred, router predeterminado,
servidor de reloj NTP y otros parámetros) que antes eran actuales.
A partir de los datos de configuración, el CP Ethernet reconoce que los enlaces de
comunicación deben configurarse a través del programa de usuario.
Nota
Las funciones sólo pueden ejecutarse si el nivel de protección de los módulos ha sido
configurado como "No bloqueado": Véase el cuadro de diálogo de propiedades del CP, ficha
"Opciones" (no con todos los CPs)
Además debe estar activada la opción "Crear dirección IP en el programa de usuario" (véase
el cuadro de propiedades del CP o de la interfaz Ethernet del CP, ficha "Configuración IP")

7414

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
A partir de los datos de configuración, el CP Ethernet reconoce que los enlaces de
comunicación deben configurarse a través del programa de usuario.
Nota
En cuanto el programa de usuario transfiere los datos de enlace a través de la instrucción
IP_CONFIG, la CPU pone el CP brevemente en modo STOP. El CP adopta los datos de
sistema (incluida la dirección IP) y los nuevos datos de enlace y los procesa en el arranque
(RUN).

Datos cuantitativos
En la instrucción IP_CONFIG pueden indicarse como máximo 64 enlaces. Sin embargo, el
factor determinante es el número máximo de enlaces soportados por el tipo de CP utilizado.

Particularidades/limitaciones
● Comprobación de coherencia solo en la configuración
La configuración de enlaces está vinculada a comprobaciones de coherencia, que para la
configuración programada no son posibles, o lo son de forma limitada.
● Configuración de enlace necesaria en el interlocutor
En la configuración de enlaces especificados se crea implícitamente el enlace para el
interlocutor, pero en la configuración programada esto no es posible. En este caso deben
configurarse los enlaces correspondientes para los interlocutores.
● Configuración del de protección IP
A través del nivel de protección IP existe la posibilidad de limitar la comunicación a través
del CP del equipo S7 local a interlocutores con direcciones IP específicas. Esta
parametrización también es aplicable para enlaces de comunicación programadas. Debe
desactivar por completo (ajuste predeterminado) la protección de acceso IP en la
configuración o autorizar los interlocutores.
● DHCP/DNS soportado
El direccionamiento IP es posible en la configuración programada también a través de
DHCP (y DNS para el servicio de correo electrónico)
En este caso, el uso de un servidor DHCP se define en la instrucción IP_CONFIG (no en la
configuración).
● Ninguna información de enlace durante la carga
Al cargar los datos de equipo S7 en la configuración no están contenidos los datos de la
configuración programada.
● Configuración de enlaces en CPs con varias interfaces
En CPs con varias interfaces (p. ej. con interfaz Gigabit), asegúrese, consultando el manual
de producto del CP, de que éste soporta la configuración de enlaces para ambas interfaces.
● PROFINET IO no es posible simultáneamente
Para dispositivos que deban funcionar como controlador PROFINET IO o dispositivo IO no
es posible la configuración de enlaces a través del FB55 aquí descrito.
● No utilizar la instrucción IP_CONFIG para uso del CP con enlaces S7 altamente disponibles
Si configura enlaces S7 altamente disponibles a través del CP, no debe utilizar la
instrucción IP_CONFIG para la configuración IP del CP.

Programación del PLC
Manual de programación y manejo, 11/2019

7415

Instrucciones
4.2 Instrucciones

Consulte también
IP_CONFIG para enlaces de comunicación programados (Página 7416)
Bloque de datos de configuración (Página 7421)

IP_CONFIG
IP_CONFIG para enlaces de comunicación programados
Descripción
La instrucción IP_CONFIG transmite al CP los datos de conexión especificados en un bloque
de datos (DB de configuración). El DB de configuración contiene todos los datos para
configurar las conexiones para la interfaz SEND/RECEIVE de un CP Ethernet.
Esta variante de las conexiones de comunicación programadas se puede utilizar como
alternativa a la configuración de conexiones con STEP 7.
Dependiendo del tamaño del DB de configuración, la transmisión al CP puede tener lugar en
varios segmentos. Por esta razón se tiene que llamar de nuevo una y otra vez la instrucción
hasta que esta señalice que se ha completado la transmisión con el bit DONE=1.

Llamada
Interfaz de llamada en representación FUP
,3B&21),*
%22/

$&7

'21(

%22/

:25'

/$''5

(5525

%22/

$1<

&21)B'%

67$786

:25'

,17

/(1

(;7B67$786

:25'

Nota
No utilizar la instrucción IP_CONFIG en caso de emplear un CP con conexiones S7 de alta
disponibilidad
Si configura conexiones S7 de alta disponibilidad a través del CP, no debe utilizar la instrucción
IP_CONFIG para la configuración IP del CP.

7416

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nota
Atender a un posible direccionamiento doble
Si desea utilizar la instrucción IP_CONFIG, deberá prestar una especial atención a la
asignación unívoca de las direcciones IP. Si se detecta una dirección duplicada, puede
suceder que el CP no se active en la red.

Consulte también
Sinopsis (Página 7414)
Bloque de datos de configuración (Página 7421)
Parámetros en el caso de IP_CONFIG (Página 7417)
Números de puerto reservados - IP_CONFIG (Página 7418)
Parámetros DONE, ERROR, STATUS (Página 7419)

Parámetros en el caso de IP_CONFIG
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la interfaz de
llamada de la instrucción "IP_CONFIG":
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

ACT

INPUT

BOOL,
TIMER,
COUN‐
TER

0,1

En el caso de una llamada de la instrucción con ACT =
1 se envía el DBxx al CP.

LADDR

INPUT

En el caso de una llamada de la instrucción con ACT =
0 solo se actualizan las indicaciones de estado DONE,
ERROR y STATUS.

WORD

Dirección inicial del módulo
Al configurar el CP con STEP 7 aparece la dirección
inicial del módulo en la tabla de configuración. Indique
aquí esta dirección.

CONF_DB

INPUT

ANY

El parámetro hace referencia a la dirección inicial del
área de datos de configuración en un bloque de datos
(tipo de datos: Byte).

LEN

INPUT

INT

Indicación de longitud en byte para el área de datos de
configuración.

DONE

OUTPUT

BOOL

0: 1: petición concluida
con transmisión de da‐
tos.

El parámetro indica si el área de datos de configuración
se ha transmitido completa.
Tenga en cuenta que, dependiendo del tamaño del área
de datos de configuración, la instrucción se tiene que
impulsar varias veces (en varios ciclos), hasta que la
indicación DONE=1 señaliza la finalización.
La tabla siguiente informa sobre el significado en rela‐
ción con los parámetros ERROR y STATUS.

Programación del PLC
Manual de programación y manejo, 11/2019

7417

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores

Descripción

ERROR

OUTPUT

BOOL

0: 1: caso de error

Indicador de error

STATUS

OUTPUT

WORD

La tabla siguiente informa sobre el significado en rela‐
ción con los parámetros DONE y STATUS.

Véase la tabla siguiente Indicador de estado
La tabla siguiente informa sobre el significado en rela‐
ción con los parámetros DONE y ERROR.

EXT_Status OUTPUT

WORD

En caso de una ejecución incorrecta de la petición, el
parámetro indica cual de los parámetros del DB de con‐
figuración se ha reconocido como causante del fallo.
Byte High: Índice del bloque de parámetros
Byte Low: Índice del subbloque dentro del bloque de
parámetros

Consulte también
IP_CONFIG para enlaces de comunicación programados (Página 7416)

Números de puerto reservados - IP_CONFIG
Números de puerto reservados
Los siguientes números de puertos locales están reservados; no los utilice para la
configuración de enlaces.
Tabla 4-439 Números de puerto reservados
Protocolo

Número de puerto

Servicio

TCP

20, 21

FTP

TCP

25

SMTP

TCP

80

HTTP

TCP

102

RFC1006

TCP

135

RPC-DCOM

TCP

502

ASA Application Protocol

UDP

161

SNMP_REQUEST

UDP

34964

PN IO

UDP

65532

NTP

UDP

65533

NTP

UDP

65534

NTP

UDP

65535

NTP

Consulte también
IP_CONFIG para enlaces de comunicación programados (Página 7416)

7418

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros DONE, ERROR, STATUS
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
Tabla 4-440 Códigos de condición IP_CONFIG
DONE

ERROR

STATUS

Significado

Indicaciones generales sobre la ejecución de la petición
1

0

0000H

Petición terminada sin errores.

0

0

8181H

Petición en curso

Errores que se han detectado en la interfaz entre la CPU y el CP.
0

1

80A4H

● Error de comunicación en el bus de comunicaciones
o bien
● Error de datos: No esta ajustado que la configuración se efectúe a través del
programa de usuario.

0

1

80B1H

La cantidad de datos a enviar supera el límite superior admisible para este servicio.
(Limite superior = 16 KB)

0

1

80C4H

Error de comunicación
El error se puede presentar temporalmente; por ello, es conveniente una repetición en el
programa de usuario.

0

1

80D2H

Error de configuración
El módulo utilizado no da soporte a este servicio.

Errores que se han detectado durante la evaluación de IP_CONFIG en la CPU o en la interfaz entre la CPU y el CP.
0

1

8183H

El CP no admite el número de registro de datos solicitado.

0

1

8184H

Error del sistema o tipo de parámetro no permitido. (tipo de datos del puntero ANY
CONF_DB no es correcto)
(actualmente sólo se acepta el tipo de datos bytes)

0

1

8185H

El valor del parámetro LEN es mayor que el CONF_DB menos la cabecera reservada (4
bytes) o la longitud indicada no es correcta.

0

1

8186H

Se ha detectado parámetro no permitido

0

1

8187H

Estado no válido de IP_CONFIG

El puntero ANY CONF_DB no hace referencia a ningún bloque de datos.
Es posible que se hayan sobrescrito datos en la cabecera del CONF_DB.
Errores adicionales que se han detectado en la interfaz entre la CPU y el CP.
0

1

8A01H

La indicación de estado en el registro de datos leído no es válida (valor >= 3).

0

1

8A02H

No existe ninguna petición en curso en el CP. Sin embargo, el IP_CONFIG estaba es‐
perando a un acuse para la petición en curso.

0

1

8A03H

No existe ninguna petición en curso en el CP y el CP no está listo. El IP_CONFIG ha
iniciado una primera petición para leer el registro de datos.

0

1

8A04H

No existe ninguna petición en curso en el CP y el CP no está listo. Sin embargo, el
IP_CONFIG estaba esperando a un acuse para la petición en curso.

0

1

8A05H

Existe una petición en curso, sin embargo, no se ha producido el acuse. Sin embargo, el
IP_CONFIG ha iniciado una primera petición para leer el registro de datos.

Programación del PLC
Manual de programación y manejo, 11/2019

7419

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8A06H

Una petición ha terminado. Sin embargo, el IP_CONFIG ha iniciado una primera petición
para leer el registro de datos.

Errores que se han detectado durante las evaluaciones del IP_CONFIG en el CP.
0

1

8B01H

0

1

8B02H

Error de comunicación
No se ha podido transmitir el DB.
Error de parámetro
Bloque de parámetros doble

0

1

8B03H

Error de parámetro
El subbloque en el bloque de parámetros no está permitido.

0

1

8B04H

Error de parámetro
La longitud indicada en la instrucción no coincide con la longitud de los bloques de
parámetros/subbloques.

0

1

8B05H

Error de parámetro
La longitud del bloque de parámetros no es válida.

0

1

8B06H

Error de parámetro
La longitud del subbloque no es válida.

0

1

8B07H

Error de parámetro
La ID del bloque de parámetros no es válida.

0

1

8B08H

Error de parámetro
La ID del subbloque no es válida.

0

1

8B09H

Error del sistema
El enlace no existe

0

1

8B0AH

Error de datos
El contenido del subbloque no es correcto.

0

1

8B0BH

Error de estructura
Un subbloque aparece por duplicado.

0

1

8B0CH

Error de datos

0

1

8B0DH

Error de datos

0

1

8B0EH

Error de datos / error de estructura

0

1

8B0FH

Error del sistema

El bloque de parámetros no contiene todos los parámetros necesarios.
El CONF_DB contiene ningún bloque de parámetros para los datos de sistema.
El tipo de CONF_DB no es válido.
El CP no dispone de suficientes recursos para poder procesar el CONF_DB completa‐
mente.
0

1

8B10H

Error de datos

0

1

8B11H

Error de datos

0

1

8B12H

No esta ajustado que la configuración se efectúe a través del programa de usuario.
El tipo indicado del bloque de parámetros no es válido.
Error de datos
Se ha indicado una cantidad excesiva de enlaces (o bien en total o demasiados de un tipo
determinado; por ejemplo, sólo se permite una conexión de correo electrónico).
0

1

8B13H

Error interno del CP

0

1

8B14H

El nivel de protección activo no permite la realización del cambio.

7420

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

Errores adicionales que se han detectado en las interfaces del programa a nivel interno de la CPU (errores de instrucción del
sistema).
0

1

8F22H

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

0

1

8F23H

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado corto).

0

1

8F24H

Error de área al leer un parámetro.

0

1

8F25H

Error de área al escribir un parámetro.

0

1

8F28H

Error de alineación al leer un parámetro.

0

1

8F29H

Error de alineación al escribir un parámetro.

0

1

8F30H

El parámetro está en el 1er. bloque de datos actual protegido de escritura.

0

1

8F31H

El parámetro está en el segundo bloque de datos actual protegido de escritura.

0

1

8F32H

El parámetro contiene un número de DB demasiado alto.

0

1

8F33H

Error de número de DB

0

1

8F3AH

El área de destino no se ha cargado (DB).

0

1

8F42H

Retardo en acuse al leer un parámetro del área de periferia.

0

1

8F43H

Retardo en acuse al escribir un parámetro en el área de periferia.

0

1

8F44H

Está bloqueado el acceso a un parámetro a leer para el procesamiento de la instrucción.

0

1

8F45H

Está bloqueado el acceso a un parámetro a escribir para el procesamiento de la instruc‐
ción.

0

1

8F7FH

Error interno
Se ha detectado p. ej. referencia ANY no admisible.

Consulte también
IP_CONFIG para enlaces de comunicación programados (Página 7416)

Bloque de datos de configuración
Bloque de datos de configuración (CONF_DB)
Significado
El bloque de datos de configuración (CONF_DB) contiene todos los datos de enlace y
configuración (dirección IP, máscara de subred, router predeterminado, servidor de reloj NTP
y otros parámetros) para un CP Ethernet. El bloque de datos de configuración se transfiere al
CP con la instrucción IP_CONFIG.

Programación del PLC
Manual de programación y manejo, 11/2019

7421

Instrucciones
4.2 Instrucciones

Composición/estructura de datos
En la siguiente representación puede observar:
● La estructuración en bloques de parámetros y subbloques
– Cada enlace y, en especial, los datos de sistema se describen mediante un bloque de
parámetros de idéntica estructura.
– Los distintos parámetros se tipifican mediante subbloques.
● Área offset
El CONF_DB puede comenzar en cualquier punto dentro de un bloque de datos a través de
un área offset. La única condición es que la dirección (o bien el offset) sea par.
%ORTXHGHGDWRV
GHFRQILJXUDFLµQ
UHDRIIVHWQ
&21)B'%
,GHQWLILFDGRUGH'%
'DWRVGHVLVWHPDSDUD&3

%ORTXHGHSDU£PHWURVSDUDGDWRVGHVLVWHPD
FRQH[LµQGH&3DODUHG \HQODFHV
7LSR
,' FRQGDWRVGHVLVWHPD 

(QODFH
(QODFH

1¼PHURBGHBVXEEORTXHV

6XEEORTXH

6XEEORTXH

3DU£PHWURV
LQGLYLGXDOHV

6XEEORTXH
(QODFHQ

6XEEORTXHQ




①
②

Los bloques de parámetros se describen a continuación en Bloque de parámetros para datos de sistema (configu‐
ración IP) (Página 7422)
Los tipos de subbloque se describen a continuación en Bloques de parámetros para tipos de enlaces (Página 7426)

Bloque de parámetros para datos de sistema (configuración IP)
Significado
A continuación encontrará el bloque de parámetros relevante para la configuración IP del CP
para datos de sistema y los subbloques que deben indicarse en él.
Dependiendo de cada caso, no son necesarios todos los tipos de subbloque (véase la tabla
para más información).

7422

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Estructura
Para los CPs con varias interfaces, la estructura de bloque de parámetros descrita a
continuación sólo es aplicable para la interfaz PROFINET.
● Tipo = 0
● ID = 0
● Número_subbloques = n
● Subbloque 1
● Subbloque 2
● Subbloque n
...

Subbloques utilizables
Subbloque

Parámetro

ID

Tipo

Particularidades/indicaciones

1

SUB_IP_V4

Dirección IP local

++

2

SUB_NETMASK

-

++

8

SUB_DEF_ROUTER

-

+

4

SUB_DNS_SERV_ADDR *)

Este subbloque puede aparece hasta 0-4 veces. La prime‐ +
ra entrada es el Primary DNS Server

14

SUB_DHCP_ENABLE

0: sin DHCP

Aplicación ***)

+

1: DHCP
15

SUB_CLIENT_ID

-

+

Observación: Sólo útil si SUB_DHCP_ENABLE = 1
30**)

SUB_DEVICE_NAME

Nombre de dispositivo según la convención PROFINET IO +
Indique un nombre de dispositivo para permitir la identifi‐
cación unívoca del dispositivo para fines de análisis y diag‐
nóstico en la red.

*) El tipo de subbloque sólo se utiliza para enlaces de correo electrónico.
**) El ID sólo es soportado por determinados tipos de CP.
***) ++ = obligatorio; + = opcional

Consulte también
Tipos de subbloque (Página 7423)

Tipos de subbloque
Dependiendo del bloque de parámetros, se requieren diferentes parámetros. Cada parámetro
es descrito por un subbloque. Los subbloques necesarios pueden consultarse en las
descripciones de los datos de sistema y de los tipos de enlace de los capítulos anteriores.
Cada subbloque se compone de la sección de parámetro específica y de un encabezado (4
bytes).

Programación del PLC
Manual de programación y manejo, 11/2019

7423

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente extracto de un CONF_DB muestra la estructura de un subbloque a partir del
ejemplo del tipo de subbloque SUB_NETMASK.
Dirección

Nombre

Tipo

Valor inicial

Comentario

+14.0

Sub_bloque_2

STRUCT

+0.0

ID_de_sub_bloque

INT

2

// ID de subbloque

+2.0

Sub_bloque_Len

INT

8

// Longitud total del subbloque en
bytes

+4.0

Parámetro

STRUCT

+0.0

Valor_1

BYTE

B#16#FF

+1.0

Valor_2

BYTE

B#16#FF

+2.0

Valor_3

BYTE

B#16#FF

+3.0

Valor_4

BYTE

B#16#0

=4.0

END_

STRUCT

=8.0

END_

STRUCT

// Subbloque 2 tipo SUB_NET‐
MASK

Área de parámetros SUB_NET‐
MASK

En total están disponibles los siguientes tipos de subbloque:
ID de
subbloque 1)

Tipo de subbloque

Longitud de subbloque
(en bytes)

Significado del parámetro

1

SUB_IP_V4

4+4

Dirección IP según IPv4

2

SUB_NETMASK

4+4

Máscara de subred

3

SUB_DNS_NAME

Longitud nombre DNS
+4

Nombre DNS

4

SUB_DNS_SERV_ADDR

4+4

Dirección servidor DNS

8

SUB_DEF_ROUTER

4+4

Dirección IP del router predeterminado

9

SUB_LOC_PORT

2+4

Puerto local

10

SUB_REM_PORT

2+4

Puerto remoto, también para enlaces de co‐
rreo electrónico

11

SUB_LOC_TSAP

Longitud TSAP + 4

TSAP local

12

SUB_REM_TSAP

Longitud TSAP + 4

TSAP remoto

13

SUB_EMAIL_SENDER

Longitud de la dirección
del remitente del men‐
saje + 4

Dirección de correo electrónico del remitente

14

SUB_DHCP_ENABLE

2+4

Obtener la dirección IP de un servidor DHCP.
● Rango de valores:
0 = sin DHCP
1 = DHCP
(opcional)

15

SUB_CLIENT_ID

Longitud del ID de clien‐
te + 4

18

SUB_CONNECT_NAME

Longitud del nombre + 4 Nombre del enlace. Los caracteres posibles
son: a...z, A...Z, 0...9, -, _

7424

(opcional)

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
ID de
subbloque 1)

Tipo de subbloque

Longitud de subbloque
(en bytes)

Significado del parámetro

19

SUB_LOC_MODE

1+4

Modo de operación local del enlace
● Rango de valores:
0x00 = SEND/RECV
0x01 = protocolo FTP (sólo enlace TCP)
0x10 = modo de direccionamiento S5 con
FETCH/WRITE *)
0x20 = SPEED SEND/RECV (sólo
permitido con CP 443-1 Advanced)
0x80 = FETCH *)
0x40 = WRITE *)
El ajuste predeterminado renunciando al pa‐
rámetro es SEND/RECV.
Observación:
FETCH / WRITE requieren el ajuste de una
estructura de enlace pasiva (véase
SUB_CON_ESTABL).

20

SUB_REM_MODE

1+4

Ajuste del modo de operación en el interlocu‐
tor.

21

SUB_KBUS_ADR

5

Dirección KBUS de la CPU (sólo relevante
para S7–400)

22

SUB_CON_ESTABL

1+4

Tipo de establecimiento del enlace.

(actualmente no soportado)

Con esta opción se determina si el enlace de‐
be ser establecido por este equipo S7 de for‐
ma activa o pasiva.
● Rango de valores:
0 = pasivo
1 = activo
23

SUB_ADDR_IN_DATA-BLOCK

1+4

Seleccionar un enlace UDP libre.
Con la llamada de AG_SEND, el programa de
usuario registra la estación remota en el en‐
cabezado de petición del búfer de peticiones.
De ese modo es posible acceder a cualquier
estación de Ethernet/LAN/WAN.
● Rango de valores:
1 = enlace UDP libre.
0 = otros
El parámetro sólo es útil para el enlace UDP.

24

SUB_NTP_SERVER

4+4

El subbloque define un servidor NTP del cual
el CP puede obtener la hora a través del pro‐
tocolo NTP.
Si se definen uno o más servidores NTP, pue‐
den definirse hasta 4 subbloques del ID 24.
Los subbloques del ID 24 sólo pueden inte‐
grarse en el bloque de parámetros de sistema
del tipo 0 / ID 0.

Programación del PLC
Manual de programación y manejo, 11/2019

7425

Instrucciones
4.2 Instrucciones
ID de
subbloque 1)

Tipo de subbloque

Longitud de subbloque
(en bytes)

Significado del parámetro

30

SUB_DEVICE_NAME

Longitud del nombre + 4 Nombre de dispositivo según la convención
PROFINET IO
El nombre del dispositivo debe cumplir las
convenciones DNS, es decir,
● estar limitado a 127 caracteres en total
(letras, cifras, guiones o puntos)
● Cada componente del nombre del
dispositivo, es decir, una cadena de
caracteres entre dos puntos, no puede
tener una longitud superior a 63
caracteres.
● No se admiten caracteres especiales,
como diéresis, paréntesis, guiones bajos,
barras oblicuas, espacios en blanco, etc.
El guión es el único carácter especial
permitido.
● El nombre del dispositivo no puede
comenzar ni terminar con los caracteres
"-" o ".".
● El nombre del dispositivo no puede
comenzar con una cifra.
● El nombre de dispositivo no puede tener
el formato n.n.n.n (n = 0...999).
● El nombre de dispositivo no puede
comenzar con la secuencia de caracteres
"port-xyz-" (x,y,z = 0...9).

1) Nota: Actualmente no se utilizan números de ID no indicados.

Bloques de parámetros para tipos de enlaces
Información general
A continuación se indica qué valores deben introducirse en los bloques de parámetros y qué
subbloques deben utilizarse para los correspondientes tipos de enlace.
Dependiendo de cada caso, no son necesarios todos los tipos de subbloque (véase la tabla
para más información).

ID de enlace
El parámetro ID que precede a cada bloque de parámetros de enlace junto al identificador de
tipo es de especial relevancia.
En los enlaces programados, este ID puede asignarse libremente dentro del rango de valores
admisible. A continuación se debe utilizar ese ID en la interfaz de llamada de las FCs para la
interfaz SEND/RECV para identificar el enlace.

7426

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Rangos de valores para el ID de enlace:
● S7-400: 1,2...64
● S7-300: 1,2...16

Consulte también
Tipos de subbloque (Página 7423)

Bloque de parámetros para enlaces TCP
Estructura
Guarde los parámetros en el bloque de parámetros para enlaces TCP del siguiente modo:
● Tipo = 1 -> ①

● ID = ID de enlace -> ②
● Número_subbloques = n
● Subbloque 1
● Subbloque 2
● Subbloque n
...

Leyenda:

① Identificador del tipo de enlace
② Referencia de enlace de libre elección; debe indicarse en AG_SEND / AG_RECV.
Rango de valores para el ID de enlace:
para S7-400: 1, 2...64
para S7-300: 1,2...16

Subbloques utilizables
Subbloque

Parámetro

ID

Tipo

Particularidades/indicaciones

Aplicación ***)

1

SUB_IP_V4

Dirección IP del interlocutor

++ *)

9

SUB_LOC_PORT

-

++

10

SUB_REM_PORT

-

++ **)

18

SUB_CONNECT_NAME

-

+

19

SUB_LOC_MODE

-

+

21

SUB_KBUS_ADR

En CPs para S7-300, este valor tiene
asignado el valor predeterminado fijo 2,
por lo que no es necesario indicarlo.

++ (para S7-400)

22

SUB_CON_ESTABL

-

++

*) Opcional para enlace pasivo.
***) ++ = obligatorio; + = opcional

Programación del PLC
Manual de programación y manejo, 11/2019

7427

Instrucciones
4.2 Instrucciones

Consulte también
Tipos de subbloque (Página 7423)

Bloque de parámetros para enlaces UDP
Estructura
Guarde los parámetros en el bloque de parámetros para enlaces UDP del siguiente modo:
● Tipo = 2 -> ①

● ID = ID de enlace -> ②
● Número_subbloques = n
● Subbloque 1
● Subbloque 2
● Subbloque n
...

Leyenda:

① Identificador del tipo de enlace
② Referencia de enlace de libre elección; debe indicarse en AG_SEND / AG_RECV.
Rango de valores para el ID de enlace:
para S7-400: 1, 2...64
para S7-300: 1,2...16

Subbloques utilizables
Subbloque

Parámetro

ID

Tipo

Particularidades/indicaciones

Aplicación ***)

1

SUB_IP_V4

Dirección IP del interlocutor

++

9

SUB_LOC_PORT

-

++

10

SUB_REM_PORT

-

++

18

SUB_CONNECT_NAME

-

+

19

SUB_LOC_MODE

-

+

21

SUB_KBUS_ADR

En CPs para S7-300, este valor tie‐ ++ (para S7-400)
ne asignado el valor predetermina‐
do fijo 2, por lo que no es necesario
indicarlo.

23

SUB_ADDR_IN_DATABLOCK

Si se selecciona la opción "Enlace +
UDP libre" a través de este pará‐
metro, se prescinde de los paráme‐
tros SUB_IP_V4 y
SUB_REM_PORT.

***) ++ = obligatorio; + = opcional

7428

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
Tipos de subbloque (Página 7423)

Bloque de parámetros para enlaces ISO-on-TCP
Estructura
Guarde los parámetros en el bloque de parámetros para enlaces ISO-on-TCP del siguiente
modo:
● Tipo = 3 -> ①

● ID = ID de enlace -> ②

● Número_subbloques = n
● Subbloque 1
● Subbloque 2
● Subbloque n
...
Leyenda:

① Identificador del tipo de enlace
② Referencia de enlace de libre elección; debe indicarse en AG_SEND / AG_RECV.
Rango de valores para el ID de enlace:
para S7-400: 1, 2...64
para S7-300: 1,2...16

Subbloques utilizables
Subbloque

Parámetro

ID

Tipo

Particularidades/indicaciones

Aplicación ***)

1

SUB_IP_V4

Dirección IP del interlocutor

++ *)

11

SUB_LOC_TSAP

-

++

12

SUB_REM_TSAP

-

++ *)

18

SUB_CONNECT_NAME

-

+

19

SUB_LOC_MODE

-

+

21

SUB_KBUS_ADR

En CPs para S7-300, este valor tiene ++ (para S7-400)
asignado el valor predeterminado fijo
2, por lo que no es necesario indicarlo.

22

SUB_CON_ESTABL

-

++

*) Opcional para enlace pasivo.
***) ++ = obligatorio; + = opcional

Consulte también
Tipos de subbloque (Página 7423)

Programación del PLC
Manual de programación y manejo, 11/2019

7429

Instrucciones
4.2 Instrucciones

Bloque de parámetros para enlaces de correo electrónico
Significado
Para enviar mensajes de correo electrónico debe configurarse básicamente un enlace de
correo electrónico por cada CP Advanced. Con el enlace de correo electrónico se define el
servidor de correo a través del cual se pondrán a disposición todos los mensajes de correo
electrónico enviados por el CP Advanced.

Estructura
Guarde los parámetros en el bloque de parámetros para enlaces de correo electrónico del
siguiente modo:
● Tipo = 4 -> ①

● ID = ID de enlace -> ②
● Número_subbloques = n
● Subbloque 1
● Subbloque 2
● Subbloque n
...

Leyenda:

① Identificador del tipo de enlace
② Referencia de enlace de libre elección; debe indicarse en AG_SEND / AG_RECV.
Rango de valores para el ID de enlace:
para S7-400: 1, 2...64
para S7-300: 1,2...16

Subbloques utilizables
Subbloque
ID
1

Tipo
SUB_IP_V4

Parámetro
Particularidades/indicaciones

Aplicación ***)

Dirección IP del servidor de correo elec‐ ++ / + *)
trónico a través del cual se envían los
mensajes.
La dirección IP puede indicarse en for‐
mato absoluto o simbólico.
El formato simbólico presupone que el
CP Advanced conoce la dirección del
Domain Name Server (DNS). La entrada
correspondiente debe realizarse en la
configuración del CP Advanced en HW
Config (allí encontrará información adi‐
cional en la Ayuda en pantalla).

7430

3

SUB_DNS_NAME

Nombre DNS del servidor de correo elec‐ ++ / + *)
trónico

13

SUB_EMAIL_SENDER

Dirección remitente del mensaje de co‐
rreo electrónico

++

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Subbloque
ID

Parámetro

Tipo

Particularidades/indicaciones

Aplicación ***)

18

SUB_CONNECT_NAME

-

+

21

SUB_KBUS_ADR

En CPs para S7-300, este valor tiene
asignado el valor predeterminado fijo 0,
por lo que no es necesario indicarlo.

++ (para S7-400)

22

SUB_CON_ESTABL

-

++

*) En este caso, los parámetros SUB_IP_V4 y SUB_DNS_NAME se excluyen mutuamente; sólo puede
indicarse uno de los parámetros.
***) ++ = obligatorio; + = opcional

Nota
Los Mail-Server-Ports son "well known ports" y no es necesario indicarlos.

Consulte también
Tipos de subbloque (Página 7423)

Bloque de parámetros para enlaces FTP
Significado
Para el desarrollo de una secuencia de petición FTP entre el equipo S7 como cliente FTP y un
servidor FTP es necesario que el CP Advanced establezca un enlace con la CPU S7. Aquí,
dicho enlace se denomina "enlace FTP".
Los enlaces FTP son enlaces TCP que se ajustan al modo "FTP" con el parámetro
SUB_LOC_MODE.

Estructura
Guarde los parámetros en el bloque de parámetros para enlaces FTP del siguiente modo:
● Tipo = 1 -> ①

● ID = ID de enlace -> ②

● Número_subbloques = n
● Subbloque 1

Programación del PLC
Manual de programación y manejo, 11/2019

7431

Instrucciones
4.2 Instrucciones
● Subbloque 2
● Subbloque n
...
Leyenda:

① Identificador del tipo de enlace
② Referencia de enlace de libre elección; debe indicarse en AG_SEND / AG_RECV.
Rango de valores para el ID de enlace:
para S7-400: 1, 2...64
para S7-300: 1,2...16

Subbloques utilizables
Subbloque

Parámetro

ID

Tipo

Particularidades/indicaciones

Aplicación ***)

18

SUB_CONNECT_NAME

-

+

19

SUB_LOC_MODE

Aquí: 0x01 = protocolo FTP

++

21

SUB_KBUS_ADR

En CPs para S7-300, este valor tiene
asignado el valor predeterminado fijo 0,
por lo que no es necesario indicarlo.

++ (para S7-400)

***) ++ = obligatorio; + = opcional

Consulte también
Tipos de subbloque (Página 7423)

Instrucciones para servicios FTP
FTP_CMD para servicios FTP
Migración de FC 40-44 a FB 40
Comparación del bloque de programa FTP_CMD con las anteriores funciones FC40...44
Todos los CPs con funcionalidad FTP son compatibles con las funciones FC40...44. Por lo
tanto, los programas de usuario disponibles se pueden seguir utilizando sin modificación.
Si desea cambiar de las funciones FTP FC40...44 a FTP_CMD, tendrá que modificar su
programa de usuario.
La tabla siguiente muestra con qué comandos del FTP_CMD puede implementar las funciones
FC40...44.
● Las coincidencias están marcadas con "X".
● La falta de correspondencias está marcada con "-".

7432

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Comandos del parámetro "CMD" del FTP_CMD
Antiguas fun‐
ciones FTP
FC40...44

CMD = 1

FC40

X 1)

FC41

CMD = 2

CMD = 3

CMD = 4

CMD = 5

CMD = 6
CMD = 7
CMD = 17

X 2)

FC42

X 3)

FC43

X 4)

FC44

X
-

... Los parámetros de FC 40...43 y CMD 1...4 (FTP_CMD) no son idénticos.
(véase la tabla siguiente)
1)

4)

Los parámetros correspondientes que especifican la respectiva función en las funciones
FC40...FC43 o en los comandos del FTP_CMD se listan en la tabla siguiente.
Parámetros de FC

Parámetros del FTP_CMD (con CMD 1...4)

FC40:

LOGIN

→

CMD = 1:

NAME_STR

FC41:

FILE_NAME

→

CMD = 2:

NAME_STR

FC42:

FILE_NAME

→

CMD = 3:

NAME_STR

FC43:

FILE_NAME

→

CMD = 4:

NAME_STR

BUFFER_DB_NR

→

suprimido (sustituido por DB de instancia)

FC40...43:

Consulte también
Panorámica de FTP_CMD (Página 7433)

Panorámica de FTP_CMD
Significado
Con la instrucción FTP_CMD se pueden establecer conexiones FTP y transmitir archivos
desde y a un servidor FTP.
La instrucción FTP_CMD aporta las siguientes ventajas:
● Simplificación en el programa de usuario por desarrollo a través de variables de comandos
en lugar de diferentes llamadas de funciones.
● Función adicional "APPEND"
"APPEND" permite añadir datos a un archivo ya existente.
● Función adicional "RETR_PART"
"RETR_PART" permite leer selectivamente áreas de datos de un archivo.
● Función adicional "CONNECT_TLS_PRIVATE"
"CONNECT_TLS_PRIVATE" permite establecer conexiones SSL seguras
● La función AG_SEND (FC5) no se necesita para la ejecución.
Programación del PLC
Manual de programación y manejo, 11/2019

7433

Instrucciones
4.2 Instrucciones

Validez
El FB40 se puede utilizar a partir de los siguientes tipos de módulos:
● A partir de CP 343-1 Advanced (GX30* / GX31)
● A partir de CP 443-1 Advanced (GX20* / GX30)
*) Función "CONNECT-TLS-PRIVATE" no utilizable.

Interfaz de llamada
Interfaz de llamada en representación FUP
)73B&0'
,17

,'

:25'

'21(

%22/

/$''5

(5525

%22/

%<7(

&0'

67$786

:25'

$1<

1$0(B675

,17

),/(B'%B15

':25'

2))6(7

':25'

/(1

Funciones del sistema llamadas
El bloque de programa FTP_CMD llama las siguientes funciones de sistema:
SFC 1, SFC 20, SFC 24, SFC 58, SFC 59
Nota
Tenga en cuenta que los servicios de cliente FTP de CPUs SIMATIC S7-300 menos recientes,
por ejemplo CPU 312 o CPU 315-1AF01, no se pueden ejecutar, ya que no soportan la función
especial SFC 24.

Consulte también
Estructura y aplicación del DB File (Página 7443)
Parámetros de salida e informaciones de estado FTP_CMD (Página 7439)
Parámetros de entrada FTP_CMD (Página 7435)
Migración de FC 40-44 a FB 40 (Página 7432)

7434

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros de entrada FTP_CMD
Explicación de los parámetros de entrada
Cada llamada de bloque FTP se tiene que dotar de los siguientes parámetros de entrada:
Tabla 4-441 Parámetros formales del FB40 (FTP_CMD) - parámetros de entrada
Parámetro
ID

Declaración
INPUT

Tipo
INT

Rango de valo‐
res
Para S7-300:
1, 2...16
Para S7-400:
1, 2...64

LADDR

INPUT

WORD

Significado / Observación
Las peticiones de FTP se desarrollan a través de
conexiones FTP. El parámetro identifica la cone‐
xión utilizada.
Dirección inicial del módulo
Al llamar un bloque FC transfiere en el parámetro
LADDR la dirección del inicio de módulo del AD‐
VANCED CP.
La dirección inicial de módulo del ADVANCED-CP
se puede consultar en la configuración del ADVAN‐
CED-CP bajo "Propiedades>Direcciones>Entra‐
das".

CMD

INPUT

BYTE

Consulte la ta‐
bla inferior
Comandos FTP
en el parámetro
"CMD"

Comandos FTP que se ejecutan con la llamada del
FTP_CMD. Encontrará más información a conti‐
nuación de la tabla.
Si un comando no es compatible con el firmware
del CP, se emite un mensaje de error con STATUS
= 8F6BH.
Ejemplos de comandos FTP:
● RETRIEVE: B#16#3
● CONNECT_TLS_PRIVATE: B#16#11

Programación del PLC
Manual de programación y manejo, 11/2019

7435

Instrucciones
4.2 Instrucciones
Parámetro
NAME_STR

Declaración
INPUT

Tipo
ANY

Rango de valo‐
res

Significado / Observación

La dirección indicada hace referencia a un área del
como VARTY‐
PE solo se admi‐ bloque de datos. Aquí se tiene que indicar la direc‐
te "BYTE".
ción y la longitud del área de datos en la que están
registrados las informaciones de destino.
● Con CMD = 1, 17:
En este comando, el parámetro "NAME_STR"
especifica el servidor FTP al que se debe
acceder con la conexión FTP con los siguientes
atributos:
- dirección IP del servidor FTP
- nombre del usuario
- contraseña para el inicio de sesión
Estos valores se tienen que indicar como tres
strings consecutivos en el área de destino del
puntero ANY.
● Con CMD = 2, 3, 4, 6, 7:
En este comando, el parámetro "NAME_STR"
especifica el nombre del archivo en el servidor
FTP, es decir, la fuente de los datos o el destino
de los datos. El nombre del archivo se tiene que
indicar como string en el área de destino del
puntero ANY.
● Con CMD = 5: parámetro no relevante
Encontrará ejemplos de contenidos más adelante.

FILE_DB_NR

INPUT

INT

El bloque de datos aquí indicado contiene el FileDB que se debe leer / escribir.
El parámetro solo es relevante con CMD = 2, 3, 6 y
7.

7436

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro
OFFSET

Declaración
INPUT

Tipo
DWORD

Rango de valo‐
res

Significado / Observación
Solo con CMD = 7:
Offset en bytes, a partir del cual se debe leer el
archivo.

LEN

INPUT

DWORD

Solo con CMD = 7:
Longitud parcial en bytes que se debe leer a partir
del valor indicado en "OFFSET".
Peculiaridades:
● Si se indica "DW#16#FFFFFFFF" se lee el
resto disponible del archivo.
Resultado OK (DONE = 1, STATUS = 0), si no
se presenta ningún otro error.
● Si OFFSET > longitud del archivo original:
En este caso, la longitud del archivo de destino
se muestra del siguiente modo en el parámetro
ACT_LENGTH del File-DB: 0 bytes en la CPU.
Resultado OK (DONE = 1, STATUS = 0), si no
se presenta ningún otro error.
● Si OFFSET + LEN > longitud del archivo
original (y LEN ≠ 0xFFFFFFFF):
En este caso, la longitud del archivo de destino
se muestra del siguiente modo en el parámetro
ACT_LENGTH del File-DB: Bytes disponibles a
partir de "OFFSET".
Resultado OK (DONE = 1, STATUS = 0), si no
se presenta ningún otro error.

Comandos FTP en el parámetro "CMD"
Vea en la tabla siguiente qué significado tienen los comandos del parámetro "CMD" y qué
parámetros de entrada (Input) se tienen que abastecer en cada caso. Los parámetros ID y
LADDR se tienen que activar siempre para identificar la conexión.
CMD

Parámetro de entrada re‐ Significado / Manejo
levante (además de ID y
LADDR)

0 (NOOP)

-

1 (CONNECT)

NAME_STR

La instrucción llamada no ejecuta ninguna acción. Las indicaciones de
estado se ponen como sigue para este abastecimiento de parámetros:
● DONE=1; ERROR=0; STATUS=0
El cliente FTP establece con este comando una conexión FTP con un
servidor FTP (puerto 21).
La conexión está disponible, con la ID de conexión aquí asignada, para
todos los demás comandos FTP. Los datos se intercambian entonces
con el servidor FTP indicado para este usuario.

2 (STORE)

NAME_STR
FILE_DB_NR

Con esta llamada de función se transmite un bloque de datos (File-DB)
del cliente FTP (CPU S7) al servidor FTP.
Atención: Si el archivo (File-DB) ya existe en el servidor FTP, se so‐
brescribe.

Programación del PLC
Manual de programación y manejo, 11/2019

7437

Instrucciones
4.2 Instrucciones
CMD

Parámetro de entrada re‐ Significado / Manejo
levante (además de ID y
LADDR)

3 (RETRIEVE)

NAME_STR
FILE_DB_NR

Con esta llamada de función se transmite un archivo del servidor FTP
al cliente FTP (CPU S7).
Atención: Si el bloque de datos (File-DB) del cliente FTP ya contiene
un archivo, este se sobrescribe.

4 (DELETE)

NAME_STR

Con esta llamada de función se borra un archivo en el servidor FTP.

5 (QUIT)

Ninguno más

Con esta llamada de función se deshace la conexión FTP identificada
con la ID.

6 (APPEND)

NAME_STR
FILE_DB_NR

De forma similar a "STORE", el comando "APPEND" (añadir) guarda
un archivo en el servidor FTP. Pero con "APPEND" no se sobrescribe
el archivo en el servidor FTP, sino que el nuevo contenido a guardar se
añade al archivo.
Si el archivo no existe en el servidor FTP, se crea.

7 (RETR_PART)

NAME_STR
FILE_DB_NR
OFFSET
LEN

Con el comando "RETR_PART" (leer longitud parcial) se puede pedir
del servidor FTP una parte de un archivo.
En caso de archivos muy grandes se puede limitar así la lectura a la
parte necesaria.
Para esto se tiene que conocer la estructura del archivo.
Indique la parte deseada del archivo con ayuda de los dos parámetros
"OFFSET" y "LEN" en el FB 40.

17 (CON‐
NECT_TLS_PRIVATE)

NAME_STR

Con el comando "CONNECT_TLS_PRIVATE", el cliente FTP estable‐
ce una conexión FTP segura vía SSL (FTPS) con el servidor FTP
(puerto 21). Los datos de la conexión de control y los de la conexión de
datos son seguros.
La conexión está disponible, con la ID de conexión aquí asignada, para
todos los demás comandos FTP. Los datos se intercambian entonces
con el servidor FTP indicado para este usuario.
Requisitos:
● La opción "Seguridad" debe estar activada en el CP.
● Para la conexión FTP asegurada con SSL se deben suministrar los
certificados en la configuración del CP.

Ejemplos de contenidos del parámetro "NAME_STR"
El registro de parámetros tiene los siguientes contenidos:
Tabla 4-442 Contenido del registro de parámetros para CMD = 1, 17
Dirección rela‐
tiva 2)

Nombre

Tipo 1)

Ejemplo

Significado

0.0

ip_address

STRING[100]

’142.11.25.135’

Dirección IP del servidor FTP

102.0

username

STRING[32]

’usuario’

Nombre del usuario para iniciar se‐
sión en el servidor FTP

136.0

password

STRING[32]

’contraseña’

Contraseña para iniciar sesión en el
servidor FTP

1) Se indica la longitud máxima posible del string en cada caso
2) Los valores indicados se refieren a las longitudes de string indicadas en "Tipo".

7438

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Tabla 4-443 Contenido del registro de parámetros para CMD = 2, 3, 4, 6, 7
Dirección rela‐
tiva 2)
170.0

Nombre
filename

Tipo 1)

Ejemplo

STRING[ 220]
o
STRING[212]

’instalación1/caldera2/
presión.dat’

Significado
Nombre del fichero de destino o
fuente
Nota: con CMD=7 (RETR_PART) la
longitud máxima del nombre del ar‐
chivo está limitada a 212 caracteres.

1) Se indica la longitud máxima posible del string en cada caso
2) Los valores indicados se refieren a las longitudes de string indicadas en "Tipo".

Consulte también
Panorámica de FTP_CMD (Página 7433)

Parámetros de salida e informaciones de estado FTP_CMD
Introducción
Para la evaluación del estado se tienen que evaluar estos parámetros en el programa de
usuario:
Tabla 4-444 Parámetros formales del FB40 (FTP_CMD) - parámetros de salida
Parámetro

Declaración

Tipo

Rango de valores

Significado / Observación

DONE

OUTPUT

BOOL

0: 1: petición ejecutada

El parámetro de estado indica si la
petición se ha desarrollado correc‐
tamente.

ERROR

OUTPUT

BOOL

0: 1: caso de error

Indicador de error

Véase la tabla siguiente

Indicador de estado

STATUS

OUTPUT

WORD

El parámetro notifica que la peti‐
ción no se ha podido ejecutar sin
errores.
El parámetro proporciona informa‐
ciones detalladas sobre la ejecu‐
ción de la petición.

Los parámetros DONE, ERROR y STATUS se actualizan a cada llamada del bloque.

Ejemplo
Durante una ejecución de petición, el FTP_CMD proporciona los códigos de condición:
● DONE=0
● ERROR=0
● STATUS=8181H
Significado: La petición aún está en curso.

Programación del PLC
Manual de programación y manejo, 11/2019

7439

Instrucciones
4.2 Instrucciones

Evaluar indicaciones de estados
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho en
el manual de referencia STEP 7 Standard y funciones del sistema. Allí encontrará
informaciones en el capítulo "Evaluación de fallos con el parámetro de salida RET_VAL".

Tabla 4-445 FB 40: Significado del parámetro STATUS en relación con DONE y ERROR
DONE

ERROR

STATUS

Significado

0

0

0000H

Ninguna petición en proceso.

1

0

0000H

Petición terminada sin errores.

0

0

8181H

Petición en curso.
En caso de indicación continua de 8181H:
el CP no está habilitado para el FTP_CMD (se ha llamado un comando
CMD 6, CMD 7 o CMD 17 no permitido para la versión de firmware.)

0

1

8090H

● No existe un módulo con esta dirección inicial de módulo.
● El bloque utilizado no es acorde con la familia de sistemas utilizada
(se tienen que utilizar FCs diferentes para S7-300 y S7-400).

0

1

8091H

La dirección inicial del módulo no está en formato de palabra doble.

0

1

8092H

El tipo indicado en el puntero ANY no es Byte

0

1

80A4H

La conexión de bus K entre CPU y CP no está establecida (en caso de
versiones de CPU más recientes).
Esto se puede deber, por ejemplo, a lo siguiente:
● falta configuración de conexiones
● se supera la cantidad máxima de CPs que pueden trabajar en
paralelo

0

1

80B0H

El módulo no conoce el registro.

0

1

80B1H

Área de destino no válida;
por ejemplo, área de destino > 240 bytes.

0

1

80B2H

La conexión de bus K entre CPU y CP no está establecida (en caso de
versiones de CPU menos recientes).
(en caso de versiones de CPU más recientes, véase 80A4H)

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Medio de servicio (memoria) ocupado.

0

1

80C4H

Error de comunicación (se presenta temporalmente; por ello es conve‐
niente una repetición en el programa de usuario.)

0

1

80D2H

Dirección inicial del módulo errónea.

0

1

8183H

La configuración no es acorde con los parámetros de la petición.

0

1

8184H

Se ha indicado un tipo de datos no permitido para el parámetro NA‐
ME_STR.

0

1

8186H

Parámetro ID no válido. ID = 1, 2....64

0

1

8302H

7440

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE
0

ERROR
1

STATUS
8F22H

Significado
Área fuente no valida, por ejemplo:
Área no existente en DB

0

1

8F23H

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado
corto).

0

1

8F24H

Error de área al leer un parámetro

0

1

8F28H

Error de alineación al leer un parámetro

0

1

8F32H

El parámetro contiene número de DB demasiado alto.

0

1

8F33H

Error de número de DB

0

1

8F3AH

Área de destino no cargada (DB)

0

1

8F50H

File-DB DB 0 o DB no existe

0

1

8F51H

El área de datos de File-DB se ha indicado mayor que la existente

0

1

8F52H

File-DB en memoria protegida de grabación

0

1

8F53H

File-DB con longitud máx. < longitud actual

0

1

8F54H

File-DB no contiene datos válidos.

0

1

8F55H

Bit de estado del encabezado: Locked

0

1

8F56H

El bit NEW en el encabezado del File-DB no se ha desactivado

0

1

8F57H

El cliente FTP no tiene derecho de escritura en el File-DB, sino el servi‐
dor FTP (bit de estado del encabezado: WriteAccess).

0

1

8F60H

Datos de usuario no válidos, por ejemplo, dirección IP del servidor FTP
no válida

0

1

8F61H

Servidor FTP no accesible

0

1

8F62H

Significados posibles:
● El servidor FTP no da soporte a la petición o la rechaza
● El servidor FTP no soporta conexiones seguras vía SSL.

0

1

8F63H

Transferencia de datos cancelada por el servidor FTP

0

1

8F64H

Error en la conexión de control FTP; no se han podido transmitir o recibir
datos; la conexión de control FTP se tiene que establecer de nuevo
después de tal error.

0

1

8F65H

Error en la conexión de datos FTP; no se han podido transmitir o recibir
datos. La petición se tiene que llamar de nuevo.
El error se puede deber, por ejemplo en la función RETRIEVE (CMD=3),
a que el archivo a que se quiere acceder en el servidor FTP ya está
abierto.

0

1

8F66H

Error al leer/escribir datos de/en la CPU (por ejemplo, DB inexistente o
demasiado pequeño)

0

1

8F67H

Error en el cliente FTP del CP; por ejemplo, al intentar abrir más cone‐
xiones FTP del número máximo posible.

0

1

8F68H

La petición ha sido rechazada por el cliente FTP.
El error se puede deber, por ejemplo en la función RETRIEVE (CMD=3),
a que el valor del parámetro MAX_LENGTH se ha elegido demasiado
pequeño en el encabezado del File-DB.

Programación del PLC
Manual de programación y manejo, 11/2019

7441

Instrucciones
4.2 Instrucciones
DONE
0

ERROR
1

STATUS
8F69H

Significado
La conexión FTP se encuentra en un estado incorrecto, p. ej.:
● Se produce una llamada de la conexión sin deshacerla previamente
(con igual ID de conexión);
● Se deshace una conexión ya deshecha;
● Se ha enviado un comando STORE para una conexión no
establecida.

0

1

8F6AH

La conexión no se ha podido establecer debido a un déficit transitorio de
recursos.

0

1

8F6BH

Posibles causas:

Solución: repetir la llamada del bloque.
● Valor erróneo para el parámetro CMD
● No se soporta un comando del FTP_CMD.
Posible causa: Firmware incorrecto del CP
Solución: actualizar el firmware
0

1

8F6CH

En el parámetro OFFSET se ha indicado un valor > 7FFF FFFH.

0

1

8F6DH

El cliente FTP no soporta conexiones seguras vía SSL.

0

1

8F6FH

Posibles causas:
● La indicación de tiempo "notBefore" del certificado contiene un valor
no válido.
● El certificado no es válido: la entrada "notBefore" contiene una
indicación de tiempo posterior al tiempo actual.

0

1

8F70H

Posibles causas:
● La indicación de tiempo "notAfter" del certificado contiene un valor no
válido.
● El certificado ha caducado: la entrada "notAfter" contiene una
indicación de tiempo anterior al tiempo actual.

0

1

8F71H

No se ha encontrado el certificado del emisor de un certificado no fiable.

0

1

8F72H

El certificado CA original no es válido. Es posible que no se trate de un
certificado CA o que sus ampliaciones no sean coherentes con la finali‐
dad prevista.

0

1

8F73H

El certificado CA original está marcado como no fiable para la finalidad
indicada.

0

1

8F74H

Se han producido otros errores al verificar un certificado.

0

1

8F7FH

Error interno p. ej., referencia ANY no permitida.

Consulte también
Panorámica de FTP_CMD (Página 7433)

7442

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Estructura y aplicación del DB File
Estructura de los bloques de datos (File-DB) para servicios FTP - modo FTP-Server
Funcionamiento
Para la transmisión de datos mediante FTP tiene que crear bloques (File-DBs) en la CPU de
su estación S7. Estos bloques de datos han de tener una determinada estructura para que los
servicios FTP puedan tratarlos como datos transmisibles. Constan de los siguientes sectores
● Sector 1: File-DB Header (tiene una longitud fija de 20 byte y una estructura fija)
● Sector 2: datos útiles (longitud y estructura variables)

File-DB Header para modo FTP-Server
Observación: El File-DB Header aquí descrito es prácticamente idéntico al File-DB Header
descrito para el modo Client. Las diferencias residen en los parámetros
● WRITE_ACCESS
● FTP_REPLY_CODE

Programación del PLC
Manual de programación y manejo, 11/2019

7443

Instrucciones
4.2 Instrucciones

Parámetro
EXIST

Tipo

Valor / Significado

BOOL

El bit EXIST indica si hay
datos válidos en el área de
datos útiles.

Alimentación
El comando FTP dele pone EXIST=0;
El comando FTP store pone EXIST=1;

El comando FTP retrieve
sólo procesa la petición si
EXIST=1.
● 0:
El File-DB no contiene
datos útiles válidos
("Archivo no existe").
● 1:
El File-DB contiene
datos útiles válidos
("Archivo existe").
LOCKED

BOOL

El bit LOCKED sirve para la
protección de acceso al Fi‐
le-DB.
● 0:
Se puede acceder al
File-DB.
● 1:
El File-DB está
bloqueado.

Los comandos FTP store y retr ponen LO‐
CKED=1 durante la edición.
Para una operación de escritura desde el
programa de usuario rige:
El programa de usuario almacenado en la
CPU S7 puede poner o reponer LOCKED
para asegurar la coherencia durante un ac‐
ceso de escritura.
Procedimientom recomendado para el pro‐
grama de usuario:
1. Comprobar el bit LOCKED;
si =0
2. poner WRITEACCESS-Bit=0
3. Comprobar el bit LOCKED;
si =0
4. poner LOCKED-Bit=1
5. Escribir datos
6. poner LOCKED-Bit=0

7444

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro
NEW

Tipo

Valor / Significado

Alimentación

BOOL

El bit NEW-Bit informa so‐
bre si los datos se han mo‐
dificado desde la última
operación de lectura.

El comando FTP store pone NEW=1 tras la
edición

● 0:
El contenido del File-DB
no ha cambiado desde
la última operación de
escritura. El programa
de usuario de la CPU S7
ha registrado el último
cambio.

El programa de usuario de la CPU S7 tiene
que poner NEW=0 tras la lectura de los da‐
tos, para hacer posible un nuevo store o para
poder borrar el archivo con el comando FTP
dele.

● 1:
El programa de usuario
de la CPU S7 no ha
registrado la última
operación de escritura.
WRITE_ACCESS

BOOL

0:
El FTP-Client del PG/PC no
tiene derecho de escritura
para los File-DBs de la CPU
S7.
1:
El FTP-Client del PG/PC tie‐
ne derecho de escritura pa‐
ra los File-DBs de la CPU
S7.

El bit se pone a un valor de inicialización al
configurar el DB.
Recomendación:
A ser posible, el bit debería dejarse inaltera‐
do. En caso especiales es posible una adap‐
tación durante el funcionamiento.

ACT_LENGTH

DINT

Longitud actual del área de La longitud actual se actualiza después de
una operación de escritura.
datos útiles.
El contenido de este campo
sólo es válido si EXIST = 1.

MAX_LENGTH

DINT

Longitud máxima del área
de datos útiles (longitud to‐
tal del DB menos 20 bytes
del Header).

FTP_REPLY_CODE

DATE_TIME

INT

DATE_AND_TIME

Programación del PLC
Manual de programación y manejo, 11/2019

La longitud máxima se debería definir al con‐
figurar el DB.
El valor puede ser modificado por el progra‐
ma de usuario también durante el funciona‐
miento.

Este parámetro no tiene re‐ El FTP-Server lo pone a "0".
levancia en el modo FTPServer.
Fecha y hora de la última
modificación del archivo.
El contenido de este campo
sólo es válido si EXIST = 1.

La fecha actual se actualiza después de una
operación de escritura.
Si se utiliza la función "Transmisión de la ho‐
ra", la entrada se corresponde con la hora
transmitida.
Si no se utiliza la función "Transmisión de la
hora", se introduce una hora relativa. La re‐
ferencia es el momento de arranque del CP
IT (el valor de inicialización es 1.1.1994 0.0
horas).

7445

Instrucciones
4.2 Instrucciones

Estructura de los bloques de datos (File-DB) para servicios FTP - modo FTP-Client
Funcionamiento
Para la transmisión de datos mediante FTP tiene que crear bloques (File-DBs) en la CPU de
su estación S7. Estos bloques de datos han de tener una determinada estructura para que los
servicios FTP puedan tratarlos como datos transmisibles. Constan de los siguientes sectores:
● Sector 1: File-DB Header (tiene una estructura fija con una longitud de 20 byte)
● Sector 2: datos útiles (longitud y estructura variables)

File-DB Header para modo FTP-Client
Observación: El File-DB Header aquí descrito es prácticamente idéntico al File-DB Header
descrito para el modo Server. Las diferencias residen en los parámetros:
● WRITE_ACCESS
● FTP_REPLY_CODE

7446

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro
EXIST

Tipo
BOOL

Valor / Significado

Alimentación

El bit EXIST indica si hay datos vá‐ El comando FTP dele pone EXIST=0;
lidos en el área de datos útiles.
El comando FTP store pone EXIST=1;
El comando FTP retrieve sólo pro‐
cesa la petición si EXIST=1.
● 0:
El File-DB no contiene datos
útiles válidos ("Archivo no
existe").
● 1:
El File-DB contiene datos útiles
válidos ("Archivo existe").

LOCKED

BOOL

El bit LOCKED sirve para la pro‐
tección de acceso al File-DB.

Los comandos FTP store y retr ponen
LOCKED=1 durante la edición.

● 0:
Se puede acceder al File-DB.

Para una operación de escritura desde
el programa de usuario rige:

● 1:
El File-DB está bloqueado.

El programa de usuario almacenado en
la CPU S7 puede poner o reponer LO‐
CKED para asegurar la coherencia du‐
rante un acceso de escritura.
Procedimientom recomendado para el
programa de usuario:
1. Comprobar el bit LOCKED;
si =0
2. poner WRITEACCESS-Bit=0
3. Comprobar el bit LOCKED;
si =0
4. poner LOCKED-Bit=1
5. Escribir datos
6. poner LOCKED-Bit=0

NEW

BOOL

El bit NEW-Bit informa sobre si los
datos se han modificado desde la
última operación de lectura.
● 0:
El contenido del File-DB no ha
cambiado desde la última
operación de escritura. El
programa de usuario de la
CPU S7 ha registrado el último
cambio.

El comando FTP store pone NEW=1
tras la edición
El programa de usuario de la CPU S7
debe activar NEW=0 tras la lectura de
los datos para permitir un nuevo coman‐
do retr.

● 1:
El programa de usuario de la
CPU S7 no ha registrado la
última operación de escritura.

Programación del PLC
Manual de programación y manejo, 11/2019

7447

Instrucciones
4.2 Instrucciones
Parámetro

Tipo

WRITE_ACCESS

BOOL

Valor / Significado

Alimentación

0:
El programa de usuario (bloques
FTP-Client) tiene derecho de escri‐
tura para los File-DBs de la CPU
S7.

El bit se pone a un valor de inicialización
al configurar el DB.

1:
El programa de usuario (bloques
FTP-Client) no tiene derecho de
escritura para los File-DBs de la
CPU S7.

Recomendación:
A ser posible, el bit debería dejarse inal‐
terado. En caso especiales es posible
una adaptación durante el funciona‐
miento.

ACT_LENGTH

DINT

Longitud actual del área de datos
útiles.
El contenido de este campo sólo
es válido si EXIST = 1.

La longitud actual se actualiza después
de una operación de escritura.

MAX_LENGTH

DINT

Longitud máxima del área de datos La longitud máxima se debería definir al
útiles (longitud total del DB menos configurar el DB.
20 bytes del Header).
El valor puede ser modificado por el pro‐
grama de usuario también durante el
funcionamiento.

FTP_REPLY_CODE

INT

Cifra sin signo (16 bit) que contiene Es actualizado por el FTP-Client al edi‐
el último código Reply de FTP co‐ tar comandos FTP.
mo valor binario.
El contenido de este campo sólo
es válido si EXIST = 1.

DATE_TIME

DATE_AND_TIME

Fecha y hora de la última modifica‐
ción del archivo.
El contenido de este campo sólo
es válido si EXIST = 1.

La fecha actual se actualiza después de
una operación de escritura.
Si se utiliza la función "Transmisión de
la hora", la entrada se corresponde con
la hora transmitida.
Si no se utiliza la función "Transmisión
de la hora", se introduce una hora rela‐
tiva. La referencia es el momento de
arranque del CP IT (el valor de iniciali‐
zación es 1.1.1994 0.0 horas).

Bloque de datos FILE_DB_HEADER como plantilla
Significado
Para la creación de un encabezado del File-DB está predeterminado el tipo de datos
FILE_DB_HEADER.

7448

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Funcionamiento
Para la transmisión de datos mediante FTP hay que crear bloques de datos (File-DBs) en la
CPU de la estación S7. Estos bloques de datos han de tener una determinada estructura para
que los servicios FTP puedan tratarlos como datos transmisibles. Constan de los siguientes
sectores:
● Sector 1: encabezado del File-DB (tiene una estructura fija con una longitud de 20 byte)
● Sector 2: datos de usuario (longitud y estructura variables)

Proceda del siguiente modo:
1. Cree un bloque de datos del tipo "DB global" en la CPU de PLC en la que se crea el
programa de usuario con las instrucciones FTP.
2. Seleccione la fila que va a utilizar como línea de inicio para el File-DB.
3. En la lista desplegable de la columna "Tipo de datos", seleccione un elemento de estructura
del tipo FILE_DB_HEADER.
Resultado: Se crea una estructura de datos con la estructura de encabezado necesaria para
el File-DB.
Nota
Función "Agregar nuevo bloque" - Selección de tipo
Al crear nuevos bloques de datos, en la entada "Tipo" de la lista desplegable también se ofrece
el tipo de bloque "FILE_DB_HEADER". ¡No utilice esta opción! El bloque de datos creado de
esa manera solo obtiene la estructura de encabezado y no puede ampliarse con el área
necesaria para depositar datos de usuario.

Bloque de datos FILE_DB_HEADER - Ejemplo y plantilla para el encabezado del File-DB
En la vista de declaración se reconoce la siguiente estructura:
Dirección

Nombre

0.0

Tipo

Valor inicial

Comentario

STRUCT

+0.0

bit08

BOOL

FALSE

reservado

+0.1

bit09

BOOL

FALSE

reservado

+0.2

bit10

BOOL

FALSE

reservado

+0.3

bit11

BOOL

FALSE

reservado

+0.4

bit12

BOOL

FALSE

reservado

+0.5

bit13

BOOL

FALSE

reservado

+0.6

bit14

BOOL

FALSE

reservado

+0.7

bit15

BOOL

FALSE

reservado

+1.0

EXIST

BOOL

FALSE

if TRUE: FileDB content is valid
data

+1.1

LOCKED

BOOL

FALSE

it TRUE: FileDB is locked cau‐
sed by changes of the content

Programación del PLC
Manual de programación y manejo, 11/2019

7449

Instrucciones
4.2 Instrucciones
Dirección

Nombre

Tipo

Valor inicial

Comentario

+1.2

NEW

BOOL

FALSE

if TRUE: FileDB content is new
and may not be overwritten

+1.3

WRITE_ACCESS

BOOL

FALSE

if TRUE: Ftp-Server of the ITCP has write access, else FtpServer

+1.4

bit04

BOOL

FALSE

reservado

+1.5

bit05

BOOL

FALSE

reservado

+1.6

bit06

BOOL

FALSE

reservado

+1.7

bit07

BOOL

FALSE

reservado

+2.0

ACT_LENGTH

DINT

L#0

actual size of the content in
bytes (not including the header
of 20 bytes)

+6.0

MAX_LENGTH

DINT

L#0

max. size of the content in bytes
(not including the header of 20
bytes)

+10.0

FTP_REPLY_CODE

INT

0

last reply code from the remote
FTP-Server

+12.0

DATE_TIME

DATE_AND_TIME

DT#00-1-1-0:0:0.000

date and time of last change of
the content of the FileDB

=20.0

END_STRUCT

Diferencias en los modos de funcionamiento
Encabezado del File-DB para modo cliente FTP
El encabezado del File-DB aquí descrito es prácticamente idéntico para los modos de cliente
y servidor FTP. Las diferencias residen en los parámetros
● WRITE_ACCESS
● FTP_REPLY_CODE
Observe al respecto las diferentes descripciones de los parámetros:
● Estructura de los bloques de datos (File-DB) para servicios FTP - modo FTP-Server
(Página 7443)
● Estructura de los bloques de datos (File-DB) para servicios FTP - modo FTP-Client
(Página 7446)

Instrucciones para CP ERPC
LOGICAL_TRIGGER para el trigger lógico
Significado de la instrucción
Para el uso de un trigger lógico para la comunicación ERPC se dispone de la instrucción
LOGICAL_TRIGGER .

7450

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Para iniciar un trigger lógico, llame la instrucción LOGICAL_TRIGGER en el OB1 del programa
de usuario de la CPU.
Para llamar la instrucción LOGICAL_TRIGGER se requieren otros bloques adicionales:
● Un DB de instancia generado automáticamente
● Un bloque de datos "CONF_DB"
Este DB de configuración contiene los datos de configuración del trigger lógico. El DB de
configuración debe crearse y configurarse en el proyecto STEP 7.
Para llamar varios triggers lógicos es necesario disponer varios DBs de configuración.
Los números de la instrucción LOGICAL_TRIGGER y del DB de instancia se pueden modificar.

Validez
La instrucción LOGICAL_TRIGGER se puede utilizar en combinación con los siguientes tipos
de módulos:
● CP 343‑1 ERPC

Llamada
Interfaz de llamada en representación FUP
/2*,&$/B75,**(5
%22/

$&7

'21(

%22/

,17

,'

(5525

%22/

:25'

/$''5

67$786

:25'

,17

&21)B'%

,17

&QI/HYHO

Consulte también
Bloque de datos de configuración (Página 7456)
Forma de trabajar LOGICAL_TRIGGER (Página 7452)
Explicación de los parámetros formales - LOGICAL_TRIGGER (Página 7452)
Indicadores de la instrucción LOGICAL_TRIGGER (Página 7454)

Programación del PLC
Manual de programación y manejo, 11/2019

7451

Instrucciones
4.2 Instrucciones

Forma de trabajar LOGICAL_TRIGGER
Forma de trabajar
La siguiente tabla muestra los pasos que se realizan en una llamada de trigger por parte del
programa de usuario de la CPU.
Paso

Significado
1

La instrucción LOGICAL_TRIGGER se llama en el punto previsto del programa de usua‐
rio de la CPU con el correspondiente DB de instancia y el bloque de datos de configura‐
ción CONF_DB configurado.
● Si la instrucción LOGICAL_TRIGGER se llama con ACT = 1, se leen los datos de
trigger actuales y se envían al firmware del CP.
● Si la instrucción LOGICAL_TRIGGER se llama con ACT = 0, se actualizan sólo los
indicadores de estado DONE, ERROR y STATUS.

2

La instrucción LOGICAL_TRIGGER lee los datos de trigger actuales.

3

La instrucción LOGICAL_TRIGGER genera la PDU, que se envía al firmware del CP con
los datos de trigger actuales.

4

El firmware del CP genera el telegrama de datos y lo transfiere a la aplicación ERPC.

5

La aplicación ERPC envía el telegrama de datos a la estación ERP (sistema ERP o MES).

Consulte también
LOGICAL_TRIGGER para el trigger lógico (Página 7450)

Explicación de los parámetros formales - LOGICAL_TRIGGER
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la interfaz de
llamada de la instrucción LOGICAL_TRIGGER:
Parámetro

Declaración

Tipo de
datos

Valores posibles

Descripción

ACT

INPUT

BOOL

0

En el caso de una llamada de la instrucción LOGI‐
CAL_TRIGGER con ACT = 0 se actualizan los indica‐
dores de estado DONE, ERROR y STATUS.

1

Si se llama la instrucción LOGICAL_TRIGGER con
ACT = 1, los datos de trigger actuales se leen y se en‐
vían al CP.

ID

INPUT

INT

ID del trigger
Este valor identifica el trigger lógico configurado en el
Workbench ILS.

LADDR

INPUT

WORD

Dirección inicial del módulo
Al configurar el CP con STEP 7, aparece la dirección
inicial de módulo en la tabla de configuración de HW
Config. Indique aquí esta dirección.

7452

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

CONF_DB

INPUT

INT

CnfLevel

INPUT

INT

Valores posibles

Descripción
En este bloque de datos se encuentran los datos de
configuración de los trigger lógicos configurados.

0: Acuse de transporte

Modo de acuse

1: Acuse fin a fin

El acuse correspondiente se indica en el valor STATUS
de los indicadores de la instrucción LOGICAL_TRIG‐
GER.
● 0 = acuse de transporte (STATUS = 0000H)
Se notifica el éxito de la ejecución de la petición en
cuanto los datos se han transferido a la aplicación
ERPC.
Sin embargo, ello no significa necesariamente que
el telegrama de datos se haya enviado a la estación
ERP (sistema ERP o MES) o que la aplicación
ERPC no pueda determinar posteriormente un error.
● 1 = acuse fin a fin (STATUS = 0001H)
La petición no se acusa hasta que la aplicación
ERPC no ha comprobado los datos.
Con la variable "TriggerResponse" del DB de
configuración (DB_CONF) se notifica si la estación
ERP estaba accesible o si la aplicación ERPC se
encuentra en modo Store-and-Forward.
El acuse fin a fin supone un tiempo mayor de
ejecución de la petición que el acuse de transporte.

DONE

OUTPUT

BOOL

0: petición en curso
1: petición concluida

El parámetro indica si la petición para la transmisión del
área de datos de configuración se ha desarrollado sin
errores.
En caso de aceptarse la petición, el CP pone DONE a 0.
Mientras sea DONE = 0, no se puede activar ninguna
otra petición.
La tabla "Indicadores de la instrucción LOGICAL_TRIG‐
GER" informa sobre el significado en relación con los
parámetros ERROR y STATUS.

ERROR

STATUS

OUTPUT

OUTPUT

BOOL

WORD

0: -

Indicador de error

1: Caso de error

La tabla "Indicadores de la instrucción LOGICAL_TRIG‐
GER" informa sobre el significado en relación con los
parámetros DONE y STATUS.

Consulte la tabla "Indi‐
cadores de la instruc‐
ción LOGICAL_TRIG‐
GER"

Indicador de estado
La tabla "Indicadores de la instrucción LOGICAL_TRIG‐
GER" informa sobre el significado en relación con los
parámetros DONE y ERROR.

Consulte también
LOGICAL_TRIGGER para el trigger lógico (Página 7450)
Indicadores de la instrucción LOGICAL_TRIGGER (Página 7454)

Programación del PLC
Manual de programación y manejo, 11/2019

7453

Instrucciones
4.2 Instrucciones

Indicadores de la instrucción LOGICAL_TRIGGER
Indicadores
La tabla siguiente informa sobre la indicación a evaluar por el programa de usuario, formada
por DONE, ERROR y STATUS.
Tabla 4-446 Indicadores de la instrucción LOGICAL_TRIGGER
DONE

ERROR

STATUS

Significado

Indicadores sobre la ejecución de la petición
1

0

0000H

Petición terminada sin errores. El trigger lógico se ha concluido con éxito.

1

0

0001H

Petición terminada sin errores. La base de datos no está disponible (modo Store-andforward).

0

0

8181H

Petición en curso.

0

1

7000H

La instrucción LOGICAL_TRIGGER se ha llamado con ACT = 0. Sin embargo, la petición
no se procesa.
Llame la instrucción LOGICAL_TRIGGER como mínimo una vez con ACT = 1.

Indicadores sobre la configuración y el desarrollo del trigger lógico
0

1

80D2H

El CP utilizado no soporta la comunicación ERPC (tipo de CP erróneo).

0

1

8183H

El CP utilizado no soporta la comunicación ERPC (tipo de CP erróneo).

0

1

8187H

Estado no válido de la instrucción LOGICAL_TRIGGER (LOGICAL_TRIGGER_STATE
desconocido).

0

1

8A01H

La cantidad de trigger lógicos configurados es igual a 0.

0

1

8A02H

Para este trigger lógico no hay ninguna configuración en el bloque de datos de configu‐
ración.

Vuelva a llamar la instrucción LOGICAL_TRIGGER .

Compruebe la configuración del Workbench ILS.
0

1

8A03H

La estructura del bloque de datos de configuración no es correcta. El "header identifier"
no tiene el valor correcto.
Corrija el valor de la variable "ident" (véase el manual de producto ERPC-CP) en el DB
de configuración.

0

1

8A04H

La estructura del bloque de datos de configuración no es correcta.
Vuelva a cargar la configuración del Workbench ILS de nuevo en el CP, vuelva a crear el
o los DB de configuración y configúrelo(s) (véase el manual de producto ERPC-CP).

0

1

8A05H

El bloque de datos de configuración configurado no existe en la CPU.

0

1

8A06H

En una llamada sucesiva se ha llamado un trigger aún en ejecución con otro ID.
Compruebe la "ID" en la instrucción LOGICAL_TRIGGER llamada.

0

1

8A08H

Los datos de configuración del bloque de datos de configuración no existen, o no están
completos.
Si el error sólo se produce al arrancar la estación S7, la causa puede ser que los datos
de configuración del trigger lógico no se han transferido todavía por completo al bloque
de datos de configuración.
Si el error persiste, compruebe la configuración de los símbolos ERPC.

0

1

8A09H

En el bloque de datos de configuración se ha notificado un error desconocido.

0

1

8A0AH

El trigger lógico no se puede iniciar porque se está cargando una nueva configuración de
trigger.

7454

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8A0BH

Error al determinar el sello de tiempo del registro de datos actual (datos de la CPU)

0

1

8A0CH

El DB de configuración se ha generado con la propiedad "Unlinked".

0

1

8A0DH

Error en el parámetro de entrada CONF_DB de la instrucción LOGICAL_TRIGGER. El
parámetro tiene el valor "0" o es mayor que el número de DB máximo permitido para la
CPU.

0

1

8A0EH

El ID de trigger transferido no está dentro del rango admisible de 1...16.

Corrija las propiedades de objeto de la instrucción LOGICAL_TRIGGER.

Corrija el valor en la llamada de la instrucción LOGICAL_TRIGGER en el programa de
usuario.
0

1

8A0FH

El modo de acuse predeterminado (CnfLevel) no es válido.
Corrija el valor en la llamada de la instrucción LOGICAL_TRIGGER en el programa de
usuario.

0

1

8BxxH

Error al copiar valores de variables actuales en la PDU del trigger lógico. Los últimos dos
dígitos (xx) proporcionan el número de la variable.
Compruebe la configuración del símbolo afectado en la tabla de símbolos de la CPU y en
la lista de símbolos ERPC en el diálogo de propiedades del CP.

0

1

8C01H

El indicador de estado interno de la instrucción LOGICAL_TRIGGER no es válido.
Vuelva a cargar la configuración del Workbench ILS de nuevo en el CP, vuelva a crear el
o los DB de configuración y configúrelo(s) (véase el manual de producto ERPC-CP).

0

1

8C02H

El valor de respuesta del acuse fin a fin no es válido.
Vuelva a cargar la configuración del Workbench ILS de nuevo en el CP, vuelva a crear el
o los DB de configuración y configúrelo(s) (véase el manual de producto ERPC-CP).

0

1

8C03H

El disparador lógico contiene más de 255 variables.

0

1

8C06H

Leer error en registro.

0

1

8D03H

En una acción de base de datos, el firmware notifica un timeout.

0

1

8D04H

La aplicación de base de datos notifica un error general en el acuse de la acción actual.

0

1

8E01H

El bloque de datos de configuración configurado en la CPU no tiene el tamaño suficiente.
Modifique el tamaño del bloque de datos de configuración.

0

1

8E06H

Todavía no se ha establecido una conexión con el disparador lógico.

0

1

8EXXH

Este código de estado con valores para XXH en el rango entre 02H y FFH corresponde a
representaciones de una respuesta interna de trigger.
Si aparecen este tipo de valores, son relevantes para el servicio técnico.

Consulte también
LOGICAL_TRIGGER para el trigger lógico (Página 7450)
Explicación de los parámetros formales - LOGICAL_TRIGGER (Página 7452)

Programación del PLC
Manual de programación y manejo, 11/2019

7455

Instrucciones
4.2 Instrucciones

Bloque de datos de configuración
Puesta a disposición del bloque de datos de configuración "CONF_DB"
Si se utiliza la función ERPC "Trigger lógico", es necesario crear en STEP 7 un bloque de datos
(DB) para los datos de configuración del trigger lógico e indicarlo en los parámetros de llamada
de la instrucción LOGICAL_TRIGGER . La instrucción LOGICAL_TRIGGER accede al
CONF_DB. Para el programa de usuario, el CONF_DB no tiene mayor relevancia.

Programación del bloque de datos de configuración
Para identificar el nuevo DB creado es necesario abrir el DB y definir el "header identifier" y el
tamaño de DB en las dos primeras líneas libres.
Abra el DB en STEP 7 y configure las dos primeras líneas libres con las variables "ident" y
"data" del siguiente modo:
Dirección

Nombre

*)

Tipo

Valor inicial

Comentario (opcional)

DW#16#45525043

header identifier

STRUCT *)

*)

ident

DWORD

*)

data

array[1..2048]

*)

Byte

*)

END_STRUCT *)

Tamaño de DB (véanse las
advertencias indicadas a con‐
tinuación)

*) Los valores son definidos por el programa

Nota
Tamaño de DB
Para el tamaño de DB se recomienda el valor 2 048 bytes. Si durante la puesta en marcha
constata que el valor no es suficiente, auméntelo. La instrucción LOGICAL_TRIGGER notifica
un valor demasiado bajo con un error y con STATUS "8A05H".

Consulte también
LOGICAL_TRIGGER para el trigger lógico (Página 7450)

7456

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

PROFIBUS
Introducción de PROFIBUS
Indicaciones generales sobre las instrucciones para CPs PROFIBUS
Instrucciones disponibles
La siguiente lista muestra los nombres simbólicos de los bloques de programa (instrucciones)
que se utilizan en el estado de suministro. Los nombres simbólicos pueden ser modificados por
el usuario.
Servicio de comunicación / área de funciones

PROFIBUS DP

SEND / RECEIVE
(Servicios de comunicación abiertos)

Comunicación S7

Instrucción (nombre
simbólico) 1)

Biblioteca
CP 300

CP 400

DP_SEND

x

x

DP_RECV

x

x

DP_DIAG

x

x

DP_CTRL

x

x

AG_SEND

x

AG_RECV

x

AG_LSEND

x

AG_LRECV

x

BSEND

x

BRCV

x

PUT

x

GET

x

USEND

x

URCV

x

C_CNTRL

x

1) Observación:
Las descripciones siguientes contienen también referencias a comportamientos discrepantes en caso de versiones de
instrucciones diferentes. Preste también atención a la identificación de versión de las instrucciones utilizadas por usted.
Las bibliotecas globales del SIMATIC Manager instaladas con el Automation Workbench contienen las versiones de
instrucciones actuales del momento de la habilitación de STEP 7.

Programación del PLC
Manual de programación y manejo, 11/2019

7457

Instrucciones
4.2 Instrucciones

¿Qué versión de bloque se debe utilizar?
Las descripciones siguientes contienen también referencias a comportamientos discrepantes
en caso de versiones de instrucciones diferentes. Preste también atención a la identificación
de versión de las instrucciones utilizadas por usted.
Nota
Se recomienda utilizar siempre las versiones de instrucciones actuales para todos los tipos de
módulos.
Encontrará informaciones sobre las versiones de instrucciones actuales, así como las
instrucciones actuales en nuestro Customer Support en Internet, desde donde las podrá
descargar:
http://support.automation.siemens.com/WW/view/de/8797900
En el caso de tipos de módulos menos recientes, esta recomendación presupone que usted
utilice la versión de firmware actual para este tipo de módulo.

Instrucciones en caso de repuesto
Se entiende por caso de sustitución en este contexto la sustitución de un módulo por otro
módulo de versión eventualmente más moderna.
Nota
Tenga en cuenta que, en el caso de utilizar recambios, en el programa de usuario se deben
utilizar sólo las instrucciones autorizadas para el tipo de CP configurado.
Se recomienda utilizar siempre las versiones de instrucciones actuales para todos los tipos de
módulos. En el caso de tipos de módulos menos recientes, esta recomendación presupone
que usted utilice la versión de firmware actual para este tipo de módulo.
Más información acerca de casos de sustitución, encontrará en nuestro Customer Support en
Internet.
http://support.automation.siemens.com/WW/view/de/7806643
Los manuales del equipo informan sobre la compatibilidad de los CPs S7 y las instrucciones
correspondientes.

Parametrización de llamadas de las instrucciones
Antes de pasar a describir en detalle las instrucciones, se ofrecen aquí algunas informaciones
de índole general sobre la llamada y la parametrización de las instrucciones.
Aquí se pueden dar informaciones generales sobre los siguientes grupos de parámetros,
existentes en todas las instrucciones:
● Parámetros para coordinación de CP y enlaces (parámetros de entrada)
● Parámetros para definir una determinada área de datos de la CPU (parámetros de entrada)
● Informaciones sobre estado/status (parámetros de salida)

7458

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Llamar instrucciones de comunicación para S7-300
ATENCIÓN
No se permite llamar las instrucciones de comunicación para S7-300 en varios niveles de
proceso. Si, por ejemplo, llama una instrucción de comunicación en OB1 y en OB35, el
procesamiento de la instrucción podría ser interrumpido por el OB de prioridad
respectivamente superior.
Si llama instrucciones en varios OBs, tiene que procurar, a través de la programación, que
una instrucción de comunicación en procesamiento no sea interrumpida por otras
instrucciones de comunicación (por ejemplo, por medio de las instrucciones del sistema
Bloquear/Liberar alarmas).

Parámetros para definir una determinada área de datos de la CPU (parámetros de entrada)
Indicar el área de datos en la CPU
Al llamar una instrucción transmite usted la dirección y la longitud del área de datos de la CPU
en la que se deben disponer o almacenar datos útiles o bien que puede contener otras
informaciones relativas a la parametrización.
Para el direccionamiento de esta área se utiliza el tipo de datos del puntero ANY.

Informaciones sobre estado/status (parámetros de salida)
Evaluar indicaciones de estados
Para la evaluación del estado se tienen que evaluar estos parámetros en el programa de
usuario:
● DONE o NDR
Estos parámetros (DONE en el caso de peticiones de envío o NDR para peticiones de
recepción) notifica la conclusión (con resultado positivo) de una ejecución de la petición.
● ERROR
Notifica que la petición no se ha podido ejecutar sin errores.
● STATUS
El parámetro proporciona información detallada sobre la ejecución de la petición. Se
pueden proporcionar indicaciones de estado ya durante la ejecución de la petición
(DONE=0 y ERROR=0).
Nota
Tenga en cuenta que las indicaciones de estado DONE, NDR, ERROR y STATUS se
actualizan con cada llamada de la instrucción.

Programación del PLC
Manual de programación y manejo, 11/2019

7459

Instrucciones
4.2 Instrucciones

Indicaciones de estado al arrancar el CP
Al rearrancar el CP Ethernet, los parámetros de salida de la instrucción se resetean como
sigue:
● DONE = 0
● NDR = 0
● ERROR = 0
● STATUS = 8180H ó 8181H

Instrucciones para los Servicios de comunicación abiertos (interfaz SEND/RECEIVE)
Instrucciones para enlaces FDL (interfaz SEND/RECEIVE)
Panorámica
En la interfaz SEND/RECEIVE están disponibles las siguientes instrucciones para la
transmisión de datos a través de enlaces FDL configurados:
Instrucción

utilizable para 1)

S7-300

S7-400

Significado

AG_SEND

x

x

para enviar datos

AG_RECV

x

x

para recibir datos

AG_LSEND

x

para enviar datos

AG_LRECV

x

para recibir datos

1) Observaciones sobre las instrucciones para S7-300 y S7-400
Para garantizar la compatibilidad de PROFIBUS y Industrial Ethernet en la interfaz del
programa de usuario se pueden utilizar las instrucciones AG_LSEND y AG_LRECV para
PROFIBUS como alternativa a AG_SEND o AG_RECV. No hay diferencias en la interfaz ni en
el comportamiento. Pero en PROFIBUS, con estas instrucciones, destinadas para la
transmisión de registros de datos largos en Industrial Ethernet, sólo se pueden transmitir
cantidades de datos de 240 bytes, como máximo.
Condición para ello es que el tipo y la versión de las instrucciones estén autorizados para el tipo
de CP utilizado.
En el caso de los CPs S7 para S7-300 se utilizan exclusivamente las instrucciones AG_SEND
y AG_RECV; en Industrial Ethernet, también para la transmisión de registros de datos largos.
Los manuales del equipo informan sobre la compatibilidad de los CPs S7 y las instrucciones
correspondientes. Encontrará una tabla general de las versiones de instrucciones en el
historial de la documentación y los bloques.

7460

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Uso
El esquema siguiente explica la aplicación de las instrucciones AG_SEND / AG_LSEND y
AG_RECV / AG_LRECV para la transferencia de datos bidireccional a través de un enlace FDL
configurado.
Para determinados tipos de enlaces se tiene que prever una cabecera (header) de petición en
el área de datos del usuario.
CPU
Programa de
usuario
STEP 7

CPU
Programa de
usuario
STEP 7

Enlace FDL
vía
PROFIBUS

Campos de datos
DP

Figura 4-76

PROFIBUS-CP

PROFIBUS-CP

Campos de datos
DP

AG_SEND

enviar

recibir

AG_RECV

AG_RECV

recibir

enviar

AG_SEND

Utilizar AG_SEND y AG_RECV en ambos interlocutores de comunicación

Aplicación sin cabecera de petición
En el caso de un enlace FDL especificado, los parámetros de dirección y petición son definidos
por la configuración del enlace. Por lo tanto, el programa de usuario sólo proporciona los datos
útiles en el campo de datos FDL al enviar con AG_SEND / AG_LSEND, o los recibe con
AG_RECV / AG_LRECV.
Pueden transmitirse hasta 240 Byte de datos útiles. Esto es válido en PROFIBUS para
AG_SEND y AG_LSEND.

Aplicación con cabecera de petición
Los siguientes tipos de enlaces exigen una cabecera de petición en el área de datos (de
usuario) FDL:
● Enlace FDL no especificado con acceso libre a Layer 2
● Enlace FDL con Broadcast
● Enlace FDL con Multicast
Vea en la ilustración siguiente la estructura del búfer de peticiones y el significado y el
emplazamiento de los parámetros en la cabecera de la petición.

Programación del PLC
Manual de programación y manejo, 11/2019

7461

Instrucciones
4.2 Instrucciones
Campo de datos de usuario
Búfer de peticiones
Cabecera de
petición

PB−Adresse

LSAP

Byte 0, 1

Service

unbenutzt

Byte 2, 3

Datenbyte 0

Datenbyte 1

Byte 4, 5

Byte datos 234

Byte datos 235

Datos útiles

Figura 4-77

Byte 238, 239

Enviar y recibir a través de un enlace FDL con direccionamiento Broadcast por programa

El campo de datos de usuario puede tener hasta 240 Byte. Pueden transmitirse hasta 236 Byte
de datos útiles. 4 Byte están reservados para la cabecera de la petición.
Tenga en cuenta que la longitud de datos indicada al llamar la instrucción (parámetro LEN) ha
de contener la cabecera (Header) y los datos útiles.

AG_SEND / AG_LSEND
AG_SEND / AG_LSEND (PROFIBUS)
Descripción
La instrucción AG_SEND / AG_LSEND entrega datos al CP PROFIBUS para su transmisión a
través de una conexión FDL configurada.
El área de datos indicada puede ser un área PA, un área de marcas o un área de bloques de
datos.
Si ha sido posible enviar a través de PROFIBUS toda el área de datos de usuario, esto se
señaliza para notificar la ejecución correcta.
Observación:
Todos los datos siguientes son igualmente válidos para AG_SEND y AG_LSEND, a no ser que
se indique lo contrario.

7462

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Llamada
Interfaz de llamada en representación FUP
$*B6(1'$*B/6(1'$*B66(1'
%22/

$&7

,17

'21(

%22/

,'

(5525

%22/

:25'

/$''5

67$786

:25'

$1<

6(1'

,17

/(1

Llamadas con encabezado de petición
Vea en la tabla siguiente para qué tipos de conexiones y qué tipos de peticiones se tienen que
abastecer parámetros en el encabezado de la petición.
El encabezado de petición está en el área de datos (de usuario) FDL. Allí ocupa los primeros
4 bytes y se tiene que sumar al indicar la longitud en el parámetro LEN. La longitud máxima de
datos de usuario se reduce así a 236 bytes en el caso de peticiones con encabezado.
Tabla 4-447 Abastecimiento del encabezado de petición en el área de datos de usuario
Parámetro

Tipo de conexión FDL

no especifica‐ Broadcast
do: Layer 2 li‐
bre 2)

Multicast

Dirección PB

para AG_SEND sin re‐
levancia; pero el área
se tiene que reservar.

Dirección de la estación de desti‐
no
Rango de valores:
0..126 según dispositivo /
127 para Broadcast/Multicast

LSAP

LSAP de la estación de destino
Rango de valores:
0..62 según dispositivos /
63 para Broadcast

Service 1)

para AG_SEND sin re‐
levancia; pero el área
se tiene que reservar.

sin relevancia; pero el
sin relevancia; pero el
área se tiene que reser‐ área se tiene que reser‐
var.
var.

sin relevancia; pero el
SDA ( Send Data with Acknowled‐ sin relevancia; pero el
área se tiene que reser‐ área se tiene que reser‐
ge):
var.
var.
valor: 00H
SDN ( Send Data with No Acknow‐
ledge):
valor: 01H

1)

para Broadcast y Multicast solo es posible Service SDN.

Los datos relativos a Broadcast y Multicast de esta columna solo son relevantes en el caso
de que se utilice una conexión FDL no especificada para Broadcast o Multicast. En el caso de
una conexión FDL configurada (aplicación recomendada) con Broadcast o Multicast como
interlocutor de conexión, los parámetros de dirección se asignan automáticamente de acuerdo
con la configuración.
2)

Programación del PLC
Manual de programación y manejo, 11/2019

7463

Instrucciones
4.2 Instrucciones

Consulte también
Parámetros en el caso de AG_SEND / AG_LSEND (PB) (Página 7464)
Parámetros DONE, ERROR, STATUS (PB) (Página 7465)
Ejemplo para AG_SEND (PB) (Página 7467)
AG_SEND / AG_LSEND / AG_SSEND (Ind.Ethernet) (Página 7316)

Parámetros en el caso de AG_SEND / AG_LSEND (PB)
Explicación de los parámetros formales
La tabla representada a continuación explica los parámetros formales de la instrucción
AG_SEND / AG_LSEND:
Parámetro

Declaración

Tipo de da‐
tos

Valores posibles

Descripción

ACT

INPUT

BOOL

0,1

En el caso de una llamada de la instrucción con ACT = 1
se envían LEN Bytes del área de datos indicada con el
parámetro SEND.
En el caso de una llamada de la instrucción con ACT = 0
se actualizan las indicaciones de estado DONE, ERROR
y STATUS.

ID

INPUT

INT

1,2...64
(S7-400)

En el parámetro ID se indica el número del enlace FDL.

1,2...16
(S7-300)
LADDR

INPUT

WORD

Dirección inicial del módulo
Al configurar el CP aparece la dirección inicial de módulo
en la tabla de configuración. Indique aquí esta dirección.

SEND

INPUT

ANY

Indicar la dirección y la longitud

(como
VARTYPE
sólo se admi‐
te:

La dirección del área de datos remite como alternativa a:
● Área PA
● Área de marcas
● Área de bloques de datos

BYTE,
WORD y
DWORD
LEN

INPUT

INT

En caso de llamada con cabecera de petición, el área de
datos FDL contiene la cabecera de petición y los datos
útiles.
1,2,...240 (o hasta
"dato de longitud en
parámetro SEND")

Cantidad de bytes que se deben enviar junto con la pe‐
tición desde el área de datos FDL. Este número puede
estar comprendido entre 1 y "dato de longitud en pará‐
metro SEND".
En caso de llamada con cabecera de petición, la longitud
de compone de la cabecera de petición (4 bytes) + datos
útiles (1..236 bytes). Por lo tanto es LEN >= 4.

DONE

7464

OUTPUT

BOOL

0: 1: nuevos datos

El parámetro de estado indica si la petición se ha ejecu‐
tado sin errores.
La tabla siguiente informa sobre el significado en rela‐
ción con los parámetros ERROR y STATUS

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos

Valores posibles

Descripción

ERROR

OUTPUT

BOOL

0: 1: caso de error

Indicación de fallo

Véase la tabla si‐
guiente

Indicación de estado

STATUS

OUTPUT

WORD

La tabla siguiente informa sobre el significado en rela‐
ción con los parámetros DONE y STATUS.
La tabla siguiente informa sobre el significado en rela‐
ción con los parámetros DONE y ERROR.

Consulte también
AG_SEND / AG_LSEND (PROFIBUS) (Página 7462)

Parámetros DONE, ERROR, STATUS (PB)
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho
sobre el parámetro de salida RET_VAL en las descripciones de los bloques de programa del
sistema referenciados.
Puede consultar mediante STEP 7 los bloques de programa del sistema que se utilizan y los
que son relevantes para la evaluación de errores.

Tabla 4-448 Códigos de condición de AG_SEND
DONE

ERROR

STATUS

Significado

1

0

0000H

Petición terminada sin errores.

0

0

0000H

Ninguna petición en proceso.

0

0

8181H

Petición en curso.

0

1

7000H

Este código es solo posible en S7-400: La instrucción se ha llamado con ACT=0; pero la
petición no se procesa.

0

1

8183H

Falta la configuración o no se ha iniciado aún el servicio FDL en el CP PROFIBUS.

0

1

8184H

Posibles causas:
● Se ha indicado un tipo de datos no permitido para el parámetro SEND.
● Conexión FDL sin búfer de peticiones Error del sistema.
● Conexión FDL con búfer de peticiones Parámetro LEN<4 o parámetro no permitido en
el encabezado de petición (con acceso libre a Layer 2).

0

1

8185H

Parámetro LEN mayor que el área fuente SEND.

0

1

8186H

Parámetro ID no válido. ID != 1,2....15,16.

0

1

8301H

SAP no activado en la estación de destino.

Programación del PLC
Manual de programación y manejo, 11/2019

7465

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8302H

No hay recursos de recepción en la estación de destino, la estación emisora no puede
procesar con suficiente rapidez los datos recibidos o no ofrece recursos de recepción
suficientes.

0

1

8303H

El servicio PROFIBUS ( SDA-Send Data with Acknowledge) no es soportado en este SAP
por la estación de destino.
El código de condición puede aparecer también temporalmente al cargar conexiones o
transiciones de red "en RUN".

0

1

8304H

La conexión FDL no está establecida.

0

1

8311H

No se puede acceder a la estación de destino con la dirección PROFIBUS indicada o bien
el servicio utilizado no es posible para la dirección PROFIBUS indicada.

0

1

8312H

Error PROFIBUS en el CP: p. ej. cortocircuito, la estación propia no está en el anillo.

0

1

8315H

Posibles causas:
● Error de parámetro interno en una conexión FDL con encabezado de petición:
Parámetro LEN<4 o parámetro no permitido en el encabezado de petición (con
acceso libre a Layer 2).
● Fallo del bus
Posible significado adicional:
● El indicador de error se puede presentar también en caso de perturbaciones en el bus
(por ejemplo, si se producen fallos físicos debido a terminaciones de línea
defectuosas o a diferencias en los ajustes de la velocidad de transmisión en los
dispositivos).

0

1

8F22H

Área fuente no valida, p. ej.:
Área no existente en DB
Parámetro LEN < 0

0

1

8F24H

Error de área al leer un parámetro.

0

1

8F28H

Error de alineación al leer un parámetro.

0

1

8F32H

El parámetro contiene número de DB demasiado alto.

0

1

8F33H

Error del número DB.

0

1

8F3AH

Área de destino no cargada (DB).

0

1

8F42H

Retardo en acuse al leer un parámetro del área de periferia.

0

1

8F44H

La dirección del parámetro a leer está inhibida en la pista de acceso.

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.
p. ej., parámetro LEN = 0 .

0

1

8090H

● No existe un módulo con esta dirección inicial de módulo.
● La instrucción utilizada no es acorde con la familia de sistemas utilizada (se tienen
que utilizar instrucciones diferentes para S7-300 y S7-400).

0

1

8091H

La dirección base lógica no está en formato de palabra doble.

0

1

8092H

En la referencia ANY se ha indicado un tipo distinto de BYTE.
(solo para S7-400)

0

1

80A4H

La conexión de bus K entre CPU y CP no está establecida. (en CPUs con versiones más
actuales).
Esto se puede deber, por ejemplo, a lo siguiente:
● falta configuración de conexiones;
● se supera la cantidad máxima de CPs que pueden trabajar en paralelo (ver
información al respecto en el manual del CP).

7466

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

80B0H

El módulo no conoce el registro.

0

1

80B1H

Área de destino no válida.
El número de datos que deben enviarse sobrepasa el límite superior admisible para este
servicio (p. ej. área de destino > 240 bytes).

0

1

80B2H

La conexión de bus K entre CPU y CP no está establecida (en caso de versiones de CPU
menos recientes; en otro caso 80A4H; consulte allí más información)

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Medio de servicio (memoria) ocupado.

0

1

80C4H

Error de comunicación (se presenta temporalmente; por ello es conveniente una repeti‐
ción en el programa de usuario.

0

1

80D2H

Dirección inicial del módulo errónea.

Consulte también
AG_SEND / AG_LSEND (PROFIBUS) (Página 7462)

Ejemplo para AG_SEND (PB)
Ejemplo de llamada y análisis de los parámetros
A continuación encontrará un ejemplo ejecutable para la llamada y el análisis de los
parámetros de una instrucción AG_SEND.
La instrucción "AE_460_1" aquí elegida, en la que tiene lugar la llamada de emisión, incluye el
OB100 mostrado más abajo; el OB100 ajusta correctamente el bit ACT al arrancar la CPU.
Para lograr un funcionamiento correcto ha de estar cargado un DB100 con un tamaño mínimo
de 240 bytes.

Programación del PLC
Manual de programación y manejo, 11/2019

7467

Instrucciones
4.2 Instrucciones
El programa exige un CP en la dirección 256 así como la existencia de un enlace configurado
del tipo ISO‑Transport / ISO-on-TCP / TCP- o FDL con el ID=1 (hacer las adaptaciones
necesarias).
//-------------------------------------------------------------------FUNCTION FC 100: VOID
TITLE = SENDE_DEMO
AUTHOR : Tester
FAMILY : S7300
NAME : FC5_Demo
VERSION : 1.0
//-------------------------------------------------------------------BEGIN
CALL FC 5 (
ACT
:= M100.0,
ID
:= 1,
LADDR
:= W#16#100,
SEND
:= P#DB100.dbx0.0 BYTE 240,
LEN
:= 240,
DONE
:= M100.1,
ERROR
:= M100.2,
STATUS
:= MW102 );
//-------------------------------------------------------------------R M100.0;
//
Resetear parámetro ACT para todas las
SET;
//
futuras llamadas de AG_SEND
U M100.1;
//
SPB done;
//
Comprobar si DONE = TRUE
SET;
//
U M100.2;
//
SPB err;
//
Comprobar si ERROR = TRUE
//-------------------------------------------------------------------BEA;
//
No está puesto DONE ni ERROR; la
//
petición aún está en ejecución.
//-------------------------------------------------------------------done:
S M100.0;
//
Petición terminada sin errores. Poner
BEA;
//
ACT = TRUE para que la llamada siguiente
pueda impulsar la nueva petición.
//--------------------------------------------------------------------

7468

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
err:

NOP 1;
NOP 1;
S M100.0;
BEA;

//
//
//
//

Se ha presentado un error Aquí se puede
analizar la palabra de estado. Poner en
cualquier caso ACT en TRUE, para que se
pueda impulsar una nueva petición de
emisión si desaparece el error.
//-------------------------------------------------------------------END_FUNCTION
ORGANIZATION_BLOCK OB100
TITLE
= Init_for_FC100
FAMILY:
S7300
NAME:
SENDE_DEMO_INIT
VERSION:
1.0
VAR_TEMP
OB1_System: array [1..20] of byte;
END_VAR
//-------------------------------------------------------------------BEGIN
//
SET
//
S M100.0
//
Inicialización del parámetro ACT
END_ORGANIZATION_BLOCK

AG_RECV / AG_LRECV
AG_RECV / AG_LRECV (PROFIBUS)
Descripción
La instrucción AG_RECV / AG_LRECV toma del CP PROFIBUS los datos transmitidos a
través de una conexión FDL configurada.
El área de datos indicada para la toma de datos puede ser un área PA, un área de marcas o
un área de bloques de datos.
Se señala que la función ha sido ejecutada sin errores cuando se hayan podido recibir los
datos del CP PROFIBUS.
Observación:
Todos los datos siguientes son igualmente válidos para AG_RECV y AG_LRECV, a no ser que
se indique lo contrario.

Programación del PLC
Manual de programación y manejo, 11/2019

7469

Instrucciones
4.2 Instrucciones

Interfaz de llamada
Interfaz de llamada en representación FUP
$*B5(&9$*B/5(&9
1'5

%22/

,17

,'

(5525

%22/

:25'

/$''5

67$786

:25'

$1<

5(&9

/(1

,17

Llamadas con encabezado de petición
Tabla 4-449 Parámetros de retorno en el encabezado de petición en el área de datos (de usuario) FDL.
Parámetro

Tipo de conexión FDL

no especifica‐ Broadcast
do: Layer libre
2)

Multicast

Dirección PB

Dirección del emisor
Rango de valores: 0..126 según dispositivo

LSAP

LSAP del emisor
Rango de valores: 0..63 según dispositivo

Service

Indicador SDN

Indicador SDN

(Send Data with No Acknowledge
- Indication):
valor: 01H

(Send Data with No Ack‐ (Send Data with No Ack‐
nowledge - Indication): nowledge - Indication):
valor: 7FH
valor: 7FH

Indicador SDN

o bien
Indicador SDA ( Send Data with
Acknowledge - Indication):
valor: 00H

Consulte también
Parámetros en el caso de AG_RECV / AG_LRECV (PB) (Página 7471)
Parámetros DONE, ERROR, STATUS (PB) (Página 7472)
AG_RECV / AG_LRECV / AG_SRECV (Ind.Ethernet) (Página 7321)

7470

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros en el caso de AG_RECV / AG_LRECV (PB)
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales de la instrucción
AG_RECV / AG_LRECV:
Parámetro

Declaración Tipo de datos

Valores posibles

Descripción

ID

INPUT

INT

1,2...16 (S7-300)
1,2...32 (S7-400)

En el parámetro ID se indica el número del enlace FDL.

LADDR

INPUT

WORD

Dirección inicial del módulo
Al configurar el CP aparece la dirección inicial de módu‐
lo en la tabla de configuración. Indique aquí esta direc‐
ción.

RECV

INPUT

ANY

Indicar la dirección y la longitud

(como VARTY‐
PE sólo se admi‐
te:

La dirección del área de datos FDL remite como alter‐
nativa a:
● Área PA

BYTE, WORD y
DWORD

● Área de marcas
● Área de bloques de datos
En caso de llamada con cabecera de petición, el área de
datos FDL contiene la cabecera de petición y los datos
útiles.

LEN

OUTPUT

INT

1,2,...240

Indica el número de bytes que se han tomado del CP
PROFIBUS en el área de datos.
En caso de llamada con cabecera de petición, la longi‐
tud de compone de la cabecera de petición (4 bytes) +
datos útiles (1..236 bytes). Por lo tanto es LEN >= 4.

NDR

OUTPUT

BOOL

0: 1: nuevos datos

Este parámetro señaliza si se han aceptado nuevos da‐
tos.
La tabla siguiente informa sobre el significado en rela‐
ción con los parámetros ERROR y STATUS.

ERROR

STATUS

OUTPUT

OUTPUT

BOOL

WORD

0: 1: caso de error

Indicación de fallo

Véase la tabla si‐
guiente

Indicación de estado

Para saber su significado en relación con los paráme‐
tros NDR y STATUS, véase la tabla siguiente.
Para saber su significado en relación con los paráme‐
tros NDR y ERROR, véase la tabla siguiente.

Consulte también
AG_RECV / AG_LRECV (PROFIBUS) (Página 7469)

Programación del PLC
Manual de programación y manejo, 11/2019

7471

Instrucciones
4.2 Instrucciones

Parámetros DONE, ERROR, STATUS (PB)
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por los parámetros
NDR, ERROR y STATUS, que tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho
sobre el parámetro de salida RET_VAL en las descripciones de los bloques de programa del
sistema referenciados.
Puede consultar mediante STEP 7 los bloques de programa del sistema que se utilizan y los
que son relevantes para la evaluación de errores.

Tabla 4-450 Códigos de condición de AG_RECV / AG_LRECV
NDR

ERROR

STATUS

Significado

1

0

0000H

Nuevos datos aceptados.

0

0

8180H

● Aún no hay datos.
Falta la configuración o aún no se ha iniciado el servicio FDL en el CP PROFIBUS
(aparece en lugar del código de condición 0,1,8183H).

0

0

8181H

Petición en curso.

0

1

8183H

Falta la configuración o no se ha iniciado aún el servicio FDL en el CP PROFIBUS.

0

1

8184H

● Se ha indicado un tipo de datos no permitido para el parámetro RECV.

0

1

8185H

Búfer de destino (RECV) demasiado pequeño.

● Error del sistema.
0

1

8186H

Parámetro ID no válido. ID != 1,2....15,16.

0

1

8303H

El servicio PROFIBUS (SDA-SendDatawithAcknowledge) no se soporta en este SAP.
El código de condición puede aparecer también temporalmente al cargar conexiones o
transiciones de red "en RUN".

0

1

8304H

La conexión FDL no está establecida.

0

1

8F23H

Área fuente no valida, p. ej.:
Área no presente en DB.

0

1

8F25H

Error de área al escribir un parámetro.

0

1

8F29H

Error de alineación al escribir un parámetro

0

1

8F30H

El parámetro está en el 1er. bloque de datos act. protegido de escritura.

0

1

8F31H

El parámetro está en el segundo bloque de datos act. protegido de escritura.

0

1

8F32H

El parámetro contiene número de DB demasiado alto.

0

1

8F33H

Error del número DB.

0

1

8F3AH

Área de destino no cargada (DB).

0

1

8F43H

Retardo en acuse al escribir un parámetro en el
área de periferia.

0

1

8F45H

La dirección del parámetro que debe escribirse está bloqueada en la pista de acceso.

7472

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
NDR

ERROR

STATUS

Significado

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.

0

1

8090H

● No existe un módulo con esta dirección inicial de módulo.
● La instrucción utilizada no es acorde con la familia de sistemas utilizada (se tienen
que utilizar instrucciones diferentes para S7-300 y S7-400).

0

1

8091H

La dirección base lógica no está en formato de palabra doble.

0

1

8092H

En la referencia ANY se ha indicado un tipo distinto de BYTE.
(solo para S7-400)

0

1

80A0H

Acuse negativo al leer del módulo.

0

1

80A4H

La conexión de bus K entre CPU y CP no está establecida. (en CPUs con versiones más
actuales).
Esto se puede deber, por ejemplo, a lo siguiente:
● falta configuración de conexiones;
● se supera la cantidad máxima de CPs que pueden trabajar en paralelo (ver
información al respecto en el manual del CP).

0

1

80B0H

El módulo no conoce el registro.

0

1

80B1H

Posibles causas:
● El área de destino no es válida.
● El área de destino es demasiado pequeña.
● El área de destino para los datos de recepción no se ha calculado bien.
Solución: realice otra llamada de recepción con el tamaño máximo del búfer de recep‐
ción. Esto sirve independientemente del tipo de conexión (Unicast/Multicast/Broadcast)
y de la familia de dispositivos (S7-300 / S7-400).

0

1

80B2H

La conexión de bus K entre CPU y CP no está establecida.

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Medio de servicio (memoria) ocupado.

0

1

80C4H

Error de comunicación (se presenta temporalmente; por ello es conveniente una repeti‐
ción en el programa de usuario).

0

1

80D2H

Dirección inicial del módulo errónea.

Consulte también
AG_RECV / AG_LRECV (PROFIBUS) (Página 7469)

Programación del PLC
Manual de programación y manejo, 11/2019

7473

Instrucciones
4.2 Instrucciones

Instrucciones para la DP (periferia descentralizada) para S7-300
Instrucciones para el modo DP en S7-300
Panorámica
Para los modos maestro DP y esclavo DP se dispone de las siguientes instrucciones para
S7-300:
Instrucción

DP_SEND

utilizable para

Significado

Maestro DP

Esclavo
DP

X

X

para enviar datos

DP_RECV

X

X

para recibir datos

DP_DIAG

X

-

para funciones de diagnóstico desde
el maestro DP

DP_CTRL

X

-

para funciones de control

Uso
La representación siguiente aclara la aplicación de las instrucciones DP_SEND y DP_RECV
en el maestro DP y el esclavo DP.
'30DVWHU
&38

'36ODYH
352),%86&3

352),%86&3

&38

3URJUDPDGH
XVXDULR
67(3

3URJUDPDGH
XVXDULR
67(3

&DPSRVGHGDWRV
'3

&DPSRVGHGDWRV
'3

'3B6(1'

HQYLDU

'3B5(&9

UHFLELU

UHFLELU

'3B5(&9

HQYLDU

'3B6(1'

352),%86

Figura 4-78

7474

Uso de las instrucciones DP_SEND y DP_RECV en el maestro DP y el esclavo DP

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

DP_SEND
DP_SEND
Descripción
La instrucción DP_SEND transmite datos al CP PROFIBUS. Dependiendo del modo operatiivo
del CP PROFIBUS, DP_SEND tiene el siguiente significado:
● Para uso en el maestro DP
La instrucción transfiere los datos de un área de salida DP indicada al CP PROFIBUS, para su
emisión a la periferia descentralizada.
● Para uso en el esclavo DP
La instrucción transfiere los datos de entrada del esclavo DP al CP PROFIBUS, para su
transmisión al maestro DP
El área de datos indicada puede ser un área PA, un área de marcas o un área de bloques de
datos.
Se señala que la función ha sido ejecutada sin errores cuando se haya podido recibir toda el
área de datos DP del CP PROFIBUS.
Para iniciar el maestro DP hay que anteponer una llamada de DP_SEND o DP_RECV en la
secuencia de llamada. Para esta primera llamada rige lo siguiente:
Si se utiliza DP_SEND para la inicialización, el área de datos transferida no se aplicará y se
enviará "0" a los esclavos. Los datos de usuario transferidos no se enviarán hasta la segunda
llamada del bloque.

Interfaz de llamada
DP_SEND
WORD

CPLADDR

ANY

SEND

DONE

BOOL

ERROR

BOOL

STATUS

WORD

Consulte también
Parámetros en el caso de DP_SEND (Página 7476)
Parámetros DONE, ERROR, STATUS (Página 7477)

Programación del PLC
Manual de programación y manejo, 11/2019

7475

Instrucciones
4.2 Instrucciones

Parámetros en el caso de DP_SEND
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales de la instrucción
DP_SEND:
Parámetro

Declaración Tipo de datos

CPLADDR

INPUT

Rango de valo‐
res

WORD

Descripción
Dirección inicial del módulo
Al configurar el CP aparece la dirección inicial de módulo
en la tabla de configuración. Indique aquí esta dirección.

SEND

INPUT

ANY

Indicar la dirección y la longitud

(como VARTY‐
PE solo se admi‐
te:

La dirección del área de datos DP remite como alterna‐
tiva a:

para DP_SEND
a partir de V3:
BYTE

● Área de marcas

● Área PA
● Área de bloques de datos
Se tiene que ajustar la longitud para

para DP_SEND
hasta V2.x:
BYTE, WORD y
DWORD)

● Maestro DP: 1...21600
● Esclavo DP: 1...240

DONE

OUTPUT

BOOL

0: 1: nuevos datos

El parámetro de estado indica si la petición
se ha ejecutado sin errores.
Consulte el significado en relación con los parámetros
ERROR y STATUS en Parámetros DONE, ERROR,
STATUS (Página 7477).

ERROR

OUTPUT

BOOL

0: 1: caso de error

Indicador de error
Consulte el significado en relación con los parámetros
DONE y STATUS en Parámetros DONE, ERROR, STA‐
TUS (Página 7477)

STATUS

OUTPUT

WORD

Indicador de estado
Consulte el significado en relación con los parámetros
DONE y ERROR en Parámetros DONE, ERROR, STA‐
TUS (Página 7477)

Consulte también
DP_SEND (Página 7475)

7476

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros DONE, ERROR, STATUS
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho
sobre el parámetro de salida RET_VAL en las descripciones de los bloques de programa del
sistema referenciados.
Puede consultar mediante STEP 7 los bloques de programa del sistema que se utilizan y los
que son relevantes para la evaluación de errores.

Tabla 4-451 Indicadores de DP_SEND
DONE

ERROR

STATUS

Significado

0

0

8180H

● Arranque:
El servicio DP se ha iniciado, pero todavía no es posible aplicar los datos.
● Funcionamiento normal
Se transfieren datos.
● El DP no se ha iniciado debido a la situación siguiente:

1

0

0000H

–

CP STOP o

–

"no hay parametrización" (aparece aquí en lugar del indicador 0,1,8183H).

Nuevos datos transferidos sin error.

0

1

8183H

Falta la configuración o no se ha iniciado aún el servicio DP en el CP PROFIBUS.

0

1

8184H

Error del sistema o tipo de parámetro no permitido.

0

1

8F22H

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

0

1

8F23H

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado corto).

0

1

8F24H

Error de área al leer un parámetro.

0

1

8F25H

Error de área al escribir un parámetro.

0

1

8F28H

Error de alineación al leer un parámetro.

0

1

8F29H

Error de alineación al escribir un parámetro.

0

1

8F30H

El parámetro está en el 1er. bloque de datos act. protegido de escritura.

0

1

8F31H

El parámetro está en el segundo bloque de datos act. protegido de escritura.

0

1

8F32H

El parámetro contiene número de DB demasiado alto.

0

1

8F33H

Error de número de DB.

0

1

8F3AH

Área de destino no cargada (DB).

0

1

8F42H

Retardo en acuse al leer un parámetro del área de periferia.

0

1

8F43H

Retardo en acuse al escribir un parámetro en el área de periferia.

0

1

8F44H

La dirección del parámetro a leer está inhibida en la pista de acceso.

0

1

8F45H

La dirección del parámetro que debe escribirse está bloqueada en la pista de acceso.

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.

Programación del PLC
Manual de programación y manejo, 11/2019

7477

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8090H

No existe módulo con esta dirección.

0

1

8091H

La dirección base lógica no está en formato de palabra doble.

0

1

80A1H

Acuse negativo al escribir en el módulo.

0

1

80B0H

El módulo no conoce el registro.

0

1

80B1H

La cantidad de datos a enviar supera el límite superior admisible para este servicio (válido
para los modos maestro DP y esclavo DP).

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Medio de servicio (memoria) ocupado.

0

1

80C4H

Error de comunicación (se presenta temporalmente; por ello es conveniente una repeti‐
ción en el programa de usuario.)

0

1

80D2H

Dirección base lógica incorrecta.

Consulte también
DP_SEND (Página 7475)

DP_RECV
DP_RECV
Descripción
La instrucción DP_RECV recibe datos a través de PROFIBUS. Dependiendo del modo
operatiivo del CP PROFIBUS, DP_RECV tiene el siguiente significado:
● Para uso en el maestro DP
DP_RECV acepta los datos de proceso de la periferia descentralizada así como una
información de estado en un área de entrada DP indicada.
● Para uso en esclavo DP
DP_RECV acepta los datos de salida transmitidos por el maestro DP en el área de datos DP
indicada en la instrucción.
El área de datos indicada para la toma de datos puede ser un área PA, un área de marcas o
un área de bloques de datos.
Se señala que la función ha sido ejecutada sin errores cuando se haya podido transferir toda
el área de entrada de datos DP del CP PROFIBUS.
Tenga en cuenta que la instrucción DP_RECV para el esclavo DP se tiene que llamar al menos
una vez correctamente en el programa de usuario si se han configurado datos de salida para
este esclavo DP. Observe lo dicho en el manual de producto.

7478

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Para iniciar el maestro DP hay que anteponer una llamada de DP_SEND o DP_RECV en la
secuencia de llamada. Para esta primera llamada rige lo siguiente:
● Si se utiliza DP_RECV para la inicialización, los datos recibidos no se aplicarán. Los datos
de usuario recibidos no se obtienen hasta la segunda llamada del bloque.

Tarea adicional: Entrar byte de estado
La instrucción DP_RECV tiene la siguiente tarea adicional:
● Actualizar el byte de estado DPSTATUS. DP_RECV asume con esto tareas para el
diagnóstico DP.
Si no se han configurado datos de recepción, para la actualización del byte de estado
DPSTATUS se tiene que llamar DP_RECV con la longitud 1 (esto es válido solo para el
maestro DP).
Observe también lo dicho en el manual de producto.
● Habilitación de la lista de estaciones (véase DP_DIAG (Página 7484)).

Interfaz de llamada
DP_RECV
WORD

CPLADDR

ANY

RECV

NDR

BOOL

ERROR

BOOL

STATUS

WORD

DPSTATUS

BYTE

Consulte también
Parámetros en el caso de DP_RECV (Página 7480)
Parámetros NDR, ERROR, STATUS (Página 7481)
Parámetro DPSTATUS - DP_RECV (Página 7482)

Programación del PLC
Manual de programación y manejo, 11/2019

7479

Instrucciones
4.2 Instrucciones

Parámetros en el caso de DP_RECV
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la instrucción
DP_RECV:
Parámetro

Declaración Tipo de datos

CPLADDR

INPUT

Rango de valo‐
res

WORD

Descripción
Dirección inicial del módulo
Al configurar el CP aparece la dirección inicial de módulo
en la tabla de configuración. Indique aquí esta dirección.

RECV

INPUT

ANY

Indicar la dirección y la longitud

(como VARTY‐
PE solo se admi‐
te:

La dirección del área de datos DP remite como alterna‐
tiva a:

para DP_RECV
a partir de V3:
BYTE

● Área de marcas

● Área PA
● Área de bloques de datos
Se tiene que ajustar la longitud para:

para DP_RECV
hasta V2.x:
BYTE, WORD y
DWORD)

● Maestro DP: 1...2160
● Esclavo DP: 1...240
● Maestro DP; solo leer byte de estado: 1
(véase también el manual de producto del CP)

NDR

OUTPUT

BOOL

0: 1: nuevos datos
aceptados

El parámetro de estado indica si se han adoptado
nuevos datos.
Consulte el significado en relación con los parámetros
ERROR y STATUS en Parámetros NDR, ERROR, STA‐
TUS (Página 7481).

ERROR

OUTPUT

BOOL

0: 1: caso de error

Indicador de error
Consulte el significado en relación con los parámetros
NDR y STATUS en Parámetros NDR, ERROR, STATUS
(Página 7481)

STATUS

OUTPUT

WORD

Indicador de estado
Consulte el significado en relación con los parámetros
NDR y ERROR en Parámetros NDR, ERROR, STATUS
(Página 7481)

DPSTATUS

OUTPUT

Byte

Veáse la codifi‐
cación a conti‐
nuación, en
DPSTATUS

Indicador de estado DP

Consulte también
DP_RECV (Página 7478)

7480

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros NDR, ERROR, STATUS
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por los parámetros
NDR, ERROR y STATUS, que tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho
sobre el parámetro de salida RET_VAL en las descripciones de los bloques de programa del
sistema referenciados.
Puede consultar mediante STEP 7 los bloques de programa del sistema que se utilizan y los
que son relevantes para la evaluación de errores.

NDR

ERROR

STATUS

Significado

0

0

8180H

● Arranque:
El servicio DP se ha iniciado, pero todavía no es posible aplicar los datos.
● Funcionamiento normal
Se transfieren datos.
● El DP no se ha iniciado debido a la situación siguiente:

1

0

0000H

–

CP STOP o

–

"no hay parametrización" (aparece aquí en lugar del indicador 0,1,8183H).

Nuevos datos aceptados sin error.

0

1

8183H

Falta la configuración o no se ha iniciado aún el servicio DP en el CP PROFIBUS.

0

1

8184H

Error del sistema o tipo de parámetro no permitido.

0

1

8F22H

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

0

1

8F23H

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado corto).

0

1

8F24H

Error de área al leer un parámetro.

0

1

8F25H

Error de área al escribir un parámetro.

0

1

8F28H

Error de alineación al leer un parámetro.

0

1

8F29H

Error de alineación al escribir un parámetro.

0

1

8F30H

El parámetro está en el 1er. bloque de datos act. protegido de escritura.

0

1

8F31H

El parámetro está en el segundo bloque de datos act. protegido de escritura.

0

1

8F32H

El parámetro contiene número de DB demasiado alto.

0

1

8F33H

Error de número de DB.

0

1

8F3AH

Área de destino no cargada (DB).

0

1

8F42H

Retardo en acuse al leer un parámetro del área de periferia.

0

1

8F43H

Retardo en acuse al escribir un parámetro en el área de periferia.

0

1

8F44H

La dirección del parámetro a leer está inhibida en la pista de acceso.

0

1

8F45H

La dirección del parámetro que debe escribirse está bloqueada en la pista de acceso.

0

1

8F7FH

Error interno, p. ej. referencia ANY no admisible.

0

1

8090H

No existe módulo con esta dirección.

Programación del PLC
Manual de programación y manejo, 11/2019

7481

Instrucciones
4.2 Instrucciones
NDR

ERROR

STATUS

Significado

0

1

8091H

La dirección base lógica no está en formato de palabra doble.

0

1

80A0H

Acuse negativo al leer del módulo.

0

1

80B0H

El módulo no conoce el registro.

0

1

80B1H

La cantidad de datos a enviar supera el límite superior admisible para este servicio (válido
para los modos maestro DP y esclavo DP).

0

1

80C0H

No se puede leer el registro.

0

1

80C1H

El registro indicado está siendo procesado.

0

1

80C2H

Hay demasiadas peticiones pendientes.

0

1

80C3H

Medio de servicio (memoria) ocupado.

0

1

80C4H

Error de comunicación (se presenta temporalmente; por ello es conveniente una repeti‐
ción en el programa de usuario).

0

1

80D2H

Dirección base lógica incorrecta.

Consulte también
DP_RECV (Página 7478)

Parámetro DPSTATUS - DP_RECV
DPSTATUS
La codificación del parámetro de salida DP-STATUS es diferente para los modos maestro DP
y esclavo DP.

Modo maestro DP
7 6 5 4 3 2 1 0
0

Tabla 4-452 Significado de los bits en el DPSTATUS en el modo de maestro DP
Bit

Significado

7

libre

6

Este bit no se pone.
Observe también lo dicho en el manual del equipo.

5,4

Valores para DPSTATUS del maestro DP:
00 RUN
01 CLEAR
10 STOP (se representa en el estado operativo OFFLINE)
11 OFFLINE
Observe también lo dicho en el manual del equipo.

3

Valor 1: la sincronización horaria está conectada

2

Valor 0: no hay nuevos datos de diagnóstico
Valor 1: es conveniente evaluar la lista de diagnóstico; al menos una estación tiene datos de diagnóstico nuevos

7482

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Bit

Significado

1

Valor 0: todos los esclavos DP están en la fase de transferencia de datos
Valor 1: es conveniente evaluar la lista de estaciones

0

Modo DP
Valor 0: Modo de maestro DP
Los demás bits sólo son válidos con el significado indicado si no está puesto este bit.

Modo esclavo DP
7 6 5 4 3 2 1 0
1

Tabla 4-453 Significado de los bits en el DPSTATUS en el modo de esclavo DP
Bit

Significado

7-5

libre

4

Este bit no se pone.
Observe también lo dicho en el manual del equipo.

3

Este bit no se pone.
Observe también lo dicho en el manual del equipo.

2

Valor 1: El maestro DP 1 se encuentra en el estado CLEAR. El esclavo DP recibe en los datos DP destinados a las
salidas para todos los datos el valor 0. No hay ninguna influencia sobre los datos de emisión.

1

Valor 1: la configuración / parametrización aún no ha terminado con éxito.

0

Valor 1: modo de esclavo DP.
Los demás bits sólo son válidos con el significado indicado si está puesto este bit.

Nota
Tenga en cuenta que sólo se debe evaluar DPSTATUS una vez esté puesto el parámetro de
retorno NDR=1.

Consulte también
DP_RECV (Página 7478)

Programación del PLC
Manual de programación y manejo, 11/2019

7483

Instrucciones
4.2 Instrucciones

DP_DIAG
DP_DIAG
Descripción
La instrucción DP_DIAG se utiliza para solicitar informaciones de diagnóstico. Se distinguen
los siguientes tipos de peticiones:
● Solicitar lista de estaciones DP;
● Solicitar lista de diagnóstico DP;
● Solicitar estado individual DP;
● Leer acíclicamente datos de entrada / salida de un esclavo DP;
● Leer diagnóstico individual DP menos reciente;
● Leer el estado operativo de DP.
● Leer el estado operativo de DP para AG-/CP-STOP;
● Leer el estado actual del esclavo DP.
Se pueden solicitar datos de diagnóstico indicando una dirección de estación específica del
esclavo.
Para la transferencia de los datos de diagnóstico a la CPU se tiene que prever en la CPU un
área de memoria que se indicará al hacer la llamada. Esta área de memoria puede ser un área
de bloques de datos o un área de marcas. En la petición se tiene que indicar la longitud máxima
del área de memoria disponible.
Nota
La instrucción DP_DIAG solo es útil para el modo operativo de DP con maestro DP.

Exclusión
Mientras esté en marcha la instrucción, no se debe abastecer la misma con nuevos datos de
petición.
Excepción: solicitar lista de estaciones DP o lista de diagnóstico DP.

7484

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Interfaz de llamada
DP_DIAG
WORD

CPLADDR

BYTE

NDR

BOOL

DTYPE

ERROR

BOOL

BYTE

STATION

STATUS

WORD

ANY

DIAG

DIAGLNG

BYTE

Consulte también
Parámetros en el caso de DP_DIAG (Página 7486)
Tipos de petición de DP_DIAG (Página 7487)
Búfer de anillo para datos de diagnóstico - DP_DIAG (Página 7489)
Parámetros NDR, ERROR, STATUS (Página 7490)

Programación del PLC
Manual de programación y manejo, 11/2019

7485

Instrucciones
4.2 Instrucciones

Parámetros en el caso de DP_DIAG
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la instrucción
DP_DIAG:
Parámetro

Declaración Tipo de datos

CPLADDR

INPUT

Rango de valores

WORD

Descripción
Dirección inicial del módulo
Al configurar el CP aparece la dirección inicial de
módulo en la tabla de configuración. Indique aquí
esta dirección.

DTYPE

INPUT

BYTE

Tipo de diagnóstico
0: Lista de estaciones
1: Lista de diagnóstico
2: Diagnóstico actual
3: Diagnóstico antiguo
4: Leer estado operativo
5: Leer estado operati‐
vo para
CPU-STOP
6: Leer estado operati‐
vo para
CP-STOP
7: Leer datos de entrada
(acíclicamente)
8: Leer datos de salida
(acíclicamente)
10: Leer el estado ac‐
tual
del esclavo DP

STATION

INPUT

BYTE

Dirección de estación del esclavo DP

DIAG

INPUT

Se tiene que ajustar la
ANY
longitud 1...240
(como
VARTYPE so‐
lo se admite:

Indicar la dirección y la longitud

BYTE, WORD
y DWORD)

NDR

OUTPUT

BOOL

Dirección del área de datos. Remite como alterna‐
tiva a:
● Área PA
● Área de marcas
● Área de bloques de datos

0: 1: nuevos datos

Este parámetro de estado señaliza si se han acep‐
tado nuevos datos.
Consulte el significado en relación con los paráme‐
tros ERROR y STATUS en Parámetros NDR,
ERROR, STATUS (Página 7490)

ERROR

7486

OUTPUT

BOOL

0: 1: caso de error

Indicador de error
Consulte el significado en relación con los paráme‐
tros NDR y STATUS en Parámetros NDR, ERROR,
STATUS (Página 7490)

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración Tipo de datos

Rango de valores

Descripción

STATUS

OUTPUT

véase la lista

Indicador de estado

WORD

Consulte el significado en relación con los paráme‐
tros NDR y ERROR en Parámetros NDR, ERROR,
STATUS (Página 7490)
DIAGLNG

OUTPUT

BYTE

véase la lista

Contiene la longitud real (en byte) de los datos pro‐
porcionados por el CP PROFIBUS, con indepen‐
dencia del tamaño de búfer indicado en el paráme‐
tro DIAG.
Para los tipos de petición con DTYPE 4, 5 y 6 rige:
A DIAGLNG aquí siempre se le asigna el valor "1".
En estos casos el valor depositado en el parámetro
DIAG no es relevante para la valoración. El valor
relevante está contenido en el parámetro STATUS.

Consulte también
DP_DIAG (Página 7484)

Tipos de petición de DP_DIAG
Tipos de petición
Las formas de petición admisibles y convenientes resultan, según la relación siguiente, de lo
indicado para DTYPE, STATION y DIAGLNG.
Tabla 4-454 Tipos de petición para DP_DIAG
DTYPE

Equivale a
Petición

Parámetro

DIAGLNG

0

Leer lista de es‐
taciones DP.

---

- no se tiene en
cuenta -

Con la lista de estaciones DP se obtiene información en el
programa de usuario sobre el estado y la disponibilidad de
esclavos DP. La información contenida en la lista de esta‐
ciones DP se refiere a todos los esclavos DP asignados al
maestro DP por configuración.

1

Leer lista de
diagnóstico DP

---

- no se tiene en
cuenta -

Con la lista de diagnóstico DP se obtiene en el programa de
la CPU la información sobre en qué esclavos DP hay nuevos
datos de diagnóstico.

2

Leer diagnóstico 1...126
individual DP ac‐
tual

>=6

Con el diagnóstico individual DP actual se obtienen en el
programa de la CPU los datos de diagnóstico actuales de un
esclavo DP.

STATION

Programación del PLC
Manual de programación y manejo, 11/2019

Código de confirmación
(contenido en el parámetro STATUS; indicado en la tabla
"Códigos de condición DP_DIAG")

7487

Instrucciones
4.2 Instrucciones
DTYPE

3

Equivale a
Petición

Parámetro

DIAGLNG

STATION

Leer diagnóstico 1...126
individual DP
menos reciente

Código de confirmación
(contenido en el parámetro STATUS; indicado en la tabla
"Códigos de condición DP_DIAG")

>=6

Con el diagnóstico individual DP menos reciente se obtienen
en el programa de la CPU los datos de diagnóstico menos
recientes de un esclavo DP. Estos datos están almacenados
en el CP PROFIBUS y se leen en el búfer de anillo según el
principio "Last in first out".
Véase más abajo la explicación relativa al búfer de anillo.
En caso de cambios rápidos en los datos de diagnóstico de
esclavos DP se pueden registrar así estos esclavos DP para
ser evaluados en el programa de la CPU del maestro DP.

4

Leer el estado
operativo solici‐
tado con la peti‐
ción DP-CTRL
(CTYPE=4)

=1

Con esta petición se puede leer el estado operativo del DP,
ajustado previamente con la petición DP-CTRL (CTYPE=4).
Observación: El estado operativo leído no tiene que coincidir
necesariamente con el estado operativo actual del CP.
Los siguientes estados operativos son posibles:
● RUN
● CLEAR
● STOP (se representa en el estado operativo OFFLINE) *)
● OFFLINE

5

Leer el estado
operativo de DP
para CPU-STOP

=1

Con esta petición se determina a qué estado operativo DP
pasa el CP PROFIBUS en caso de CPU-STOP:
● RUN
● CLEAR
● STOP (se representa en el estado operativo OFFLINE) *)
● OFFLINE
Como valor predeterminado (DEFAULT) con CPU-STOP, el
CP PROFIBUS pasa al estado operativo de DP CLEAR.

6

Leer el estado
operativo de DP
para CP-STOP

=1

Con esta petición se determina a qué estado operativo DP
pasa el CP PROFIBUS en caso de CP-STOP:
● STOP (se representa en el estado operativo OFFLINE) *)
● OFFLINE
Como valor predeterminado (DEFAULT) con CP-STOP, el
CP PROFIBUS pasa al estado operativo de DP OFFLINE.

7

7488

Leer datos de
entrada

1...126

>=1

Con esta petición se leen, como maestro DP (clase 2), los
datos de entrada de un esclavo DP. Este proceso recibe
también el nombre de "Shared Input".

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DTYPE

Equivale a
Petición

Parámetro

DIAGLNG

8

Leer datos de
salida

1...126

>=1

Con esta petición se leen, como maestro DP (clase 2), los
datos de salida de un esclavo DP. Este proceso recibe tam‐
bién el nombre de "Shared Output".

10

Leer el estado
actual del escla‐
vo DP

1...126

>=0

Con esta petición se lee el estado operativo actual del escla‐
vo DP. Son posibles los siguientes estados:

STATION

Código de confirmación
(contenido en el parámetro STATUS; indicado en la tabla
"Códigos de condición DP_DIAG")

● El maestro DP intercambia cíclicamente datos con el
esclavo DP.
● El maestro DP lee cíclicamente los datos de entrada del
esclavo DP.
● El maestro DP lee cíclicamente los datos de salida del
esclavo DP.
● El maestro DP no procesa cíclicamente este esclavo DP
de momento.

*)

El estado operativo STOP ya no es soportado en los módulos actuales (a partir del tipo de módulo DA02).

Consulte también
DP_DIAG (Página 7484)

Búfer de anillo para datos de diagnóstico - DP_DIAG
Búfer de anillo para datos de diagnóstico
La representación siguiente muestra el principio de lectura para el tipo de petición "Leer
diagnóstico individual DP menos reciente". Con el primer acceso de lectura se lee
el diagnóstico antiguo más reciente.

Diagnóstico actual
1er .diagnóstico antiguo

9º acceso lectura;
1er. acceso lectura; 10º acceso lectura

8º diagnóstico antiguo

8º acceso lectura;

Figura 4-79

Búfer de anillo para datos de diagnóstico

Al leer un diagnóstico actual, el puntero de lectura se repone al primer diagnóstico antiguo.

Consulte también
DP_DIAG (Página 7484)

Programación del PLC
Manual de programación y manejo, 11/2019

7489

Instrucciones
4.2 Instrucciones

Parámetros NDR, ERROR, STATUS
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por los parámetros
NDR, ERROR y STATUS, que tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho
sobre el parámetro de salida RET_VAL en las descripciones de los bloques de programa del
sistema referenciados.
Puede consultar mediante STEP 7 los bloques de programa del sistema que se utilizan y los
que son relevantes para la evaluación de errores.

Tabla 4-455 Códigos de condición DP_DIAG
NDR

ERROR

STATUS

Posible
para
DTYPE

Significado

0

0

8181H

2-10

Petición en curso.
El maestro DP no se ha iniciado por:
● CP STOP o
● no hay parametrización
(aparece aquí en lugar del código de condición 0,1,8183H).

0

0

8182H

0

Activación no conveniente.
El maestro DP no se ha iniciado por:
● CP STOP o
● no hay parametrización
(aparece aquí en lugar del código de condición 0,1,8183H).

0

0

8182H

1

No hay ningún diagnóstico nuevo.
El maestro DP no se ha iniciado por:
● CP STOP o
● no hay parametrización
(aparece aquí en lugar del código de condición 0,1,8183H).

1

0

0000H

0, 1

Petición concluida sin errores.

y 4-9

Nota:
En el caso de DTYPE 2,3 y 10, la ejecución sin errores se señaliza con un código
de estado distinto de "0". En correspondencia, a continuación encontrará códi‐
gos de estado detallados (para una ejecución sin errores) para el área:
82XXH
En caso de ejecución con errores, obtendrá códigos de estado en las siguientes
áreas:
80XXH, 83XXH, 8FXXH

7490

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
NDR

ERROR

STATUS

Posible
para
DTYPE

Significado

1

0

8222H

7,8

Petición terminada sin errores.
La longitud de datos de esclavo DP leídos es distinta de la longitud de datos que
el maestro DP espera sobre la base de la lista de módulos del esclavo DP en la
base de datos del CP.

1

0

8227H

7,8

Petición terminada sin errores.
Advertencia: no hay datos.

1

0

8231H

4,5,6

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "RUN"

1

0

8232H

4,5,6

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "CLEAR"

1

0

8233H

4,5,6

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "STOP"
El estado STOP se representa en el estado OFFLINE (aquí, código de condición
8234H).
Observe también lo dicho en el manual de producto.

1

0

8234H

4,5,6

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es
"OFFLINE"

1

0

823AH

2,3,7,8

Petición terminada sin errores.
Advertencia: se han leído 241 o 242 bytes de datos. Se proporcionan 240 bytes.

1

0

8241H

2,3,10

Petición terminada sin errores.
Advertencia: el esclavo DP indicado no se ha configurado.

1

0

8243H

2,3,10

Petición terminada sin errores.
Advertencia: la lista de módulos del esclavo CP en la base de datos del CP solo
contiene módulos vacíos.

1

0

8245H

2,3,10

Petición terminada sin errores.
Advertencia: el esclavo DP se encuentra en el estado "Leer cíclicamente datos
de entrada".

1

0

8246H

2,3,10

Petición terminada sin errores.
Advertencia: el esclavo DP se encuentra en el estado
"Leer cíclicamente datos de salida".

1

0

8248H

2,3,10

Petición concluida sin errores.
Observación: esta es la indicación predeterminada para los tipos de diagnóstico
mencionados, si no existe ninguna peculiaridad a señalizar.

1

0

8249H

2,3,10

Petición terminada sin errores.
Advertencia: el esclavo DP está desactivado debido a un cambio del estado
operativo de DP (p. ej. interruptor del CP en STOP).

1

0

824AH

2,3,10

Petición terminada sin errores.
Advertencia: el esclavo DP está desactivado debido a una petición de DP_CTRL
en el programa de la CPU.

0

1

8090H

0-10

La dirección base lógica del módulo no es válida

0

1

80B0H

0-10

El módulo no conoce el registro o se encuentra en la transición RUN --> STOP.

0

1

80B1H

0-10

La longitud de registro indicada es incorrecta

0

1

80C0H

0-10

No se puede leer el registro

0

1

80C1H

0-10

El registro indicado está siendo procesado.

0

1

80C2H

0-10

Hay demasiadas peticiones pendientes.

0

1

80C3H

0-8

Medios de operación (memoria) ocupados

Programación del PLC
Manual de programación y manejo, 11/2019

7491

Instrucciones
4.2 Instrucciones
NDR

ERROR

STATUS

Posible
para
DTYPE

Significado

0

1

80C4H

0-10

Error de comunicación

0

1

80D2H

0-10

Dirección base lógica incorrecta

0

1

8183H

0-10

Maestro DP no configurado.

0

1

8184H

0-8

Error del sistema o tipo de parámetro no permitido.

0

1

8311H

>=2

Parámetro DTYPE fuera del rango de valores.

0

1

8313H

2,3,7,8,10

Parámetro STATION fuera del rango de valores.

0

1

8321H

>=2

El esclavo DP no proporciona datos válidos.

0

1

8326H

7,8

El esclavo DP proporciona más de 242 bytes de datos. El CP PROFIBUS solo
da soporte a 242 bytes como máximo.

0

1

8335H

7,8

El CP PROFIBUS se encuentra en el estado PROFIBUS: "Estación no en el
anillo".

0

1

8341H

2,3,7,8,10

El esclavo indicado no se ha configurado.

0

1

8342H

7,8

No se puede acceder al esclavo DP con la dirección PROFIBUS indicada en el
parámetro STATION.

0

1

8349H

7,8

El maestro DP se encuentra en el estado OFFLINE.

0

1

8F22H

0-10

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

0

1

8F23H

0-10

Error de longitud de área al escribir un parámetro (p. ej. DB demasiado corto).

0

1

8F24H

0-10

Error de área al leer un parámetro

0

1

8F25H

0-10

Error de área al escribir un parámetro

0

1

8F28H

0-10

Error de alineación al leer un parámetro

0

1

8F29H

0-10

Error de alineación al escribir un parámetro

0

1

8F30H

0-10

El parámetro está en el 1er. bloque de datos act. protegido de escritura.

0

1

8F31H

0-10

El parámetro está en el segundo bloque de datos act. protegido de escritura.

0

1

8F32H

0-10

El parámetro contiene número de DB demasiado grande

0

1

8F33H

0-10

Error de número de DB

0

1

8F3AH

0-10

Área de destino no cargada (DB)

0

1

8F42H

0-10

Retardo de acuse al leer un parámetro del área de periferia

0

1

8F43H

0-10

Retardo de acuse al escribir un parámetro en el área de periferia

0

1

8F44H

0-10

La dirección del parámetro a leer está inhibida en la pista de acceso.

0

1

8F45H

0-10

La dirección del parámetro a escribir está inhibida en la pista de acceso.

0

1

8F7FH

0-10

Error interno, p. ej. referencia ANY no admisible.

Consulte también
DP_DIAG (Página 7484)

7492

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

DP_CTRL
DP_CTRL
Descripción
La instrucción DP_CTRL transfiere peticiones de control al CP PROFIBUS. Con la indicación
de un bloque de petición (parámetro CONTROL) se especifica con mayor detalle la petición de
control.
Se distinguen los siguientes tipos de peticiones:
● Global Control acíclico / cíclico;
● Borrar diagnósticos antiguos;
● Poner el estado operativo actual de DP;
● Poner el estado operativo de DP para AG-/CP-STOP;
● Leer cíclicamente datos de entrada/salida;
● Poner el modo de procesamiento del esclavo DP
Existen restricciones en cuanto a los tipos de peticiones aquí citados (tenga en cuenta al
respecto lo dicho en el manual de producto).
Nota
La instrucción DP_CTRL solo es útil para el modo operativo de DP con maestro DP.

Conexión
Mientras esté en marcha la instrucción, no se debe abastecer la misma con nuevos datos de
petición.

Interfaz de llamada
DP_CTRL
WORD

CPLADDR

DONE

BOOL

ANY

CONTROL

ERROR

BOOL

STATUS

WORD

Programación del PLC
Manual de programación y manejo, 11/2019

7493

Instrucciones
4.2 Instrucciones

Consulte también
Parámetros en el caso de DP_CTRL (Página 7494)
Tipos de petición de DP_CTRL (Página 7496)
Command Mode y Group Select - DP_CTRL (Página 7499)
Parámetros DONE, ERROR, STATUS (Página 7500)

Parámetros en el caso de DP_CTRL
Explicación de los parámetros formales
La tabla representada a continuación explica todos los parámetros formales para la instrucción
DP_CTRL:
Parámetro

Declaración

Tipo de datos

CPLADDR

INPUT

WORD

Rango de valores

Descripción
Dirección inicial del módulo
Al configurar el CP aparece la dirección inicial de módulo
en la tabla de configuración. Indique aquí esta dirección.

CONTROL

INPUT

ANY
Se tiene que ajus‐
(como VARTY‐ tar la longitud
PE solo se ad‐ 1...240
mite:

Indicar la dirección y la longitud del bloque de petición
CONTROL

BYTE, WORD
y DWORD)

● Área de marcas

Dirección del área de datos. Remite como alternativa a:
● Área PA
● Área de bloques de datos
La longitud tiene que ser al menos tan grande como la
cantidad de parámetros.

DONE

OUTPUT

BOOL

0: 1: Petición ejecu‐
tada sin error

Indica si la petición se ha enviado y se ha concluido sin
errores.
Consulte el significado en relación con los parámetros
ERROR y STATUS en Parámetros DONE, ERROR,
STATUS (Página 7500)

ERROR

OUTPUT

BOOL

0: 1: caso de error

Indicador de error
Consulte el significado en relación con los parámetros
DONE y STATUS en Parámetros DONE, ERROR, STA‐
TUS (Página 7500)

STATUS

OUTPUT

WORD

Véase la tabla si‐
guiente 'Indicado‐
res'

Indicador de estado
Consulte el significado en relación con los parámetros
DONE y ERROR en Parámetros DONE, ERROR, STA‐
TUS (Página 7500)

7494

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Estructura del bloque de petición CONTROL
La petición de control tiene la siguiente estructura:

Dirección de
CONTROL

CTYPE
Parámetro 1er. Byte

ver ’Parámetros’
(cantidad y nombre)

Parámetro segundo Byte

Parámetro enésimo Byte

Ejemplo del bloque de petición
Con un bloque de petición conforme al modelo abajo mostrado se emite una petición cíclica de
Global Control SYNC y UNFREEZE para los grupos 4 y 5 sin la opción Autoclear.

DB 14
Byte 0

01H

CTYPE

Byte 1

24H

Command Mode

Byte 2

18H

Group Select

Byte 3

00H

Autoclear

La longitud indicada en el puntero ANY ha de ser al menos 4 (para el ejemplo de petición se
han seleccionado 30).

Consulte también
DP_CTRL (Página 7493)

Programación del PLC
Manual de programación y manejo, 11/2019

7495

Instrucciones
4.2 Instrucciones

Tipos de petición de DP_CTRL
Tipos de petición
Las formas de petición admisibles y convenientes resultan, según la relación siguiente, de lo
indicado para CTYPE así como de lo indicado en el bloque de petición.
CTYPE

Equivale a Petición Parámetros en el bloque de peti‐ Descripción
ción

Nombre

Número

0

Impulsar Global
Control

1. byte:
Command Mode
2º byte:
Group Select
(ver a continuación
de esta tabla)

2

Se envía una única petición de Global Control a los es‐
clavos DP seleccionados con Group Select. En el pará‐
metro Command Mode se determinan las siguientes pe‐
ticiones de Global Control:
● SYNC
● UNSYNC
● FREEZE
● UNFREEZE
● CLEAR no es compatible (observe también lo dicho
en el manual de producto).
Es posible indicar más de una petición en el parámetro
Command Mode.

7496

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
CTYPE

Equivale a Petición Parámetros en el bloque de peti‐ Descripción
ción

1*)

Impulsar cíclica‐
1. byte:
mente Global Con‐ Command Mode
trol
2º byte:
Group Select
3er. byte:
Autoclear

3

El impulso se da al CP PROFIBUS que envía estas pe‐
ticiones cíclicas de Global Control a los esclavos DP
seleccionados con Group Select.
El parámetro Autoclear solo se evalúa en el caso de la
petición de Global Control SYNC. Si al menos un escla‐
vo DP del grupo seleccionado no está en la fase de
transferencia de datos, en caso de Autoclear = 1 se co‐
necta adicionalmente el modo CLEAR, lo que significa
que los datos de salida de los esclavos DP se ponen a
"0".

(ver a
continuación de esta
tabla)

En el parámetro Command Mode se pueden conectar
las siguientes peticiones de Global Control:
● SYNC
● FREEZE
● CLEAR (CLEAR-Bit = 1) no es compatible (observe
también lo dicho en el manual de producto).
o se puede desconectar:
● UNSYNC
● UNFREEZE
● UNCLEAR (CLEAR-Bit = 0)
Es posible indicar más de una petición en el parámetro
Command Mode.
Para terminar una petición cíclica en curso de Global
Control, se tiene que ejecutar una nueva petición de
Global Control (cíclica o acíclica).
Para terminar la petición ajustada en el Command Mo‐
de, se tiene que desconectar la petición
correspondiente. Por ejemplo, la petición SYNC se des‐
conecta con una petición UNSYNC.
3

Borrar diagnóstico
individual DP me‐
nos reciente

1. byte:
Dirección escl.
1..126
127 = todos los escla‐
vos

Programación del PLC
Manual de programación y manejo, 11/2019

1

Se borran para uno o todos los esclavos los diagnósticos
individuales DP más antiguos almacenados en el CP
PROFIBUS.

7497

Instrucciones
4.2 Instrucciones
CTYPE

Equivale a Petición Parámetros en el bloque de peti‐ Descripción
ción

4

Poner el estado
operativo actual de
DP

1. byte:

1

RUN = 00H
CLEAR = 01H
OFFLINE = 03H
RUN con AUTO‐
CLEAR = 04H
RUN sin AUTO‐
CLEAR = 04H

Con esta petición se puede poner el estado operativo de
DP del siguiente modo:
● RUN
● CLEAR
● OFFLINE
El parámetro AUTOCLEAR significa que el maestro DP
clase 1 pasa automáticamente al estado operativo
CLEAR si se cumple la siguiente condición: al menos
uno de los esclavos DP con los que intercambia datos el
maestro DP clase 1 no está en el estado de transferen‐
cia de datos.
Con el parámetro RUN sin AUTOCLEAR se suprime
AUTOCLEAR.
Notas:
El estado operativo STOP = 02H ya no es soportado en
los módulos actuales (a partir del tipo de módulo DA02).
Una indicación STOP = 02H se refleja en el estado ope‐
rativo OFFLINE.

5

Ajustar el estado
operativo DP para
STOP de la CPU

1. byte:

1

RUN = 00H
CLEAR = 01H
OFFLINE = 03H

Con esta petición se establece a qué estado operativo
DP pasa el CP PROFIBUS en caso de CPU-STOP:
● RUN
● CLEAR
● OFFLINE
Como valor predeterminado (DEFAULT) con CPUSTOP, el CP PROFIBUS pasa al estado operativo de
DP CLEAR.
El estado operativo puesto se conserva en caso de un
cambio de estado del CP de RUN --> STOP --> RUN.
Notas:
El estado operativo STOP = 02H ya no es soportado en
los módulos actuales (a partir del tipo de módulo DA02).
Una indicación STOP = 02H se refleja en el estado ope‐
rativo OFFLINE.

6

Ajustar el estado
operativo DP para
STOP del CP

1. byte:
OFFLINE=03H

1

Con esta petición se establece a qué estado operativo
DP pasa el CP PROFIBUS en caso de CP-STOP:
● OFFLINE
Como valor predeterminado (DEFAULT) con CP-STOP,
el CP PROFIBUS pasa al estado operativo de DP OF‐
FLINE.
El estado operativo puesto se conserva en caso de un
cambio de estado del CP de RUN --> STOP --> RUN.
Notas:
El estado operativo STOP = 02H ya no es soportado en
los módulos actuales (a partir del tipo de módulo DA02).
Una indicación STOP = 02H se refleja en el estado ope‐
rativo OFFLINE.

7498

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
CTYPE

Equivale a Petición Parámetros en el bloque de peti‐ Descripción
ción

7 *)

Lectura cíclica de 1. byte:
los datos de entra‐ dirección de esclavo
da (maestro DP
1..125
clase 2)

1

1. byte:
dirección de esclavo
1..125

1

Terminar el proce‐ 1. byte:
dirección de esclavo
samiento cíclico
del esclavo DP por 1..125
el maestro DP (cla‐
se 1 /clase 2)

1

Iniciar el procesa‐
miento cíclico co‐
mo maestro DP
(clase 1)

1

8 *)

9

Lectura cíclica de
los datos de salida
(maestro DP clase
2)

Esta petición no es compatible.
Observe también las indicaciones del manual de pro‐
ducto.
Esta petición no es compatible.
Observe también las indicaciones del manual de pro‐
ducto.
Con esta petición se termina la lectura cíclica de los da‐
tos de entrada o los datos de salida del esclavo DP di‐
reccionado o la transferencia de datos (maestro DP cla‐
se 1).
Después de esto, el esclavo DP ya no es procesado por
el CP PROFIBUS como maestro DP (clase 2).
Esta operación desactiva el esclavo DP.

10

*)

1. byte:
dirección de esclavo
1..125

El CP PROFIBUS que actúa como maestro DP (clase 1)
parametriza el esclavo DP seleccionado e inicia la trans‐
ferencia de datos cíclica (escribir salidas / leer entradas).
Esta operación activa el esclavo DP.

Este CTYPE ya no es soportado en los módulos actuales (a partir del tipo de módulo DA02).

Consulte también
DP_CTRL (Página 7493)

Command Mode y Group Select - DP_CTRL
Estructura de Command Mode
Para las peticiones de Global Control cíclicas y acíclicas, indique en el parámetro Command
Mode los modos de operación para los datos de entrada y salida.
Al respecto significa:
1 = activado
0 = no activado

Programación del PLC
Manual de programación y manejo, 11/2019

7499

Instrucciones
4.2 Instrucciones
Número de bit: 7 6 5 4 3 2 1 0

no utilizado
CLEAR
UNFREEZE
FREEZE
UNSYNC
SYNC
no utilizado

Estructura de Group Select
Con el parámetro Group Select se define en qué grupo se debe aplicar la petición de control
indicada en Command Mode. Group Select ocupa el segundo byte de la petición de control.
Cada bit define un grupo de esclavos DP posible.
Al respecto significa:
1 = asignado
0 = no asignado

Número de bit:
Grupo:

7 6 5 4 3 2 1 0
8 7 6 5 4 3 2 1

Consulte también
DP_CTRL (Página 7493)

Parámetros DONE, ERROR, STATUS
Códigos de condición
La tabla siguiente muestra el significado de la información suministrada por los parámetros
DONE, ERROR y STATUS, la cual tiene que ser evaluada por el programa de usuario.
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho
sobre el parámetro de salida RET_VAL en las descripciones de los bloques de programa del
sistema referenciados.
Puede consultar mediante STEP 7 los bloques de programa del sistema que se utilizan y los
que son relevantes para la evaluación de errores.

7500

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Tabla 4-456 Indicadores DP_CTRL
DONE

ERROR

STATUS

Posible para
CTYPE

Significado

0

0

8181H

0..10

Petición en curso.
El maestro DP no se ha iniciado por:
● CP STOP o
● "no hay parametrización"
Observación:
La indicación descrita aparece en lugar de una de las siguientes indicacio‐
nes descritas a continuación:
0,1,8183H
0,1, 8333 H
0,1, 8334H

1

0

0000H

0..10

Petición terminada sin errores.

1

0

8214H

0,1

Petición terminada sin errores.
Advertencia: la petición cíclica de Global Control se envía como petición
acíclica de Global Control

1

0

8215H

0,1

Petición terminada sin errores.
Todos los esclavos DP aludidos en el grupo seleccionado están desacti‐
vados.

1

0

8219H

0,1

Petición terminada sin errores.
Se ha intentado enviar de nuevo una petición cíclica de Global Control ya
en curso. Global Control sigue en marcha sin cambios.

1

0

8228H

0,1

Petición terminada sin errores.
Advertencia: los esclavos DP aludidos en los grupos seleccionados no po‐
seen módulos de entrada.

1

0

8229H

0,1

Petición terminada sin errores.
Advertencia: los esclavos DP aludidos en los grupos seleccionados no po‐
seen módulos de salida.

1

0

8231H

4,5,6

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "RUN"

1

0

8232H

4,5,6

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "CLEAR"

1

0

8233H

4,5,6

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "STOP"

1

0

8234H

4,5,6

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "OFFLINE"

1

0

8235H

4

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "RUN" con AUTOCLEAR
conectado

1

0

8236H

4

Petición terminada sin errores.
Advertencia: el estado operativo de DP ya es "RUN" con AUTOCLEAR
desconectado

1

0

8241H

7-10

Petición terminada sin errores.
Advertencia: el esclavo DP indicado no se ha configurado.

1

0

8243H

7-10

Petición terminada sin errores.
Advertencia: el esclavo DP ya está desactivado, porque la lista de módulos
del esclavo DP en la base de datos del CP solo contiene módulos vacíos.

Programación del PLC
Manual de programación y manejo, 11/2019

7501

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Posible para
CTYPE

Significado

1

0

8245H

7-10

Petición terminada sin errores.
Advertencia: el esclavo DP se encuentra ya en el estado "Leer cíclicamente
datos de entrada".

1

0

8246H

7-10

Petición terminada sin errores.
Advertencia: el esclavo DP se encuentra ya en el estado "Leer cíclicamente
datos de salida".

1

0

8248H

7-10

Petición terminada sin errores.
Advertencia: la lista de módulos del esclavo CP en la base de datos del CP
contiene módulos de entrada, de salida o de entrada/salida.

1

0

8249H

7-10

Petición terminada sin errores.
Advertencia: el esclavo está desactivado debido a un cambio del estado
operativo de DP.

1

0

824AH

7-10

Petición terminada sin errores.
Advertencia: el esclavo DP está ya desactivado debido a una petición de
DP_CTRL en el programa de la CPU.

0

1

8090H

0..10

No existe módulo con esta dirección.

0

1

8091H

0..10

La dirección lógica no está en formato de palabra doble.

0

1

80B0H

0..10

El módulo no conoce el registro.

0

1

80B1H

0..10

La longitud de registro indicada es incorrecta.

0

1

80C0H

0..10

No se puede leer el registro.

0

1

80C1H

0..10

El registro indicado está siendo procesado.

0

1

80C2H

0..10

Hay demasiadas peticiones pendientes.

0

1

80C3H

0

1

8183H

Medio de servicio (memoria) ocupado.
0..10

Maestro DP no configurado...
Observación:
Si el maestro DP se encuentra en el estado operativo "STOP", se puede
emitir también el estado 8181 H.

0

1

8184H

0

1

8311H

Error del sistema o tipo de parámetro no permitido...
0..10

Parámetro CTYPE fuera del rango de valores.

0

1

8312H

0..10

La longitud del área en el parámetro CONTROL es demasiado pequeña.

0

1

8313H

3,7,8,9, 10

Parámetro Dirección de esclavo fuera del rango de valores.

0

1

8315H

0,1

Todos los esclavos DP del grupo indicado en Global Control están desac‐
tivados (se presenta siempre en caso de grupos vacíos).

0

1

8317H

8

La longitud de los datos de salda configurados es mayor que el área de
recepción configurada del esclavo DP.

0

1

8318H

0,1,4,5,6

El parámetro 1er. byte del bloque de datos de petición está fuera del rango
de valores. Para GLOBAL CONTROL se ha utilizado CLEAR con SYNC o
se ha enviado al grupo 0 un GLOBAL CONTROL con CLEAR puesto.

0

1

831AH

0,1

Al menos un esclavo DP no domina FREEZE.

0

1

831BH

0,1

Al menos un esclavo DP no domina SYNC.

0

1

8333H

0,1

La petición no está permitida en el estado operativo de DP "STOP".

No es posible una activación del modo de esclavo "Leer datos de salida".

Observación:
Si no hay configurado ningún maestro DP, se puede emitir también el es‐
tado 8181H.

7502

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Posible para
CTYPE

Significado

0

1

8334H

0, 1

La petición no está permitida en el estado operativo de DP "OFFLINE".
Observación:
Si no hay configurado ningún maestro DP, se puede emitir también el es‐
tado 8181H.

0

1

8335H

0, 1

El CP PROFIBUS se encuentra en el estado PROFIBUS: "Estación no en
el anillo".

0

1

8339H

0, 1

Al menos un esclavo DP del grupo seleccionado no se encuentra en la fase
de transferencia de datos.

0

1

833CH

1

El Global Control cíclico no se debe utilizar en el modo
"Plc <-> CP libre". Este error no se presenta en el CP 3425, ya que dicho
modo no es posible en el mismo (la transmisión de datos tiene lugar siem‐
pre a través de registros PBUS).

0

1

8341H

7-10

El esclavo DP indicado no se ha configurado.

0

1

8183H

0..10

Maestro DP no configurado.

0

1

8184H

-

Error del sistema o tipo de parámetro no permitido.

0

1

8F22H

0..10

Error de longitud de área al leer un parámetro (p. ej. DB demasiado corto).

0

1

8F23H

0..10

Error de longitud de área al escribir un parámetro.

0

1

8F24H

0..10

Error de área al leer un parámetro.

0

1

8F25H

0..10

Error de área al escribir un parámetro.

0

1

8F28H

0..10

Error de alineación al leer un parámetro.

0

1

8F29H

0..10

Error de alineación al escribir un parámetro.

0

1

8F30H

0..10

El parámetro está en el 1er. bloque de datos actual protegido de escritura.

0

1

8F31H

0..10

El parámetro está en el segundo bloque de datos actual protegido de es‐
critura.

0

1

8F32H

0..10

El parámetro contiene número de DB demasiado alto.

0

1

8F33H

0..10

Error de número de DB.

0

1

8F3AH

0..10

Área de destino no cargada (DB).

0

1

8F42H

0..10

Retardo en acuse al leer un parámetro del área de periferia.

0

1

8F43H

0..10

Retardo en acuse al escribir el parámetro en el área de periferia.

0

1

8F44H

0..10

Está bloqueado el acceso a un parámetro a leer para el procesamiento de
la instrucción.

0

1

8F45H

0..10

Está bloqueado el acceso a un parámetro a escribir para el procesamiento
de la instrucción.

0

1

8F7FH

0..10

Error interno, p. ej. referencia ANY no admisible.

0

1

80C4H

0..10

Error de comunicación (se presenta temporalmente; por ello es convenien‐
te una repetición en el programa de usuario).

0

1

80D2H

0..10

Dirección base lógica incorrecta.

Consulte también
DP_CTRL (Página 7493)

Programación del PLC
Manual de programación y manejo, 11/2019

7503

Instrucciones
4.2 Instrucciones

CM/CP SIMATIC NET
CM/CP S7-1500
Industrial Ethernet
Instrucciones para servicios FTP
FTP_CMD para servicios FTP
Panorámica de FTP_CMD
Significado
Con la instrucción FTP_CMD se pueden establecer conexiones FTP y transmitir archivos
desde y a un servidor FTP.
Nota
Versiones de los bloques
En una estación la versión V2.x del FTP_CMD solo puede utilizarse en combinación con una
CPU V2.x y un CP V2.x.
En cuanto la estación contiene una CPU V1.x o un CP V1.x, hay que utilizar el FTP_CMD en
la versión anterior V1.x (por ejemplo V1.4). Cambie para ello la versión de la librería
"SIMATIC NET CP" a V3.4. Entonces podrá seleccionar una versión anterior del bloque.
La transferencia de datos se puede realizar vía FTP o FTPS (conexiones SSL seguras).
Nota
FTPS: sincronizar certificados
FTPS requiere la sincronización de los certificados entre el servidor FTP y el cliente FTP. Si el
servidor FTP se configura fuera del proyecto STEP 7 del cliente FTP, habrá que importar el
certificado del servidor FTP. En el administrador de certificados importe el certificado del
servidor FTP como certificado de confianza.

Funcionamiento
La instrucción FTP_CMD hace referencia a un bloque de petición (ARG) en el que se
especifica el comando FTP. Según sea el tipo de comando FTP (CMD), este bloque de petición
utiliza diferentes estructuras de datos para la parametrización. Para dichas estructuras están
disponibles en cada caso los tipos de datos adecuados (UDT).
La figura siguiente ilustra la estructura de llamada:

7504

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
)73B&0'
%ORTXHGHSHWLFLµQ
&0'
$5*

)LOH'%

)73B),/(1$0(B

(QFDEH]DGR

)73B&211(&7B
'DWRV

Bloques de petición
Para los bloques de petición se utilizan las siguientes estructuras de datos:
● Establecimiento de la conexión
Para establecer la conexión están disponibles diferentes estructuras de datos para los
siguientes tipos de acceso:
– FTP_CONNECT_IPV4: Establecimiento de la conexión con direcciones IP según IPv4
– FTP_CONNECT_IPV6: Establecimiento de la conexión con direcciones IP según IPv6
– FTP_CONNECT_NAME: Establecimiento de la conexión con nombres de servidor
(DNS)
● Transferencia de datos
Para la transferencia de datos están disponibles dos estructuras de datos distintas:
– FTP_FILENAME: Estructura de datos para el acceso a un archivo completo
– FTP_FILENAME_PART: Estructura de datos para el acceso de lectura a un área de
datos

Transferencia de datos en el File-DB
Los datos se transfieren mediante bloques que contienen un encabezado para datos de
petición y el área de datos de usuario. El bloque de datos se indica en el búfer de peticiones.

Requisitos en la configuración de la CPU
Utilice los ajustes siguientes para permitir el acceso FTP:
● En todos los bloques de datos utilizados como File-DB desactive el atributo "Acceso
optimizado al bloque".
● Solo en caso de utilizar una CPU V1.x y un CP V1.1.x:
en los datos de configuración de la CPU, en "Propiedades > General > Propiedades"
desactive la opción "Desactivar comunicación PUT/GET" (PUT/GET debe estar habilitado).

Programación del PLC
Manual de programación y manejo, 11/2019

7505

Instrucciones
4.2 Instrucciones

Validez
La instrucción FTP_CMD se puede utilizar en combinación con los siguientes tipos de módulos:
● CP 1543-1

Interfaz de llamada
Interfaz de llamada en representación FUP
)73B&0'
%22/

5(4

'21(

%22/

:25'

,'

%86<

%22/

%<7(

&0'

(5525

%22/

67$786

:25'
9$5,$17

$5*

9$5,$17

Consulte también
Parámetros de salida e informaciones de estado FTP_CMD (Página 7514)
Parámetros de entrada FTP_CMD (Página 7506)
Estructura de los bloques de datos (File-DB) para servicios FTP - modo FTP-Client
(Página 7517)

Parámetros de entrada FTP_CMD
Explicación de los parámetros de entrada
Deben suministrarse los siguientes parámetros de entrada a la instrucción FTP_CMD:
Tabla 4-457 Parámetros formales de la instrucción FTP_CMD - parámetros de entrada
Parámetro

Declaración

Tipo de datos

Área de memoria

Significado / Observación

REQ

Input

BOOL

I, Q, M, D, L

Inicia la petición de emisión con un flanco as‐
cendente.

ID *

INPUT

INT

1, 2 ... 64

Las peticiones de FTP se desarrollan a través
de conexiones FTP. El parámetro identifica la
conexión utilizada.

7506

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro
CMD *

Declaración
INPUT

Tipo de datos
BYTE

Área de memoria

Significado / Observación

Consulte la tabla si‐ Comando FTP que debe ejecutarse al llamar
guiente "Comandos". la instrucción. Encontrará los rangos de valo‐
res para los tipos de comandos FTP a conti‐
nuación de la tabla.
Nota:
El comando FTP indicado aquí debe indicarse
de forma idéntica en el bloque de petición (pa‐
rámetro ARG).
Si un comando no es compatible con el firm‐
ware del CP, se emite un mensaje de error con
STATUS = 8F6BH.

ARG *

INPUT

VARIANT

Consulte la tabla si‐ Bloque de petición
guiente "Comandos". Hace referencia al área de datos con los pará‐
metros de ejecución adecuados para el co‐
mando FTP.
En función del comando FTP se utilizan tipos
de datos específicos (UDT). Los UDT se indi‐
can del siguiente modo.
El tipo de datos ANY no está permitido para el
puntero que debe especificarse aquí.

* Los valores de los parámetros de entrada "ID" y "CMD" sobrescriben el valor del parámetro de entrada "ARG".

Comandos FTP en el parámetro "CMD"
Consulte en la tabla siguiente qué significado tienen los comandos del parámetro "CMD" y qué
UDTs se utilizan para abastecer a los bloques de petición.
Tabla 4-458 Tipos de comando
CMD (tipo de comando) Bloques de petición rele‐
vantes / UDT

Significado / Manejo

0 (NOOP)

El FC llamado no ejecuta ninguna acción. Las indicaciones de estado
se ponen como sigue para este abastecimiento de parámetros:

*

DONE=1; ERROR=0; STATUS=0
1 (CONNECT)

FTP_CONNECT_IPV4

Establecimiento de la conexión FTP

FTP_CONNECT_IPV6

El cliente FTP establece con este comando una conexión FTP con un
servidor FTP (puerto 21).

FTP_CONNECT_NAME

2 (STORE)

FTP_FILENAME

La conexión está disponible, con la ID de conexión aquí asignada, para
todos los demás comandos FTP. Los datos se intercambian entonces
con el servidor FTP indicado para este usuario.
Con esta llamada de función se transmite un bloque de datos (File-DB)
del cliente FTP (CPU S7) al servidor FTP.
Atención: Si el archivo (File-DB) ya existe en el servidor FTP, se so‐
brescribe.

3 (RETRIEVE)

FTP_FILENAME

Con esta llamada de función se transmite un archivo del servidor FTP
al cliente FTP (CPU S7).
Atención: Si el bloque de datos (File-DB) del cliente FTP ya contiene
un archivo, este se sobrescribe.

Programación del PLC
Manual de programación y manejo, 11/2019

7507

Instrucciones
4.2 Instrucciones
CMD (tipo de comando) Bloques de petición rele‐
vantes / UDT

Significado / Manejo

4 (DELETE)

FTP_FILENAME

Con esta llamada de función se borra un archivo en el servidor FTP.

5 (QUIT)

*

Con esta llamada de función se deshace la conexión FTP identificada
con la ID.

6 (APPEND)

FTP_FILENAME

De forma similar a "STORE", el comando "APPEND" (añadir) guarda
un archivo en el servidor FTP. Pero con "APPEND" no se sobrescribe
el archivo en el servidor FTP, sino que el nuevo contenido a guardar se
añade al archivo.

7 (RETR_PART)

FTP_FILENAME_PART

Con el comando "RETR_PART" (leer longitud parcial) se puede pedir
del servidor FTP una parte de un archivo.

Si el archivo no existe en el servidor FTP, se crea.

En caso de archivos muy grandes se puede limitar así la lectura a la
parte necesaria.
Para esto se tiene que conocer la estructura del archivo.
Indique la parte deseada del archivo con ayuda de los dos parámetros
"OFFSET" y "LEN" en el FB 40.
* En los tipos de comando 0 (NOOP) y 5 (QUIT) debe indicarse un bloque de petición cualquiera (UDT). Dicho bloque no se
evaluará.

Consulte también
Panorámica de FTP_CMD (Página 7504)

Bloques de petición para FTP_CMD
Significado
La instrucción FTP_CMD se abastece con un bloque de petición a través del parámetro ARG.
La estructura depende del tipo de comando FTP. Al utilizar los tipos de datos especificados
(UDT), la instrucción reconoce el tipo del bloque de petición. A continuación se indican los tipos
de datos (UDT) correspondientes a los siguientes bloques de petición:
● Establecimiento de la conexión FTP con dirección IP según IPv4
● Establecimiento de la conexión FTP con dirección IP según IPv6
● Establecimiento de la conexión FTP con nombre de servidor
● Acceso de escritura y lectura así como otros comandos FTP
● Comando FTP RETR_PART

7508

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Bloque de petición para establecimiento de la conexión FTP con dirección IP según IPv4
Para el establecimiento de la conexión FTP con dirección IP según IPv4 se utiliza la siguiente
estructura de datos.
Tabla 4-459 FTP_CONNECT_IPV4
Parámetro
InterfaceID

Tipo

Rango de valores

HW_ANY

Significado / Observación
Dirección inicial del módulo
Al llamar una instrucción se transfiere en el parámetro
LADDR la dirección inicial de módulo del CP.
La dirección inicial de módulo del CP puede consultarse en
la configuración del CP en: "Propiedades>Direcciones>En‐
tradas"

ID

CONN_OUC

1, 2...64

Las peticiones de FTP se desarrollan a través de conexio‐
nes FTP. El parámetro identifica la conexión utilizada.

ConnectionType

BYTE

0

Tipo de conexión "FTP"

ActiveEstablishment BOOL

TRUE

FTPCmd

1

BYTE

Comando FTP "CONNECT"
Comando FTP que se ejecutará al llamar la instrucción. En‐
contrará los rangos de valores para los tipos de comandos
en el capítulo Parámetros de entrada FTP_CMD (Pági‐
na 7506).
Nota:
El comando FTP indicado aquí debe indicarse de forma
idéntica en el parámetro de entrada CMD.

CertIndex

BYTE

0 = FTP

Elija o bien el tipo de protocolo FTP, o bien FTPS.

1 = FTPS

Nota para FTPS:
Si el servidor FTP se configura fuera del proyecto STEP 7
del cliente FTP, habrá que importar el certificado del servidor
FTP.

UserName

STRING[32]

’benutzer’

Nombre del usuario para iniciar sesión en el servidor FTP

Password
FTPserverIPaddr

STRING[32]

’passwort’

Contraseña para iniciar sesión en el servidor FTP

IP_V4

ADDR(1) ...
ADDR(4)

Dirección IP del servidor FTP como Array[1..4] of Byte, en la
que cada byte especifica 1 bloque de la dirección.
Ejemplo: ADDR(1) especifica el primer bloque de dirección
(el primer byte de la dirección).

Programación del PLC
Manual de programación y manejo, 11/2019

7509

Instrucciones
4.2 Instrucciones

Bloque de petición para establecimiento de la conexión FTP con dirección IP según IPv6
Para el establecimiento de la conexión FTP con dirección IP según IPv6 se utiliza la siguiente
estructura de datos.
Tabla 4-460 FTP_CONNECT_IPV6
Parámetro
InterfaceID

Tipo

Rango de valores

HW_ANY

Significado / Observación
Dirección inicial del módulo
Al llamar una instrucción se transfiere en el parámetro
LADDR la dirección inicial de módulo del CP.
La dirección inicial de módulo del CP puede consultarse en
la configuración del CP en: "Propiedades>Direcciones>En‐
tradas"

ID

CONN_OUC

1, 2...64

Las peticiones de FTP se desarrollan a través de conexio‐
nes FTP. El parámetro identifica la conexión utilizada.

ConnectionType

BYTE

0

Tipo de conexión "FTP"

ActiveEstablishment BOOL

TRUE

FTPCmd

1

BYTE

Comando FTP "CONNECT"
Comando FTP que se ejecutará al llamar la instrucción. En‐
contrará los rangos de valores para los tipos de comandos
en el capítulo Parámetros de entrada FTP_CMD (Pági‐
na 7506).
Nota:
El comando FTP indicado aquí debe indicarse de forma
idéntica en el parámetro de entrada CMD.

CertIndex

BYTE

0 = FTP

Elija o bien el tipo de protocolo FTP, o bien FTPS.

1 = FTPS

Nota para FTPS:
Si el servidor FTP se configura fuera del proyecto STEP 7
del cliente FTP, habrá que importar el certificado del servidor
FTP.

UserName

STRING[32]

’usuario’

Nombre del usuario para iniciar sesión en el servidor FTP

Password

STRING[32]

’contraseña’

Contraseña para iniciar sesión en el servidor FTP

FTPserverIPaddr

IP_V6

ADDR(1) ...
ADDR(16)

Dirección IP del servidor FTP como Array[1..16] of Byte, en
la que cada 2 bytes especifican un bloque de la dirección.
Ejemplo: ADDR(1) + ADDR(2) especifican el primer bloque
de dirección.

7510

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Bloque de petición para establecimiento de la conexión FTP con nombre de servidor
Para el establecimiento de la conexión FTP indicando un nombre de servidor se utiliza la
siguiente estructura de datos. El nombre de servidor se asigna a una dirección IP mediante
DNS.
Tabla 4-461 FTP_CONNECT_NAME
Parámetro
InterfaceID

Tipo

Rango de valores

HW_ANY

Significado / Observación
Dirección inicial del módulo
Al llamar una instrucción se transfiere en el parámetro
LADDR la dirección inicial de módulo del CP.
La dirección inicial de módulo del CP puede consultarse en
la configuración del CP en: "Propiedades>Direcciones>En‐
tradas"

ID

CONN_OUC

1, 2...64

Las peticiones de FTP se desarrollan a través de conexio‐
nes FTP. El parámetro identifica la conexión utilizada.

ConnectionType

BYTE

0

Tipo de conexión "FTP"

ActiveEstablishment BOOL

TRUE

FTPcmd

1

BYTE

Comando FTP "CONNECT"
Comando FTP que se ejecutará al llamar la instrucción. En‐
contrará los rangos de valores para los tipos de comandos
en el capítulo Parámetros de entrada FTP_CMD (Pági‐
na 7506).
Nota:
El comando FTP indicado aquí debe indicarse de forma
idéntica en el parámetro de entrada CMD.

CertIndex

BYTE

0 = FTP

Elija o bien el tipo de protocolo FTP, o bien FTPS.

1 = FTPS

Nota para FTPS:
Si el servidor FTP se configura fuera del proyecto STEP 7
del cliente FTP, habrá que importar el certificado del servidor
FTP.

UserName

STRING[32]

’benutzer’

Nombre del usuario para iniciar sesión en el servidor FTP

Password

STRING[32]

’passwort’

Contraseña para iniciar sesión en el servidor FTP

FTPserverName

STRING[254]

Programación del PLC
Manual de programación y manejo, 11/2019

Dirección IP del servidor FTP

7511

Instrucciones
4.2 Instrucciones

Bloque de petición para acceso de escritura y lectura así como otros comandos FTP
Para los comandos FTP store, retrieve, delete y append se utiliza la siguiente estructura de
datos.
Tabla 4-462 FTP_FILENAME
Parámetro
InterfaceID

Tipo

Rango de valores

HW_ANY

Significado / Observación
Dirección inicial del módulo
Al llamar una instrucción se transfiere en el parámetro
LADDR la dirección inicial de módulo del CP.
La dirección inicial de módulo del CP puede consultarse en
la configuración del CP en: "Propiedades>Direcciones>En‐
tradas"

ID

CONN_OUC

1, 2...64

Las peticiones de FTP se desarrollan a través de conexio‐
nes FTP. El parámetro identifica la conexión utilizada.

ConnectionType

BYTE

0

Tipo de conexión "FTP"

ActiveEstablishment BOOL

TRUE

FTPcmd

2, 3, 4, 6

BYTE

Comando FTP "STORE / RETRIEVE / DELETE / APPEND"
Comando FTP que se ejecutará al llamar la instrucción. En‐
contrará los rangos de valores para los tipos de comandos
en el capítulo Parámetros de entrada FTP_CMD (Pági‐
na 7506).
Nota:
El comando FTP indicado aquí debe indicarse de forma
idéntica en el parámetro de entrada CMD.

CertIndex

BYTE

0 = FTP

Elija o bien el tipo de protocolo FTP, o bien FTPS.

1 = FTPS

Nota para FTPS:
Si el servidor FTP se configura fuera del proyecto STEP 7
del cliente FTP, habrá que importar el certificado del servidor
FTP.

DataBlockNumber

UINT

LenFilename

UINT

El bloque de datos aquí indicado contiene el File-DB que se
debe leer / escribir.
0...1000

El parámetro "LenFilename" que indica la longitud total del
nombre de archivo no se evalúa.
En su lugar se evalúa la longitud indicada en el string del
parámetro "Filename".

Filename

7512

ARRAY[0..3] OF
STRING[220]

Nombre del archivo de origen o destino.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Bloque de petición para el comando FTP RETR_PART
Para el comando FTP RETR_PART se utiliza la siguiente estructura de datos.
Tabla 4-463 FTP_FILENAME_PART
Parámetro
InterfaceID

Tipo

Rango de valores

HW_ANY

Significado / Observación
Dirección inicial del módulo
Al llamar una instrucción se transfiere en el parámetro
LADDR la dirección inicial de módulo del CP.
La dirección inicial de módulo del CP puede consultarse en
la configuración del CP en: "Propiedades>Direcciones>En‐
tradas"

ID

CONN_OUC

1, 2...64

Las peticiones de FTP se desarrollan a través de conexio‐
nes FTP. El parámetro identifica la conexión utilizada.

ConnectionType

BYTE

0

Tipo de conexión "FTP"

ActiveEstablishment BOOL

TRUE

FTPcmd

7

BYTE

Comando FTP "RETR_PART"
Comando FTP que se ejecuta al llamar la instrucción. En‐
contrará los rangos de valores para los tipos de comandos
en el capítulo Parámetros de entrada FTP_CMD (Pági‐
na 7506).
Nota:
El comando FTP indicado aquí debe indicarse de forma
idéntica en el parámetro de entrada CMD.

CertIndex

BYTE

0 = FTP

Elija o bien el tipo de protocolo FTP, o bien FTPS.

1 = FTPS

Nota para FTPS:
Si el servidor FTP se configura fuera del proyecto STEP 7
del cliente FTP, habrá que importar el certificado del servidor
FTP.

Offset

DWORD

Offset en bytes, a partir del cual se debe leer el archivo.

Length

DWORD

Longitud parcial en bytes que se debe leer a partir del valor
indicado en "OFFSET".
Peculiaridades:
● Si se indica "DW#16#FFFFFFFF" se lee el resto
disponible del archivo.
Resultado OK (DONE = 1, STATUS = 0), si no se
presenta ningún otro error.
● Si OFFSET > longitud del archivo original:
Longitud del archivo de destino (ACT_LENGTH en el
File-DB): 0 bytes en la CPU.
Resultado OK (DONE = 1, STATUS = 0), si no se
presenta ningún otro error.
● Si OFFSET + LEN > longitud del archivo original (y LEN
≠ 0xFFFFFFFF):
Longitud del archivo de destino (ACT_LENGTH en el
File-DB): Bytes disponibles a partir de "OFFSET".
Resultado OK (DONE = 1, STATUS = 0), si no se presenta
ningún otro error.

Programación del PLC
Manual de programación y manejo, 11/2019

7513

Instrucciones
4.2 Instrucciones
Parámetro

Tipo

DataBlockNumber

UINT

LenFilename

UINT

Rango de valores

Significado / Observación
El bloque de datos aquí indicado contiene el File-DB que se
debe leer / escribir.

0...1000

El parámetro "LenFilename" que indica la longitud total del
nombre de archivo no se evalúa.
En su lugar se evalúa la longitud indicada en el string del
parámetro "Filename".

Filename

ARRAY[0..3] OF
STRING[220]

Nombre del archivo de origen o destino.

Consulte también
Panorámica de FTP_CMD (Página 7504)

Parámetros de salida e informaciones de estado FTP_CMD
Parámetros BUSY, DONE y ERROR
El estado de ejecución se controla con los parámetros BUSY, DONE, ERROR y STATUS. El
parámetro BUSY muestra el estado de procesamiento. Con el parámetro DONE se controla si
una petición se ha ejecutado correctamente. El parámetro ERROR se activa cuando se
producen errores durante la ejecución de "FTP_CMD". La información se error se visualiza en
el parámetro STATUS.
La tabla siguiente muestra la relación entre los parámetros BUSY, DONE y ERROR:
BUSY

DONE

ERROR

Descripción

1

-

-

La petición se procesa.

0

1

0

La petición se ha llevado a cabo correctamente.

0

0

1

La petición ha finalizado con un error. La causa del error se indica en el parámetro STA‐
TUS.

0

0

0

No se ha asignado ninguna petición nueva.

Evaluar indicaciones de estados
Nota
Para las entradas con la codificación 8FxxH en STATUS, tenga en cuenta también lo dicho en
el manual de referencia STEP 7 Standard y funciones del sistema. Allí encontrará
informaciones en el capítulo "Evaluación de fallos con el parámetro de salida RET_VAL".

7514

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Tabla 4-464 FTP_CMD: Significado del parámetro STATUS en relación con DONE y ERROR
DONE

ERROR

STATUS

Significado

0

0

0000H

No hay ninguna petición en proceso.

1

0

0000H

La petición ha terminado sin errores.

0

0

7001H

La petición ha sido lanzada por primera vez (BUSY=1)

0

0

7002H

La petición aún está procesándose (BUSY=1)

0

0

80C4H

Error de comunicación (se presenta temporalmente; por ello es conve‐
niente una repetición en el programa de usuario.)

0

0

8183H

La configuración no concuerda con los parámetros de la petición.

0

1

8401H

Error desconocido
Posibles causas:
● En la conexión se detectó un timeout.
● El servidor FTP canceló la conexión.
Solución:
● Enviar los comandos QUIT y CONNECT para volver a crear la
conexión.

0

1

8402H

Estado de la conexión incorrecto.
Es posible que se haya excedido el timeout de la conexión o el servidor
FTP puede haber deshecho la conexión.
Solución:
Enviar nuevamente los comandos QUIT y CONNECT para volver a es‐
tablecer la conexión.

0

1

8403H

Error al iniciar sesión.

0

1

8404H

Servidor FTP no accesible.

0

1

8405H

Error en la transferencia.

0

1

8406H

Timeout en la operación actual

0

1

8407H

No se ha encontrado el archivo en el servidor FTP.

0

1

8408H

No es posible transferir.

0

1

8409H

No se ha podido recuperar el archivo.

0

1

8410H

Error el activar el puerto TCP para la conexión de datos.

0

1

8411H

La indicación de offset no concuerda.

0

1

8412H

Error al cambiar la indicación de directorio

0

1

8413H

Error al recibir datos

0

1

8414H

Error al enviar datos.

0

1

8415H

El cliente ha rechazado la indicación CMD (tipo de comando).

0

1

8416H

El servidor FTP ha cerrado la conexión.

0

1

8418H

Error en los datos de usuario.
Posibles causas:
● El nombre del archivo está vacío.
● La longitud de datos es "0"
● etc.

0

1

8419H

No hay recursos de socket para abrir una conexión de datos.

0

1

8420H

No hay recursos de socket para abrir una conexión de control.

0

1

8421H

Error al abrir el File-DB que debe leerse.

Programación del PLC
Manual de programación y manejo, 11/2019

7515

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8422H

Error al abrir el File-DB que debe escribirse.

0

1

8423H

Error al establecer la conexión con el servidor FTP.

0

1

8424H

Error interno

0

1

8425H

Error de formato en el nombre del dominio

0

1

8426H

Hay demasiadas peticione DNS.

0

1

8427H

El servidor DNS indicado no ha podido asignar el nombre de dominio
especificado.

0

1

8428H

No hay ningún recurso de conexión disponible.

0

1

8429H

ID de canal desconocida

0

1

8430H

El File-DB es demasiado corto.

0

1

8431H

Error al escribir en el File-DB.

0

1

8432H

Error al leer del File-DB.

0

1

8433H

Error al acceder al File-DB.

0

1

8434H

Acción cancelada.

0

1

8435H

Se reseteará el canal.

0

1

8436H

Respuesta inesperada del servidor

0

1

8437H

No se ha podido verificar el certificado.

0

1

8438H

Se ha producido un error desconocido

0

1

8439H

El comando FTP causa un error. La causa debe buscarse en el servidor
FTP (comando REST).

0

1

8440H

El servidor FTP no soporta el protocolo SSL exigido.

0

1

8446H

Después de enviar la contraseña FTP al servidor FTP, éste devolvió un
código inesperado.

0

1

8451H

Al intentar cambiar el modo de transmisión de binario a ASCII, se notificó
un error.

0

1

8455H

Error en una petición de memorización en el CM/CP.

0

1

8460H

Ha surgido un problema en la gestión de SSL/TLS.

0

1

8469H

Error de interfaz
No se ha podido utilizar la interfaz de salida especificada.
Solución:
Indique qué interfaz debe utilizarse para las conexiones salientes.

0

1

8475H

El certificapdo SSL o el SSH md5 fingerprint no se consideran de con‐
fianza.

0

1

8476H

El servidor FTP no ha recibido nada. En el estado actual debe contarse
con un comportamiento erróneo.

0

1

8477H

No se encontró el "Crypto engine" (módulo criptográfico) indicado.

0

1

8478H

Se produjo un error al configurar como estándar el "Crypto engine" SSL
(módulo criptográfico) seleccionado.

0

1

8480H

Ha surgido un problema con el certificado del cliente FTP.

0

1

8481H

No se pudo utilizar la cifra indicada.

0

1

8482H

El servidor FTP utiliza una codificación que no está soportada.

0

1

8484H

Se ha excedido el tamaño máximo del archivo.

0

1

8485H

El File-DB ha sido modificado durante el envío o su estructura no es
correcta.

7516

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE
0

ERROR
1

STATUS

Significado

8489H

No se han podido enviar los datos. No hay suficiente memoria disponible
para la operación en el servidor FTP.

0

1

8492H

El archivo ya existe. El archivo no se sobrescribe.

0

1

8496H

Ha surgido un problema al leer el certificado CA SSL.

0

1

8497H

Se ha producido un error inesperado en la sesión SSH.

0

1

8498H

No se pudo deshacer la conexión SSL.

0

1

8499H

El socket no está listo para enviar/recibir. Espere hasta que haya señal
de disponibilidad y vuélvalo a intentar.

0

1

8501H

Error en la comprobación del certificado SSL por el servidor FTP.

0

1

8507H

Durante la sesión FTP activa se ha producido un timeout al establecer la
conexión y esperar al servidor FTP.

0

1

8F55H

Bit de estado del encabezado: Locked

0

1

8F56H

El bit NEW en el encabezado del File-DB no se ha desactivado

0

1

8F6BH

Posibles causas:
● Valor incorrecto para el parámetro CMD
Se permiten valores entre 0 y 15.
● Un comando del FB 40 no es compatible.
Posible causa: Firmware incorrecto del CP
Solución: Actualización del firmware (en el caso de CPs menos
recientes, utilizar en lugar del FB 40 las funciones FC 40...FC 44.)

0

1

8F7FH

Error interno p. ej., referencia ANY no permitida.

Consulte también
Panorámica de FTP_CMD (Página 7504)

Estructura y uso del File-DB - Modo cliente FTP
Estructura de los bloques de datos (File-DB) para servicios FTP - modo FTP-Client
Funcionamiento
Para la transmisión de datos mediante FTP hay que crear bloques de datos (File-DBs) en la
CPU de la estación S7. Dichos bloques de datos han de tener una determinada estructura para
que los servicios FTP puedan tratarlos como archivos transmisibles. Constan de los siguientes
sectores:
● Sector 1: encabezado del File-DB (tiene una estructura fija con una longitud de 20 byte)
● Sector 2: Datos de usuario como "Array [..] of Byte" o "Array [..] of Char" (de longitud y
estructura variable)

Programación del PLC
Manual de programación y manejo, 11/2019

7517

Instrucciones
4.2 Instrucciones

Requisitos en la configuración de la CPU
Utilice los ajustes siguientes para permitir el acceso FTP:
● En los datos de configuración de la CPU, en "Propiedades > General > Protección":
desactive la opción "Desactivar comunicación PUT/GET".
● En todos los bloques de datos utilizados como File-DB desactive el atributo "Acceso
optimizado al bloque".

Encabezado del File-DB para modo cliente FTP
El encabezado del File-DB aquí descrito es idéntico al encabezado del File-DB descrito para
el modo de servidor.
Parámetro
EXIST

Tipo
BOOL

Valor / Significado

Alimentación

El bit EXIST indica si hay datos vá‐ El comando FTP "DELETE" pone
lidos en el área de datos de usua‐ EXIST=0.
rio.
El comando FTP "STORE" pone EXIST=1.
El comando FTP retrieve solo pro‐
cesa la petición si EXIST=1.
● 0: el File-DB no contiene datos
de usuario válidos (el archivo
no existe).
● 1: el File-DB contiene datos de
usuario válidos (el archivo
existe).

LOCKED

BOOL

Los comandos FTP "STORE" y "RETRIE‐
VE" ponen LOCKED=1 durante la edición
● 0: se puede acceder al File-DB. si el bit estaba antes en 0.
El programa de usuario almacenado en la
● 1: el File-DB está bloqueado.
CPU S7 también puede activar o desacti‐
var LOCKED para asegurar la coherencia
durante un acceso de escritura.
El bit LOCKED sirve para la pro‐
tección de acceso al File-DB.

Con ello se consigue garantizar un blo‐
queo mutuo entre el programa de usuario
y el proceso FTP para asegurar la cohe‐
rencia.
Procedimiento recomendado para el pro‐
grama de usuario:
1. Comprobar el bit LOCKED (si = 0)
2. Poner el bit WRITEACCESS=0
3. Comprobar el bit LOCKED (si = 0)
4. Poner el bit LOCKED=1
5. Escribir datos
6. Poner el bit LOCKED=0

7518

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Tipo

NEW

BOOL

Valor / Significado

Alimentación

El bit NEW informa sobre si los da‐ El comando FTP store pone NEW=1 tras
tos se han modificado desde la úl‐ la edición
tima operación de lectura.
El programa de usuario de la CPU S7 de‐
● 0: el contenido del File-DB no be poner NEW=0 tras la lectura de los da‐
tos para permitir un nuevo comando "RE‐
ha cambiado desde la última
TRIEVE".
operación de escritura. El
programa de usuario de la
CPU S7 ha registrado el último
cambio.
● 1: el programa de usuario de la
CPU S7 no ha registrado la
última operación de escritura.

WRITE_ACCESS

BOOL

● 0: El programa de usuario
tiene derecho de escritura
para los File-DBs de la CPU
S7.
● 1: El programa de usuario no
tiene derecho de escritura
para los File-DBs de la CPU
S7.

El bit se pone a un valor de inicialización al
configurar el DB.
Recomendación:
A ser posible, el bit debería dejarse inalte‐
rado. En caso especiales es posible una
adaptación durante el funcionamiento.

ACT_LENGTH

DINT

Longitud actual del área de datos
de usuario.
El contenido de este campo solo
es válido si EXIST = 1.

La longitud actual se actualiza después de
una operación de escritura.

MAX_LENGTH

DINT

Longitud máxima del área de da‐
tos de usuario (longitud total del
DB menos 20 bytes del encabeza‐
do).

La longitud máxima se debería definir al
configurar el DB.
El valor puede ser modificado por el pro‐
grama de usuario también durante el fun‐
cionamiento.

FTP_REPLY_CODE INT

Cifra sin signo (16 bit) que contie‐
ne el último código Reply de FTP
como valor binario.
El contenido de este campo solo
es válido si EXIST = 1.

Es actualizado por el tramitador de proto‐
colo FTP al procesar comandos FTP del
servidor.

DATE_TIME

Fecha y hora de la última modifi‐
cación del archivo.
El contenido de este campo solo
es válido si EXIST = 1.

La fecha actual se actualiza tras un pro‐
ceso de escritura.

DATE_AND_TIME

Si se utiliza la función "Transmisión de ho‐
ra", la entrada equivale a la hora transmi‐
tida.
Si la función "Transmisión de hora" no se
utiliza, se introduce una hora relativa. La
referencia es el momento de arranque del
CP (valor de inicialización: 01.01.1994
00:00h).

Consulte también
Bloque de datos FILE_DB_HEADER como plantilla - modo cliente FTP (Página 7520)

Programación del PLC
Manual de programación y manejo, 11/2019

7519

Instrucciones
4.2 Instrucciones

Bloque de datos FILE_DB_HEADER como plantilla - modo cliente FTP
Significado
El encabezado del File-DB aquí descrito es idéntico para los modos de cliente y servidor FTP.
Para la creación de un encabezado del File-DB está predeterminado el tipo de datos
FILE_DB_HEADER.

Funcionamiento
Para la transmisión de datos mediante FTP hay que crear bloques de datos (File-DBs) en la
CPU de la estación S7. Dichos bloques de datos han de tener una determinada estructura para
que los servicios FTP puedan tratarlos como archivos transmisibles. Constan de los siguientes
sectores:
● Sector 1: encabezado del File-DB (tiene una estructura fija con una longitud de 20 byte)
● Sector 2: datos de usuario (longitud y estructura variables)

Proceda del siguiente modo:
1. Cree un bloque de datos del tipo "DB global" en la CPU en la que se crea el programa de
usuario con las instrucciones FTP.
2. Abra el cuadro de diálogo de propiedades del bloque de datos recién creado (menú
contextual), desactive el atributo "Acceso optimizado al bloque" y vuelva a cerrar el cuadro
de diálogo de propiedades.
3. En el editor de bloques del DB, seleccione la fila que va a utilizar como línea de inicio para
el File-DB.
4. En la columna "Tipo de datos" seleccione un elemento de estructura del tipo
"FILE_DB_HEADER" o bien introduzca el tipo "FILE_DB_HEADER" a través del teclado.
Resultado: Se crea una estructura de datos con la estructura de encabezado necesaria
para el File-DB.
5. Ponga el parámetro "WRITE_ACCESS" a "true" para permitir el acceso.
6. Indique un valor para la longitud de los datos de usuario en el parámetro "MAX_LENGTH",
consulte el siguiente punto.
7. Cree un campo de datos del tipo "Array [..] of Byte" o "Array [..] of Char" para los datos de
usuario a transmitir.
El tamaño del campo debe coincidir con la indicación de MAX_LENGTH en el encabezado.
Nota
Función "Agregar nuevo bloque" - Selección de tipo
Al crear nuevos bloques de datos, en la entada "Tipo" de la lista desplegable también se ofrece
el tipo de bloque "FILE_DB_HEADER". ¡No utilice esta opción! El bloque de datos creado de
esa manera solo obtiene la estructura de encabezado y no puede ampliarse con el área
necesaria para depositar datos de usuario.

7520

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Bloque de datos FILE_DB_HEADER - Ejemplo y plantilla para el encabezado del File-DB
En la vista de declaración se reconoce la siguiente estructura:
Dirección

Nombre

0.0

Tipo

Valor inicial

Comentario

STRUCT

+0.0

bit08

BOOL

FALSE

reservado

+0.1

bit09

BOOL

FALSE

reservado

+0.2

bit10

BOOL

FALSE

reservado

+0.3

bit11

BOOL

FALSE

reservado

+0.4

bit12

BOOL

FALSE

reservado

+0.5

bit13

BOOL

FALSE

reservado

+0.6

bit14

BOOL

FALSE

reservado

+0.7

bit15

BOOL

FALSE

reservado

+1.0

EXIST

BOOL

FALSE

si TRUE:
el File-DB contiene datos váli‐
dos

+1.1

LOCKED

BOOL

FALSE

si TRUE:
el File-DB está bloqueado debi‐
do a un cambio de contenido.

+1.2

NEW

BOOL

FALSE

si TRUE:
el contenido del File-DB es nue‐
vo y no puede sobrescribirse.

+1.3

WRITE_ACCESS

BOOL

FALSE

si TRUE:
el servidor FTP tiene acceso de
escritura.

+1.4

bit04

BOOL

FALSE

reservado

+1.5

bit05

BOOL

FALSE

reservado

+1.6

bit06

BOOL

FALSE

reservado

+1.7

bit07

BOOL

FALSE

reservado

+2.0

ACT_LENGTH

DINT

L#0

Longitud actual del contenido
en bytes (sin incluir los 20 bytes
del encabezado)

+6.0

MAX_LENGTH

DINT

L#0

Longitud máxima del contenido
en bytes (sin incluir los 20 bytes
del encabezado)

+10.0

FTP_REPLY_CODE

INT

0

Es actualizado por el tramitador
de protocolo FTP al procesar
comandos FTP, última informa‐
ción de respuesta del servidor
FTP.

+12.0

DATE_TIME

DATE_AND_TIME

DT#00-1-1-0:0:0.000

Fecha y hora del último cambio
en el contenido del File-DB.

=20.0

Programación del PLC
Manual de programación y manejo, 11/2019

END_STRUCT

7521

Instrucciones
4.2 Instrucciones

CM/CP S7-1200
Telecontrol
Instrucciones de Telecontrol
TC_CON: establecer un enlace a través de la red GSM
Significado
La instrucción TC_CON permite al S7-1200 establecer conexiones de los tipos siguientes a
través del CP 1242-7:
● ISO‑ON‑TCP
El interlocutor es un CP 1242-7.
Las conexiones ISO‑ON‑TCP solo se utilizan en el modo de operación "GPRS directo".
● UDP
El interlocutor es uno cualquiera.
● SMS
El interlocutor es un cliente SMS.
● Conexión Telecontrol
El interlocutor es un servidor Telecontrol o bien otra estación a la que se accede a través
del servidor Telecontrol.
Un TC_CON establece una conexión. Dependiendo del modo de operación del CP 1242-7 y
del protocolo utilizado, por cada CP se soportan un máximo de 3 a 5 conexiones paralelas con
IDs únicas (véase más abajo). El número máximo posible de conexiones paralelas puede
consultarse en los datos de rendimiento del CP.
Para describir la conexión, el parámetro CONNECT utiliza un bloque de datos (DB) con una
estructura definida por el tipo de datos del sistema (SDT).
El tipo de conexión deseado se define mediante un SDT "TCON_..." específico de la conexión
(véase más abajo). Para cada uno de los tipos de conexión mencionados anteriormente debe
parametrizarse uno de los siguientes SDTs:
● TCON_IP_RFC para conexiones ISO‑ON‑TCP
● TCON_IP_V4 para conexiones UDP
● TCON_PHONE para conexiones SMS
● TCON_WDC para conexiones Telecontrol
En el parámetro "ActiveEstablished" de estos SDTs se define, entre otros, si se trata de un
establecimiento de conexión activo o pasivo.
Para parametrizar estos SDTs consulte TCON_...: SDTs para el establecimiento de un enlace
Telecontrol (Página 7538).
El parámetro ID referencia la conexión GPRS. La ID se asigna y debe ser unívoca dentro de
la CPU.

7522

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El parámetro INTERFACE referencia la interfaz GPRS del CP local deseado. Esta debe ser
adoptada desde STEP 7.

Interfaz de llamada en representación FUP
7&B&21
%22/

5(4

%86<

%22/

&211B28&

,'

'21(

%22/

+:B,17(5)$&(

,17(5)$&(

(5525

%22/

7&21B3DUDP

&211(&7

67$786

:25'

Explicación de los parámetros formales
La tabla siguiente explica los parámetros formales de la instrucción TC_CON.
Parámetro

Declaración

Tipo de datos

Rango de valores

Descripción

REQ

INPUT

BOOL

0, 1

Con un flanco ascendente se inicia el pro‐
cesamiento de la instrucción y se iniciali‐
zan los indicadores de estado.
Actualización de los indicadores de esta‐
do DONE, ERROR y STATUS cuando no
hay ningún flanco ascendente.

ID

INPUT

CONN_OUC

1...07FFh

Referencia a la conexión correspondien‐
te. La ID se asigna.
El valor de ID también es requerido por el
tipo de datos de sistema (SDT) corres‐
pondiente al parámetro CONNECT.

INTERFACE

INPUT

HW_INTERFA‐
CE

CONNECT

INOUT

TCON_Param

Referencia a la interfaz del CP 1242‑7 lo‐
cal (véase STEP 7 > Configuración CP >
Interfaz Telecontrol > "Identificador HW")
Véase también "TCON_...:
SDTs para establecer la cone‐
xión de Telecontrol"

Referencia a un bloque de datos para el
establecimiento de la conexión.
Los SDT del tipo TCON_IP_RFC,
TCON_IP_V4, TCON_PHONE o
TCON_WDC predeterminan la estructura
del bloque de datos apto para la conexión
correspondiente.
Tenga en cuenta el parámetro "ActiveEs‐
tablished" (establecimiento activo / pasi‐
vo de la conexión) en los SDTs.

ENO

OUTPUT

BOOL

0: error
1: correcto

Programación del PLC
Manual de programación y manejo, 11/2019

Salida de habilitación
Si la instrucción presenta un error en el
tiempo de ejecución, se pondrá ENO = 0.

7523

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Rango de valores

Descripción

BUSY

OUTPUT

BOOL

0: procesamiento de la instruc‐
ción todavía no iniciado, finali‐
zado o cancelado

Indicador del estado de procesamiento
de la instrucción

1: procesamiento de la instruc‐
ción en curso
DONE

OUTPUT

BOOL

0: 1: procesamiento de la instruc‐
ción finalizado correctamente

ERROR

OUTPUT

STATUS

OUTPUT

BOOL

El parámetro de estado indica si la peti‐
ción se ha desarrollado correctamente.
Consulte el significado en relación con los
parámetros ERROR y STATUS en Indi‐
cadores de la instrucción.

0: -

Indicador de error

1: error

Consulte el significado en relación con los
parámetros DONE y STATUS en Indica‐
dores de la instrucción.

WORD

Indicador de estado
Consulte el significado en relación con los
parámetros DONE y ERROR en Indica‐
dores de la instrucción.

Indicadores BUSY, DONE y ERROR
Los indicadores DONE y ERROR solo son relevantes si BUSY = 0.
BUSY

DONE

ERROR

Significado

0

0

0

Ninguna petición en proceso

Encontrará todas las demás combinaciones de los indicadores DONE y ERROR en la tabla
siguiente.
En caso de llamada, la instrucción permanecerá en el estado BUSY = 1 por algunos segundos.
En los siguientes casos puede durar más tiempo el estado BUSY = 1:
● En el caso de conexiones ISO‑ON‑TCP activas, cuando no se puede acceder al interlocutor.
● En el caso de conexiones pasivas, cuando no se recibe ningún telegrama.

Indicadores DONE, ERROR y STATUS
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
DONE

ERROR

STATUS

Significado

1

0

0000H

Petición ejecutada correctamente

0

0

7000H

No hay ningún procesamiento de petición activo (primera llamada de la instrucción)

0

0

7001H

Procesamiento de petición iniciado (primera llamada de la instrucción)

0

0

7002H

Procesamiento de petición en curso (nueva llamada de la instrucción si BUSY = 1)

0

1

8086H

Valor no permitido para ID

0

1

8087H

Número máximo de conexiones alcanzado, no es posible ninguna otra conexión

7524

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

80E3H

La ID ya se está utilizando en otra conexión. Esto significa que con TC_SEND, TC_RECV
o TC_DISCON actualmente BUSY es TRUE.
También se emitirá el indicador de estado si EN_R con TC_RECV es TRUE de forma
permanente. Esto hace que se acceda principalmente a TC_RECV. Solución para este
caso: desactive EN_R antes de que se llame TC_CON o TC_DISCON. EN_R solo se
debe volver a activar si se ha ejecutado TC_CON correctamente.

0

1

80E6H

Ninguna solicitud en proceso (la activación de la instrucción no se inicia)

0

1

80E8H

Interlocutor remoto no accesible. Compruebe los parámetros de conexión.
En el modo de operación "GPRS directo", el aviso se emite cuando el interlocutor está
accesible pero no acepta las peticiones de conexión.

0

1

80EBH

Solicitud rechazada por el momento (TC_CON ya se ha llamado con la misma dirección
de destino.)

0

1

80ECH

No se ha podido abrir el Listener Port:

0

1

80F2H

El CP está en el modo de operación equivocado:

Compruebe los parámetros de conexión.
● Las conexiones Telecontrol solo se permiten en el modo de operación "Telecontrol".
● Las conexiones ISO‑ON‑TCP solo se utilizan en el modo de operación "GPRS
directo".
0

1

80F3H

No hay ningún punto final libre en la conexión para enviar datos:
● Utilice menos conexiones o
● Utilice menos conexiones pasivas o
● Desactive la opción NTP.
Tenga en cuenta el número máximo de conexiones paralelas del CP 1242-7.

0

1

80F4H

No se puede generar el punto final de la conexión:
Repita la llamada. En dado caso, compruebe los parámetros de conexión.

0

1

80F5H

Punto final de la conexión no válido: fallo en el establecimiento de la conexión a través de
TC_CON.
Repita la llamada del bloque.

0

1

80F6H

Error de formato de un parámetro en el bloque de datos llamado (tamaño erróneo, for‐
mato incorrecto, valor no válido o número de llamada en TCON_Phone con más de 20
caracteres)
Compruebe la configuración del SDT "TC_CON...".

TC_DISCON: desconectar un enlace a través de la red GSM
Significado
En un S7-1200 con CP 1242-7, la instrucción TC_DISCON provoca la desconexión de una
conexión ISO-ON-TCP, UDP, SMS o de Telecontrol establecida con la instrucción TC_CON.
Encontrará información detallada sobre los tipos de conexión en la descripción de la
instrucción TC_CON.
TC_DISCON desconecta solo de forma lógica la conexión con el servidor de Telecontrol. En
el nivel TCP/IP, la conexión permanece.

Programación del PLC
Manual de programación y manejo, 11/2019

7525

Instrucciones
4.2 Instrucciones
Si la conexión con el servidor de Telecontrol va a desconectarse físicamente, debe
configurarse como "Conexión temporal" en STEP 7 en el grupo de parámetros "Servidor de
Telecontrol". Las estaciones temporales deshacen la conexión automáticamente después de
enviar los datos.
Nota
Procesamiento de otros bloques de programa cancelado por TC_DISCON
Una llamada de TC_DISCON finaliza la ejecución de los bloques TC_CON, TC_SEND y
TC_RECV que se llamaron con la misma ID de conexión (parámetro "ID") e interfaz (parámetro
"INTERFACE"). A continuación, dichos bloques notifican ERROR.
No llamar TC_DISCON si TC_CON muestra "Error = 1".
Si TC_CON muestra "ERROR" significa que la conexión no se ha establecido. En este caso no
debe llamarse TC_DISCON.
Si se llama TC_DISCON en esta situación, la ID de conexión ("ID") queda reservada por un
tiempo breve, con lo que si se llamara seguidamente TC_CON se mostraría ERROR y
STATUS 80E3.
El parámetro ID referencia la conexión GPRS. La ID debe ser unívoca dentro de la CPU e
idéntica a la ID utilizada en TC_CON.
El parámetro INTERFACE referencia la interfaz GPRS del CP local deseado. El valor debe ser
idéntico al utilizado para INTERFACE en TC_CON.

Interfaz de llamada en representación FUP
7&B',6&21

7526

%22/

5(4

%86<

%22/

&211B28&

,'

'21(

%22/

+:B,17(5)$&(

,17(5)$&(

(5525

%22/

67$786

:25'

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Explicación de los parámetros formales
La tabla siguiente muestra los parámetros formales de la instrucción TC_DISCON.
Parámetro

Declaración

Tipo de datos

Rango de valores

Descripción

REQ

INPUT

BOOL

0, 1

Con un flanco ascendente se inicia el pro‐
cesamiento de la instrucción y se iniciali‐
zan los indicadores de estado.
Actualización de los indicadores de esta‐
do DONE, ERROR y STATUS cuando no
hay ningún flanco ascendente.

ID

INPUT

CONN_OUC

INTERFACE

INPUT

HW_INTERFA‐
CE

ENO

OUTPUT

BOOL

1...07FFh

Referencia a la interfaz del CP 1242‑7 lo‐
cal (véase STEP 7 > Configuración CP >
Interfaz Telecontrol > "Identificador HW")
0: error
1: correcto

BUSY

OUTPUT

BOOL

Referencia a la conexión correspondiente

0: procesamiento de la instruc‐
ción todavía no iniciado, finali‐
zado o cancelado

Salida de habilitación
Si la instrucción presenta un error en el
tiempo de ejecución, se pondrá ENO = 0.
Indicador del estado de procesamiento
de la instrucción

1: procesamiento de la instruc‐
ción en curso
DONE

OUTPUT

BOOL

0: 1: procesamiento de la instruc‐
ción finalizado correctamente

ERROR

OUTPUT

STATUS

OUTPUT

BOOL

El parámetro de estado indica si la peti‐
ción se ha desarrollado correctamente.
Consulte el significado en relación con los
parámetros ERROR y STATUS en Indi‐
cadores de la instrucción.

0: -

Indicador de error

1: error

Consulte el significado en relación con los
parámetros DONE y STATUS en Indica‐
dores de la instrucción.

WORD

Indicador de estado
Consulte el significado en relación con los
parámetros DONE y ERROR en Indica‐
dores de la instrucción.

Indicadores BUSY, DONE y ERROR
Los indicadores DONE y ERROR solo son relevantes si BUSY = 0.
BUSY

DONE

ERROR

Significado

0

0

0

La instrucción todavía no se ha llamado.

Encontrará todas las demás combinaciones de los indicadores DONE y ERROR en la tabla
siguiente.
Nota
En caso de llamada, la instrucción permanecerá en el estado BUSY = 1 por algunos segundos.

Programación del PLC
Manual de programación y manejo, 11/2019

7527

Instrucciones
4.2 Instrucciones

Indicadores DONE, ERROR y STATUS
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
DONE

ERROR

STATUS

Significado

1

0

0000H

Petición ejecutada correctamente

0

0

7000H

No hay ningún procesamiento de petición activo (primera llamada de la instrucción)

0

0

7001H

Procesamiento de petición iniciado (primera llamada de la instrucción)

0

0

7002H

Procesamiento de petición en curso (nueva llamada de la instrucción si BUSY = 1)

0

1

8086H

Valor no permitido para ID

0

1

80E4H

ID desconocida: No existe ninguna conexión e a través de TC_CON con esta ID.

0

1

80E6H

Ninguna solicitud en proceso (la activación de la instrucción no se inicia)

0

1

80F5H

Punto final de la conexión no válido:
● Fallo en el establecimiento de la conexión a través de TC_CON o
● Desconexión por parte del interlocutor remoto.

0

1

80F6H

Error de formato de un parámetro en el bloque de datos llamado (tamaño erróneo, for‐
mato incorrecto o valor no válido)
Compruebe la configuración del SDT "TC_CON...".

TC_SEND: enviar datos a través de la red GSM
Significado
La instrucción TC_SEND permite enviar datos a través de las conexiones programadas de los
tipos siguientes:
● Conexiones ISO‑ON‑TCP
● Conexiones UDP
● Conexiones SMS
El envío de SMS solo es soportado si este se estableció en la configuración STEP 7 del CP.
● Conexiones Telecontrol
Nota
Enviar SMS a varios destinatarios
Si desea enviar un SMS idéntico a varios destinatarios, deberá establecer una conexión
para cada destinatario.
Encontrará más información detallada sobre los tipos de conexión en la descripción de la
instrucción TC_CON.
El parámetro ID referencia la conexión GPRS. El valor de la ID debe ser equivalente al valor
de ID utilizado en TC_CON.
El parámetro INTERFACE referencia la interfaz GPRS del CP local deseado. El valor debe ser
idéntico al utilizado para INTERFACE en TC_CON.
El número de datos que deben enviarse se indica en el parámetro LEN.

7528

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El tamaño del rango de datos indicado en DATA debe ser como mínimo tan grande como el
número de bytes configurado en LEN. Los tipos de datos permitidos en el rango de datos
indicado en DATA son todos excepto BOOL y ARRAY of BOOL.
La dirección de destino (interlocutor) para los datos que deben enviarse se configura en la
instrucción TC_CON.

Interfaz de llamada en representación FUP
7&B6(1'
%22/

5(4

%86<

%22/

&211B28&

,'

'21(

%22/

+:B,17(5)$&(

,17(5)$&(

(5525

%22/

8,17

/(1

67$786

:25'

9$5,$17

'$7$

Explicación de los parámetros formales
La tabla siguiente muestra los parámetros formales de la instrucción TC_SEND.
Parámetro

Declaración

Tipo de datos

Rango de valores

Descripción

REQ

INPUT

BOOL

0, 1

Con un flanco ascendente se inicia el pro‐
cesamiento de la instrucción y se iniciali‐
zan los indicadores de estado.
Actualización de los indicadores de esta‐
do DONE, ERROR y STATUS cuando no
hay ningún flanco ascendente.

ID

INPUT

CONN_OUC

INTERFACE

INPUT

HW_INTERFA‐
CE

LEN

INPUT

UINT

1...07FFh

Referencia a la conexión correspondiente
Referencia a la interfaz del CP 1242‑7 lo‐
cal (véase STEP 7 > Configuración CP >
Interfaz Telecontrol > "Identificador HW")

1...2048

Número de bytes de los datos que deben
enviarse.
El valor debe ser ≥ 1 y ≤ 2048.
El valor debería corresponderse con el ta‐
maño del rango de DATA.

DATA

INOUT

VARIANT

ENO

OUTPUT

BOOL

Referencia de dirección al rango de datos
de la CPU que debe transferirse*
0: Error
1: correcto

BUSY

OUTPUT

BOOL

0: procesamiento de la instruc‐
ción todavía no iniciado, finali‐
zado o cancelado

Salida de habilitación
Si la instrucción presenta un error en el
tiempo de ejecución, se pondrá ENO = 0.
Indicador del estado de procesamiento
de la instrucción

1: procesamiento de la instruc‐
ción en curso

Programación del PLC
Manual de programación y manejo, 11/2019

7529

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Rango de valores

Descripción

DONE

OUTPUT

BOOL

0: -

El parámetro de estado indica si la peti‐
ción se ha desarrollado correctamente. **

1: procesamiento de la instruc‐
ción finalizado correctamente

ERROR

OUTPUT

STATUS

OUTPUT

BOOL

Consulte el significado en relación con los
parámetros ERROR y STATUS en Indi‐
cadores de la instrucción.

0: -

Indicador de error

1: Error

Consulte el significado en relación con los
parámetros DONE y STATUS en Indica‐
dores de la instrucción.

WORD

Indicador de estado
Consulte el significado en relación con los
parámetros DONE y ERROR en Indica‐
dores de la instrucción.

* Consulte el apartado siguiente para las particularidades del parámetro DATA para textos SMS.
** Tras enviar un telegrama, TC_SEND pone DONE = 1. Observe el comportamiento siguiente:
el fallo de una conexión ISO-on-TCP no es detectada por el emisor hasta pasados 1 o 2 minutos. Los datos transferidos pueden
haberse perdido aunque TC_SEND haya puesto DONE = 1 en el emisor.
Si se cancela una conexión ISO-on-TCP tras recibir un telegrama y antes de iniciar TC_RECV, es posible que los datos
transferidos se pierdan incluso si TC_SEND ha puesto DONE = 1 en el emisor.

Configuración de textos SMS con el parámetro DATA
La instrucción envía como texto SMS aquellos datos a los que hace referencia el indicador del
tipo VARIANT del parámetro DATA.
Si desde DATA se hace referencia a un operando del tipo de datos STRING para textos SMS,
entonces también se transfieren los dos primeros bytes con indicaciones de longitud del string.
Una posibilidad para la representación correcta de textos SMS para enviar es la conversión del
string de texto en un Array of BYTE o Array of CHAR con ayuda de la función de conversión
Strg_TO_Chars. Strg_TO_Chars se vincula al parámetro EN con el parámetro de salida ENO
de TC_SEND.
Para textos SMS, el CP no soporta todos los caracteres especiales, como por ejemplo la
diéresis. Se aplica la especificación GSM 03.38. Pueden aparecer limitaciones adicionales
debido al proveedor de red GSM.

Indicadores BUSY, DONE y ERROR
Los indicadores DONE y ERROR solo son relevantes si BUSY = 0.
BUSY

DONE

ERROR

Significado

0

0

0

Ninguna petición en proceso

Encontrará todas las demás combinaciones de los indicadores DONE y ERROR en la tabla
siguiente.

7530

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Indicadores DONE, ERROR y STATUS
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
DONE

ERROR

STATUS *

Significado

1

0

0000H

Petición ejecutada correctamente

0

0

7000H

No hay ningún procesamiento de petición activo (primera llamada de la instrucción)

0

0

7001H

Procesamiento de petición iniciado (primera llamada de la instrucción)

0

0

7002H

Procesamiento de petición en curso (nueva llamada de la instrucción si BUSY = 1)

0

1

8086H

Valor no permitido para ID

0

1

80E0H

Error interno
Si se envían telegramas directamente al servidor de Telecontrol (modo de operación
"Telecontrol"), asegúrese de que el tiempo de ciclo de emisión ≥ 1 segundo.

0

1

80E1H

Rebase de tiempo:
● Aumente el valor del "tiempo de vigilancia de conexión" en la configuración del
CP 1242-7 o
● Compruebe el interlocutor.

0

1

80E4H

ID desconocida:
Llame en primer lugar la instrucción TC_CON.

0

1

80E6H

Ninguna solicitud en proceso (la activación de la instrucción no se inicia)

0

1

80E7H

Los datos que debían enviarse no se han transferido íntegramente:

0

1

80E8H

Repita la petición.
Interlocutor remoto no accesible. Compruebe los parámetros de conexión.
En el modo de operación "GPRS directo", el aviso se emite cuando el interlocutor está
accesible pero no acepta las peticiones de conexión.
0

1

80E9H

Desconexión por parte del interlocutor remoto:
Compruebe el interlocutor. En dado caso, deshaga la conexión con TC_DISCON y es‐
tablézcala nuevamente con TC_CON.

0

1

80EAH

Mensaje de error del interlocutor remoto:
● Compruebe el interlocutor. Active la instrucción "TC_RECV" en el interlocutor.
● En dado caso, deshaga la conexión con TC_DISCON y establézcala nuevamente con
TC_CON.

0

1

80EFH

No se ha podido enviar el SMS:
● Compruebe si existe la dirección de destino (número de llamada del participante
destinatario).
● Compruebe si la tarjeta SIM insertada soporta el envío de SMS.
● Compruebe la longitud del texto SMS enviado. Los textos SMS > 160 caracteres no
se envían.
● Asegúrese de que la opción "Estándar" se haya seleccionado para el acceso al
bloque en el momento de crear el bloque de datos TCON_PHONE.

0

1

80F1H

En envío de SMS no está activado en la configuración STEP 7 del CP:
Active la opción "Permitir SMS" en la configuración del CP.

0

1

80F4H

No se puede generar el punto final de la conexión:
Compruebe el interlocutor.

Programación del PLC
Manual de programación y manejo, 11/2019

7531

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS *

Significado

0

1

80F5H

Punto final de la conexión no válido:
● Fallo en el establecimiento de la conexión a través de TC_CON.
o bien
● Desconexión por parte del interlocutor remoto: Llame la instrucción TC_DISCON.

0

1

80F6H

Error de formato de un parámetro en el bloque de datos llamado (tamaño erróneo, for‐
mato incorrecto o valor no válido):
Compruebe la configuración del SDT "TC_CON...".

* Encontrará otros estados que no aparecen aquí en los indicadores de estado de las instrucciones "RDREC" y "WRREC", bajo
los dos bytes de estado centrales (STATUS[2], STATUS[3]).

TC_RECV: recibir datos a través de la red GSM
Significado
La instrucción TC_RECV permite recibir datos a través de las conexiones programadas de los
tipos siguientes:
● conexiones ISO‑ON‑TCP
● conexiones SMS
Para recibir SMS debe estar configurado el número de llamada del remitente en la
configuración STEP 7 del CP que debe recibirse (números de llamada autorizados). El
remitente debe soportar la función CLIP.
El número de llamada del interlocutor debe introducirse en el SDT "TCON_PHONE".
Los SMS de alarma se excluyen mediante un filtro.
● Conexiones Telecontrol
Nota
Recibir SMS de varios remitentes
Si desea recibir SMS de varios remitentes, puede escoger para ello entre dos alternativas:
● Debe configurar varias conexiones (TC_CON, TC_RECV, TC_DISCON).
o bien
● En una única conexión configurada en el bloque de datos necesario "TCON_PHONE"
en el parámetro "PhoneNumber" no puede introducir ningún número de llamada. Esto
se interpretará durante la recepción de mensajes como comodín para todos los
interlocutores autorizados.
Encontrará más información detallada sobre los tipos de conexión en la descripción de la
instrucción TC_CON.
El parámetro ID referencia la conexión GPRS. El valor de la ID debe ser equivalente al valor
de ID utilizado en TC_CON.
El parámetro INTERFACE referencia la interfaz GPRS del CP local deseado. El valor debe ser
idéntico al utilizado para INTERFACE en TC_CON.
El número máximo de los datos de recepción se indica en el parámetro LEN.
El tamaño del rango de datos indicado en DATA debe ser como mínimo tan grande como el
número de bytes configurado en LEN. Los tipos de datos permitidos en el rango de datos

7532

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
indicado en DATA son todos excepto BOOL y ARRAY of BOOL. Los datos recibidos se
interpretan como si el interlocutor remitente hubiera utilizado los mismos tipos de datos.
El DB (tipo de datos de sistema) utilizado para la descripción de la conexión de TC_RECV se
debe distinguir de un DB utilizado para TC_SEND.

Almacenamiento de SMS
Los SMS recibidos se almacenan de forma remanente en el CP 1242-7 (25 espacios de
memoria) y en la tarjeta SIM (número variable de espacios de memoria).
● Una vez TC_RECV ha leído el SMS, este se borra de la memoria.
● Si todos los espacios de memoria están ocupados y se recibe un nuevo SMS, se borra el
más antiguo.

Interfaz de llamada en representación FUP
7&B5(&9
%22/

(1B5

&211B28&

,'

+:B,17(5)$&(

,17(5)$&(

8,17
9$5,$17

5&9'B/(1

8,17

%86<

%22/

1'5

%22/

/(1

(5525

%22/

'$7$

67$786

:25'

Explicación de los parámetros formales
La tabla siguiente muestra los parámetros formales de la instrucción TC_RECV.
Parámetro

Declaración

Tipo de datos

Rango de valores

Descripción

EN_R

INPUT

BOOL

0: recepción de datos bloquea‐
da

Permitir/bloquear la recepción de datos.

1: recepción de datos permitida

● Versión 1.1 del bloque: tras pasar de 1
a 0 el bloque queda inactivo.
● Versión 1.0 del bloque: tras pasar de 1
a 0, el bloque de programa recibe
datos una vez más (hasta que DONE
= 0 y ERROR = 0).
Tenga en cuenta las indicaciones sobre el
indicador de estado 80E3 en TC_CON.

ID

INPUT

CONN_OUC

INTERFACE

INPUT

HW_INTERFA‐
CE

LEN

INPUT

UINT

Programación del PLC
Manual de programación y manejo, 11/2019

1...07FFh

Referencia a la conexión correspondiente
Referencia a la interfaz del CP 1242‑7 lo‐
cal (véase STEP 7 > Configuración CP >
Interfaz Telecontrol > "Identificador HW")

1...2048

Número (mínimo) de bytes de los datos
que deben recibirse, máximo 2048

7533

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

DATA

INOUT

VARIANT

ENO

OUTPUT

BOOL

Rango de valores

Referencia de dirección al rango de datos
de recepción de la CPU*
0: error
1: correcto

RCVD_LEN

OUTPUT

UINT

BUSY

OUTPUT

BOOL

Descripción

Salida de habilitación
Si la instrucción presenta un error en el
tiempo de ejecución, se pondrá ENO = 0.
Número de bytes de los datos recibidos

0: procesamiento de la instruc‐
ción todavía no iniciado, finali‐
zado o cancelado

Indicador del estado de procesamiento
de la instrucción

1: procesamiento de la instruc‐
ción en curso
DONE

OUTPUT

BOOL

0: 1: procesamiento de la instruc‐
ción finalizado correctamente

ERROR

OUTPUT

STATUS

OUTPUT

BOOL

El parámetro de estado indica si la peti‐
ción se ha desarrollado correctamente.
Consulte el significado en relación con los
parámetros ERROR y STATUS en Indi‐
cadores de la instrucción.

0: -

Indicador de error

1: error

Consulte el significado en relación con los
parámetros DONE y STATUS en Indica‐
dores de la instrucción.

WORD

Indicador de estado
Consulte el significado en relación con los
parámetros DONE y ERROR en Indica‐
dores de la instrucción.

* Consulte el apartado siguiente para las particularidades del parámetro DATA para textos SMS.

Configuración de textos SMS con el parámetro DATA
La instrucción hace referencia al texto SMS recibido con el indicador del tipo VARIANT del
parámetro DATA en el rango de datos de la CPU.
Si desde DATA se hace referencia a un operando del tipo de datos STRING para el texto SMS,
entonces se interpretan los dos primeros bytes del texto SMS como indicaciones de longitud
del tipo de datos STRING y no como texto SMS.
Una posibilidad para la representación correcta de textos SMS para recibir es la conversión de
un Array of BYTE o Array of CHAR en un string de texto con ayuda de la función de conversión
Chars_TO_Strg. Chars_TO_Strg se vincula al parámetro EN con el parámetro de salida ENO
de TC_RECV.
Para textos SMS, el CP no soporta todos los caracteres especiales, como por ejemplo la
diéresis. Se aplica la especificación GSM 03.38. Pueden aparecer limitaciones adicionales
debido al proveedor de red GSM.

Indicadores BUSY, DONE y ERROR
Los indicadores DONE y ERROR solo son relevantes si BUSY = 0.
BUSY

DONE

ERROR

Significado

0

0

0

Ninguna petición en proceso

7534

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Encontrará todas las demás combinaciones de los indicadores DONE y ERROR en la tabla
siguiente.

Indicadores DONE, ERROR y STATUS
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
DONE

ERROR

STATUS *

Significado

1

0

0000H

Petición ejecutada correctamente

0

0

7000H

No hay ningún procesamiento de petición activo (primera llamada de la instrucción)

0

0

7001H

Procesamiento de petición iniciado (primera llamada de la instrucción)

0

0

7002H

Procesamiento de petición en curso (nueva llamada de la instrucción si BUSY = 1)

0

1

80A3H

● Se está intentando volver a establecer una conexión existente.
● Se está intentando finalizar una conexión no existente.

0

1

80E0H

Error interno

0

1

8086H

Valor no permitido para ID

0

1

80E4H

ID desconocida:
llame en primer lugar la instrucción TC_CON.

0

1

80E6H

Ninguna solicitud en proceso (la activación de la instrucción no se inicia)

0

1

80F5H

Punto final de la conexión no válido:
● Fallo en el establecimiento de la conexión a través de TC_CON.
o bien
● Desconexión por parte del interlocutor remoto: llame la instrucción TC_DISCON.

0

1

80F6H

Error de formato de un parámetro en el bloque de datos llamado (tamaño erróneo, for‐
mato incorrecto o valor no válido)
Compruebe la configuración del SDT "TC_CON...".

* Encontrará otros estados que no aparecen aquí en los indicadores de estado de las instrucciones "RDREC" y "WRREC", bajo
los dos bytes de estado centrales (STATUS[2], STATUS[3]).

TC_CONFIG: transferir datos de configuración al CP
Significado
La instrucción TC_CONFIG permite modificar los parámetros de un CP de telefonía móvil
S7-1200 que se han configurado en STEP 7. Los valores configurados no se sobrescriben de
forma remanente. Los valores sobrescritos siguen siendo válidos hasta una nueva llamada de
TC_CONFIG o hasta el siguiente arranque de la estación (arranque en frío mediante la tensión
OFF → ON).
Para poder utilizar esta función, en la configuración básica del CP en STEP 7 debe haber
valores configurados.
Si los datos de configuración STEP 7 del CP deben modificarse permanentemente, entonces
la instrucción debe llamarse de nuevo después de cada arranque de la estación (arranque en
frío) o se debe cargar un proyecto modificado en la estación.

Programación del PLC
Manual de programación y manejo, 11/2019

7535

Instrucciones
4.2 Instrucciones
El parámetro CONFIG hace referencia al área de memoria con los datos de configuración. Los
datos de configuración se guardan en un bloque de datos (DB). La estructura del DB está
predeterminada por el tipo de datos de sistema (SDT) IF_CONF.
Los datos de configuración que deben modificarse en el CP se compilan en el IF_CONF como
bloques "IF_CONF_..." para los diferentes parámetros, según sea necesario.
Los parámetros que no deben modificarse con la instrucción no se introducen en el IF_CONF.
Estos conservan el valor configurado en STEP 7.
Encontrará información detallada sobre la parametrización de IF_CONF en el apartado
IF_CONF: SDT para datos de configuración Telecontrol (Página 7542).
El parámetro INTERFACE referencia la interfaz GPRS del CP local deseado.

Interfaz de llamada en representación FUP
7&B&21),*
%22/

5(4

%86<

%22/

+:B,17(5)$&(

,17(5)$&(

'21(

%22/

(5525

%22/

67$786

:25'

9$5,$17

&21),*

Explicación de los parámetros formales
La tabla siguiente muestra los parámetros formales de la instrucción TC_CONFIG.
Parámetro

Declaración

Tipo de datos

Rango de valores

Descripción

REQ

INPUT

BOOL

0, 1

Con un flanco ascendente se inicia el pro‐
cesamiento de la instrucción y se iniciali‐
zan los indicadores de estado.
Actualización de los indicadores de esta‐
do DONE, ERROR y STATUS cuando no
hay ningún flanco ascendente.

INTERFACE

INPUT

HW_INTERFA‐
CE (WORD)

Referencia a la interfaz del CP 1242‑7 lo‐
cal

CONFIG

INOUT

VARIANT

Véase también "IF_CONF:
SDT para datos de configura‐
ción de Telecontrol"

Referencia al área de memoria con la
compilación de los datos de configuración
que deben modificarse

ENO

OUTPUT

BOOL

0: error

Salida de habilitación
Si la instrucción presenta un error en el
tiempo de ejecución, se pondrá ENO = 0.

1: correcto
BUSY

OUTPUT

BOOL

0: procesamiento de la instruc‐
ción todavía no iniciado, finali‐
zado o cancelado

Indicador del estado de procesamiento
de la instrucción

1: procesamiento de la instruc‐
ción en curso

7536

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Rango de valores

Descripción

DONE

OUTPUT

BOOL

0: -

El parámetro de estado indica si la peti‐
ción se ha desarrollado correctamente.

1: procesamiento de la instruc‐
ción finalizado correctamente

ERROR

OUTPUT

STATUS

OUTPUT

BOOL

Consulte el significado en relación con los
parámetros ERROR y STATUS en Indi‐
cadores de la instrucción.

0: -

Indicador de error

1: error

Consulte el significado en relación con los
parámetros DONE y STATUS en Indica‐
dores de la instrucción.

WORD

Indicador de estado
Consulte el significado en relación con los
parámetros DONE y ERROR en Indica‐
dores de la instrucción.

Indicadores BUSY, DONE y ERROR
Los indicadores DONE y ERROR solo son relevantes si BUSY = 0.
BUSY

DONE

ERROR

Significado

0

0

0

Ninguna petición en proceso

Encontrará todas las demás combinaciones de los indicadores DONE y ERROR en la tabla
siguiente.

Indicadores DONE, ERROR y STATUS
La tabla siguiente muestra el significado de la información suministrada por DONE, ERROR y
STATUS, la cual tiene que ser evaluada por el programa de usuario.
DONE

ERROR

STATUS

Significado

1

0

0000H

Petición ejecutada correctamente

0

0

7000H

No hay ningún procesamiento de petición activo (primera llamada de la instrucción)

0

0

7001H

Procesamiento de petición iniciado (primera llamada de la instrucción)

0

0

7002H

Procesamiento de petición en curso (nueva llamada de la instrucción si BUSY = 1)

0

1

80E0H

Error interno (p. ej. no hay valores en la configuración básica de un parámetro)

0

1

80E6H

Ninguna solicitud en proceso (la activación de la instrucción no se inicia)

0

1

80EBH

Solicitud rechazada temporalmente (el CP es configurado momentáneamente por STEP
7).

0

1

80F6H

Error de formato de un parámetro en el bloque de datos llamado (tamaño erróneo, for‐
mato incorrecto o valor no válido)
Compruebe el SDT "IF_CONF".

0

1

80F7H

ID incorrecta en los bloques de parámetros de los datos de configuración:
Compruebe el SDT "IF_CONF".

Programación del PLC
Manual de programación y manejo, 11/2019

7537

Instrucciones
4.2 Instrucciones

TCON_...: SDTs para el establecimiento de un enlace Telecontrol
Tipos de datos de sistema TCON_... para conexiones de Telecontrol
Los cuatro tipos de datos de sistema TCON_... que se describen a continuación se utilizan,
entre otros, para la descripción de conexiones de Telecontrol del CP 1242-7.
TCON_PHONE se utiliza también en CP de telefonía móvil del S7-1200 para describir una
conexión de Open User Communication con el fin de transferir SMS (TCON / TDISCON /
TSEND o TSEND_C).
Para configurar el establecimiento de una conexión de Telecontrol en el CP 1242-7 mediante
la instrucción TC_CON se utiliza el parámetro CONNECT de la instrucción para describir la
conexión.
La descripción del enlace está especificada por la estructura de un tipo de datos del sistema
(SDT). La estructura del SDT correspondiente contiene los parámetros necesarios para
establecer el enlace con un interlocutor remoto.
Para diferentes tipos de enlace que dependen del interlocutor remoto correspondiente se
utilizan los siguientes SDTs:
● TCON_IP_RFC para enlaces ISO‑on‑TCP con estaciones IPv4 con CP 1242‑7
● TCON_IP_V4 para enlaces UDP con estaciones IPv4 (solo enviar)
● TCON_PHONE para enlaces con clientes SMS
● TCON_WDC para enlaces con servidores Telecontrol o estaciones a las que se accede a
través del servidor Telecontrol.
La parametrización de la descripción del enlace se realiza en un bloque de datos del mismo
tipo que el SDT.

Creación de un DB del tipo TCON_...
Los tipos de datos de cada DB deben introducirse con el teclado. No se muestran en la lista de
selección. No se tienen en cuenta las mayúsculas/minúsculas al introducir los tipos de datos.
Para crear un DB TCON_... proceda del siguiente modo:
1. Cree un bloque de datos del tipo "DB global" con acceso al bloque "estándar".
2. Cree un SDT en la tabla de configuración de parámetros del DB asignándole un nombre e
introduciendo el tipo deseado en la celda del tipo de datos (por ejemplo, "TCON_IP_RFC").
Se crea el SDT con sus parámetros (ver abajo).
3. Configure los parámetros que se describen a continuación para cada tipo SDT.
Los bits reservados no se muestran.

7538

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Tipo de datos de sistema TCON_IP_RFC para enlaces con estaciones IPv4
Este tipo de enlace solo es soportado en enlaces ISO‑on‑TCP con interlocutores con dirección
IP fija. El CP debe estar configurado para el modo de operación "GPRS directo".
Tabla 4-465 Parámetros de TCON_IP_RFC
Byte

Parámetro

Tipo de datos

0 ... 1

InterfaceID

HW_ANY

2 ... 3

ID

CONN_OUC

Valor inicial

Descripción
Referencia a la interfaz del CP 1242‑7 local (véase
STEP 7 > Configuración CP > Interfaz Telecontrol >
"Identificador HW")

1...07FFh

Referencia al enlace GPRS local. La ID se asigna y
debe ser unívoca dentro de la CPU.
Aquí debe utilizarse el mismo valor que el del pará‐
metro ID de la instrucción TC_CON.

4

ConnectionType

BYTE

5

ActiveEstablished

BOOL

W#16#0C

Variante de protocolo 12 (Ch): Enlace ISO‑on‑TCP
Identificación del tipo de establecimiento del enlace:
● 0: establecimiento pasivo del enlace
● 1: establecimiento activo del enlace

6 ... 7

-

-

RemoteAddress
8 ... 11

ADDR
RemoteTSelector

12 ...
13

TSelLen

14 ...
45

TSel

-

- reservado -

IP_V4

Dirección IP de los interlocutores

Array [1...4] of
Byte

Dirección IP del interlocutor respectivo

TSelector

Selector T remoto

UINT

Tamaño del selector T remoto "RemoteTSelector"

Array [1...32]
of Byte

Cualquiera

Selector de transporte remoto del enlace
● Si "ActiveEstablished" = 1:
El selector T del interlocutor local debe ser idéntico
al selector T del interlocutor en el establecimiento
de enlace activo (establecimiento de enlace
pasivo en el interlocutor remoto).
● Si "ActiveEstablished" = 0 correspondiente
(establecimiento de conexión local pasivo,
establecimiento de conexión remota activo)

LocalTSelector
46 ...
47

TSelLen

48 ...
79

TSel

TSelector

Selector T local

UINT

Longitud del selector T local "LOCAL_TSel"

Array [1...32]
of Byte

Cualquiera

Selector de transporte local del enlace
● Si "ActiveEstablished" = 1:
El selector T del interlocutor local debe ser idéntico
al selector T del interlocutor en el establecimiento
de enlace activo (establecimiento de enlace
pasivo en el interlocutor remoto).
● Si "ActiveEstablished" = 0 correspondiente
(establecimiento de conexión local pasivo,
establecimiento de conexión remota activo)

Programación del PLC
Manual de programación y manejo, 11/2019

7539

Instrucciones
4.2 Instrucciones

Tipo de datos de sistema TCON_IP_V4 para enlaces con estaciones IPv4
Este tipo de enlace solo es soportado para el envío a través de enlaces UDP a interlocutores
con dirección IP fija.
Si se debe recibir, entonces ActiveEstablished = 0 debe activarse.
Tabla 4-466 Parámetros de TCON_IP_V4
Byte

Parámetro

Tipo de datos

0 ... 1

InterfaceID

HW_ANY

2 ... 3

ID

CONN_OUC

Valor inicial

Descripción
Referencia a la interfaz del CP 1242‑7 local (véase
STEP 7 > Configuración CP > Interfaz Telecontrol >
"Identificador HW")

1...07FFh

Referencia al enlace GPRS local. La ID se asigna y
debe ser unívoca dentro de la CPU.
Aquí debe utilizarse el mismo valor que el del pará‐
metro ID de la instrucción TC_CON.

4

ConnectionType

BYTE

5

ActiveEstablished

BOOL

W#16#0B

Variante de protocolo 11 (Bh): Enlace UDP
Identificación del tipo de establecimiento del enlace:
● 0: establecimiento pasivo del enlace
Ajuste para el envío y la recepción de datos.
● 1: establecimiento activo del enlace
Ajuste solo para el envío de datos.

6 ... 9

RemoteAddress
ADDR

10 ...
11

RemotePort

12 ...
13

LocalPort

IP_V4

Dirección IP del interlocutor

Array [1...4] of
Byte

Los cuatro bytes (ADDR[1] ... ADDR[4]) especifican
los cuatro bloques de la dirección IP.

UINT

1...65535

Puerto IP del interlocutor
Sin relevancia si ActiveEstablished = 0.

UINT

1...65535

Puerto IP local ("0" no está permitido.)
Sin relevancia si ActiveEstablished = 1.

Tipo de datos de sistema TCON_PHONE para enlaces SMS
Nota
Números de llamada autorizados
El requisito para que el CP acepte un SMS es la autorización del interlocutor emisor mediante
su número de llamada. Estos números de llamada se configuran en STEP 7 con el CP en la
lista "Números de llamada autorizados".
Texto SMS
● Se accede a los textos SMS programados para SMS que deben ser enviados a través del
parámetro DATA de la instrucción TC_SEND.
● El texto de un SMS recibido se asigna al rango de direcciones de la CPU a través del
parámetro DATA de la instrucción TC_RECV.

7540

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Tabla 4-467 Parámetros de TCON_PHONE
Byte

Parámetro

Tipo de datos

0 ... 1

InterfaceID

HW_ANY

2 ... 3

ID

CONN_OUC

Valor inicial

Descripción
Referencia a la interfaz local (interfaz de Telecontrol o
interfaz Ethernet del CP > "Identificador HW")

1...07FFh

Referencia a la conexión local de telefonía móvil. La
ID se asigna y debe ser unívoca dentro de la CPU.
Aquí debe utilizarse el mismo valor que el del pará‐
metro ID de la instrucción TC_CON.

4

ConnectionType

BYTE

5

ActiveEstablished

BOOL

W#16#0E

Variante de protocolo 14 (Eh): enlace SMS
Identificación del tipo de establecimiento del enlace
(no relevante para el CP 1242‑7):
● 0: establecimiento pasivo del enlace (irrelevante
en este caso)
● 1: establecimiento activo del enlace

6...7

-

-

8 ... 31 PhoneNumber

-

STRING[22]

- reserviert Número de abonado del interlocutor
Valores permitidos: signo más (+) y cifras
Tenga en cuenta los caracteres concretos del prefijo
de país de los números de llamada en cuestión asig‐
nado por el proveedor de red (signos "+" o ceros).
Sin la entrada del parámetro PhoneNumber no se es‐
pecificará ningún interlocutor y se podrán recibir SMS
de todos los interlocutores autorizados.
Al arrancar, tenga en cuenta lo siguiente: Si no se
realiza ninguna entrada, el TC_RECV suministra pri‐
mero el SMS recibido con más anterioridad.

Tipos de datos del sistema TCON_WDC para conexiones con servidores de Telecontrol o estaciones
remotas
El enlace con el servidor Telecontrol que está asignado al S7-1200 o con una estación remota
a la que se accede a través del servidor Telecontrol se puede configurar con TCON_WDC. Los
datos de dirección del servidor Telecontrol asignado al CP se encuentran en STEP 7, en la
ficha "Interfaz de Telecontrol > Modo de operación" del CP. El servidor Telecontrol o la
estación remota se direcciona mediante el nombre de host o mediante la dirección IP.
En el parámetro "RemoteWdcAddress" de TCON_WDC se indica la ID de acceso del
interlocutor.
Tabla 4-468 Parámetros de TCON_WDC
Byte

Parámetro

Tipo de datos

0 ... 1

InterfaceID

HW_ANY

2 ... 3

ID

CONN_OUC

Valor inicial

Descripción
Referencia a la interfaz del CP 1242‑7 local (véase
STEP 7 > Configuración CP > Interfaz Telecontrol >
"Identificador HW")

1...07FFh

Referencia al enlace GPRS local. La ID se asigna y
debe ser unívoca dentro de la CPU.
Aquí debe utilizarse el mismo valor que el del pará‐
metro ID de la instrucción TC_CON.

Programación del PLC
Manual de programación y manejo, 11/2019

7541

Instrucciones
4.2 Instrucciones
Byte

Parámetro

Tipo de datos

Valor inicial

Descripción

4

ConnectionType

BYTE

W#16#0F

Variante de protocolo 15 (Fh): enlace Telecontrol me‐
diante dirección IP

5

ActiveEstablished

BOOL

Identificación del tipo de establecimiento del enlace:
● 0: establecimiento pasivo del enlace
● 1: establecimiento activo del enlace

6 ... 7

-

-

8 ... 11 RemoteWdcAddress

-

DWORD

- reservado Indicación de la ID de acceso (hex). La ID de acceso
depende del interlocutor.
● Enlace con un CP remoto:
La ID de acceso está compuesta por:
–

número de proyecto de STEP 7

–

número de estación

–

slot
Si la estación remota tiene varios CP GPRS y
no va a definirse la ruta, deberá ponerse 0 en
el último byte para el slot.

La ID de acceso se encuentra en el proyecto de
STEP 7, en el grupo de parámetros "Autenticación
CP" del CP.
● No hay conexión con el servidor de Telecontrol:
ID de acceso = 0
● Solo para escribir en la imagen de proceso del CP:
ID de acceso = DW#16#FEEDDADA

IF_CONF: SDT para datos de configuración Telecontrol
Establecimiento del tipo de datos del sistema IF_CONF para la instrucción TC_CONFIG
El parámetro CONFIG de la instrucción TC_CONFIG referencia el área de memoria con los
datos de configuración del CP que deben modificarse. Los datos de configuración
almacenados en un bloque de datos se describen como estructura del tipo de datos del
sistema (SDT) IF_CONF.
Para poder utilizar esta función, en la configuración básica del CP en STEP 7 debe haber
valores configurados.
IF_CONF está formado por un encabezado y los bloques siguientes, correspondientes a los
parámetros o áreas de parámetros del CP en las propiedades de dispositivos del proyecto de
STEP 7.
Los datos de configuración del CP que deben modificarse se compilan a modo de bloques
IF_CONF. Los parámetros que no deben modificarse no se tienen en cuenta en la estructura
de IF_CONF y se quedan tal como se han configurado en el proyecto de STEP 7.

Creación de un DB y de las estructuras IF_CONF
Los parámetros del CP los puede crear dentro del DB IF_CONF en una o más estructuras y
cada una con uno o más bloques.

7542

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Los tipos de datos de cada bloque deben introducirse con el teclado. No se muestran en la lista
de selección. No se tienen en cuenta las mayúsculas/minúsculas al introducir los tipos de
datos.
Proceda del siguiente modo para crear IF_CONF:
1. Cree un bloque de datos del tipo "DB global" con acceso al bloque "estándar".
2. Cree una estructura en la tabla de la configuración del parámetro del DB (tipo de datos
"Struct").
Puede determinar el nombre libremente.
3. Inserte un encabezado en esta estructura asignando el nombre del encabezado e
introduciéndolo en la celda del tipo de datos "IF_CONF_Header".
Se crea el encabezado de la estructura con sus tres parámetros (ver abajo).
4. Cree un bloque para el primer parámetro que debe modificarse introduciendo el tipo de
datos deseado (por ejemplo, "IF_CONF_APN") en la celda del tipo de datos.
5. Repita el último paso para todos aquellos parámetros que desee modificar con ayuda de la
instrucción TC_CONFIG en el CP.
6. A continuación actualice en el encabezado el número de bloques en el parámetro
"subfieldCnt".

Encabezado de IF_CONF
Tabla 4-469 IF_CONF_Header
Byte

Parámetro

Tipo de datos Valor inicial

Descripción

0 ... 1

fieldType

UINT

Tipo de bloque: tiene que ser siempre 0.

2 ... 3

fieldId

UINT

ID de bloque: tiene que ser siempre 0.

4 ... 5

subfieldCnt

UINT

Número total de bloques incluidos en la estructura

Parámetros generales de los bloques de parámetros
Cada bloque contiene los siguientes parámetros generales:
● Id
Este parámetro identifica el bloque correspondiente y no puede modificarse.
● Length
Este parámetro indica el tamaño del bloque. El valor solo sirve para fines informativos.
Los bloques que contienen strings y/o arrays tienen una longitud variable. Debido a los
bytes ocultos, la longitud real de los bloques puede ser mayor que la suma de los
parámetros mostrados.
● Mode
Para este parámetro se admiten los valores siguientes:

Programación del PLC
Manual de programación y manejo, 11/2019

7543

Instrucciones
4.2 Instrucciones
Tabla 4-470 Valores de "Mode"
Valor

Significado

1

Validez permanente de los datos de configuración
Irrelevante en el CP

2

Validez temporal de los datos de configuración, inclusive el borrado de los datos de
configuración permanentes existentes
Los datos de configuración permanentes se reemplazan por los bloques de parámetros
de IF_CONF.

Bloque para el área de parámetros "Acceso GPRS"
Tabla 4-471 IF_CONF_APN
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

4

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 174

Mode

UINT

Validez (1: permanente, 2: temporal)

AccesspointGPRS

STRING [98]

APN: Nombre del punto de acceso del operador de red
GSM a Internet

AccesspointUser

STRING [42]

Nombre de usuario APN

AccesspointPassword

STRING [22]

Contraseña APN

Bloque para el área de parámetros "Identificación CP"
Tabla 4-472 IF_CONF_Login
Parámetro

Tipo de datos

Valor inicial
5

Descripción

Id

UINT

Length

UINT

Tamaño del bloque de parámetros en bytes: 54

Identificación del bloque de parámetros

Mode

UINT

Validez (1: permanente, 2: temporal)

ModemName

STRING [22]

ID de acceso
El valor no es parametrizable.

ModemPassword

STRING [22]

Contraseña de Telecontrol (máx. 20 caracteres)
La contraseña del CP 1242‑7 (6GK7 242‑7KX30‑0XE0) no
puede cambiarse con el SDT.

Bloque para el área de parámetros "Acceso al servidor Telecontrol"
Este bloque solo debe utilizarse si el servidor Telecontrol se direcciona con un nombre que
puede resolverse mediante DNS. Si el servidor Telecontrol se direcciona con su dirección IP,
se utilizará el bloque "IF_CONF_TCS_IP_V4".
En STEP 7, los datos correspondientes se encuentran en el área de parámetros "Modo de
operación".

7544

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Si hay varios servidores Telecontrol, utilice el bloque una vez por servidor.
Tabla 4-473 IF_CONF_TCS_Name
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

6

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 266

Mode

UINT

Validez (1: permanente, 2: temporal)

TcsName

-

-

STRING [254]

- reservado Nombre del servidor Telecontrol que puede resolverse me‐
diante DNS

RemotePort

UINT

Puerto del servidor Telecontrol

Rank

UINT

Prioridad del servidor [1, 2]
1 = primer servidor Telecontrol,
2 = segundo servidor Telecontrol

Bloque para el área de parámetros "Acceso al servidor Telecontrol"
El SDT solo puede utilizarse en el CP 1242‑7 (6GK7 242‑7KX30‑0XE0) en tiempo de ejecución
con fines de configuración.
Este bloque solo debe utilizarse si el servidor Telecontrol se direcciona con su dirección IP. Si
el servidor Telecontrol se direcciona con su nombre DNS, se utiliza el bloque
"IF_CONF_TCS_Name".
En STEP 7, los datos correspondientes se encuentran en el área de parámetros "Modo de
operación".
Si hay varios servidores Telecontrol, utilice el bloque una vez por servidor.
Tabla 4-474 IF_CONF_TCS_IP_v4
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

7

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 14

Mode

UINT

Validez (1: permanente, 2: temporal)

RemoteAddress

IP_V4

Dirección IP del servidor Telecontrol

RemotePort

UINT

Puerto del servidor Telecontrol

Rank

UINT

Prioridad del servidor [1, 2]
1 = primer servidor Telecontrol,
2 = segundo servidor Telecontrol

Bloque para el área de parámetros "Modo de operación"
El SDT solo puede utilizarse en el CP 1242‑7 (6GK7 242‑7KX30‑0XE0) en tiempo de ejecución
con fines de configuración.

Programación del PLC
Manual de programación y manejo, 11/2019

7545

Instrucciones
4.2 Instrucciones
En STEP 7, los datos correspondientes se encuentran en las secciones de parámetros "Modo
de operación" y "Configuración del módem".
Tabla 4-475 IF_CONF_GPRS_Mode
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

8

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 10

Mode

UINT

Validez (1: permanente, 2: temporal)

GPRSmode

UINT

Modo de operación del CP:
● 0 = Telecontrol
● 1 = GPRS directo

TemporaryStation

BOOL

Bit 0: Conexión temporal
Si la opción está activada, el CP establece un enlace de
forma temporal para enviar datos. Una vez finalizada co‐
rrectamente la transferencia de los telegramas, el CP des‐
hace la conexión.
● 1: activado (conexión temporal)
● 0: desactivado (enlace permanente)

SMS_Enabled

BOOL

Bit 1: Permitir SMS
La activación de esta opción permite a la estación S7 en‐
viar SMS.
● 1: activado (se permite SMS)
● 0: desactivado (sin SMS)

Bloque para el parámetro "SMSC"
En STEP 7, los datos correspondientes se encuentran en el área de parámetros
"Configuración del módem".
Tabla 4-476 IF_CONF_SMS_Provider
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

10

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 28

Mode

UINT

Validez (1: permanente, 2: temporal)

SMSProvider

STRING [20]

Número de dispositivo de la central SMS (SMSC) del ope‐
rador de red GSM con el que se ha cerrado el contrato de
telefonía móvil para esta estación.

7546

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Bloque para el parámetro "PIN"
En STEP 7, los datos correspondientes se encuentran en el área de parámetros
"Configuración del módem".
Tabla 4-477 IF_CONF_PIN
Tipo de datos

Valor inicial

Id

UINT

11

Length

UINT

Tamaño del bloque de parámetros en bytes: 16

Mode

UINT

Validez (1: permanente, 2: temporal)

Pin

STRING [8]

PIN de la tarjeta SIM insertada en el CP

Parámetro

Descripción
Identificación del bloque de parámetros

Este parámetro no es relevante si se ha configurado el PIN
correctamente. En caso de haber configurado el PIN erró‐
neamente, el PIN correcto puede introducirse aquí.

Bloque para tiempos de vigilancia
El SDT solo puede utilizarse en el CP 1242‑7 (6GK7 242‑7KX30‑0XE0) en tiempo de ejecución
con fines de configuración.
En STEP 7, los datos correspondientes se encuentran en las áreas de parámetros "Tiempo de
espera Keep Alive" y "Modo de operación" del CP.
Tabla 4-478 IF_CONF_TC_Timeouts
Parámetro

Tipo de datos

Valor inicial
12

Id

UINT

Length

UINT

Mode

UINT

KeepAliveTimeout

‑

SendTimeout

UINT

Descripción
Identificación del bloque de parámetros
Tamaño del bloque de parámetros en bytes: 12
Validez (1: permanente, 2: temporal)

‑

- Reservado - (no parametrizable)
Tiempo de vigilancia de conexión: Tiempo de vigilancia de
la conexión con el interlocutor (segundos)
Relevante en los modos de operación "Telecontrol" y
"GPRS directo"

RedialTimeout

UINT

Retardo al establecer la conexión: valor básico del tiempo
de espera hasta el próximo intento de establecer un enlace
después de fallar el presente. Cada 3 intentos se duplica el
valor básico, hasta 900 s como máximo. Rango de valores:
10...600 s.
Ejemplo: un valor básico de 20 da los siguientes intervalos
de llamada: tres veces 20 s, tres veces 40 s, tres veces 80
s, etc. hasta un máximo de 900 s.
Si se ha configurado un segundo servidor de Telecontrol /
router, en el cuarto intento el CP tratará de conectarse con
el segundo interlocutor. Si tampoco puede conectarse al
segundo interlocutor, el CP intenta en el 7.º intento volver
a conectarse con el primer interlocutor.
Sin relevancia para conexiones SMS

Programación del PLC
Manual de programación y manejo, 11/2019

7547

Instrucciones
4.2 Instrucciones

Bloque para el área de parámetros "Autorización de alarma"
Tabla 4-479 IF_CONF_WakeupList
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

13

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 246

Mode

UINT

Validez (1: permanente, 2: temporal)

WakeupPhone [1...10]

ARRAY
[1...10] of
STRING [22]

Número de llamada del dispositivo autorizado como des‐
pertador
El asterisco (*) al final de un número de abonado sirve de
comodín para números con extensiones.

Bloque para el área de parámetros "Redes GSM preferentes"
Tabla 4-480 IF_CONF_PrefProvider
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

14

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 46

Mode

UINT

Validez (1: permanente, 2: temporal)

Provider [1...5]

ARRAY [1...5]
of STRING [6]

Redes GSM alternativas con prioridad 1 a 5, a las que se
conecta el CP de forma preferente. Es posible configurar 5
redes como máximo. La n.º 1 tiene la máxima prioridad y la
n.º 5 la mínima.
Entrada del Public Land Mobile Network (PLMN) del ope‐
rador de red, consistente en Mobile Country Code (MCC) y
Mobile Network Code (MNC).
Ejemplo (red de pruebas de Siemens AG): 26276

Bloque para el área de parámetros "Configuración DNS"
El SDT solo puede utilizarse en el CP 1242‑7 (6GK7 242‑7KX30‑0XE0) en tiempo de ejecución
con fines de configuración.
Tabla 4-481 IF_CONF_DNS
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

16

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 14

Mode

UINT

Validez (1: permanente, 2: temporal)

DNS_IP [1]

IP_V4

Dirección IP del 1.er servidor Domain Name System

DNS_IP [2]

IP_V4

Dirección IP del 2.º servidor Domain Name System

7548

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Bloque para el área de parámetros "Sincronización horaria"
El SDT solo puede utilizarse en el CP 1242‑7 (6GK7 242‑7KX30‑0XE0) en tiempo de ejecución
con fines de configuración.
Tabla 4-482 IF_CONF_NTP
Parámetro

Tipo de datos

Valor inicial

Id

UINT

17

Length

UINT

Descripción
Identificación del bloque de parámetros
Tamaño del bloque de parámetros en bytes: 24

Mode

UINT

Validez (1: permanente, 2: temporal)

NTP_IP [1]

ARRAY [1...4]
of IP_V4

Dirección IP del servidor NTP 1

...

...

(dirección IP del servidor NTP 2...3)

NTP_IP [4]

ARRAY [1...4]
of IP_V4

Dirección IP del servidor NTP 4

Bloque para activar / desactivar usuarios de TeleService
El SDT solo puede utilizarse en el CP 1242‑7 (6GK7 242‑7KX30‑0XE0) en tiempo de ejecución
con fines de configuración.
SDT para activar o desactivar usuarios de TeleService que ya se han configurado en el
proyecto STEP 7 del CP. En STEP 7, los datos correspondientes se encuentran en el área de
parámetros "Configuración TeleService" > "Administración de usuarios de TeleService".
Tabla 4-483 IF_CONF_GPRS_UserList
Parámetro

Tipo de datos

Valor inicial

Descripción

Id

UINT

19

Identificación del bloque de parámetros

Length

UINT

Tamaño del bloque de parámetros en bytes: 506

Mode

UINT

Validez (1: permanente, 2: temporal)

GPRS_User [1...10]

ARRAY
[1...10] of
GPRS_User

Usuarios de TeleService de n.º 1 a n.º 10 como máximo

La matriz se forma a partir de los juegos de parámetros para los usuarios de TeleService
("GPRS_User" [1...n]).
Tabla 4-484 GPRS_User [n] (parámetro para usuarios de TeleService)
Valor inicial

Descripción

Parámetro

Tipo de datos

UserName [n]

STRING [22]

Nombre de usuario de TeleService

Password [n]

STRING [22]

- El string tiene que estar vacío -

Diag_Allowed [n]

BOOL

- Reservado - (no parametrizable)

Teleserv_Allowed [n]

BOOL

Activación del usuario de TeleService
● 0 = usuario desactivado
● 1 = usuario activado

FW_Load_Allowed [n]

BOOL

Programación del PLC
Manual de programación y manejo, 11/2019

- Reservado - (no parametrizable)

7549

Instrucciones
4.2 Instrucciones

Bloque para la parametrización del acceso TeleService (Nombre DNS del servidor)
Datos de acceso del servidor de TeleService (centralita).
En STEP 7, los datos correspondientes se encuentran en el área de parámetros
"Configuración TeleService".
Si hay dos servidores de TeleService, utilice el bloque una vez por servidor.
Tabla 4-485 IF_CONF_TS_Name
Tipo de datos

Valor inicial

Id

UINT

20

Length

UINT

Tamaño del bloque de parámetros en bytes: 266

Mode

UINT

Validez (1: permanente, 2: temporal)

ts_name

String [254]

Nombre del servidor de TeleService que puede resolverse
mediante DNS

Parámetro

Descripción
Identificación del bloque de parámetros

RemotePort

UINT

Puerto de la estación de ingeniería

Rank

UINT

Prioridad del servidor [1] o [2]
1 = servidor 1, 2 = servidor 2

Bloque para la parametrización del acceso TeleService (dirección IP del servidor)
Datos de acceso del servidor de TeleService (centralita).
En STEP 7, los datos correspondientes se encuentran en el área de parámetros
"Configuración TeleService".
Si hay dos servidores de TeleService, utilice el bloque una vez por servidor.
Tabla 4-486 IF_CONF_TS_IF_V4
Parámetro

Tipo de datos

Valor inicial
21

Descripción

Id

UINT

Length

UINT

Tamaño del bloque de parámetros en bytes: 14

Identificación del bloque de parámetros

Mode

UINT

Validez (1: permanente, 2: temporal)

RemoteAddress

IP_V4

Dirección IP del servidor de TeleService

RemotePort

UINT

Puerto del servidor de TeleService

Rank

UINT

Prioridad del servidor [1] o [2]
1 = servidor 1, 2 = servidor 2

7550

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

S7-300/400-CP
CP 443-1 OPC UA
Bloques de programa para el cliente UA OPC
Sinopsis de los bloques de programa para la función de cliente OPC UA
Para la función de cliente OPC UA del CP, en la librería "SIMATIC NET CP" existen los bloques
de función indicados a continuación. Utilice los bloques en la CPU.
Algunos bloques requieren tipos de datos PLC personalizados especiales (UDT), que
encontrará a continuación debajo del bloque de programa correspondiente. Los UDT están
disponibles como tipos de datos preconfeccionados. Para ello, cree un tipo de datos nuevo en
la entrada "Tipos de datos PLC" de la estación y escriba en el campo "Tipo de datos" el nombre
del UDT, p. ej. "UA_SessionConnectInfo". Seguidamente, los parámetros necesarios en cada
caso se crearán de forma automática en la tabla de declaración del UDT.
● UA_Connect
Establece una conexión para una sesión con un servidor OPC UA.
– UA_SessionConnectInfo
Contiene la información de conexión para el parámetro de bloque "SessionConnectInfo".
– UA_UserIdentityToken
Contiene los datos de la autenticación de usuario para el parámetro de bloque
"UserIdentityToken".
● UA_NamespaceGetIndex
Recoge el índice de espacio de nombre de una URI de espacio de nombre.
● UA_NodeGetHandleList
Registra ID de nodo en el servidor conectado y recoge los handles de nodo en forma de lista.
– UA_NodeID
Contiene los parámetros para la identificación del nodo de destino para el parámetro de
bloque "NodeID".
● UA_NodeReleaseHandleList
Libera los handles de nodo de la lista utilizada en el servidor.
● UA_Disconnect
Establece la conexión de una sesión actual con un servidor OPC UA.

Programación del PLC
Manual de programación y manejo, 11/2019

7551

Instrucciones
4.2 Instrucciones
● UA_ReadList
Lee los datos de nodos del servidor conectado con ayuda de la lista.
– UA_NodeAdditionalInfo
Especifica el atributo Item y el rango de índices para el parámetro de bloque
"NodeAddInfos".
– UA_IndexRange
Determina los índices de inicio y fin para el parámetro de bloque "IndexRange".
– UA_AnyPointer
Refiere al área de memoria de la CPU en la que se depositan los datos de proceso para
el parámetro de bloque "Variables".
– UA_TimeStamps
Contiene el sello de tiempo de los elementos del área de datos del parámetro de bloque
"Variables".
● UA_WriteList
Escribe datos en nodos del servidor conectado con ayuda de la lista de los handles de nodo.
– UA_NodeAdditionalInfo
Especifica el atributo Item y el rango de índices para el parámetro de bloque
"NodeAddInfos".
– UA_IndexRange
Determina los índices de inicio y fin para el parámetro de bloque "IndexRange".
– UA_AnyPointer
Refiere al área de memoria de la CPU en la que están depositados los datos de proceso
para el parámetro de bloque "Variables".

Funciones de sistema (SFC) necesarias adicionalmente
Para que los bloques de programa para el cliente UA OPC funcionen por completo se
necesitan las funciones de sistema siguientes:
● BLKMOV (SFC20)
● TIME_TCK (SFC64)
UA_Connect necesita adicionalmente para su funcionamiento:
● LGC_GADR (SFC49)
● RDSYSST (SFC51)
Creación de las SFCs
Cree las funciones de sistema abriendo un bloque de organización (p. ej. OB1) en el directorio
de bloques de la CPU.
En el catálogo de bloques que se muestra al abrir el OB1, despliegue el grupo de bloques
correspondiente.
Encontrará las SFCs en las siguientes carpetas de bloque:
● BLKMOV (SFC20): Grupo "Instrucciones básicas" > carpeta "Mover"
● TIME_TCK (SFC64): Grupo "Instrucciones avanzadas" > carpeta "Fecha y hora"

7552

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
● LGC_GADR (SFC 49): Grupo "Instrucciones avanzadas" > carpeta "Direccionamiento"
● RDSYSST (SFC 51): Grupo "Instrucciones avanzadas" > carpeta "Diagnóstico"
Arrastre las SFCs al segmento del bloque de organización y suministre los parámetros de las
SFCs.

Llamada e interacción de los bloques de programa
Nota
Indicaciones generales sobre los bloques de programa y los DBs de instancia
Cree los bloques de función con "acceso estándar". Deje la opción "Remanencia" desactivada
en los bloques de datos de instancia que se asignan en cada caso.
Cada bloque de programa debe llamarse cíclicamente hasta que el parámetro de estado
"Done" o "Error" cambie a 1.
Dentro de la sesión solo se puede llamar un único bloque simultáneamente. Dentro de una
sesión los bloques diferentes solo pueden editarse uno después de otro.
Con UA_Connect se establece una conexión entre el CP como cliente OPC UA y un servidor
UA abriendo así una sesión. El bloque debe llamarse para cada conexión con un servidor UA.
En caso necesario, para más de una conexión con un servidor UA el bloque puede llamarse
varias veces con bloques de datos de instancia (IDB) diferentes. Esto puede utilizarse, por
ejemplo, para leer una conexión y escribir a través de una segunda conexión o para leer o
escribir diferentes datos a través de varias conexiones.
Para conexiones con varios servidores UA es necesario llamar el bloque UA_Connect varias
veces con parámetros de entrada distintos. Como cliente UA el CP puede establecer
conexiones con hasta cinco servidores UA.
Para consultar el índice de espacio de nombre de una URI de espacio de nombre del servidor
UA, llame un UA_NamespaceGetIndex dentro de la sesión. Para consultar varios URIs de
espacio de nombre el bloque se puede llamar varias veces con parámetros de entrada
distintos.
Para crear una lista de handles como preparación de los servicios de lectura y escritura llame
la UA_NodeGetHandleList. El bloque se llama por separado para cada nodo de destino con la
información correspondiente en el parámetro de entrada "NodeIDs".
A continuación se pueden leer y escribir los datos del item a través de los bloques UA_ReadList
y UA_WriteList. Ambos bloques pueden llamarse tantas veces como se desee dentro de una
misma sesión.

Programación del PLC
Manual de programación y manejo, 11/2019

7553

Instrucciones
4.2 Instrucciones
(VWDEOHFLPLHQWRGHXQDVHVLµQ
3UHSDUDFLµQSDUDOHHUHVFULELU
8$B&RQQHFW
8$B1DPH6SDFH*HW,QGH[
8$B1RGH*HW+DQGOH/LVW

8$B5HDG/LVW

7HUPLQDFLµQGHXQDVHVLµQ

RELHQ

8$B1RGH5HOHDVH+DQGOH/LVW

8$B:ULWH/LVW

8$B'LVFRQQHFW

Figura 4-80

Llamada e interacción de los bloques de programa cliente

Cuando la conexión ya no sea necesaria, vuelva a liberar handles en el servidor mediante el
bloque UA_NodeReleaseHandleList. De ese modo los handles se vuelven a borrar en el
servidor.
La conexión se deshace con UA_Disconnect, con lo que también se cierra la sesión.

Consulte también
Vigilancia temporal de los bloques (Página 7554)

Vigilancia temporal de los bloques
Parámetros del comportamiento temporal de los bloques
Para el control y la vigilancia del comportamiento temporal de los bloques de programa están
disponibles los tres parámetros siguientes:
● Timeout
Parámetro de entrada en todos los bloques para el cliente OPC UA
● SessionTimeout
Parámetro de entrada en el bloque UA_Connect
● MonitorConnection
Parámetro de entrada en el bloque UA_Connect
Puesto que los parámetros influyen en conjunto en la ejecución de la comunicación OPC UA,
a continuación se incluyen indicaciones relativas a estos parámetros antes de la descripción
de los bloques propiamente dicha.

Timeout
Este parámetro de entrada vigila todas las llamadas de un bloque. Si una llamada de bloque
no puede finalizarse dentro del tiempo máximo admisible que se ha configurado en cada caso,
el parámetro de estado "Error" se pone a 1 y se cancela la ejecución.

7554

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

SessionTimeout
Este parámetro de entrada vigila la duración de una sesión sin tráfico de datos sin que el
bloque "UA_Disconnect" se llame para deshacer una conexión.
El valor mínimo de "SessionTimeout" suele ser de 30 segundos. Si se rebasa este valor se
deshace la conexión.
Este parámetro permite a un servidor liberar recursos vinculados cuando el cliente no utiliza la
sesión durante un tiempo prolongado.
Un tiempo suficientemente largo, en cambio, garantiza que una sesión no se cierre
inmediatamente cuando no es posible transferir datos en seguida a causa de fallos en la red,
por ejemplo.
Por norma general, el valor de "SessionTimeout" debería ser mayor que los valores de
"Timeout" en los bloques "UA_Connect" utilizados.

MonitorConnection
Este parámetro de entrada comprueba el estado de una conexión sin tráfico de datos. Una vez
transcurrido este tiempo de vigilancia de conexión se envía un telegrama para comprobar el
estado de la conexión con el servidor.
Para que la sesión no se cancele en seguida mediante el parámetro "SessionTimeout" en caso
de ausencia de tráfico de datos y de activación del tiempo de vigilancia de conexión, se
recomienda elegir para "MonitorConnection" un valor inferior a la mitad de "SessionTimeout".

Consulte también
Bloques de programa para el cliente UA OPC (Página 7551)

UA_Connect
Función
Función del bloque
Con el bloque UA_Connect se establece una conexión entre el CP como cliente OPC UA y un
servidor UA, abriendo así una sesión.
Como dirección de destino indique la URL del servidor UA en el parámetro
"ServerEndpointUrl".
Los datos correspondientes a la información de la conexión del parámetro
"SessionConnectInfo" se guardan en un bloque de datos.
UA_Connect requiere además las funciones de sistema LGC_GADR (SFC 49) y RDSYSST
(SFC 51).

Programación del PLC
Manual de programación y manejo, 11/2019

7555

Instrucciones
4.2 Instrucciones

Consulte también
Parámetros (Página 7556)
Bloques de programa para el cliente UA OPC (Página 7551)

Parámetros
Parámetros de bloque
En la tabla siguiente se explican los parámetros formales del bloque de programa.
Tabla 4-487 Parámetros del bloque UA_Connect
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

Execute

IN

BOOL

0, 1

Un flanco ascendente 0 → 1 en el parámetro ini‐
cia el procesamiento del bloque.

ServerEndpointUrl

IN

STRING

Máx. 254 caracte‐
res

Dirección (URL) del interlocutor (servidor). Solo
se admiten direcciones IPv4.

SessionConnectInfo

IN

UDT

Véase "Significa‐
do"

Información de la conexión, véase UASession‐
ConnectInfo (Página 7570).

Timeout

IN

TIME

5000 .. 120000

Intervalo máximo para el establecimiento de la
conexión en milisegundos. Si se rebasa este va‐
lor, el procesamiento del bloque se cancela con
el número de error B0007001.
Si se realizan entradas fuera del rango permiti‐
do, se aplica el valor predeterminado de 60000
(60 segundos).

ConnectionHdl

OUT

DWORD

1 .. 5

Identificador unívoco de una conexión estableci‐
da
Este es requerido por otros bloques como pará‐
metro de entrada.

Done

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: procesamiento de bloque cancelado, aún
no finalizado o aún no iniciado
● 1: el bloque se ha procesado sin errores

Busy

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: el bloque no se está procesando
● 1: el bloque se está procesando

7556

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

Error

OUT

BOOL

0, 1

Indicación de error
● 0: sin error
● 1: se ha producido un error. Consulte el
parámetro "ErrorID".

ErrorID

OUT

DWORD

Véase "Significa‐
do"

Indicación del número de error si "Error" = 1.
Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).
Nota: Si se emite el código de error B000F002, la
sesión OPC UA todavía no está establecida.
Vuelva a llamar el bloque.

UA_NamespaceGetIndex
Función
Función del bloque
Con el bloque UA_NamespaceGetIndex se recoge el índice de espacio de nombre de la URI
de espacio de nombre del servidor UA conectado.

Consulte también
Parámetros (Página 7557)
Bloques de programa para el cliente UA OPC (Página 7551)

Parámetros
Parámetros de bloque
En la tabla siguiente se explican los parámetros formales del bloque de programa.
Tabla 4-488 Parámetros del bloque UA_NamespaceGetIndex
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

Execute

IN

BOOL

0, 1

Un flanco ascendente 0 → 1 en el parámetro ini‐
cia el procesamiento del bloque. Mientras Exe‐
cute sea 1, los parámetros de entrada restantes
no pueden modificarse.

ConnectionHdl

IN

DWORD

1 .. 5

Identificación de conexión suministrado por
UA_Connect

Programación del PLC
Manual de programación y manejo, 11/2019

7557

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

NamespaceUri

IN

STRING

Máx. 254 caracte‐
res

Indicación de la dirección (URI de espacio de
nombre) del servidor de destino
Ejemplo del espacio de nombre de los símbolos
de CPU en el S7‑400 con CP 443‑1 OPC UA:
http://www.siemens.com/simatic-classic-s7-op‐
cua

Timeout

IN

TIME

5000 .. 120000

Intervalo máximo para el establecimiento de la
conexión en milisegundos. Si se rebasa este va‐
lor, el procesamiento del bloque se cancela con
el número de error B0007001.
Si se realizan entradas fuera del rango permiti‐
do, se aplica el valor predeterminado de 60000
(60 segundos).

NamespaceIndex

OUT

WORD

0 .. 65535

Se deposita el índice de espacio de nombre del
espacio de nombre indicado en el parámetro
"NamespaceUri".
Los índices de espacio de nombre 0 y 1 están
reservados y especificados por la OPC Founda‐
tion.

Done

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: procesamiento de bloque cancelado, aún
no finalizado o aún no iniciado
● 1: el bloque se ha procesado sin errores

Busy

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: el bloque no se está procesando
● 1: el bloque se está procesando

Error

OUT

BOOL

0, 1

Indicación de error
● 0: sin error
● 1: se ha producido un error. Consulte el
parámetro "ErrorID".

ErrorID

OUT

DWORD

Véase "Significa‐
do"

Indicación del número de error si "Error" = 1.
Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).

UA_NodeGetHandleList
Función
Función del bloque
Con el bloque UA_NodeGetHandleList se registran ID de nodo en el servidor UA conectado.

7558

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El servidor UA devuelve los handles. El bloque deposita dichos handles en el parámetro
"NodeHdls" A los items de los handles de nodo se accede con los bloques "UA_ReadList" y
"UA_WriteList" en el parámetro de entrada "NodeHdls".
Los IDs de nodo del servidor de destino especificados en el parámetro de entrada "NodeIDs"
deben conocerse. Se depositan en un UDT "UANodeIDs".
El número de nodos de destino en el parámetro de entrada "NodeIDCount" siempre es 1, por
lo que hay que llamar el bloque por separado para cada ID de nodo.

Consulte también
Parámetros (Página 7559)
Bloques de programa para el cliente UA OPC (Página 7551)

Parámetros
Parámetros de bloque
En la tabla siguiente se explican los parámetros formales del bloque de programa.
Tabla 4-489 Parámetros del bloque UA_NodeGetHandleList
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

Execute

IN

BOOL

0, 1

Un flanco ascendente 0 → 1 en el parámetro ini‐
cia el procesamiento del bloque.

ConnectionHdl

IN

DWORD

1 .. 5

Identificación de conexión suministrado por
UA_Connect

NodeIDCount

IN

WORD

1

Número de elementos en el área de datos de
"NodeIDs". El número debe ser 1.

NodeIDs

IN

ARRAY of
UDT

Véase "Significa‐
do"

Estructura de los parámetros del nodo de desti‐
no del servidor OPC UA.
El número de IDs de nodo (1) debe ser idéntico
al número depositado en el parámetro de salida
"NodeHdls".
Respecto a la estructura de UDT consulte UA‐
NodeID (Página 7572).

Timeout

IN

TIME

5000 .. 120000

Intervalo máximo para el establecimiento de la
conexión en milisegundos. Si se rebasa este va‐
lor, el procesamiento del bloque se cancela con
el número de error B0007001.
Si se realizan entradas fuera del rango permiti‐
do, se aplica el valor predeterminado de 60000
(60 segundos).

Programación del PLC
Manual de programación y manejo, 11/2019

7559

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

NodeHdls

OUT

ARRAY of
DWORD

0 .. 4 294 967 295

Matriz de los handles que el servidor OPC UA
devuelve como respuesta a la solicitud del clien‐
te. Los handles permiten identificar unívocamen‐
te el item en el servidor.
Los handles son válidos hasta que son reempla‐
zados o pierden la validez debido a la llamada
del bloque UA_NodeReleaseHandleList.
Cuando se cierra la sesión, el CP deshace todos
los handles de nodos registrados de dicha se‐
sión.
El parámetro se utiliza para el parámetro de en‐
trada "NodeHdls" de los bloques "UA_ReadList"
y "UA_WriteList".

Done

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: procesamiento de bloque cancelado, aún
no finalizado o aún no iniciado
● 1: el bloque se ha procesado sin errores

Busy

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: el bloque no se está procesando
● 1: el bloque se está procesando

Error

OUT

BOOL

0, 1

Indicación de error
● 0: sin error
● 1: se ha producido un error. Consulte el
parámetro "ErrorID".

ErrorID

OUT

NodeErrorIDs

OUT

DWORD

ARRAY of
DWORD

Véase "Significa‐
do"

Indicación del número de error si "Error" = 1.

Véase "Significa‐
do"

Contiene los números de error para todos los
elementos del área de datos de "NodeIDs".

Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).

Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).

UA_NodeReleaseHandleList
Función
Función del bloque
Con el bloque UA_NodeReleaseHandleList se liberan los handles de nodo de la sesión actual
en el servidor UA conectado. Con ello se borra la lista.
El parámetro de entrada "NodeHdls" referencia el bloque de datos en el que se escribieron los
handles del parámetro de salida "NodeHdls" del bloque "UA_NodeGetHandleList".

7560

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El número de handles en el parámetro de entrada "NodeHdICount" siempre es 1, por lo que
hay que llamar el bloque por separado para cada handle.

Consulte también
Parámetros (Página 7561)
Bloques de programa para el cliente UA OPC (Página 7551)

Parámetros
Parámetros de bloque
En la tabla siguiente se explican los parámetros formales del bloque de programa.
Tabla 4-490 Parámetros del bloque UA_NodeReleaseHandleList
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado / Observación

Execute

IN

BOOL

0, 1

Un flanco ascendente 0 → 1 en el parámetro ini‐
cia el procesamiento del bloque.

ConnectionHdl

IN

DWORD

1 .. 5

Identificación de conexión suministrado por
UA_Connect

NodeHdlCount

IN

WORD

1

Número de elementos en el área de datos de
"NodeHdls". El número debe ser 1.

NodeHdls

IN

ARRAY of
DWORD

0 .. 4 294 967 295

Matriz de los IDs de los handles reemplazados.

TIME

5000 .. 120000

Timeout

IN

Si el bloque se procesa correctamente, los han‐
dles se reemplazarán en el servidor, por lo que
perderán su validez.
Intervalo máximo para el establecimiento de la
conexión en milisegundos. Si se rebasa este va‐
lor, el procesamiento del bloque se cancela con
el número de error B0007001.
Si se realizan entradas fuera del rango permiti‐
do, se aplica el valor predeterminado de 60000
(60 segundos).

Done

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: procesamiento de bloque cancelado, aún
no finalizado o aún no iniciado
● 1: el bloque se ha procesado sin errores

Busy

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: el bloque no se está procesando
● 1: el bloque se está procesando

Programación del PLC
Manual de programación y manejo, 11/2019

7561

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado / Observación

Error

OUT

BOOL

0, 1

Indicación de error
● 0: sin error
● 1: se ha producido un error. Consulte el
parámetro "ErrorID".

ErrorID

OUT

NodeErrorIDs

OUT

DWORD

ARRAY of
DWORD

Véase "Significa‐
do"

Indicación del número de error si "Error" = 1.

Véase "Significa‐
do"

Contiene códigos de error para todos los ele‐
mentos del área de datos de "NodeHdls".

Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).

UA_Disconnect
Función
Función del bloque
Con el bloque UA_Disconnect se deshace una conexión existente entre el CP como cliente
OPC UA y un servidor UA. De ese modo finaliza la sesión existente.

Consulte también
Bloques de programa para el cliente UA OPC (Página 7551)

Parámetros
Parámetros de bloque
En la tabla siguiente se explican los parámetros formales del bloque de programa.
Tabla 4-491 Parámetros del bloque UA_Disconnect
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

Execute

IN

BOOL

0, 1

Un flanco ascendente 0 → 1 en el parámetro ini‐
cia el procesamiento del bloque.

ConnectionHdl

IN

DWORD

1 .. 5

Identificación de conexión suministrado por
UA_Connect

Timeout

IN

TIME

5000 .. 120000

Intervalo máximo para el establecimiento de la
conexión en milisegundos. Si se rebasa este va‐
lor, el procesamiento del bloque se cancela con
el número de error B0007001.
Si se realizan entradas fuera del rango permiti‐
do, se aplica el valor predeterminado de 60000
(60 segundos).

7562

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

Done

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: procesamiento de bloque cancelado, aún
no finalizado o aún no iniciado
● 1: el bloque se ha procesado sin errores

Busy

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: el bloque no se está procesando
● 1: el bloque se está procesando

Error

OUT

BOOL

0, 1

Indicación de error
● 0: sin error
● 1: se ha producido un error. Consulte el
parámetro "ErrorID".

ErrorID

OUT

DWORD

Véase "Significa‐
do"

Indicación del número de error si "Error" = 1.
Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).

UA_ReadList
Función
Función del bloque
Con el bloque UA_ReadList se leen los datos del servidor UA conectado.
Los atributos leídos se programan en un UDT "UANodeAdditionalInfo" referenciado por el
parámetro de entrada "NodeAddInfos".
Los handles requeridos en el parámetro de entrada "NodeHdls" se leen desde la matriz del
parámetro de salida "NodeHdls" del bloque "UA_NodeGetHandleList".
El número de IDs de nodo en el parámetro de entrada "NodeIDCount" es 1, por lo que hay que
llamar el bloque por separado para cada nodo de destino.

Consulte también
Parámetros (Página 7564)
Bloques de programa para el cliente UA OPC (Página 7551)

Programación del PLC
Manual de programación y manejo, 11/2019

7563

Instrucciones
4.2 Instrucciones

Parámetros
Parámetros de bloque
En la tabla siguiente se explican los parámetros formales del bloque de programa.
Tabla 4-492 Parámetros del bloque UA_ReadList
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

Execute

IN

BOOL

0, 1

Un flanco ascendente 0 → 1 en el parámetro ini‐
cia el procesamiento del bloque.

ConnectionHdl

IN

DWORD

1 .. 5

Identificación de conexión suministrado por
UA_Connect

NodeHdlCount

IN

WORD

1

Número de elementos en el área de destino leí‐
da. El número debe ser 1.

NodeHdls

IN

ARRAY of
DWORD

1

Matriz de los handles de los nodos de destino
(items) del servidor OPC UA. Los handles se
leen de la matriz del parámetro de salida "No‐
deHdls" del bloque "UA_NodeGetHandleList".

NodeAddInfos

IN

ARRAY of
UDT

Véase "Significa‐
do"

Especifica el atributo leído de los items y el rango
de índices. Respecto a la estructura de UDT
consulte UANodeAdditionalInfo (Página 7573).

Timeout

IN

TIME

5000 .. 120000

Intervalo máximo para el establecimiento de la
conexión en milisegundos. Si se rebasa este va‐
lor, el procesamiento del bloque se cancela con
el número de error B0007001.
Si se realizan entradas fuera del rango permiti‐
do, se aplica el valor predeterminado de 60000
(60 segundos).

Variables

IN_OUT

UDT

Véase "Significa‐
do"

Referencia a los datos leídos. Respecto a la es‐
tructura de UDT consulte UAAnyPointer (Pági‐
na 7574).
Para más información sobre los tipos de datos
soportados, consulte el capítulo Tipos de datos
(Página 7567).

Done

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: procesamiento de bloque cancelado, aún
no finalizado o aún no iniciado
● 1: el bloque se ha procesado sin errores

Busy

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: el bloque no se está procesando
● 1: el bloque se está procesando

Error

OUT

BOOL

0, 1

Indicación de error
● 0: sin error
● 1: se ha producido un error. Consulte el
parámetro "ErrorID".

7564

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

ErrorID

OUT

DWORD

Véase "Significa‐
do"

Indicación del número de error si "Error" = 1.

Véase "Significa‐
do"

Contiene los números de error para todos los
elementos del área de datos de "Variables".

NodeErrorIDs

OUT

ARRAY of
DWORD

Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).

Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).
TimeStamps

OUT

UDT

Véase "Significa‐
do"

Contiene sellos de tiempo para todos los ele‐
mentos del área de datos de "Variables". Res‐
pecto a la estructura de UDT consulte UATimeS‐
tamp (Página 7574).

UA_WriteList
Función
Función del bloque
Con el bloque UA_WriteList se escriben los datos en el servidor UA conectado.
Los atributos que deben escribirse se programan en un UDT "UANodeAdditionalInfo"
referenciado por el parámetro de entrada "NodeAddInfos".
Los handles requeridos en el parámetro de entrada "NodeHdls" se leen desde la matriz del
parámetro de salida "NodeHdls" del bloque "UA_NodeGetHandleList".
El número de IDs de nodo en el parámetro de entrada "NodeIDCount" es 1, por lo que hay que
llamar el bloque por separado para cada nodo de destino.

Consulte también
Parámetros (Página 7566)
Bloques de programa para el cliente UA OPC (Página 7551)

Programación del PLC
Manual de programación y manejo, 11/2019

7565

Instrucciones
4.2 Instrucciones

Parámetros
Parámetros de bloque
En la tabla siguiente se explican los parámetros formales del bloque de programa.
Tabla 4-493 Parámetros del bloque UA_WriteList
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

Execute

IN

BOOL

0, 1

Un flanco ascendente 0 → 1 en el parámetro ini‐
cia el procesamiento del bloque.

ConnectionHdl

IN

DWORD

1 .. 5

Identificación de conexión suministrado por
UA_Connect

NodeHdlCount

IN

WORD

1

Número de elementos en el área de destino es‐
crita. El número debe ser 1.

NodeHdls

IN

ARRAY of
DWORD

1

Matriz de los handles de los nodos de destino
(items) del servidor OPC UA. Los handles se
leen de la matriz del parámetro de salida "No‐
deHdls" del bloque "UA_NodeGetHandleList".

NodeAddInfos

IN

ARRAY of
UDT

Véase "Significa‐
do"

Especifica el atributo escrito de los items y el
rango de índices. Respecto a la estructura de
UDT consulte UANodeAdditionalInfo (Pági‐
na 7573).

Timeout

IN

TIME

5000 .. 120000

Intervalo máximo para el establecimiento de la
conexión en milisegundos. Si se rebasa este va‐
lor, el procesamiento del bloque se cancela con
el número de error B0007001.
Si se realizan entradas fuera del rango permiti‐
do, se aplica el valor predeterminado de 60000
(60 segundos).

Variables

IN_OUT

UDT

Véase "Significa‐
do"

Referencia a los datos escritos. Respecto a la
estructura de UDT consulte UAAnyPointer (Pá‐
gina 7574).
Para más información sobre los tipos de datos
soportados, consulte el capítulo Tipos de datos
(Página 7567).

Done

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: procesamiento de bloque cancelado, aún
no finalizado o aún no iniciado
● 1: el bloque se ha procesado sin errores

Busy

OUT

BOOL

0, 1

Parámetros de estado para el procesamiento del
bloque
● 0: el bloque no se está procesando
● 1: el bloque se está procesando

Error

OUT

BOOL

0, 1

Indicador de error
● 0: sin error
● 1: se ha producido un error. Consulte el
parámetro "ErrorID".

7566

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos S7

Valores posibles

Significado

ErrorID

OUT

DWORD

Véase "Significa‐
do"

Indicación del número de error si "Error" = 1.

Véase "Significa‐
do"

Contiene los números de error para todos los
elementos del área de datos de "Variables".

NodeErrorIDs

OUT

ARRAY of
DWORD

Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).

Respecto al significado de los números, consul‐
te el capítulo Números de error (Página 7576).

Tipos de datos
Tipos de datos y áreas de memoria
El CP 443‑1 OPC UA soporta los tipos de datos indicados a continuación para datos de
proceso.
Los símbolos correspondientes de la CPU se permiten para las áreas de operandos indicadas
en cada caso. Las áreas de memoria tienen las abreviaturas siguientes. Las siglas entre
paréntesis son las abreviaturas relacionadas con la nemónica ajustada (alemán/inglés).
● E = memoria imagen de proceso de las entradas (E/I)
● A= memoria imagen de proceso de las salidas (A/Q)
● PE = área de periferia de las entradas (PE/PI)
● PA = área de periferia de las salidas (PA/PQ)
● M = marcas
● DB = bloque de datos / bloque de datos de sistema / bloque de datos de instancia
Solo el servidor OPC UA soporta las áreas de periferia.
Tabla 4-494 Tipos de datos
Tamaño
[bit], tipo

Área

1

0 .. 255

Tipo de datos
SIMATIC S7

IEC 61131‑3

OPC UA

BOOL

BOOL

Boolean

Observación

Área de operan‐
dos de la CPU

0 = false

I, Q, PI, PQ; M,
DB

1 .. 255 = true
Números
8, UInt8

0 .. 255

BYTE

BYTE,
USINT

Byte

8, UInt8

0 .. 255

CHAR

CHAR

Byte

16, UInt16 0 .. 65535

WORD

WORD,
UINT

UInt16

I, Q, PI, PQ; M,
DB

16, Int16

INT

INT

Int16

I, Q, PI, PQ; M,
DB

DWORD

DWORD,
UDINT

UInt32

I, Q, PI, PQ; M,
DB

-32768 .. 32767

32, UInt32 0 .. 4294967295

Programación del PLC
Manual de programación y manejo, 11/2019

I, Q, PI, PQ; M,
DB
Caracteres ASCII
32 .. 255

I, Q, PI, PQ; M,
DB

7567

Instrucciones
4.2 Instrucciones
Tamaño
[bit], tipo

Área

32, Int32
32, Float

Tipo de datos

Observación

Área de operan‐
dos de la CPU

SIMATIC S7

IEC 61131‑3

OPC UA

2147483648 ..
2147483647

DINT

DINT

Int32

I, Q, PI, PQ; M,
DB

±1.175 495e-38 ..
3.402823e+38

REAL

REAL

Float

DB

S5TIME

TIME

UInt16

Fecha y hora
16, UInt16 0 .. 999

Hora SIMATIC

DB

Respecto a la codifica‐
ción consulte la ayuda on‐
line de STEP 7.
16, UInt16 D#1990‑1‑1 ..
D#2168‑12‑31

DATE

DATE

UInt16

Fecha IEC [d]

DB

UInt32

Hora [ms]

DB

UInt32

Hora IEC [ms]

DB

Fecha y hora

DB

(0 .. 65378)
TIME_OF_
32, UInt32 TOD#0:0:0.0 ..
TIME_OF_
DAY
DAY (TOD)
TOD#23:59:59.999
(0 .. 86399999)
32, UInt32 -24D_20H_31M_
23S_648MS ..
T#24D_20H_31M_
23S_647MS

TIME

TIME

(-2147483648 ..
2147483647)
Tipos de datos compuestos
64

254 * 8

1990‑1‑1-0:0:0.0 ..
2089‑12‑31-23:59:
59.999

UInt32+
DATE_AND_ DT DATE_
AND_TIME UInt32
TIME

STRING *

STRING

String

Respecto a la codifica‐
ción consulte la ayuda on‐
line de STEP 7.
Máx. 254 bytes de datos
de usuario

DB

ARRAY *

Campo multidimensional DB
de tipos de datos elemen‐
tales o compuestos

UDT *

Tipo de datos definido
por el usuario para gru‐
pos de parámetros espe‐
cíficos

DB

* Respecto a la codificación véase más abajo.

Encontrará la descripción detallada de la codificación de los tipos de datos en la Ayuda en
pantalla de STEP 7.
Particularidades de los tipos de datos compuestos
Para los tipos de datos compuestos que utiliza la función OPC UA del CP rigen normas de
codificación especiales, que se describen a continuación.

STRING
Un STRING puede tener como máx. 254 caracteres.

7568

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Se admiten caracteres ASCII comprendidos en el rango 32 (0x20) .. 255 (0xFF).
De ellos, los caracteres siguientes no están permitidos: 127 (0x7F), 129 (0x81), 141 (0x8D),
143 (0x8F), 144 (0x90), 157 (0x9D)
Particularidades del servidor OPC UA
Los caracteres se codifican en formato UTF‑8 en el servidor OPC UA del CP.
Particularidades del cliente OPC UA
Para los datos de proceso con el tipo de datos STRING referenciados por el UDT
"UAAnyPointer" se indica el tipo de datos "2" (BYTE).
Como factor de repetición en el UAAnyPointer elija siempre el valor máximo de 256 (0x100):
254 para los datos de usuario + 2 para el encabezado.

ARRAY
Particularidades del cliente OPC UA
Los bloques de programa del cliente solo soportan la transferencia de arrays unidimensionales
desde el área de memoria "DB".
Los bloques de programa del cliente no soportan la transferencia del tipo de datos "ARRAY of
BOOL".
En un ARRAY of STRING, la longitud máxima (256) debe indicarse "n" veces en los límites de
la dimensión de cada elemento del string, siendo "n" el número de strings en el array.
Particularidades del servidor OPC UA
El tipo de datos "ARRAY of BOOL" puede leerse en todos los casos.
El tipo de datos "ARRAY of BOOL" solo puede escribirse si la longitud es un múltiplo de 8.

UDT
La estructura de los UDT necesarios para los bloques de programa para la función de cliente
OPC UA se explica en la descripción del bloque correspondiente, véase por ejemplo
AUTOHOTSPOT.

Tipos de parámetros
Los tipos de parámetros "TIMER" y "COUNTER" solo se soportan para el servidor OPC UA del
CP.

Programación del PLC
Manual de programación y manejo, 11/2019

7569

Instrucciones
4.2 Instrucciones

UDT para el CP 443-1 OPC UA
UASessionConnectInfo
UASessionConnectInfo
Consulte en la tabla siguiente el significado de la información de la conexión para el parámetro
"SessionConnectInfo" del bloque UA_Connect.
Tabla 4-495 Parámetros de UDT UASessionConnectInfo
Parámetro

Tipo de datos
S7

Rango de valo‐ Significado
res

SessionName

STRING

0 .. 254 carac‐
teres

Nombre de la sesión
Si la cadena permanece vacía, el sistema asig‐
na el siguiente nombre de sesión:
<Connection>+<Valor decimal de "Connec‐
tionHdl">

ApplicationName

STRING

0 .. 254 carac‐
teres

El parámetro es asignado por STEP 7 con el
nombre de aplicación del CP (cliente OPC UA)
configurado en HW Config.

SecurityMsgMode

WORD

0 .. 3

Procedimiento de seguridad
● 0 = mejor procedimiento posible
● 1 = Ningún procedimiento de seguridad
● 2 = Autentificar
● 3 = Autentificar y cifrar

SecurityPolicy

WORD

0 .. 4

Perfil Security
● 0 = Mejor perfil posible
● 1 = Ningún perfil de seguridad
● 2 = Basic128Rsa15
● 3 = Basic256
● 4 = Basic256Sha256

CertificateStore

STRING

ClientCertificate‐
Name

STRING

ServerUri

STRING

0 .. 254 carac‐
teres

Memoria de certificado del CP (cliente OPC UA)
El parámetro es asignado por STEP 7.

0 .. 254 carac‐
teres

Nombre del certificado de cliente

0 .. 254 carac‐
teres

Dirección de servidor (URI), que también está
guardada en el certificado de servidor.

El parámetro es asignado por STEP 7.

El parámetro solo puede dejarse vacío para se‐
siones sin procedimiento de seguridad.
Ejemplo:
urn:<ApplicationName>:GUID

7570

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Tipo de datos
S7

CheckServerCerti‐ BOOL
ficate

Rango de valo‐ Significado
res
0, 1

Sincronización (comprobación) del certificado
enviado por el servidor con el certificado de
servidor guardado en la memoria de certifica‐
dos del CP cliente:
● 0 = ninguna comprobación
● 1 = comprobación
Nota:
Los ajustes de este parámetro se sobrescriben
con los ajustes de seguridad de la configura‐
ción.
Si activa la comprobación (1) pero las funciones
de seguridad están desactivadas en la configu‐
ración del CP, el establecimiento de la conexión
se cancelará con un mensaje de error.
Recomendación: Deje el parámetro en al ajuste
predeterminado (0), ya que las funciones de
seguridad se activan a través de la configura‐
ción del CP.

TransportProfile

WORD

1

1 = UATP_UATcp
Solo se soporta este perfil de transporte confor‐
me a la especificación PLCopen.

UserIdentityToken

UDT

Véase "Signifi‐ Datos de la identificación de usuario,
cado"
consulte UAUserIdentityToken (Página 7572).

VendorSpecificPa‐ WORD
rameter

Véase "Signifi‐ Entrada de la dirección lógica del
cado"
CP 443‑1 OPC UA. La encontrará en el cuadro
de diálogo de propiedades del CP de STEP 7
como dirección de entrada en la ficha "Direc‐
ciones"

SessionTimeout

30000 ..
86 400 000

TIME

Intervalo máximo (milisegundos) durante el
cual se mantiene una sesión sin tráfico de da‐
tos.
Si se rebasa este valor, la sesión (conexión) se
cancela. En ese caso hay que volver a estable‐
cer la conexión llamando UA_Connect.
Si se programan valores fuera del rango de va‐
lores permitido (30 segundos ... 1 día) se utiliza
el valor 1200000 (20 minutos).

MonitorConnec‐
tion

TIME

5000 ..
86 400 000

Tiempo de vigilancia de conexión (milisegun‐
dos)
Intervalo sin tráfico de datos después del cual el
cliente comprueba la conexión con el servidor
enviando un telegrama.
Ajuste predeterminado: 15000 (15 segundos)

LocaleIDs

Programación del PLC
Manual de programación y manejo, 11/2019

ARRAY[1..5]
of String[6]

Ejemplos:
en‑US, de‑DE,
zh‑CHS ...

Identificador opcional de idioma y región con‐
forme a RFC 3066.
0 = ningún LocaleID o uno desconocido

7571

Instrucciones
4.2 Instrucciones

UAUserIdentityToken
UAUserIdentityToken
Consulte en la tabla siguiente el significado de los datos de autenticación de usuario que se
suministran al parámetro "UserIdentityToken" del UDT "UASessionConnectInfo".
Tabla 4-496 Parámetros de UDT UAUserIdentityToken
Parámetro

Tipo de datos
S7

Rango de valo‐ Significado
res

UserIdentity
TokenType

WORD

0, 1

0 = ninguna autenticación
1 = autenticación
Si el interlocutor (servidor) requiere una auten‐
ticación mediante nombre de usuario y contra‐
seña, ponga este parámetro a 1 y los dos si‐
guientes conforme a las exigencias del servidor.

TokenParam1

STRING

1 .. 254 carac‐
teres

Nombre de usuario

TokenParam2

STRING

1 .. 254 carac‐
teres

Contraseña

UANodeID
UANodeID
Consulte en la tabla siguiente el significado de los parámetros de UANodeID para la
identificación del nodo de destino en el servidor OPC UA. UANodeID alimenta el parámetro
"NodeIDs" del bloque UA_NodeGetHandleList".
Tabla 4-497 Parámetros de UDT UANodeID
Parámetro

Tipo de da‐
tos S7

Rango de va‐ Significado
lores

NamespaceIndex

WORD

0 .. 65535

Índice del espacio de nombre del servidor

Identifier

STRING

Máx. 254

Especifica el ID de nodo en el índice de espacio de
nombre.

IdentifierType

WORD

1 .. 2

Determina el formato y el rango de validez (general‐
mente el servidor) de NodeID. Tipos soportados:
● 1: UAIdentifierType_String
los identificadores de cadena distinguen entre
mayúsculas y minúsculas.
● 2: UAIdentifierType_Numeric
identificador numérico

7572

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

UANodeAdditionalInfo
UANodeAdditionalInfo
Especifica el atributo del item y el rango de índices para el parámetro de bloque
"NodeAddInfos".
Tabla 4-498 Parámetros de UDT UANodeAdditionalInfo
Parámetro

Tipo de datos Rango de valores
S7

Significado

AttributeID

WORD

13

Atributo de los items. Solo se soporta el atri‐
buto 13 (UAAI_Value) para el valor del item.

IndexRangeCount

WORD

0 .. 1

Número de áreas de índice
El valor es irrelevante en tipos de datos ele‐
mentales.
Para elementos con el tipo de datos ARRAY
rige lo siguiente:
● 0: Un único índice. Se lee/escribe el Array
completo.
● 1: Un área parcial de una matriz definida
por "IndexRange".

IndexRange

UDT

Véase "Significa‐
do"

Área de la matriz para el parámetro Index‐
RangeCount. Respecto a la estructura de
UDT consulte UAIndexRange (Página 7573).

UAIndexRange
UAIndexRange
Determina los índices de inicio y fin para el parámetro "IndexRange" del UDT
"UANodeAdditionalInfo".
Tabla 4-499 Parámetros de UDT UAIndexRange
Parámetro

Tipo de datos

Rango de va‐ Significado
lores

StartIndex

WORD

0 .. 65535

Índice a partir del cual se lee.

EndIndex

WORD

0 .. 65535

Índice hasta el cual se lee.

Reglas:
Si se utiliza IndexRangeCount = 1, rigen las siguientes reglas para la programación del área
de índices:
● StartinIndex y EndIndex deben asignarse.
● Para el acceso a más de un elemento es necesario que StartIndex sea menor que
EndIndex.
La no observancia provoca un error con el número 80360000.

Programación del PLC
Manual de programación y manejo, 11/2019

7573

Instrucciones
4.2 Instrucciones
● Para leer solo un elemento de la matriz, indique el mismo valor para StartIndex y EndIndex.
● Para poder acceder a todos los elementos de la matriz hay que asignar StartIndex y
EndIndex en función del número total de los elementos de la matriz.
Las entradas fuera del tamaño de la matriz provocan un error con el número 80370000.
Ejemplo para la asignación de "StartIndex" y "EndIndex" en matrices:
De una matriz con un tamaño de 10 elementos (n.º 1 .. 10) deben leerse los elementos 3 a 5.
Ambos índices se programan del siguiente modo:
● StartIndex = 2 (elemento n.º 3)
● EndIndex = 4 (elemento n.º 5)

UATimeStamp
UATimeStamp
El UDT contiene los sellos de tiempo de los elementos del área de datos en milisegundos.
UATimeStamp alimenta el parámetro "TimeStamps" del bloque UA_ReadList".
Tabla 4-500 Parámetros de UDT UATimeStamp
Parámetro

Tipo de datos Rango de valores
S7

Significado

TimestampL

WORD

Véase más abajo

Palabra menos significativa (bits 0..15)

TimestampH

WORD

Véase más abajo

Palabra más significativa (bits 16..31)

Rango de valores de la palabra doble completa:
TOD#0:0:0.0 .. TOD#23:59:59.999 (0 .. 86 399 999 Milisegundos)

UAAnyPointer
UAAnyPointer
El UDT "UAAnyPointer" es referenciado por el parámetro "Variables" del bloque de programa.
El UDT hace referencia al área de memoria de los datos de proceso en la CPU. Para ello es
necesario copiar en un bloque de datos los datos de proceso de las áreas de operandos
"Entradas" o "Salidas".
Deposite el UDT en un bloque de datos.
Tabla 4-501 Parámetros de UDT UAAnyPointer

7574

Parámetro

Tipo de datos Valores posibles
S7

Significado

SyntaxID

WORD

10

El valor para el ID de sintaxis siempre es 10.

DataType

WORD

Véase "Significa‐
do"

Tipo de datos del nodo de destino. Respecto
al rango de valores consulte la tabla "Codifi‐
cación del tipo de datos" a continuación.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Tipo de datos Valores posibles
S7

Significado

RepetitionFactor

WORD

Factor de repetición

0 .. 65535

Encontrará más información en la Ayuda en
pantalla de STEP 7.
DB_Number

WORD

0 .. 65535

Número del bloque de datos (DB)
Como alternativa, indique el número de un
DB o un área de memoria. Si indica un DB,
introduzca un cero en "MemArea".

MemArea

WORD

Véase "Significa‐
do"

Área de memoria
Como alternativa, indique el número de un
DB o un área de memoria. Si indica un área
de memoria, introduzca un cero en
"DB_Number".
Respecto al rango de valores del área de
memoria consulte la tabla "Codificación del
área de memoria" a continuación.

ByteOffset

WORD

Dependiendo del
área de memoria,
consulte "Signifi‐
cado"

Decalaje de bytes en el área de memoria in‐
dicada a partir del cual se accede a los datos.

BitOffset

WORD

0 .. 7

Decalaje de bits en el área de memoria indi‐
cada

Tipo de datos
La tabla siguiente explica la codificación del tipo de datos en el parámetro "DataType" del UDT
UAAnyPointer.
Tabla 4-502 Codificación del tipo de datos
Código hexadecimal

Tipo de datos S7

Descripción

b#16#01

BOOL

Bit

b#16#02

BYTE

Byte (8 bits)

b#16#03

CHAR

Carácter (8 bits)

b#16#04

WORD

Palabra (16 bits)

b#16#05

INT

Entero (16 bits)

b#16#06

DWORD

Palabra (32 bits)

b#16#07

DINT

Entero (32 bits)

b#16#08

REAL

Número en coma flotante (32 bits)

b#16#09

DATE

Fecha

b#16#0A

TIME_OF_DAY (TOD) Hora

b#16#0B

TIME

Tiempo

b#16#0C

S5TIME

Tipo de datos S5TIME

b#16#0E

DATE_AND_TIME
(DT)

Fecha y hora (64 bits)

b#16#02 *

STRING

Cadena de caracteres

* La cadena utiliza el tipo de datos subordinado BYTE. Observe las particularidades recogidas
en el capítulo Tipos de datos (Página 7567).

Programación del PLC
Manual de programación y manejo, 11/2019

7575

Instrucciones
4.2 Instrucciones
Área de memoria
La tabla siguiente explica la codificación del área de memoria en el parámetro "MemArea" del
UDT UAAnyPointer.
Tabla 4-503 Codificación del área de memoria
Código hexadecimal

Área

Descripción

b#16#80

P

Área de memoria de la periferia

b#16#81

E

Área de memoria de las entradas

b#16#82

A

Área de memoria de las salidas

b#16#83

M

Área de memoria de las marcas

b#16#84

DB

Bloque de datos

Números de error
Valoración de los parámetros de salida
Los parámetros de salida Done (BOOL), Error (BOOL) y ErrorID (DWORD) de los bloques de
programa del cliente OPC UA se actualizan en cada llamada del bloque. Valore los estados de
los parámetros de salida en el programa de usuario.
Ejemplo:
Después de la llamada el bloque de programa UA_Connect proporciona los siguientes valores
a los tres parámetros de salida:
● Done = 1
● Error = 0
● ErrorID = 00000000
Significado: La petición se ha completado correctamente.

Significado de los números de error (hexadecimales) de ErrorID
Tabla 4-504 Significado de ErrorID en combinación con Done y Error
Done Error

ErrorID (hex) Nombre

Significado

1

00000000

El procesamiento del bloque se ha completado correctamente.

0

Números de error específicos de CP
0

1

B0006001

Falta flanco positivo para llamar el bloque de programa

0

1

B0007001

Tiempo excedido

0

1

B0008004

NodeIDCount no válido

0

1

B0008086

Handle de nodo no válido

0

1

B0008087

Se ha alcanzado el número máximo de conexiones (5).

0

1

B0008090

Dirección lógica incorrecta. Establecimiento de conexión can‐
celado.

7576

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

B0008093

La dirección lógica no se puede procesar. Se utiliza un módulo
no permitido.

0

1

B00080A1

El handle de nodo no se ha configurado para esta conexión.

0

1

B00080C3

Los recursos de conexión de la CPU están agotados tempo‐
ralmente.

0

1

B0009085

Se ha rebasado el espacio de memoria máximo para elemen‐
tos (64000 bytes) del cliente OPC UA.

0

1

B000800A

El cliente OPC UA no se ha activado en la configuración.

0

1

B0008723

La petición de lectura/escritura referencia un área de datos
que no existe en un DB.

0

1

B000F001

En un ciclo se han llamado dos bloques de función.

0

1

B000F002

La sesión OPC UA todavía no está establecida. Vuelva a lla‐
mar el bloque UA_Connect.

0

1

B000F003

Error de comunicación

0

1

B000F004

Valor no válido para el parámetro "SyntaxID" en el UDT
"UAAnyPointer"

0

1

B000F005

Tipo de datos no válido en UAAnyPointer

0

1

B000F006

Valor no válido para el parámetro "RepetitionFactor" en el UDT
"UAAnyPointer"

0

1

B000F007

Área de operandos no válida de UAAnyPointer

0

1

B000F010

Área de operandos no válida en una petición de lectura o es‐
critura: no se permiten arrays de entradas, arrays de salidas,
arrays de marcas, arrays de datos locales ni arrays de datos
locales del bloque predecesor.

0

1

B000F011

El offset de bits debe ser cero.

0

1

B0010001

Paquete datos erróneo en UA_Connect

0

1

B0010002

URL no válida de un punto final de servidor

0

1

B0010003

Valor no válido para Timeout

0

1

B0010004

Valor no válido para SessionTimeout

0

1

B0010005

Valor no válido para MonitorConnection

0

1

B0010006

Perfil de transporte no válido

0

1

B0010007

URI de servidor no válida

0

1

B0010008

Procedimiento de Security no válido

0

1

B0010009

Perfil de Security no válido

0

1

B001000A

Valor no válido para UserIdentityToken

0

1

B001000B

Nombre de aplicación no válido

0

1

B0010101

Formato no válido de la URL del punto final del servidor. Debe
empezar por "opc.tcp://".

0

1

B0010102

La ruta de la URL del punto final del servidor no se soporta.

0

1

B0010103

El cliente no debe conectarse al servidor del propio CP.

0

1

B0010104

Puerto no válido

0

1

B0010105

Dirección no válida. DNS no se soporta.

0

1

B0020001

Paquete datos erróneo en UA_NameSpaceGetIndex

0

1

B0030001

Paquete datos erróneo en UA_NodeGetHandleList

0

1

B0030002

Identifier de NodeID no válido

Programación del PLC
Manual de programación y manejo, 11/2019

7577

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

B0030003

Se ha rebasado el número máx. de elementos (64000)

0

1

B0030004

Atributo "ValueRank" no soportado de una variable. Los valo‐
res 1 (array unidimensional) y -1 (de escala) de ValueRank no
se soportan.

0

1

B0040001

Paquete datos erróneo en UA_NodeReleaseHandleList

0

1

B0050001

Paquete datos erróneo en UA_Disconnect

0

1

B0050002

No es posible llamar UA_Disconnect porque no hay conexión.

0

1

B0060001

Paquete datos erróneo en UA_ReadList

0

1

B0060002

La longitud de los datos que deben leerse excede el máximo
de 64000.

0

1

B0060003

Rango no válido de IndexRangeCount

0

1

B0060004

IndexRange no válido. StartIndex no debe ser mayor que En‐
dIndex y EndIndex no debe ser mayor que la longitud del array.

0

1

B0060005

AttributeID no válido

0

1

B0060006

El área de datos leída es demasiado pequeña.

0

1

B0060007

Longitud de string no válida. El valor (datos de usuario) debe
ser 254.

0

1

B0060008

Valor no válido del nodo. El valor no puede leerse en una va‐
riable S7.

0

1

B0060010

Área de operandos no válida en una petición de lectura o es‐
critura: no se permiten arrays de entradas, arrays de salidas,
arrays de marcas, arrays de datos locales ni arrays de datos
locales del bloque predecesor.

0

1

B0070001

Paquete de datos erróneo en UA_WriteList

0

1

B0070002

La longitud de los datos que deben escribirse excede el máxi‐
mo.

0

1

B0070003

Rango no válido de IndexRangeCount

0

1

B0070004

IndexRange no válido. StartIndex no debe ser mayor que En‐
dIndex y EndIndex no debe ser mayor que la longitud del array.

0

1

B0070005

AttributeID no válido

0

1

B0070006

El área de datos está fuera del rango admisible.

0

1

B0070009

Carácter no válido en el string

Corrija los datos en el UDT "UAIndexRange".

Números de error según IEC 61131‑3 para OPC UA
0

1

002D0000

GoodSubscription
Transferred

The subscription was transferred to another session.

0

1

002E0000

GoodCompletes
Asynchronously

The processing will complete asynchronously.

0

1

002F0000

GoodOverload

Sampling has slowed down due to resource limitations.

0

1

00300000

GoodClamped

The value written was accepted but was clamped.

0

1

00960000

GoodLocalOverride

The value has been overridden.

0

1

00A20000

GoodEntryInserted

The data or event was successfully inserted into the historical
database.

0

1

00A30000

GoodEntryReplaced

The data or event field was successfully replaced in the histo‐
rical database.

0

1

00A50000

GoodNoData

No data exists for the requested time range or event filter.

7578

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

00A60000

GoodMoreData

The data or event field was successfully replaced in the histo‐
rical database.

0

1

00A70000

GoodCommunicationEvent

The communication layer has raised an event.

0

1

00A80000

GoodShutdownEvent

The system is shutting down.

0

1

00A90000

GoodCallAgain

The operation is not finished and needs to be called again.

0

1

00AA0000

GoodNonCriticalTimeout

A non-critical timeout occurred.

0

1

00BA0000

GoodResultsMayBe
Incomplete

The server should have followed a reference to a node in a
remote server but did not. The result set may be incomplete.

0

1

406C0000

UncertainReferenceOutOf
Server

One of the references to follow in the relative path references
to a node in the address space in another server.

0

1

408F0000

UncertainNoCommunication
LastUsableValue

Communication to the data source has failed. The variable va‐
lue is the last value that had a good quality.

0

1

40900000

UncertainLastUsableValue

Whatever was updating this value has stopped doing so.

0

1

40910000

UncertainSubstituteValue

The value is an operational value that was manually overwrit‐
ten.

0

1

40920000

UncertainInitialValue

The value is an initial value for a variable that normally receives
its value from another variable.

0

1

40930000

UncertainSensorNotAccurate The value is at one of the sensor limits.

0

1

40940000

UncertainEngineeringUnits
Exceeded

The value is outside of the range of values defined for this
parameter.

0

1

40950000

UncertainSubNormal

The value is derived from multiple sources and has less than
the required number of Good sources.

0

1

40A40000

UncertainDataSubNormal

The value is derived from multiple values and has less than the
required number of Good values.

0

1

40BC0000

UncertainReferenceNot
Deleted

The server was not able to delete all target references.

0

1

40C00000

UncertainNotAllNodes
Available

The list of references may not be complete because the un‐
derlying system is not available.

0

1

80010000

BadUnexpectedError

An unexpected error occurred

0

1

80020000

BadInternalError

An internal error occurred as a result of a programming or con‐
figuration error.

0

1

80030000

BadOutOfMemory

Not enough memory to complete the operation.

0

1

80040000

BadResourceUnavailable

An operating system resource is not available

0

1

80050000

BadCommunicationError

A low level communication error occurred.

0

1

80060000

BadEncodingError

Encoding halted because of invalid data in the objects being
serialized.

0

1

80070000

BadDecodingError

Decoding halted because of invalid data in the stream.

0

1

80080000

BadEncodingLimitsExcee‐
ded

The message encoding/decoding limits imposed by the stack
have been exceeded.

0

1

80B80000

BadRequestTooLarge

The resources (memory) of the CPU are temporarily occupied

0

1

80B90000

BadResponseTooLarge

The response message size exceeds limits set by the client.

0

1

80B90000

BadUnknownResponse

An unrecognized response was received from the server.

0

1

800A0000

BadTimeout

The operation timed out.

0

1

800B0000

BadServiceUnsupported

The server does not support the requested service.

0

1

800C0000

BadShutdown

The operation was cancelled because the application is shut‐
ting down.

Programación del PLC
Manual de programación y manejo, 11/2019

7579

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

800D0000

BadServerNotConnected

The operation could not complete because the client is not
connected to the server.

0

1

800E0000

BadServerHalted

The server has stopped and cannot process any requests.

0

1

800F0000

BadNothingToDo

There was nothing to do because the client passed a list of
operations with no elements.

0

1

80100000

BadTooManyOperations

The request could not be processed because it specified too
many operations.

0

1

80110000

BadDataTypeIdUnknown

The extension object cannot be (de)serialized because the da‐
ta type id is not recognized.

0

1

80120000

BadCertificateInvalid

The certificate provided as a parameter is not valid.

0

1

80130000

BadSecurityChecksFailed

The certificate provided as a parameter is not valid.

0

1

80140000

BadCertificateTimeInvalid

The Certificate has expired or is not yet valid.

0

1

80150000

BadCertificateIssuer
TimeInvalid

An Issuer Certificate has expired or is not yet valid.

0

1

80160000

BadCertificateHost
NameInvalid

The HostName used to connect to a Server does not match a
HostName in the Certificate.

0

1

80170000

BadCertificateUriInvalid

The URI specified in the Application Description does not
match the URI in the Certificate.

0

1

80180000

BadCertificateUseNotAllo‐
wed

The Certificate may not be used for the requested operation.

0

1

80190000

BadCertificateIssuerUse
NotAllowed

The Issuer Certificate may not be used for the requested ope‐
ration.

0

1

801A0000

BadCertificateUntrusted

The Certificate is not trusted.

0

1

801B0000

BadCertificateRevocation
Unknown

It was not possible to determine if the Certificate has been
revoked.

0

1

801C0000

BadCertificateIssuer
RevocationUnknown

It was not possible to determine if the Issuer
The Certificate has been revoked.

Certificate has been revoked.

0

1

801D0000

BadCertificateRevoked

0

1

801E0000

BadCertificateIssuerRevoked The Issuer Certificate has been revoked.

0

1

801F0000

BadUserAccessDenied

User does not have permission to perform the requested ope‐
ration.

0

1

80200000

BadIdentityTokenInvalid

The user identity token is not valid.

0

1

80210000

BadIdentityTokenRejected

The user identity token is valid but the server has rejected it.

0

1

80220000

BadSecureChannelIdInvalid

The specified secure channel is no longer valid.

0

1

80230000

BadInvalidTimestamp

The timestamp is outside the range allowed by the server.

0

1

80240000

BadNonceInvalid

The nonce does appear to be not a random value or it is not the
correct length.

0

1

80250000

BadSessionIdInvalid

The session id is not valid.

0

1

80260000

BadSessionClosed

The session was closed by the client.

0

1

80270000

BadSessionNotActivated

The session cannot be used because ActivateSession has not
been called.

0

1

80280000

BadSubscriptionIdInvalid

The subscription id is not valid.

0

1

802A0000

BadRequestHeaderInvalid

The header for the request is missing or invalid.

0

1

802B0000

BadTimestampsTo
ReturnInvalid

The timestamps to return parameter is invalid.

7580

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

802C0000

BadRequestCancelled
ByClient

The request was cancelled by the client.

0

1

80310000

BadNoCommunication

Communication with the data source is defined, but not esta‐
blished, and there is no last known value available.

0

1

80320000

BadWaitingForInitialData

Waiting for the server to obtain values from the underlying data
source.

0

1

80330000

BadNodeIdInvalid

The syntax of the node id is not valid.

0

1

80340000

BadNodeIdUnknown

The node id refers to a node that does not exist in the server
address space.

0

1

80350000

BadAttributeIdInvalid

The attribute is not supported for the specified Node.

0

1

80360000

BadIndexRangeInvalid

The syntax of the index range parameter is invalid.

0

1

80370000

BadIndexRangeNoData

No data exists within the range of indexes specified.

0

1

80380000

BadDataEncodingInvalid

The data encoding is invalid.

0

1

80390000

BadDataEncoding
Unsupported

The server does not support the requested data encoding for
the node.

0

1

803A0000

BadNotReadable

The access level does not allow reading or subscribing to the
Node.

0

1

803B0000

BadNotWritable

The access level does not allow writing to the Node.

0

1

803C0000

BadOutOfRange

The value was out of range.

0

1

803D0000

BadNotSupported

The requested operation is not supported.

0

1

803E0000

BadNotFound

A requested item was not found or a search operation ended
without success.

0

1

803F0000

BadObjectDeleted

The object cannot be used because it has been deleted.

0

1

80400000

BadNotImplemented

Requested operation is not implemented.

0

1

80410000

BadMonitoringModeInvalid

The monitoring mode is invalid.

0

1

80420000

BadMonitoredItemIdInvalid

The monitoring item id does not refer to a valid monitored item.

0

1

80430000

BadMonitoredItem
FilterInvalid

The monitored item filter parameter is not valid.

0

1

80440000

BadMonitoredItem
FilterUnsupported

The server does not support the requested monitored item fil‐
ter.

0

1

80450000

BadFilterNotAllowed

A monitoring filter cannot be used in combination with the at‐
tribute specified.

0

1

80460000

BadStructureMissing

A mandatory structured parameter was missing or null.

0

1

80470000

BadEventFilterInvalid

The event filter is not valid.

0

1

80480000

BadContentFilterInvalid

The content filter is not valid.

0

1

80490000

BadFilterOperandInvalid

The operand used in a content filter is not valid.

0

1

804A0000

BadContinuation
PointInvalid

The continuation point provide is longer valid.

0

1

804B0000

BadNoContinuationPoints

The operation could not be processed because all continuation
points have been allocated.

0

1

804C0000

BadReferenceTypeIdInvalid

The operation could not be processed because all continuation
points have been allocated.

0

1

804D0000

BadBrowseDirectionInvalid

The browse direction is not valid.

0

1

804E0000

BadNodeNotInView

The node is not part of the view.

0

1

804F0000

BadServerUriInvalid

The ServerUri is not a valid URI.

0

1

80500000

BadServerNameMissing

No ServerName was specified

Programación del PLC
Manual de programación y manejo, 11/2019

7581

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

80510000

BadDiscoveryUrlMissing

No DiscoveryUrl was specified.

0

1

80520000

BadSempahoreFileMissing

The semaphore file specified by the client is not valid.

0

1

80530000

BadRequestTypeInvalid

The security token request type is not valid.

0

1

80540000

BadSecurityModeRejected

The security mode does not meet the requirements set by the
Server.

0

1

80550000

BadSecurityPolicyRejected

The security policy does not meet the requirements set by the
Server.

0

1

80560000

BadTooManySessions

The server has reached its maximum number of sessions.

0

1

80570000

BadUserSignatureInvalid

The user token signature is missing or invalid.

0

1

80580000

BadApplicationSignature
Invalid

The signature generated with the client certificate is missing or
invalid.

0

1

80590000

BadNoValidCertificates

The client did not provide at least one software certificate that
is valid and meets the profile requirements for the server.

0

1

805A0000

BadRequestCancelled
ByRequest

The request was cancelled by the client with the Cancel servi‐
ce.

0

1

805B0000

BadParentNodeIdInvalid

The parent node id does not to refer to a valid node.

0

1

805C0000

BadReferenceNotAllowed

The reference could not be created because it violates cons‐
traints imposed by the data model.

0

1

805D0000

BadNodeIdRejected

The requested node id was reject because it was either invalid
or server does not allow node ids to be specified by the client.

0

1

805F0000

BadNodeClassInvalid

The node class is not valid.

0

1

80600000

BadBrowseNameInvalid

The browse name is invalid.

0

1

80610000

BadBrowseNameDuplicated

The browse name is not unique among nodes that share the
same relationship with the parent.

0

1

80620000

BadNodeAttributesInvalid

The node attributes are not valid for the node class.

0

1

80630000

BadTypeDefinitionInvalid

The type definition node id does not reference an appropriate
type node.

0

1

80640000

BadSourceNodeIdInvalid

The source node id does not reference a valid node.

0

1

80650000

BadTargetNodeIdInvalid

The target node id does not reference a valid node.

0

1

80660000

BadDuplicateReference
NotAllowed

The reference type between the nodes is already defined.

0

1

80670000

BadInvalidSelfReference

The server does not allow this type of selfreference on this
node.

0

1

80680000

BadReferenceLocalOnly

The reference type is not valid for a reference to a remote ser‐
ver.

0

1

80690000

BadNoDeleteRights

The server will not allow the node to be deleted.

0

1

806A0000

BadServerIndexInvalid

The server index is not valid.

0

1

806B0000

BadViewIdUnknown

The view id does not refer to a valid view node.

0

1

806D0000

BadTooManyMatches

The requested operation has too many matches to return.

0

1

806E0000

BadQueryTooComplex

The requested operation requires too many resources in the
server.

0

1

806F0000

BadNoMatch

The requested operation has no match to return.

0

1

80700000

BadMaxAgeInvalid

The max age parameter is invalid.

0

1

80710000

BadHistoryOperationInvalid

The history details parameter is not valid.

0

1

80720000

BadHistoryOperation
Unsupported

The server does not support the requested operation.

7582

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

80730000

BadWriteNotSupported

The server not does support writing the combination of value,
status and timestamps provided.

0

1

80740000

BadTypeMismatch

The value supplied for the attribute is not of the same type as
the attribute's value.

0

1

80750000

BadMethodInvalid

The method id does not refer to a method for the specified
object.

0

1

80760000

BadArgumentsMissing

The client did not specify all of the input arguments for the
method.

0

1

80770000

BadTooManySubscriptions

The server has reached its maximum number of subscriptions.

0

1

80780000

BadTooManyPublish
Requests

The server has reached the maximum number of queued pu‐
blish requests.

0

1

80790000

BadNoSubscription

There is no subscription available for this session.

0

1

807A0000

BadSequenceNumber
Unknown

The sequence number is unknown to the server.

0

1

807B0000

BadMessageNotAvailable

The requested notification message is no longer available.

0

1

807C0000

BadInsufficientClientProfile

The Client of the current Session does not support one or more
Profiles that are necessary for the Subscription.

0

1

80BF0000

BadStateNotActive

The sub-state machine is not currently active.

0

1

807D0000

BadTcpServerTooBusy

The server cannot process the request because it is too busy.

0

1

807E0000

BadTcpMessageTypeInvalid

The type of the message specified in the header invalid.

0

1

807F0000

BadTcpSecureChannel
Unknown

The SecureChannelId and/or TokenId are not currently in use.

0

1

80800000

BadTcpMessageTooLarge

The size of the message specified in the header is too large.

0

1

80810000

BadTcpNotEnough
Resources

There are not enough resources to process the request.

0

1

80820000

BadTcpInternalError

An internal error occurred.

0

1

80830000

BadTcpEndpointUrlInvalid

The Server does not recognize the QueryString specified.

0

1

80840000

BadRequestInterrupted

The request could not be sent because of a network interrup‐
tion.

0

1

80850000

BadRequestTimeout

Timeout occurred while processing the request.

0

1

80860000

BadSecureChannelClosed

The secure channel has been closed.

0

1

80870000

BadSecureChannelToken
Unknown

The token has expired or is not recognized.

0

1

80880000

BadSequenceNumberInvalid

The sequence number is not valid.

0

1

80890000

BadConfigurationError

There is a problem with the configuration that affects the use‐
fulness of the value.

0

1

808A0000

BadNotConnected

The variable should receive its value from another variable, but
has never been configured to do so.

0

1

808B0000

BadDeviceFailure

There has been a failure in the device/data source that gene‐
rates the value that has affected the value.

0

1

808C0000

BadSensorFailure

There has been a failure in the sensor from which the value is
derived by the device/data source.

0

1

808D0000

BadOutOfService

The source of the data is not operational.

0

1

808E0000

BadDeadbandFilterInvalid

The dead band filter is not valid.

0

1

80970000

BadRefreshInProgress

This Condition refresh failed, a Condition refresh operation is
already in progress.

Programación del PLC
Manual de programación y manejo, 11/2019

7583

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

80980000

BadConditionAlreadyDisa‐
bled

This condition has already been disabled.

0

1

80990000

BadConditionDisabled

Property not available, this condition is disabled.

0

1

809A0000

BadEventIdUnknown

The specified event id is not recognized.

0

1

809B0000

BadNoData

No data exists for the requested time range or event filter.

0

1

809D0000

BadDataLost

Data is missing due to collection started/stopped/lost.

0

1

809E0000

BadDataUnavailable

Expected data is unavailable for the requested time range due
to an unmounted volume an off-line archive or tape or similar
reason for temporary unavailability.

0

1

809F0000

BadEntryExists

The data or event was not successfully inserted because a
matching entry exists.

0

1

80A00000

BadNoEntryExists

The data or event was not successfully updated because no
matching entry exists.

0

1

80A10000

BadTimestampNotSupported The client requested history using a timestamp format the ser‐
ver does not support (i. e. requested ServerTimestamp when
server only supports SourceTimestamp).

0

1

80AB0000

BadInvalidArgument

0

1

80AC0000

BadConnectionRejected

Could not establish a network connection to remote server.

0

1

80AD0000

BadDisconnect

The server has disconnected from the client.

0

1

80AE0000

BadConnectionClosed

The network connection has been closed.

0

1

80AF0000

BadInvalidState

The operation cannot be completed because the object is clo‐
sed uninitialized or in some other invalid state.

0

1

80B00000

BadEndOfStream

Cannot move beyond end of the stream.

0

1

80B10000

BadNoDataAvailable

No data is currently available for reading from a non-blocking
stream.

0

1

80B20000

BadWaitingForResponse

The asynchronous operation is waiting for a response.

0

1

80B30000

BadOperationAbandoned

The asynchronous operation was abandoned by the caller.

0

1

80B40000

BadExpectedStreamToBlock The stream did not return all data requested (possibly because
it is a non-blocking stream).

0

1

80B50000

BadWouldBlock

Non-blocking behavior is required and the operation would
block.

0

1

80B60000

BadSyntaxError

A value had an invalid syntax.

0

1

80B70000

BadMaxConnections
Reached

The operation could not be finished because all available con‐
nections are in use.

0

1

80BB0000

BadEventNot
Acknowledgeable

The event cannot be acknowledged.

0

1

80BD0000

BadInvalidTimestamp
Argument

The defined timestamp to return was invalid.

0

1

80BE0000

BadProtocolVersion
Unsupported

The applications do not have compatible protocol versions.

0

1

80C10000

BadFilterOperatorInvalid

An unrecognized operator was provided in a filter.

0

1

80C20000

BadFilterOperator
Unsupported

A valid operator was provided, but the server does not provide
support for this filter operator.

0

1

80C30000

BadFilterOperandCount
Mismatch

The number of operands provided for the filter operator was
less than expected for the operand provided.

0

1

80C40000

BadFilterElementInvalid

The referenced element is not a valid element in the content
filter.

7584

One or more arguments are invalid.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

80C50000

BadFilterLiteralInvalid

The referenced literal is not a valid value.

0

1

80C90000

BadViewTimestampInvalid

The view timestamp is not available or not supported.

0

1

80CA0000

BadViewParameterMismatch The view parameters are not consistent with each other.

0

1

80CB0000

BadViewVersionInvalid

The view version is not available or not supported.

0

1

80CC0000

BadConditionAlready
Enabled

This condition has already been enabled.

0

1

80CD0000

BadDialogNotActive

The dialog condition is not active.

0

1

80CF0000

BadConditionBranch
AlreadyAcked

The condition branch has already been acknowledged.

0

1

80D00000

BadConditionBranch
AlreadyConfirmed

The condition branch has already been confirmed.

0

1

80D10000

BadConditionAlreadyShel‐
ved

The condition has already been shelved.

0

1

80D20000

BadConditionNotShelved

The condition is not currently shelved.

0

1

80D30000

BadShelvingTimeOutOfRan‐
ge

The shelving time not within an acceptable range.

0

1

80D40000

BadAggregateListMismatch

The requested number of Aggregates does not match the re‐
quested number of NodeIds.

0

1

80D50000

BadAggregateNotSupported

The requested Aggregate is not support by the server.

0

1

80D60000

BadAggregateInvalidInputs

The aggregate value could not be derived due to invalid data
inputs.

0

1

80DB0000

BadTooManyMonitoredItems The request could not be processed because there are too
many monitored items in the subscription.

0

1

80D70000

BadBoundNotFound

0

1

80D80000

BadBoundNotSupported

The server cannot retrieve a bound for the variable.

0

1

00D90000

GoodDataIgnored

The request specifies fields which are not valid for the EventTy‐
pe or cannot be saved by the historian.

0

1

80DA0000

BadAggregateConfiguration
Rejected

The aggregate configuration is not valid for specified node.

No data found to provide upper or lower bound value.

Números de error de PLCOpen para OPC UA
0

1

A0000001

PLCopenUA_Bad_FW_
PermanentError

Internal, permanent error.

0

1

A0000002

PLCopenUA_Bad_FW_
TempError

Temp. Error; FB could retry to reach FW.

0

1

A0000003

PLCopenUA_Bad_
ConnectionError

Connection could not be established.

0

1

A0000004

PLCopenUA_Bad_
HostNotFound

The requested hostname could not be found.

0

1

A0000005

PLCopenUA_Bad_
AlreadyConnected

Connection was already established.

0

1

A0000006

PLCopenUA_Bad_
SecurityFailed

Connection failed due to security setup.

0

1

A0000007

PLCopenUA_Bad_
Suspended

Connection is suspended.

0

1

A0000008

PLCopenUA_Bad_
ConnectionInvalidHdl

Provided ConnectionHdl is not known.

Programación del PLC
Manual de programación y manejo, 11/2019

7585

Instrucciones
4.2 Instrucciones
Done Error

ErrorID (hex) Nombre

Significado

0

1

A0000009

PLCopenUA_Bad_
NSNotFound

A namespace with the requested name cannot be found on
server.

0

1

A000000A

PLCopenUA_Bad_
ResultTooLong

Target PLC variable is too short for retrieved data.

0

1

A000000B

PLCopenUA_Bad_
InvalidType

Invalid or unsupported Type.

0

1

A000000C

PLCopenUA_Bad_
NodeInvalidHdl

Provided NodeHdl is not known.

0

1

A000000D

PLCopenUA_Bad_
MethodInvalidHdl

Provided MethodHdl is not known.

0

1

A000000E

PLCopenUA_Bad_
ReadFailed

Read failed for unknown reason.

0

1

A000000F

PLCopenUA_Bad_
WriteFailed

Write failed for unknown reason.

0

1

A0000010

PLCopenUA_Bad_
CallFailed

Method Call failed for unknown reason.

0

1

A0000011

PLCopenUA_Bad_
InParamFailed

Method Call Input parameter conversion failed.

0

1

A0000012

PLCopenUA_Bad_
OutParamFailed

Method Call Output parameter conversion failed. ATTEN‐
TION: this means the MethodCall was executed successfully
but the returned values could not be converted.

0

1

A0000013

PLCopenUA_Bad_
SubscriptionInvalidHdl

Provided SubscriptionHdl is not known.

0

1

A0000014

PLCopenUA_Bad_
MonitoredItemInvalidHdl

Provided MonitoredItemHdl is not known.

4.2.5.7

Funciones 300C

ASCII, 3964(R)
SEND_PTP: Enviar datos (ASCII, 3964(R))
Descripción
La instrucción "SEND_PTP" permite enviar un conjunto de datos de un bloque de datos.
● El proceso de transmisión se activa después de la llamada del bloque y de un flanco
ascendente en la entrada de control REQ.
● El área de los datos que deben enviarse se indica con SD_1 (número de DB y dirección
inicial), la longitud del conjunto de datos con LEN.
● Para que la instrucción pueda procesar la petición, hay que llamarla con R(Reset)=FALSE.
En caso de un flanco ascendente en la entrada de control R se cancela el proceso de
transmisión en curso y se pone la instrucción al estado inicial. Una petición cancelada
finaliza con un mensaje de error (salida STATUS).

7586

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
● Con LADDR se indica la dirección E/S del submódulo que se ha definido en la configuración
hardware.
● Si la petición ha finalizado sin errores, DONE se pone a TRUE, y si ha finalizado con
errores, ERROR se pone a TRUE.
Si la petición se ha ejecutado con DONE=TRUE, significa lo siguiente:
● En caso de utilizar el driver ASCII: los datos se han enviado al interlocutor de la
comunicación. Lo que no es seguro es si el interlocutor ha recibido los datos.
● En caso de utilizar el procedimiento 3964(R): los datos se han enviado al interlocutor de la
comunicación y éste los ha acusado positivamente. Lo que no es seguro es si los datos
también se han transmitido a la CPU interlocutora.
En STATUS, la CPU indica en caso de error o advertencia el número de evento
correspondiente. DONE y ERROR/STATUS también se devuelven en caso de RESET de la
instrucción (R=TRUE).
En caso de producirse un error, el resultado binario BR se borra. Si la instrucción finaliza sin
errores, el resultado binario tiene el estado TRUE.
Nota
La instrucción no comprueba los parámetros; en caso de parametrización errónea la CPU
puede derivar al estado STOP.

DB de instancia
La instrucción "SEND_PTP" trabaja con un DB de instancia. El número de DB se indica en la
llamada. No está permitido acceder a los datos del DB de instancia.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SEND_PTP":
Parámetro

Declaración Tipo de da‐ Rango de valores Ajuste predeter‐
tos
minado

Descripción

REQ

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Request: activa el in‐
tercambio de datos en caso de un flanco as‐
cendente.

R

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Reset. La petición se
cancela. Transmisión bloqueada.

LADDR

Input

WORD

según CPU

W#16#03FF

Dirección E/S del submódulo que se ha de‐
finido en la configuración hardware.

DONE

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada):
● FALSE: la petición no se ha iniciado aún
o se está ejecutando.
● TRUE: la petición se ha ejecutado sin
errores.

Programación del PLC
Manual de programación y manejo, 11/2019

7587

Instrucciones
4.2 Instrucciones
Parámetro

Declaración Tipo de da‐ Rango de valores Ajuste predeter‐
tos
minado

Descripción

ERROR

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada):
petición terminada con error

STATUS

Output

WORD

W#16#0000 a
W#16#FFFF

W#16#0000

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada. Por ello,
para visualizar el estado debe copiarse el
STATUS en un área de datos libre)
STATUS tiene el significado siguiente en
función del bit ERROR:
● ERROR=FALSE:
–

STATUS tiene el valor W#16#0000:
ni advertencias ni errores

–

STATUS tiene el valor<>
W#16#0000: advertencia, STATUS
da información detallada.

● ERROR=TRUE:
hay un error, STATUS da información
detallada sobre el tipo de error.
SD_1

InOut

ANY

según CPU

0

Parámetro de transmisión:
Aquí se indican los valores siguientes:
● número del DB desde el que deben
enviarse los datos.
● número del byte de datos a partir del que
deben enviarse los datos. Valores
posibles: de 0 a 8190
P. ej.: DB 10 a partir del byte 2 ->
DB10.DBB2
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro SD_1 siempre requie‐
re que se especifiquen por completo los pa‐
rámetros de DB (ej.: P#DB13.DBX0.0 byte
100). En las CPUs S7-300 no está permitido
omitir un número de DB explícito; de lo con‐
trario se genera un aviso de error en el pro‐
grama de usuario.

LEN

InOut

INT

de 1 a 1024

1

Aquí se indica en bytes la longitud del con‐
junto de datos que debe enviarse (la longi‐
tud se indica indirectamente).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Coherencia de datos
La coherencia de datos está limitada a 206 bytes. Para la transferencia coherente de más de
206 bytes hay que tener en cuenta lo siguiente:

7588

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
No vuelva a escribir en la parte utilizada actualmente del área de transmisión SD_1 hasta que
no haya finalizado la transmisión. Esto sucede cuando el parámetro de estado DONE adopta
el valor TRUE.

RCV_PTP: Recibir datos (ASCII, 3964(R))
Descripción
La instrucción "RCV_PTP" permite recibir datos y guardarlos en un bloque de datos.
● Después de la llamada, la instrucción está lista para recibir con el valor TRUE en la entrada
de control EN_R. Es posible cancelar una transmisión en curso con el estado lógico FALSE
del parámetro EN_R. Una petición cancelada finaliza con un mensaje de error (salida
STATUS). La recepción estará desactivada mientras haya un estado lógico de FALSE en
el parámetro EN_R.
● El área de recepción se indica con RD_1 (número de DB y dirección inicial), y la longitud del
bloque de datos con LEN.
● Para que la instrucción pueda procesar la petición, hay que llamarla con R(Reset)=FALSE.
En caso de un flanco ascendente en la entrada de control R se cancela la transmisión en
curso y se pone la instrucción al estado inicial. Una petición de recepción cancelada finaliza
con un mensaje de error (salida STATUS).
● Con LADDR se indica la dirección E/S del submódulo que se ha definido en la configuración
hardware.
● Si la petición ha finalizado sin errores, NDR se pone a TRUE, y si ha finalizado con errores,
ERROR se pone a TRUE.
● En STATUS , la CPU indica el número de evento correspondiente en caso de error o
advertencia.
● NDR y ERROR/STATUS también se devuelven en caso de RESET de la instrucción
(R=TRUE) (parámetro LEN == 16#00).
En caso de producirse un error, el resultado binario BR se borra. Si la instrucción finaliza sin
errores, el resultado binario tiene el estado TRUE.
Nota
La instrucción no comprueba los parámetros; en caso de parametrización errónea la CPU
puede derivar al estado STOP.

DB de instancia
La instrucción "RCV_PTP" trabaja con un DB de instancia. El número de DB se indica en la
llamada. No está permitido acceder a los datos del DB de instancia.

Programación del PLC
Manual de programación y manejo, 11/2019

7589

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RCV_PTP":
Parámetro

Declaración

Tipo de
datos

Rango de valores Ajuste predeter‐
minado

Descripción

EN_R

Input

BOOL

TRUE/FALSE

Parámetro de control Enable to receive:

FALSE

Habilitación de recepción
R

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Reset:
La petición se cancela.

LADDR

Input

WORD

según CPU

W#16#03FF

Dirección E/S del submódulo que se ha
definido en la configuración hardware.

NDR

Output

BOOL

TRUE/FALSE

FALSE

Petición finalizada sin errores, datos apli‐
cados
● FALSE: la petición no se ha iniciado
aún o se está ejecutando.
● TRUE: la petición se ha concluido
correctamente.

ERROR

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado (el parámetro sólo
está activado durante una llamada):
petición terminada con error

STATUS

Output

WORD

W#16#0000 a
W#16#FFFF

W#16#0000

Parámetro de estado (el parámetro sólo
está activado durante una llamada. Por
ello, para visualizar el estado debe copiar‐
se el STATUS en un área de datos libre)
STATUS tiene el significado siguiente en
función del bit ERROR:
● ERROR=FALSE:
–

STATUS tiene el valor
W#16#0000:
ni advertencias ni errores

–

STATUS tiene el valor<>
W#16#0000: advertencia,
STATUS da información detallada.

● ERROR=TRUE:
hay un error, STATUS da información
detallada sobre el tipo de error.

7590

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores Ajuste predeter‐
minado

Descripción

RD_1

InOut

ANY

según CPU

Parámetro de recepción:

0

Aquí se indica lo siguiente:
● número del DB en el que se guardan
los datos recibidos.
● número del byte de datos a partir del
que deben guardarse los datos
recibidos. Valores posibles: de 0 a
8190
P. ej.: DB 20 a partir del byte 5 ->
DB20.DBB5
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro RD_1 siempre re‐
quiere que se especifiquen por completo
los parámetros de DB (ej.:
P#DB13.DBX0.0 byte 100). En las CPUs
S7-300 no está permitido omitir un número
de DB explícito; de lo contrario se genera
un aviso de error en el programa de usua‐
rio.
LEN

InOut

INT

de 0 a 1024

0

Salida de la longitud de datos (número de
bytes)

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Coherencia de datos
La coherencia de datos está limitada a 206 bytes. Para la transferencia coherente de más de
206 bytes hay que tener en cuenta lo siguiente:
No vuelva a acceder al DB de recepción hasta que no se hayan recibido los datos por completo
(NDR = TRUE). Posteriormente, bloquee el DB de recepción (EN_R = FALSE) hasta que se
hayan procesado los datos.

Programación del PLC
Manual de programación y manejo, 11/2019

7591

Instrucciones
4.2 Instrucciones

RES_RCVB: Borrar búfer de recepción (ASCII, 3964(R))
Descripción
Con la instrucción "RES_RECV" se borra todo el búfer de recepción del módulo. Todos los
telegramas guardados se rechazan. Si en el momento de llamar la instrucción "RES_RCVB"
está entrando un telegrama, se guardará.
● La petición se activa después de la llamada de la instrucción y de un flanco ascendente en
la entrada de control REQ. La petición puede durar varias llamadas (ciclos de programa).
● Para que la instrucción pueda procesar la petición, hay que llamarla con R(Reset)=FALSE.
En caso de un flanco ascendente en la entrada de control R se cancela el proceso de
borrado y se pone la instrucción al estado inicial. Una petición cancelada finaliza con un
mensaje de error (salida STATUS).
● Con LADDR se indica la dirección E/S del submódulo que se ha definido en la configuración
hardware.
● Si la petición ha finalizado sin errores, DONE se pone a TRUE, y si ha finalizado con
errores, ERROR se pone a TRUE.
● En STATUS, la CPU indica el número de evento correspondiente en caso de error o
advertencia.
● DONE y ERROR/STATUS también se devuelven en caso de RESET de la instrucción
(R=TRUE).
En caso de producirse un error, el resultado binario BR se borra. Si el bloque finaliza sin
errores, el resultado binario tiene el estado TRUE.
Nota
La instrucción no comprueba los parámetros; en caso de parametrización errónea la CPU
puede derivar al estado STOP.

DB de instancia
La instrucción "RES_RCVB" trabaja con un DB de instancia. El número de DB se indica en la
llamada. No está permitido acceder a los datos del DB de instancia.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RES_RCVB":
Parámetro

Declaración Tipo de da‐
tos

Rango de valo‐
res

Ajuste predeter‐
minado

Descripción

REQ

Input

TRUE/FALSE

FALSE

Parámetro de control Request:

BOOL

activa la petición en caso de un flanco as‐
cendente
R

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Reset:
la petición se cancela.

7592

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración Tipo de da‐
tos

Rango de valo‐
res

Ajuste predeter‐
minado

Descripción

LADDR

Input

WORD

según CPU

W#16#03FF

Dirección E/S del submódulo que se ha de‐
finido en la configuración hardware.

DONE

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada):
● FALSE: la petición no se ha iniciado aún
o se está ejecutando.
● TRUE: la petición se ha ejecutado sin
errores.

ERROR

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada):
petición terminada con error

STATUS

Output

WORD

W#16#0000 a
W#16#FFFF

W#16#0000

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada. Por ello,
para visualizar el estado debe copiarse el
STATUS en un área de datos libre)
STATUS tiene el significado siguiente en
función del bit ERROR:
● ERROR=FALSE:
–

STATUS tiene el valor W#16#0000:
ni advertencias ni errores

–

STATUS tiene el valor <>
W#16#0000: advertencia, STATUS
da información detallada.

● ERROR=TRUE:
hay un error, STATUS da información
detallada sobre el tipo de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

RK 512
SEND_RK: Enviar datos (RK 512)
Descripción
La instrucción SEND_RK permite enviar un conjunto de datos de un bloque de datos.
● El proceso de transmisión se activa después de la llamada de la instrucción y del flanco
ascendente en la entrada de control REQ.
● El área de los datos que deben enviarse se indica con SD_1 (número de DB y dirección
inicial), la longitud del conjunto de datos con LEN.
● En la instrucción se indica también el área de recepción en el interlocutor. La CPU registra
esta información en el encabezado del telegrama y la transmite al interlocutor.

Programación del PLC
Manual de programación y manejo, 11/2019

7593

Instrucciones
4.2 Instrucciones
● El destino se indica con el número de CPU R_CPU (sólo relevante en caso de
comunicación multiprocesador), el tipo de datos R_TYPE (bloques de datos (DB) y bloques
de datos ampliados (DX)), el número de bloque de datos R_DBNO y el offset R_OFFSET
en el que debe escribirse el primer byte.
● Con R_CF_BYT y R_CF_BIT se definen el byte y bit de marcas de acoplamiento en la CPU
interlocutora.
● Con el parámetro SYNC_DB se establece el DB en el que se guardarán los datos comunes
a todas las instrucciones utilizadas para la inicialización en el arranque y la sincronización.
El número de DB debe ser idéntico para todas las instrucciones utilizadas en el programa
de usuario.
● Para que la instrucción pueda procesar la petición, hay que llamarla con R(Reset)=FALSE.
En caso de un flanco ascendente en la entrada de control R se cancela el proceso de
transmisión en curso y se pone la instrucción al estado inicial. Una petición cancelada
finaliza con un mensaje de error (salida STATUS).
● Con LADDR se indica la dirección E/S del submódulo que se ha definido en la configuración
hardware.
● Si la petición ha finalizado sin errores, DONE se pone a TRUE, y si ha finalizado con
errores, ERROR se pone a TRUE.
● Si la petición se ha ejecutado con DONE = TRUE, los datos se han enviado al interlocutor
de la comunicación, que los ha acusado positivamente, y los datos se han transferido a la
CPU interlocutora.
● En STATUS, la CPU indica el número de evento correspondiente en caso de error o
advertencia.
● DONE y ERROR/STATUS también se devuelven en caso de RESET de la instrucción
(R=TRUE).
En caso de producirse un error, el resultado binario BR se borra. Si el bloque finaliza sin
errores, el resultado binario tiene el estado TRUE.
Nota
La instrucción no comprueba los parámetros; en caso de parametrización errónea la CPU
puede derivar al estado STOP.

DB de instancia
La instrucción "SEND_RK" trabaja con un DB de instancia. El número de DB se indica en la
llamada. No está permitido acceder a los datos del DB de instancia.

7594

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Particularidades de la transmisión de datos
Tenga en cuenta las particularidades siguientes al "enviar datos":
● Con RK 512 sólo es posible enviar un número par de datos. Si se indica un número impar
de datos como longitud (LEN), se transferirá un byte de relleno adicional con el valor "0" al
final de los datos.
● Con RK 512 sólo es posible indicar un offset par. Si se indica un offset impar, los datos se
guardan en el interlocutor a partir del siguiente offset par más pequeño.
Ejemplo: el offset es "7", los datos se guardan a partir del byte "6".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SEND_RK":
Parámetro

Declaración

Tipo de da‐ Rango de valo‐
tos
res

Ajuste predeter‐ Descripción
minado

SYNC_DB

Input

INT

según CPU

0

REQ

Input

BOOL

TRUE/FALSE

FALSE

Número del DB en el que se guardan los
datos comunes para la sincronización de
las instrucciones RK (longitud mínima 240
bytes).
Parámetro de control Request:
activa la petición en caso de un flanco as‐
cendente

R

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Reset:
la petición se cancela.

LADDR

Input

WORD

según CPU

W#16#03FF

Dirección E/S del submódulo que se ha
definido en la configuración hardware.

R_CPU

Input

INT

de 0 a 4

1

Número de la CPU interlocutora

R_TYPE

Input

CHAR

'D', 'X'

'D'

Tipo de dirección en la CPU interlocutora
(sólo se admiten mayúsculas)

(sólo en modo multiprocesador)

'D': bloque de datos
'X': bloque de datos avanzado
R_DBNO

Input

INT

de 0 a 255

0

Número del bloque de datos en la CPU in‐
terlocutora

R_OFFSET

Input

INT

de 0 a 510

0

Número del byte de datos en la CPU inter‐
locutora

255

Byte de marcas de acoplamiento en la
CPU interlocutora

(sólo valores pa‐
res)
R_CF_BYT

Input

INT

de 0 a 255

(255: significa: sin marcas de acoplamien‐
to)
R_CF_BIT

Input

INT

Programación del PLC
Manual de programación y manejo, 11/2019

de 0 a 7

0

Bit de marcas de acoplamiento en la CPU
interlocutora

7595

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐ Rango de valo‐
tos
res

Ajuste predeter‐ Descripción
minado

DONE

Output

BOOL

FALSE

TRUE/FALSE

Parámetro de estado (el parámetro sólo
está activado durante una llamada):
● FALSE: la petición no se ha iniciado
aún o se está ejecutando.
● TRUE: la petición se ha ejecutado sin
errores.

ERROR

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado (el parámetro sólo
está activado durante una llamada):
petición terminada con error

STATUS

Output

WORD

W#16#0000 a
W#16#FFFF

W#16#0000

Parámetro de estado (el parámetro sólo
está activado durante una llamada. Por
ello, para visualizar el estado debe copiar‐
se el STATUS en un área de datos libre)
STATUS tiene el significado siguiente en
función del bit ERROR:
● ERROR=FALSE:
–

STATUS tiene el valor
W#16#0000: ni advertencias ni
errores

–

STATUS tiene el valor<>
W#16#0000: advertencia,
STATUS da información detallada.

● ERROR=TRUE:
hay un error, STATUS da información
detallada sobre el tipo de error.
SD_1

Input

ANY

según CPU

0

Parámetro de transmisión:
Aquí se indica lo siguiente:
● número del DB desde el que deben
enviarse los datos.
● número del byte de datos a partir del
que deben enviarse los datos. Valores
posibles: de 0 a 8190
P. ej.: DB 10 a partir del byte 2 ->
DB10.DBB2
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro SD_1 siempre re‐
quiere que se especifiquen por completo
los parámetros de DB (ej.:
P#DB13.DBX0.0 byte 100). En las CPUs
S7-300 no está permitido omitir un número
de DB explícito; de lo contrario se genera
un aviso de error en el programa de usua‐
rio.

LEN

7596

Input

INT

de 1 a 1024

1

Aquí se indica en bytes la longitud del con‐
junto de datos que debe enviarse (la longi‐
tud se indica indirectamente).

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Datos del encabezado del telegrama
La tabla siguiente muestra los datos del encabezado del telegrama RK 512.
Origen en el propio sistema
de automatización S7
(CPU local)

Al destino, CPU interlocu‐ Encabezado del telegrama, bytes
tora
3/4 tipo de comando 5/6 Z-DBNR1 /
Z-Offset2

7/8 número en

Bloque de datos

Bloque de datos

AD

DB/DW3

palabras

Bloque de datos

Bloque de datos avanza‐
do

AD

DB/DW3

palabras

1

Z-DBNR: número del bloque de datos de destino

2

Z-Offset: dirección inicial de destino

3

DW: offset en palabras

Coherencia de datos
La coherencia de datos está limitada a 128 bytes. Para la transferencia de datos coherente de
más de 128 bytes hay que tener en cuenta lo siguiente:
No vuelva a escribir en la parte utilizada actualmente del área de transmisión SD_1 hasta que
no haya finalizado la transmisión. Esto sucede cuando el parámetro de estado DONE adopta
el valor TRUE.

FETCH_RK: Recoger datos (RK 512)
Descripción
La instrucción "FETCH_RK" permite recoger un conjunto de datos del interlocutor y guardar los
datos en un bloque de datos.
● El proceso de transmisión se activa después de la llamada del bloque y de un flanco
ascendente en la entrada de control REQ.
● El área en el que se guardan los datos recogidos se indica con RD_1 (número de DB y
dirección inicial), la longitud del conjunto de datos con LEN.
● En la instrucción también se indica el área a partir de la cual deben recogerse los datos del
interlocutor. La CPU registra esta información en el encabezado del telegrama RK512 y la
transmite al interlocutor.
● El área del interlocutor se indica con el número de CPU R_CPU (sólo relevante en caso de
comunicación multiprocesador), el tipo de datos R_TYPE (bloques de datos y bloques de
datos ampliados, marcas, entradas, salidas, contadores y temporizadores), el número del
bloque de datos R_DBNO (sólo relevante en bloques de datos y bloques de datos
ampliados) y el offset R_OFFSET del que debe recogerse el primer byte.

Programación del PLC
Manual de programación y manejo, 11/2019

7597

Instrucciones
4.2 Instrucciones
● Con R_CF_BYT y R_CF_BIT se definen el byte y bit de marcas de acoplamiento en la CPU
interlocutora.
● Con el parámetro SYNC_DB se establece el DB en el que se guardarán los datos comunes
a todas las instrucciones utilizadas para la inicialización en el arranque y la sincronización.
El número de DB debe ser idéntico para todas las instrucciones utilizadas en el programa
de usuario.
● Para que la instrucción pueda procesar la petición, hay que llamarla con R(Reset)=FALSE.
En caso de un flanco ascendente en la entrada de control R se cancela la transmisión en
curso y se pone la instrucción al estado inicial. Una petición cancelada finaliza con un
mensaje de error (salida STATUS).
● Con LADDR se indica la dirección E/S del submódulo que se ha definido en la configuración
hardware.
● Si la petición ha finalizado sin errores, DONE se pone a TRUE, y si ha finalizado con
errores, ERROR se pone a TRUE.
● En STATUS, la CPU indica el número de evento correspondiente en caso de error o
advertencia.
● DONE y ERROR/STATUS también se devuelven en caso de RESET de la instrucción
(R=TRUE).
En caso de producirse un error, el resultado binario BR se borra. Si la instrucción finaliza sin
errores, el resultado binario tiene el estado TRUE.
Nota
La instrucción no comprueba los parámetros; en caso de parametrización errónea la CPU
puede derivar al estado STOP. Si se recogen datos de la propia CPU, debe programarse una
instrucción "SERVE_RK (Página 7602)" en la CPU.

DB de instancia
La instrucción "FETCH_RK" trabaja con un DB de instancia. El número de DB se indica en la
llamada. No está permitido acceder a los datos del DB de instancia.

Particularidades de los bloques de datos (avanzados)
Tenga en cuenta las particularidades siguientes al "recoger datos" de bloques de datos y
bloques de datos ampliados:
● Con RK 512 sólo es posible recoger un número par de datos. Si se indica un número impar
como longitud (LEN), siempre se transmite un byte adicional. Sin embargo, en el DB de
destino se registra la cantidad correcta de datos.
● Con RK 512 sólo es posible indicar un offset par. Si se indica un offset impar, los datos se
recogen del interlocutor desde el siguiente offset par más pequeño.
Ejemplo: el offset es 7, los datos se recogen a partir del byte 6.

7598

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Particularidades en temporizadores y contadores
Si se recogen temporizadores o contadores del interlocutor, hay que tener en cuenta que para
cada temporizador y cada contador se recogen 2 bytes. Así, p. ej., si desea recoger 10
contadores, deberá indicar una longitud de 20.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "FETCH_RK".
Parámetro

Declaración

Tipo de
datos

Rango de valores Ajuste prede‐
terminado

Descripción

SYNC_DB

Input

INT

según CPU

0

Número del DB en el que se guardan los
datos comunes para la sincronización de las
instrucciones RK (longitud mínima 240
bytes).

REQ

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Request:
activa la petición en caso de un flanco as‐
cendente

R

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Reset:
la petición se cancela.

LADDR

Input

WORD

según CPU

W#16#03FF

Dirección E/S del submódulo que se ha de‐
finido en la configuración hardware.

R_CPU

Input

INT

de 0 a 4

1

N.º de la CPU interlocutora

R_TYPE

Input

CHAR

'D', 'X', 'M', 'E', 'A',
'Z', 'T'

'D'

Tipo de dirección en la CPU interlocutora

(sólo en modo multiprocesador)
● 'D': bloque de datos
● 'X': bloque de datos avanzado
● 'M': marcas
● 'E': entradas
● 'A': salidas
● 'Z': contadores
● 'T': temporizadores
R_DBNO

Input

INT

de 0 a 255

0

Número del bloque de datos en la CPU in‐
terlocutora

R_OFFSET

Input

INT

Véase la tabla:
"Parámetros del
origen de los da‐
tos (CPU interlo‐
cutora)"

0

Número del byte de datos en la CPU inter‐
locutora

R_CF_BYT

Input

INT

de 0 a 255

255

Byte de marcas de acoplamiento en la CPU
interlocutora
(255: significa: sin marcas de acoplamiento)

R_CF_BIT

Input

INT

Programación del PLC
Manual de programación y manejo, 11/2019

de 0 a 7

0

Bit de marcas de acoplamiento en la CPU
interlocutora

7599

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores Ajuste prede‐
terminado

Descripción

DONE

Output

BOOL

TRUE/FALSE

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada):

FALSE

● FALSE: la petición no se ha iniciado aún
o se está ejecutando.
● TRUE: la petición se ha ejecutado sin
errores.
ERROR

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada):
petición finalizada con errores

STATUS

Output

WORD

W#16#0000 a
W#16#FFFF

W#16#0000

Parámetro de estado (el parámetro sólo es‐
tá activado durante una llamada. Por ello,
para visualizar el estado debe copiarse el
STATUS en un área de datos libre)
STATUS tiene el significado siguiente en
función del bit ERROR:
● ERROR=FALSE:
–

STATUS tiene el valor W#16#0000:
ni advertencias ni errores

–

STATUS tiene el valor<>
W#16#0000: advertencia, STATUS
da información detallada.

● ERROR=TRUE:
hay un error, STATUS da información
detallada sobre el tipo de error.
RD_1

Input

ANY

según CPU

0

Parámetro de recepción:
Aquí se indica lo siguiente:
● número del DB en el que se guardan los
datos recogidos.
● número del byte de datos a partir del que
se guardan los datos recogidos. Valores
posibles: de 0 a 8190
P. ej.: DB 10 a partir del byte 2 ->
DB10.DBB2
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro RD_1 siempre requie‐
re que se especifiquen por completo los pa‐
rámetros de DB (ej.: P#DB13.DBX0.0 byte
100). En las CPUs S7-300 no está permitido
omitir un número de DB explícito; de lo con‐
trario se genera un aviso de error en el pro‐
grama de usuario.

LEN

Input

INT

de 1 a 1024

1

Aquí se indica la longitud del conjunto de
datos que debe recogerse en bytes (la lon‐
gitud se indica indirectamente).
Para cada temporizador y contador debe in‐
dicarse una longitud de dos bytes.

7600

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros del origen de los datos (CPU interlocutora)
La tabla siguiente muestra los tipos de datos que pueden transferirse.
El valor "R_OFFSET" está determinado por la CPU interlocutora.
Origen en la CPU interlocutora

R_TYPE

R_NO

R_OFFSET (en bytes)

Bloque de datos

'D'

0 - 255

0 - 510, sólo tienen sentido valores pares

Bloque de datos avanzado

'X'

0 - 255

0 - 510, sólo tienen sentido valores pares

Marcas

'M'

irrelevante

0 - 255

Entradas

'E'

irrelevante

0 - 255

Salidas

'A'

irrelevante

0 - 255

Contadores

'Z'

irrelevante

0 - 255

Temporizadores

'T'

irrelevante

0 - 255

Datos del encabezado del telegrama
La tabla siguiente muestra los datos del encabezado del telegrama RK 512.
Origen en la CPU in‐ Al destino, su sistema de automatiza‐
terlocutora
ción S7 (CPU local)

Encabezado del telegrama, bytes
3/4 tipo de co‐
mando

5/6 Q-DBNR1 /
Q-Offset2

7/8 número en

Bloque de datos

Bloque de datos

ED

DB/DW

Palabras

Bloque de datos
avanzado

Bloque de datos

EX

DB/DW

Palabras

Marcas

Bloque de datos

EM

Dirección de byte

Bytes

Entradas

Bloque de datos

EE

Dirección de byte

Bytes

Salidas

Bloque de datos

EA

Dirección de byte

Bytes

Contadores

Bloque de datos

EZ

Número de conta‐
dor

Palabras

Temporizadores

Bloque de datos

ET

Número de tempo‐ Palabras
rizador

1

Q-DBNR: número del bloque de datos de origen

2

Q-Offset: dirección inicial de origen

Coherencia de datos
La coherencia de datos está limitada a 128 bytes. Para la transferencia de datos coherente de
más de 128 bytes hay que tener en cuenta lo siguiente:
No vuelva a escribir en la parte utilizada actualmente del área de recepción RD_1 hasta que no
haya finalizado la transmisión. Esto sucede cuando el parámetro de estado DONE adopta el
valor TRUE.

Programación del PLC
Manual de programación y manejo, 11/2019

7601

Instrucciones
4.2 Instrucciones

SERVE_RK: Recibir y preparar datos (RK 512)
Descripción
La instrucción "SERVE_RK" se utiliza para recibir datos y ponerlos a disposición.
● Recibir datos: los datos se guardan en el área de datos especificada por el interlocutor en
el encabezado del telegrama RK 512. La llamada de la instrucción es necesaria cuando el
interlocutor de la comunicación ejecuta una petición "Enviar datos" (petición SEND).
● Poner datos a disposición: los datos se recogen del área de datos especificada por el
interlocutor en el encabezado del telegrama RK 512. La llamada de la instrucción es
necesaria cuando el interlocutor de la comunicación ejecuta una petición "Recoger datos"
(petición FETCH).
Después de la llamada, la instrucción está disponible con el valor TRUE en la entrada de
control EN_R. Es posible cancelar una transmisión en curso con el estado lógico FALSE del
parámetro EN_R. Una petición cancelada finaliza con un mensaje de error (salida STATUS).
La recepción estará desactivada mientras haya un estado lógico de FALSE en el parámetro
EN_R.
Con el parámetro "SYNC_DB" se establece el DB en el que se guardarán los datos comunes
a todas las instrucciones utilizadas para la inicialización en el arranque y la sincronización. El
número de DB debe ser idéntico para todas las instrucciones utilizadas en el programa de
usuario.
Para que la instrucción pueda procesar la petición, hay que llamarla con R(Reset)=FALSE. En
caso de un flanco ascendente en la entrada de control R se cancela la transmisión en curso y
se pone la instrucción al estado inicial. Una petición cancelada finaliza con un mensaje de error
(salida STATUS).
Con LADDR se indica la dirección E/S del submódulo que se ha definido en HW Config.
Si la petición ha finalizado sin errores, NDR se pone a TRUE, y si ha finalizado con errores,
ERROR se pone a TRUE.
Con NDR=TRUE para una llamada de la instrucción en los parámetros L_TYPE, L_DBNO y
L_OFFSET, la CPU indica dónde se guardan los datos y de dónde se recogen. Además, para
una llamada se muestran los parámetros L_CF_BYT y L_CF_BIT y la longitud LEN de la
petición en cuestión.
En STATUS, la CPU indica el número de evento correspondiente en caso de error o
advertencia.
NDR y ERROR/STATUS también se devuelven en caso de RESET de la instrucción
(R=TRUE) (parámetro LEN == 16#00).
En caso de producirse un error, el resultado binario BR se borra. Si el bloque finaliza sin
errores, el resultado binario tiene el estado TRUE.
Nota
La instrucción no comprueba los parámetros; en caso de parametrización errónea la CPU
puede derivar al estado STOP.

7602

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

DB de instancia
La instrucción "SERVE_RK" trabaja con un DB de instancia. El número de DB se indica en la
llamada. No está permitido acceder a los datos del DB de instancia.

Aplicación de las marcas de acoplamiento
Mediante una marca de acoplamiento es posible bloquear y habilitar las peticiones SEND y
FETCH del interlocutor de la comunicación. Existe la posibilidad de impedir que los datos que
todavía no se han procesado, se sobrescriban o lean.
Puede definirse una marca de acoplamiento para cada petición.
,QWHUORFXWRU
6(1'B5.
5B&)B%<7

5B&)B%,7

5B7<3( '%

5B'%12

5B2))6(7

6X&38

8WLOL]DXQELWGHPDUFDVSDUDHVFULELUHQ'%

0DUFDGHDFRSODPLHQWR
0%        

6(59(B5.

)(7&+B5.
5B&)B%<7

5B&)B%,7

5B7<3( '%

5B'%12

5B2))6(7

/RVDFFHVRVDORVGDWRV
SXHGHQEORTXHDUVH
PHGLDQWHORVELWVGHPDUFDGH
DFRSODPLHQWR758()$/6(

/B&)B%<7

/B&)B%,7

/B7<3( '%

/B'%12

/B2))6(7

$VLJQDFLµQ
ELWGH
PDUFDV
D'%

'%
'%
'%
'%
0DUFDGHDFRSODPLHQWR

8WLOL]DXQELWGHPDUFDVSDUDOHHUGH'%
0%

Programación del PLC
Manual de programación y manejo, 11/2019

7603

Instrucciones
4.2 Instrucciones

Ejemplo: SEND_RK con marca de acoplamiento:
En este ejemplo, el interlocutor de la comunicación envía datos al DB 101 en su CPU
1. Ponga la marca de acoplamiento 100.6 de la propia CPU a FALSE.
2. En la petición SEND del interlocutor, indique la marca de acoplamiento 100.6 (parámetros
R_CF_BYT, R_CF_BIT).
La marca de acoplamiento se transfiere a la propia CPU en el encabezado del telegrama
RK 512.
Antes de procesar la petición, la CPU comprueba la marca de acoplamiento indicada en el
encabezado del telegrama RK 512. La petición sólo se procesa si la marca de acoplamiento
de la propia CPU tiene el valor FALSE. Si la marca de acoplamiento tiene el valor TRUE,
en el telegrama de reacción se enviará el mensaje de error "32 hex" al interlocutor de la
comunicación.
Una vez transferidos los datos al DB101, la marca de acoplamiento 100.6 de la propia CPU
pasará de SERVE al valor TRUE y el byte y bit de marcas de acoplamiento se devolverán
en SERVE durante una llamada (si NDR =TRUE).
3. Evaluando la marca de acoplamiento en el programa de usuario (marca de acoplamiento
100.6 =TRUE) es posible saber si la petición ha finalizado y si los datos transferidos pueden
procesarse.
4. Una vez procesados los datos en el programa de usuario, se debe volver a poner la marca
de acoplamiento 100.6 a FALSE. Sólo entonces, el interlocutor acoplado podrá volver a
ejecutar la petición sin errores.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SERVE_RK".
Parámetro

Declaración

Tipo de
datos

Rango de valores Ajuste predeter‐
minado

Descripción

SYNC_DB

Input

INT

según CPU

0

Número del DB en el que se guardan los
datos comunes para la sincronización de
las instrucciones RK (longitud mínima 240
bytes).

EN_R

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Enable to receive:
petición habilitada

R

Input

BOOL

TRUE/FALSE

FALSE

Parámetro de control Reset:
la petición se cancela.

LADDR

Input

WORD

según CPU

W#16#03FF

Dirección E/S del submódulo que se ha
definido en la configuración hardware.

NDR

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado New Data Ready (el
parámetro sólo está activado durante una
llamada):
● FALSE: la petición no se ha iniciado
aún o se está ejecutando.
● TRUE: la petición se ha ejecutado
correctamente.

ERROR

Output

BOOL

TRUE/FALSE

FALSE

Parámetro de estado (el parámetro sólo
está activado durante una llamada):
petición finalizada con errores

7604

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores Ajuste predeter‐
minado

Descripción

STATUS

Output

WORD

W#16#0000 a
W#16#FFFF

Parámetro de estado (el parámetro sólo
está activado durante una llamada. Por
ello, para visualizar el estado debe copiar‐
se el STATUS en un área de datos libre)

W#16#0000

STATUS tiene el significado siguiente en
función del bit ERROR:
● ERROR=FALSE:
–

STATUS tiene el valor
W#16#0000: ni advertencias ni
errores

–

STATUS tiene el valor <>
W#16#0000: advertencia,
STATUS da información detallada.

● ERROR=TRUE:
hay un error, STATUS da información
detallada sobre el tipo de error.
L_TYPE

Output

CHAR

'D'

''

Recibir datos:
Tipo de zona de destino en la CPU local
(sólo se admiten mayúsculas):
● 'D': bloque de datos
Poner datos a disposición:
Tipo de zona de origen en la CPU local
(sólo se admiten mayúsculas):

'D', 'M', 'I', 'O', 'C',
'T',

● 'D': bloque de datos
● 'M': marcas
● 'I': entradas
● 'O': salidas
● 'C': contadores
● 'T': temporizadores
El parámetro sólo está activado durante
una llamada.

L_DBNO

Output

INT

según CPU

0

Número del bloque de datos en la CPU lo‐
cal. El parámetro sólo está activado duran‐
te una llamada.

L_OFFSET

Output

INT

0 - 510

0

Número del byte de datos en la CPU local.
El parámetro sólo está activado durante
una llamada.

L_CF_BYT

Output

INT

de 0 a 255

0

Byte de marcas de acoplamiento en la
CPU local. El parámetro sólo está activado
durante una llamada.
(255: significa: sin marcas de acoplamien‐
to)

Programación del PLC
Manual de programación y manejo, 11/2019

7605

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de
datos

Rango de valores Ajuste predeter‐
minado

Descripción

L_CF_BIT

Output

INT

de 0 a 7

0

Bit de marcas de acoplamiento en la CPU
local. El parámetro sólo está activado du‐
rante una llamada.

LEN

InOut

INT

de 0 a 1024

0

Longitud del telegrama, número en bytes
(el parámetro sólo está activado durante
una llamada)

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Coherencia
La coherencia está limitada a 128 bytes. Para la transferencia de datos coherente de más de
128 bytes hay que tener en cuenta lo siguiente:
Utilice la función de marca de acoplamiento. No vuelva a acceder a los datos hasta que éstos
no se hayan transferido por completo (evaluación de la marca de acoplamiento definida para
esta petición; la marca de acoplamiento está pendiente para una llamada en la instrucción si
NDR = TRUE). No vuelva a poner la marca de acoplamiento a FALSE hasta que no se hayan
procesado los datos.

4.2.5.8

Comunicación con iSlave/iDevice

I_GET: Leer datos de un interlocutor en la propia estación S7
Descripción
La instrucción "I_GET" permite leer datos de un interlocutor que se encuentra dentro de la
estación S7 propia. El interlocutor puede estar en el aparato central, en un aparato de
ampliación o bien descentralizado. Recuerde que tiene que haber asignado los interlocutores
descentralizados a la CPU propia. En el interlocutor no existe una instrucción correspondiente.
El proceso de recepción se activa tras llamar la instrucción con REQ=1. A continuación se
llama la instrucción hasta que la recepción de datos se indique con BUSY=0. RET_VAL
contiene entonces la longitud del bloque de datos recibido en bytes.
Asegúrese de que el área de recepción definida por el parámetro RD (en la CPU recibida)
tenga como mínimo la misma longitud que el área de lectura definida por el parámetro
VAR_ADDR (en el interlocutor). Además deben coincidir los tipos de datos en RD y
VAR_ADDR.

7606

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "I_GET":
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control "request to activate"
Consulte también: AUTOHOTSPOT

CONT

Input

BOOL

I, Q, M, D, L

Parámetro de control "continue"
Consulte también: AUTOHOTSPOT

IOID

Input

BYTE

I, Q, M, D, L, P o
constante

Identificación del área de direccionamiento del mó‐
dulo interlocutor:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse la
identificación de área de la dirección más baja. Si
las direcciones son idénticas, debe indicarse
B#16#54.

LADDR

Input

WORD

I, Q, M, D, L, P o
constante

Dirección lógica del módulo interlocutor
Con un módulo mixto debe indicarse la dirección
más baja de las dos.

VAR_ADDR

Input

ANY

I, Q, M, D

Referencia al área de la CPU interlocutora que de‐
be leerse. Seleccione un tipo de datos soportado
por el interlocutor.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá el có‐
digo de error correspondiente.
Si no se produce ningún error, RET_VAL contiene
la longitud en bytes del bloque de datos copiado en
el área de recepción RD en forma de número posi‐
tivo.

BUSY

Output

BOOL

I, Q, M, D, L

● BUSY=1: recepción todavía no finalizada.
● BUSY=0: la recepción ha finalizado, o bien no
hay ningún proceso de recepción activo.

RD

Output

ANY

I, Q, M, D

Referencia al área de recepción (receive data
area). Se permiten los siguientes tipos de datos:
BOOL, BYTE, CHAR, WORD, INT, DWORD, DINT,
REAL, DATE, TOD, TIME, S5_TIME, DA‐
TE_AND_TIME así como arrays de los tipos de da‐
tos indicados, excepto BOOL.
El área de recepción RD debe ser como mínimo tan
larga como el área de lectura VAR_ADDR en el
interlocutor. Además es necesario que los tipos de
datos coincidan en RD y VAR_ADDR.
El tamaño máximo del área de recepción es de 76
bytes.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

7607

Instrucciones
4.2 Instrucciones

Transición de estado operativo tras STOP
Si la CPU cambia al estado operativo STOP, la conexión establecida por "I_GET" se deshace.
El tipo de la llamada realizada a continuación determina si los datos ya recibidos, que se
encuentran en una memoria intermedia del sistema operativo, se pierden o no:
● Con un rearranque (no con S7-300 ni S7-400H), estos datos se copian en el área definida
por RD.
● En un rearranque completo (en caliente) o arranque en frío, los datos se rechazan.

Transición de estado operativo del interlocutor a STOP
Un cambio de la CPU del interlocutor al estado operativo STOP no tiene efecto alguno sobre
la transmisión con "I_GET": Los datos también se leen en el estado operativo STOP.

Coherencia de datos
Los datos se reciben con coherencia.

Parámetro RET_VAL
Consulte también:
● AUTOHOTSPOT
● Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

I_PUT: Escribir datos de un interlocutor en la propia estación S7
Descripción
La instrucción "I_PUT" permite escribir datos en un interlocutor que se encuentra dentro de la
estación S7 propia. El interlocutor puede estar en el aparato central, en un aparato de
ampliación o bien descentralizado. Recuerde que tiene que haber asignado los interlocutores
descentralizados a la CPU propia. En el interlocutor no existe una instrucción correspondiente.
El proceso de transmisión se produce tras la llamada de la instrucción con nivel 1 en la entrada
de control REQ.
Asegúrese de que el área de transmisión definida por el parámetro SD (en la CPU emisora)
tenga la misma longitud que el área de recepción definida por el parámetro VAR_ADDR (en el
interlocutor). Además deben coincidir los tipos de datos en SD y VAR_ADDR.

7608

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "I_PUT":
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control "request to activate"
Consulte también: AUTOHOTSPOT

CONT

Input

BOOL

I, Q, M, D, L

Parámetro de control "continue"
Consulte también: AUTOHOTSPOT

IOID

Input

BYTE

I, Q, M, D, L, P o cons‐ Identificación del área de direccionamiento del
tante
módulo interlocutor:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse la
identificación de área de la dirección más baja. Si
las direcciones son idénticas, debe indicarse
B#16#54.

LADDR

Input

WORD

I, Q, M, D, L, P o cons‐ Dirección lógica del módulo interlocutor. Con un
tante
módulo mixto debe indicarse la dirección más ba‐
ja de las dos.

VAR_ADDR

Input

ANY

I, Q, M, D, L

Referencia al área de la CPU interlocutora en la
que debe escribirse. Seleccione un tipo de datos
soportado por el interlocutor.

SD

Input

ANY

I, Q, M, D

Referencia al área de la CPU propia que contiene
los datos que deben enviarse. Se permiten los
siguientes tipos de datos: BOOL, BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE, TOD,
TIME, S5TIME, DATE_AND_TIME así como
arrays de los tipos de datos indicados, excepto
BOOL.
SD debe tener la misma longitud que el paráme‐
tro VAR_ADDR del interlocutor. Además es ne‐
cesario que los tipos de datos coincidan en SD y
VAR_ADDR.
El tamaño máximo del área de transmisión es de
76 bytes.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá el
código de error correspondiente.

BUSY

Output

BOOL

I, Q, M, D, L

● BUSY=1: la transmisión todavía no ha
finalizado.
● BUSY=0: la transmisión ha finalizado, o bien
no hay ningún proceso de transmisión activo.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

7609

Instrucciones
4.2 Instrucciones

Transición de estado operativo tras STOP
Si la CPU cambia al estado operativo STOP, la conexión establecida por "I_PUT" se deshace.
Ya no es posible enviar los datos. Si los datos enviados ya estaban copiados en el búfer interno
en el momento de la transición de estado operativo, el contenido del búfer se rechaza.

Transición de estado operativo del interlocutor a STOP
Un cambio de la CPU del interlocutor al estado operativo STOP no tiene efecto alguno sobre
la transmisión de datos con "I_PUT". Los datos enviados se escriben de todos modos.

Coherencia de datos
Los datos se envían con coherencia.

Parámetro RET_VAL
Consulte también:
● AUTOHOTSPOT
● Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

I_ABORT: Deshacer conexión con interlocutor en la propia estación S7
Descripción
La instrucción "I_ABORT" deshace una conexión con un interlocutor dentro de la estación S7
propia que se había establecido con "I_GET (Página 7606)" o "I_PUT (Página 7608)". Si la
petición correspondiente a "I_GET (Página 7606)" o "I_PUT (Página 7608)" ha finalizado
(BUSY = 0), tras la llamada de "I_ABORT" los recursos de conexión ocupados para dicha
petición se liberan de nuevo en ambos lados.
Si la petición correspondiente a "I_GET (Página 7606)" o "I_PUT (Página 7608)" no ha
finalizado (BUSY = 1), después de interrumpirse la conexión el propio usuario debe volver a
llamar la instrucción correspondiente con REQ = 0 y CONT = 0 y esperar a BUSY = 0. Sólo así
quedarán liberados todos los recursos de conexión ocupados.
"I_ABORT" sólo puede llamarse en el lado en el que se ejecuta "I_PUT (Página 7608)" o
"I_GET (Página 7606)" (es decir, en el lado del cliente).
La interrupción de la conexión se activa tras la llamada de la instrucción con REQ=1.

7610

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "I_ABORT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control "request to activate"
Consulte también: AUTOHOTSPOT

IOID

Input

BYTE

I, Q, M, D, L, P o
constante

Identificación del área de direccionamiento del
módulo interlocutor:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse la
identificación de área de la dirección más baja. Si
las direcciones son idénticas, debe indicarse
B#16#54.

LADDR

Input

WORD

I, Q, M, D, L, P o
constante

Dirección lógica del módulo interlocutor. Con un
módulo mixto debe indicarse la dirección más
baja de las dos.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá el
código de error correspondiente.

BUSY

Output

BOOL

I, Q, M, D, L

● BUSY=1: la interrupción de la conexión
todavía no se ha finalizado.
● BUSY=0: la interrupción de la conexión ha
finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Transición de estado operativo tras STOP
Si la CPU cambia al estado operativo STOP, cualquier interrupción iniciada con "I_ABORT"
finaliza.

Transición de estado operativo del interlocutor a STOP
Un cambio de la CPU del interlocutor al estado operativo STOP no tiene efecto alguno sobre
la interrupción de la conexión con "I_ABORT": La conexión se deshace.

Parámetro RET_VAL
Consulte también:
● AUTOHOTSPOT
● Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)
Programación del PLC
Manual de programación y manejo, 11/2019

7611

Instrucciones
4.2 Instrucciones

4.2.5.9

PROFINET CBA

Información sobre PN_IN, PN_OUT y PN_DP

Nota
El sistema operativo actualiza de forma estándar tanto el componente PROFINET CBA como
las interconexiones DP en el punto de control del ciclo. No obstante, en caso de haber
desconectado estas actualizaciones automáticas en la configuración (p. ej. para poder influir
mejor en el comportamiento en el tiempo de la CPU), tendrá que realizar las actualizaciones
personalmente. Para ello, llame las instrucciones "PN_IN (Página 7614)", "PN_OUT
(Página 7615)" y "PN_DP (Página 7616)" en momentos adecuados. En la configuración, las
actualizaciones indicadas sólo pueden desactivarse conjuntamente.

Memoria sombra
El DB interfaz es la interfaz con el programa de usuario del componente PROFINET CBA. Para
garantizar que sus entradas y salidas sean coherentes durante la ejecución de las partes
correspondientes del programa de usuario, para cada DB interfaz existe un área de memoria
de idéntica estructura gestionada por el sistema operativo, que se conoce como "memoria
sombra". En el programa de usuario sólo es posible acceder al DB interfaz, mientras que otros
componentes PROFINET CBA (externos) sólo pueden acceder a la memoria sombra. De este
modo se excluye la posibilidad de un conflicto de acceso a las entradas y salidas del DB
interfaz.

Actualización del componente PROFINET CBA
De la realización arriba descrita de la coherencia de datos mediante una memoria sombra se
deriva que la actualización de los componentes PROFINET CBA se compone de las siguientes
acciones:
● Copia de las entradas de la memoria sombra en las entradas del DB interfaz antes de la
ejecución del programa correspondiente al componente PROFINET CBA
● Copia de las salidas del DB interfaz en las salidas de la memoria sombra tras la ejecución
del programa correspondiente al componente PROFINET CBA
La actualización del componente PROFINET CBA se ejecuta en CPUs con interfaz
PROFINET integrada, ya sea por orden del sistema operativo o de las instrucciones "PN_IN
(Página 7614)" y "PN_OUT (Página 7615)" (según se haya configurado al crear el componente
PROFINET CBA). En la siguiente figura se representa esquemáticamente la actualización con
las instrucciones "PN_IN (Página 7614)" y "PN_OUT (Página 7615)".

7612

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
'%LQWHUID]
LQWHUID]GHOSURJUDPDGHXVXDULR
,1

287
31B,1

0HPRULDVRPEUD
LQWHUID]352),1(7
31B287

,1

287

La actualización por parte del sistema siempre tiene lugar en el punto de control del ciclo.
Si por el contrario, las actualizaciones se llevan a cabo por orden de las instrucciones "PN_IN
(Página 7614)" y "PN_OUT (Página 7615)", llame "PN_IN (Página 7614)" al principio del OB en
el que se encuentra el programa correspondiente al componente PROFINET CBA, y "PN_OUT
(Página 7615)" al final de este OB. Este comportamiento se representa en la siguiente imagen
a partir del ejemplo del OB 30.
/ODPDGDGH31B,1

/ODPDGDGH31B287

2%

2%

2%
W

Programación del PLC
Manual de programación y manejo, 11/2019

7613

Instrucciones
4.2 Instrucciones

Nota
(varios DB interfaz PROFINET en un dispositivo):
Con componentes multifunción existe la posibilidad de actualizar todos los DBs interfaz con
una petición (DBNO=0) (un proceso similar a la actualización en el punto de control del ciclo,
disparado por instrucción). Si se produce un error durante la actualización de un DB interfaz,
la actualización de los DBs restantes continúa. Un RET_VAL negativo se refiere a uno de los
DBs interfaz actualizados.

Actualización de las interconexiones DP
Las interconexiones DP son actualizadas por el sistema operativo o por la instrucción "PN_DP
(Página 7616)", según se haya configurado al crear el componente PROFINET CBA.

PN_IN: Actualizar entradas de la interfaz del programa de usuario
Descripción
La instrucción "PN_IN" copia los datos de entrada recibidos en PROFINET CBA desde la
memoria sombra del componente PROFINET CBA al DB interfaz correspondiente. Una vez
finalizada la instrucción, los datos de entrada actuales quedan a disposición de la aplicación.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "PN_IN":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DBNO

Input

WORD

I, Q, M, D, L o cons‐
tante

N.º del DB interfaz (DBNO=0: Actualización de
todos los DBs interfaz PROFINET CBA)

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de
error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8001

La configuración de PROFINET CBA no existe o no es válida.

8002

El n.º de DB no concuerda con la configuración del componente.

8004

El n.º de DB concuerda con la configuración del componente, pero el DB no está cargado.

7614

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de
error

Explicación

(W#16#...)
8005

El DB interfaz se ha compilado con la palabra clave UNLINKED, de modo que sólo se encuentra en la
memoria de carga, pero no en la de trabajo.

8006

El DB interfaz está protegido contra escritura en la CPU.

80B1

Error de longitud al leer o escribir. La configuración del componente no concuerda con el DB cargado.

8xyy

Información de error general
Véase también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

PN_OUT: Actualizar salidas de la interfaz del programa de usuario
Descripción
La instrucción "PN_OUT" copia los datos de salida generados en la aplicación desde el DB
interfaz del componente PROFINET CBA a la memoria sombra correspondiente. Una vez
finalizada la instrucción, los datos de salida actuales quedan disponibles para otros
componentes PROFINET CBA.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "PN_OUT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DBNO

Input

WORD

I, Q, M, D, L o constante N.º del DB interfaz (DBNO=0: Actualización de
todos los DBs interfaz PROFINET)

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de
error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8001

La configuración de PROFINET CBA no existe o no es válida.

8002

El n.º de DB no concuerda con la configuración del componente.

8004

El n.º de DB concuerda con la configuración del componente, pero el DB no está cargado.

8005

El DB interfaz se ha compilado con la palabra clave UNLINKED, de modo que sólo se encuentra en la
memoria de carga, pero no en la de trabajo.

8006

El DB interfaz está protegido contra escritura en la CPU.

Programación del PLC
Manual de programación y manejo, 11/2019

7615

Instrucciones
4.2 Instrucciones
Código de
error

Explicación

(W#16#...)
80B1

Error de longitud al leer o escribir. La configuración del componente no concuerda con el DB cargado.

8xyy

Información de error general
Véase también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

PN_DP: Actualizar interconexiones DP
Descripción
Con la instrucción "PN_DP" se actualizan:
● las interconexiones entre componentes PROFINET CBA en el PROFIBUS local y
● las interconexiones con transmisión cíclica entre componentes PROFINET CBA en el
PROFIBUS local y componentes PROFINET CBA externos. Estas interconexiones
abarcan varias redes (Industrial Ethernet y PROFIBUS DP).

Funcionamiento
"PN_DP" es una instrucción asíncrona, de modo que la ejecución puede prolongarse a lo largo
de varias llamadas. Para iniciar la actualización de las interconexiones DP, llame la instrucción
"PN_DP" con REQ= 1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "PN_DP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ=1: actualización de las interconexio‐
nes DP lanzada

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución
de la instrucción, el valor de respuesta con‐
tendrá un código de error.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY=1:
La actualización de las interconexiones DP
aún no ha finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

7616

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de
error

Explicación

(W#16#...)
0000

La petición se ha ejecutado sin errores.

7000

Primera llamada con REQ=0. No se lanza la actualización de las interconexiones DP. BUSY tiene el valor "0".

7001

(sólo relevante para S7-400:) Primera llamada con REQ=1. BUSY tiene el valor "1".

7002

(sólo relevante para S7-400:) Llamada intermedia (REQ irrelevante). La actualización de las interconexiones
DP aún no ha finalizado. BUSY tiene el valor "1".

8001

La configuración de PROFINET CBA no existe o no es válida.

8095

Ha lanzado otra actualización de las interconexiones DP en una clase de prioridad superior. Sin embargo,
todavía se está procesando la actualización en la clase de prioridad menor (por el sistema operativo o un
procesamiento "PN_DP").

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

4.2.5.10

Comunicación MPI

X_SEND: Enviar datos a un interlocutor fuera de la propia estación S7
Descripción
La instrucción "X_SEND" permite enviar datos a un interlocutor fuera de la estación S7 propia.
La recepción de datos en el interlocutor se efectúa a través de la instrucción "X_RCV
(Página 7618)". La transmisión inicia tras la llamada con REQ=1.
Asegúrese de que el área de transmisión definida por el parámetro SD (en la CPU emisora) sea
menor o igual que el área de recepción definida por el parámetro RD (en el interlocutor). Si SD
es del tipo de datos BOOL, RD también tiene que ser del tipo de datos BOOL.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "X_SEND":
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control "request to activate"
Consulte también: AUTOHOTSPOT

CONT

Input

BOOL

I, Q, M, D, L

Parámetro de control "continue"
Consulte también: AUTOHOTSPOT

DEST_ID

Input

WORD

I, Q, M, D, L o constan‐ Parámetro de direccionamiento "destination ID".
te
Contiene la dirección MPI configurada del inter‐
locutor.

REQ_ID

Input

DWORD

I, Q, M, D, L o constan‐ Identificación de la petición para identificar los
te
datos en el interlocutor.

Programación del PLC
Manual de programación y manejo, 11/2019

7617

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

SD

Input

ANY

I, Q, M, D

Referencia al área de transmisión. Se permiten
los siguientes tipos de datos: BOOL, BYTE,
CHAR, WORD, INT, DWORD, DINT, REAL, DA‐
TE, TOD, TIME, S5TIME, DATE_AND_TIME, así
como matrices de los tipos de datos indicados,
excepto BOOL.
El tamaño máximo del área de transmisión es de
76 bytes.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá el
código de error correspondiente.

BUSY

Output

BOOL

I, Q, M, D, L

● BUSY=1: la transmisión todavía no ha
finalizado.
● BUSY=0: la transmisión ha finalizado, o bien
no hay ningún proceso de transmisión activo.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Coherencia de datos
Los datos se envían con coherencia.

Parámetro RET_VAL
Consulte también:
● AUTOHOTSPOT
● Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

X_RCV: Recibir datos de un interlocutor fuera de la propia estación S7
Descripción
Con la instrucción "X_RCV" se reciben datos enviados por uno o más interlocutores fuera de
la estación S7 propia con la instrucción "X_SEND (Página 7617)".

7618

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Con la instrucción "X_RCV":
● se puede determinar si existen datos enviados en ese momento. Si es así, el sistema
operativo los habrá dispuesto en una cola de espera interna.
● se puede copiar el bloque de datos más antiguo de la cola de espera en un área de
recepción definida por el usuario.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "X_RCV":
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

EN_DT

Input

BOOL

I, Q, M, D, L

Parámetro de control "enable data transfer". Con
el valor 0 se comprueba si existe como mínimo un
bloque de datos. Con el valor "1" el bloque de
datos más antiguo de la cola de espera se copia
en el área de la memoria de trabajo especificada
por el usuario en RD.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá el có‐
digo de error correspondiente. Si no se produce
ningún error, RET_VAL contiene
● con EN_DT=0/1 y NDA=0:W#16#7000. En
este caso no hay ningún bloque de datos en la
cola de espera.
● con EN_DT=0 y NDA=1 la longitud del bloque
de datos más antiguo registrado en la cola de
espera en bytes en forma de número positivo.
● con EN_DT=1 y NDA=1 la longitud del bloque
de datos copiado en el área de recepción RD
en bytes en forma de número positivo.

REQ_ID

Output

DWORD

Programación del PLC
Manual de programación y manejo, 11/2019

I, Q, M, D, L

Identificación de petición de la instrucción
"X_SEND (Página 7617)" cuyos datos enviados
se encuentran en primer lugar en la cola de es‐
pera, es decir, los datos más antiguos de la cola.
Si no hay ningún bloque de datos en la cola de
espera, REQ_ID tiene el valor "0".

7619

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

NDA

Output

BOOL

I, Q, M, D, L

Parámetro de estado "new data arrived".
NDA=0:
● En la cola de espera no hay ningún bloque de
datos.
NDA=1:
● En la cola de espera hay como mínimo un
bloque de datos. (Llamada de "X_RCV" con
EN_DT=0).
● El bloque de datos más antiguo de la cola de
espera se ha copiado en el programa de
usuario (llamada de "X_RCV" con EN_DT=1).

RD

Output

ANY

I, Q, M, D

Referencia al área de recepción (receive data
area). Se permiten los siguientes tipos de datos:
BOOL, BYTE, CHAR, WORD, INT, DWORD,
DINT, REAL, DATE, TOD, TIME, S5_TIME, DA‐
TE_AND_TIME así como matrices de los tipos de
datos indicados, excepto BOOL.
Para rechazar el bloque de datos más antiguo de
la cola de espera, asigne a RD el valor NIL.
El tamaño máximo del área de recepción es de 76
bytes.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Indicar la recepción de datos con EN_DT=0
En cuanto se han recibido los datos de un interlocutor, el sistema operativo los dispone en la
lista de espera por orden de recepción.

7620

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Para comprobar si existe como mínimo un bloque de datos, llame "X_RCV" con EN_DT=0 y
evalúe el parámetro de salida NDA:
● NDA=0 significa que no hay ningún bloque de datos registrado en la cola de espera.
REQ_ID es irrelevante, RET_VAL contiene W#16#7000.
● NDA=1 significa que en la cola de espera hay como mínimo un bloque de datos listo para
ser recogido.
En este caso, evalúe también los parámetros de salida RET_VAL y, si procede, REQ_ID.
RET_VAL contiene la longitud del bloque de datos en bytes, REQ_ID la identificación de
petición del bloque de transmisión. Si en la cola de espera hay varios bloques de datos,
REQ_ID y RET_VAL corresponden al último bloque de la cola.
ರ;B5&9ರ


(1'75(4,'

5HFXUVRVGHUHFHSFLµQ

1'$
5'

5HFLELUGDWRVW
&RODGHHVSHUD
5HFLELUGDWRVW

W
W

W

Aplicar datos en el área de recepción con EN_DT=1
Si se llama "X_RCV" con EN_DT=1, el bloque de datos más antiguo de la cola de espera se
copia en el área de la memoria de trabajo especificada por RD. RD debe ser mayor o igual que
el área de transmisión definida por el parámetro SD de la instrucción correspondiente
"X_SEND (Página 7617)". Si el parámetro de entrada correspondiente SD es del tipo de datos
BOOL, RD también tiene que ser del tipo de datos BOOL. Para depositar los datos recibidos
en diferentes áreas, determine REQ_ID (llamada de instrucción con EN_DT=0) y en la llamada
siguiente (con EN_DT=1) seleccione RD convenientemente. Si se produjo un error durante el
proceso de copia, en RET_VAL se indica la longitud del bloque de datos copiado en bytes, y
se devuelve un acuse positivo al emisor.
&RODGHHVSHUD

7UDQVIHULUGDWRV
ರ;B5&9ರ


(1B'75(4B,'
1'$
5'

Programación del PLC
Manual de programación y manejo, 11/2019

UHDGHUHFHSFLµQ

7621

Instrucciones
4.2 Instrucciones

Rechazar datos
Si no desea aplicar los datos, asigne a RD el valor NIL. En este caso, el emisor recibe un acuse
negativo (RET_VAL de la instrucción correspondiente "X_SEND (Página 7617)" tiene el valor
W#16#80B8), y en RET_VAL de la instrucción "X_RCV" se registra "0".

Coherencia de datos
Tras la llamada con EN_DT=1 y RETVAL=W#16#00xy hay nuevos datos en el área de
recepción RD. Otra llamada del bloque puede sobrescribir estos datos. Para impedirlo, no
vuelva a llamar "X_RCV" con la misma área de recepción RD antes de haber evaluado los
datos recibidos.

Transición de estado operativo tras STOP
En caso de transición al estado operativo STOP
● todas las nuevas peticiones entrantes se acusan negativamente.
● rige lo siguiente para las nuevas peticiones: todas las peticiones registradas en la cola de
espera de recepción se acusan negativamente.
– Si a continuación se produce un rearranque completo (en caliente) o arranque en frío se
rechazan todos los bloques de datos.
– Si a continuación se produce un rearranque (no con S7-300 ni S7-400H), en el programa
de usuario se aplica el bloque de datos correspondiente a la petición más antigua,
siempre que se haya consultado antes de la transición al estado operativo STOP
(llamada de "X_RCV" con EN_DT=0). De lo contrario se rechaza.
Todos los bloques de datos restantes se rechazan.

Interrupción de la conexión
Si se cancela una conexión y en la cola de espera de recepción ya hay registrada una petición
que pertenece a dicha conexión, la petición se rechaza.
Excepción: Si dicha petición es la más antigua de la cola de espera y ya la ha reconocido con
la llamada de "X_RCV" con EN_DT=0, se puede aplicar en el área de recepción con EN_DT=1.

Parámetro RET_VAL
Consulte también:
● AUTOHOTSPOT
● Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

X_GET: Leer datos de un interlocutor fuera de la propia estación S7
Descripción
La instrucción "X_GET" permite leer datos de un interlocutor que se encuentra fuera de la
estación S7 propia. En el interlocutor no existe una instrucción correspondiente.

7622

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La activación del proceso de lectura se produce tras la llamada de la instrucción con REQ=1.
A continuación se llama "X_GET" hasta que la recepción de datos se indique con BUSY=0.
RET_VAL contiene entonces la longitud del bloque de datos recibido en bytes.
Asegúrese de que el área de recepción definida por el parámetro RD (en la CPU recibida)
tenga como mínimo la misma longitud que el área de lectura definida por el parámetro
VAR_ADDR (en el interlocutor). Además deben coincidir los tipos de datos en RD y
VAR_ADDR.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "X_GET":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control "request to activate"

CONT

Input

BOOL

I, Q, M, D, L

Parámetro de control "continue"

DEST_ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Parámetro de direccionamiento "destination
ID". Contiene la dirección MPI del interlocutor.
Dicha dirección ha sido configurada previa‐
mente por el usuario.

VAR_ADDR

Input

ANY

I, Q, M, D

Referencia al área de la CPU interlocutora que
debe leerse. Seleccione un tipo de datos so‐
portado por el interlocutor.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
el código de error correspondiente.

Consulte también: AUTOHOTSPOT
Consulte también: AUTOHOTSPOT

Si no se produce ningún error, RET_VAL con‐
tiene la longitud en bytes del bloque de datos
copiado en el área de recepción RD en forma
de número positivo.
BUSY

Output

BOOL

I, Q, M, D, L

● BUSY=1: recepción todavía no finalizada.
● BUSY=0: la recepción ha finalizado, o bien
no hay ningún proceso de recepción activo.

RD

Output

ANY

I, Q, M, D

Referencia al área de recepción (receive data
area). Se permiten los siguientes tipos de da‐
tos: BOOL, BYTE, CHAR, WORD, INT,
DWORD, DINT, REAL, DATE, TOD, TIME,
S5_TIME, DATE_AND_TIME así como matri‐
ces de los tipos de datos indicados, excepto
BOOL.
El área de recepción RD debe ser como míni‐
mo tan larga como el área de lectura
VAR_ADDR en el interlocutor. Además es ne‐
cesario que los tipos de datos coincidan en RD
y VAR_ADDR.
El tamaño máximo del área de recepción es de
76 bytes.

Programación del PLC
Manual de programación y manejo, 11/2019

7623

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Transición de estado operativo tras STOP
Si la CPU cambia al estado operativo STOP, la conexión establecida por "X_GET" se deshace.
El tipo de la llamada realizada a continuación determina si los datos ya recibidos, que se
encuentran en una memoria intermedia del sistema operativo, se pierden o no:
● Con un rearranque (no con S7-300 ni S7-400H), estos datos se copian en el área definida
por RD.
● En un rearranque completo (en caliente) o arranque en frío, los datos se rechazan.

Transición de estado operativo del interlocutor a STOP
Un cambio de la CPU del interlocutor al estado operativo STOP no tiene efecto alguno sobre
la transmisión con "X_GET": Los datos también se leen en el estado operativo STOP.

Coherencia de datos
Los datos se reciben con coherencia.

Parámetro RET_VAL
Consulte también:
● AUTOHOTSPOT
● Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

X_PUT: Escribir datos en un interlocutor fuera de la propia estación S7
Descripción
La instrucción "X_PUT" permite escribir datos en un interlocutor que se encuentra fuera de la
estación S7 propia. En el interlocutor no existe una instrucción correspondiente.
La activación del proceso de escritura se produce tras la llamada de la instrucción con REQ=1.
A continuación se llama "X_PUT" hasta que la recepción de datos se indique con BUSY=0.
Asegúrese de que el área de transmisión definida por el parámetro SD (en la CPU emisora)
tenga la misma longitud que el área de recepción definida por el parámetro VAR_ADDR (en el
interlocutor). Además deben coincidir los tipos de datos en SD y VAR_ADDR.

7624

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "X_PUT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control "request to activate"
Consulte también: AUTOHOTSPOT

CONT

Input

BOOL

I, Q, M, D, L

Parámetro de control "continue"
Consulte también: AUTOHOTSPOT.

DEST_ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Parámetro de direccionamiento "destination ID".
Contiene la dirección MPI del interlocutor. Dicha
dirección ha sido configurada previamente por el
usuario.

VAR_ADDR

Input

ANY

I, Q, M, D

Referencia al área de la CPU interlocutora en la
que debe escribirse. Seleccione un tipo de datos
soportado por el interlocutor.

SD

Input

ANY

I, Q, M, D

Referencia al área de la CPU propia que contie‐
ne los datos que deben enviarse. Se permiten los
siguientes tipos de datos: BOOL, BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME,S5_TIME, DATE_AND_TIME así co‐
mo matrices de los tipos de datos indicados, ex‐
cepto BOOL.
SD debe tener la misma longitud que el paráme‐
tro VAR_ADDR del interlocutor. Además es ne‐
cesario que los tipos de datos coincidan en SD y
VAR_ADDR.
El tamaño máximo del área de transmisión es de
76 bytes.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá el
código de error correspondiente.

BUSY

Output

BOOL

I, Q, M, D, L

● BUSY=1: la transmisión todavía no ha
finalizado.
● BUSY=0: la transmisión ha finalizado, o bien
no hay ningún proceso de transmisión activo.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Transición de estado operativo tras STOP
Si la CPU cambia al estado operativo STOP, la conexión establecida por "X_PUT" se deshace.
Ya no es posible enviar los datos. Si los datos enviados ya estaban copiados en el búfer interno
en el momento de la transición de estado operativo, el contenido del búfer se rechaza.

Transición de estado operativo del interlocutor a STOP
Un cambio de la CPU del interlocutor al estado operativo STOP no tiene efecto alguno sobre
la transmisión con "X_PUT": Los datos enviados se escriben de todos modos.

Programación del PLC
Manual de programación y manejo, 11/2019

7625

Instrucciones
4.2 Instrucciones

Coherencia de datos
Los datos se envían con coherencia.

Parámetro RET_VAL
Consulte también:
● AUTOHOTSPOT
● Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

X_ABORT: Deshacer conexión con un interlocutor fuera de la propia estación S7
Descripción
La instrucción "X_ABORT" deshace la conexión con una estación S7 fuera de la estación S7
propia, que se había establecido con las instrucciones "X_SEND (Página 7617)", "X_GET
(Página 7622)" o "X_PUT (Página 7624)".
● Si la petición correspondiente a "X_SEND (Página 7617)", "X_GET (Página 7622)" o
"X_PUT (Página 7624)" ha finalizado (BUSY=0), tras la llamada de la instrucción
"X_ABORT" los recursos ocupados para ella se liberan de nuevo en ambos lados.
● Si la petición correspondiente a "X_SEND (Página 7617)", "X_GET (Página 7622)" o
"X_PUT (Página 7624)" no ha finalizado (BUSY=1), una vez interrumpida la conexión el
propio usuario debe volver a llamar la instrucción correspondiente con REQ=0 y CONT=0
y esperar a BUSY=0. Sólo así quedarán liberados todos los recursos de conexión
ocupados.
"X_ABORT" sólo puede llamarse en el lado en el que se está ejecutando "X_SEND
(Página 7617)", "X_PUT (Página 7624)" o "X_GET (Página 7622)". La interrupción de la
conexión se activa tras la llamada de la instrucción con REQ=1.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "X_ABORT":
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control "request to activate"
Consulte también: AUTOHOTSPOT

DEST_ID

7626

Input

WORD

I, Q, M, D, L o constan‐ Parámetro de direccionamiento "destination ID".
te
Contiene la dirección MPI del interlocutor. Dicha
dirección ha sido configurada previamente por el
usuario.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá el
código de error correspondiente.

BUSY

Output

BOOL

I, Q, M, D, L

● BUSY=1: la interrupción de la conexión
todavía no se ha finalizado.
● BUSY=0: la interrupción de la conexión ha
finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Transición de estado operativo tras STOP
Si la CPU cambia al estado operativo STOP, cualquier interrupción iniciada con "X_ABORT"
finaliza.

Transición de estado operativo del interlocutor a STOP
Un cambio de la CPU del interlocutor al estado operativo STOP no tiene efecto alguno sobre
la interrupción de la conexión con "X_ABORT": La conexión se deshace.

Parámetro RET_VAL
Consulte también:
● AUTOHOTSPOT
● Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

Programación del PLC
Manual de programación y manejo, 11/2019

7627

Instrucciones
4.2 Instrucciones

4.2.5.11

TeleService

PG_DIAL: Establecer una conexión remota con una PG/un PC
Descripción de PG_DIAL
Descripción
La instrucción "PG_DIAL" transmite un número de teléfono y una ID de evento a un TS Adapter.
El TS Adapter establece una conexión remota con una programadora o un PC con el número
de teléfono indicado. La ID de evento se transmite a la programadora o el PC y se transfiere
a una aplicación en espera.
Si la ID de evento (parámetro EVENT_ID (Página 7630)) de la aplicación se transfiere
correctamente, el TS Adapter recibe un acuse, que se transmite a la instrucción "PG_DIAL". A
continuación finaliza la ejecución de "PG_DIAL" y el estado se transmite a la parte que llama
"PG_DIAL". La aplicación de la programadora o el PC es responsable de deshacer la conexión
remota.
Si se produce un error durante la ejecución, que provoca su interrupción, el código de error se
transmite a la parte que llama la instrucción "PG_DIAL". El TS Adapter deshace cualquier
conexión remota que pueda haber establecida.

Llamada de "PG_DIAL"
La instrucción "PG_DIAL" puede llamarse cíclicamente o en un programa controlado por
tiempo. En la llamada de "PG_DIAL" es imprescindible indicar un DB de instancia.
Para procesar una función de bloque son necesarias varias llamadas de "PG_DIAL". Por ello,
la llamada de "PG_DIAL" en un "bucle de espera" no es conveniente. El final de la función de
bloque se indica con BUSY = 0.

Interrupción de la conexión
Si la CPU pasa al estado operativo STOP mientras "PG_DIAL" está activa, la conexión con el
TS Adapter se deshace.
La conexión con el TS Adapter también se pierde cuando en el bus MPI se producen
problemas de comunicación graves o, por ejemplo, si la CPU se desconecta. En estos casos
el TS Adapter no rechaza el número de teléfono y la ID de evento que ya le habían sido
transmitidos. El TS Adapter establece la conexión remota con la programadora o el PC y
transmite la ID de evento. Sin embargo, el TS Adapter rechaza el acuse transmitido por la
programadora o el PC.
Si un programa de usuario intenta establecer una conexión remota mientras el TS Adapter se
encuentra en el estado arriba descrito, "PG_DIAL" finaliza con el valor de respuesta
W#16#B10A. El programa de usuario puede repetir la llamada de una conexión remota más

7628

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
adelante. El valor de retorno W#16#B10A se obtiene también cuando varias CPUs intentan
establecer una conexión remota simultáneamente a través del mismo TS Adapter.
ATENCIÓN
Cambiar programas de usuario
Las partes del programa de usuario con efecto directo sobre llamadas de "PG_DIAL" sólo
pueden modificarse con la CPU en el estado operativo STOP. Esto se refiere en especial al
borrado e intercambio de bloques de programa que contienen llamadas de "PG_DIAL". En
caso de incumplimiento, es posible que los recursos de conexión permanezcan ocupados. El
sistema de automatización puede pasar a un estado no definido con las instrucciones de
comunicación para conexiones S7 no configuradas. Una vez transmitidos los cambios es
necesario ejecutar un rearranque completo (en caliente) o un arranque en frío de la CPU.

Coherencia de datos
Los parámetros de entrada del bloque de función se copian en un búfer interno en la primera
llamada de "PG_DIAL". No modifique estos datos antes de que la primera llamada haya
finalizado (valor de respuesta W#16#7001) ya que de lo contrario pueden transmitirse datos
incoherentes.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "PG_DIAL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MPI_TS_ADAPTER

Input

INT

I, Q, M, D, L o cons‐
tante

Dirección MPI del TS Adapter

PHONE_NO (Pági‐
na 7630)

Input

ANY

D

Referencia a un string de datos con una
longitud máxima de 31 caracteres

EVENT_ID (Pági‐
na 7630)

Input

ANY

I, Q, M, D

Referencia a una matriz de bytes con una
longitud máxima de 16 caracteres

BOOL

I, Q, M, D, L

● BUSY=1: el establecimiento de la
conexión remota todavía no ha
finalizado.

BUSY (Página 7631) Output

● BUSY=0: la ejecución de "PG_DIAL"
ha finalizado.
STATUS (Pági‐
na 7631)

Output

INT

I, Q, M, D, L

Valor de retorno de "PG_DIAL"

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

7629

Instrucciones
4.2 Instrucciones

Parámetros de bloque virtuales EN y ENO y el bit BR
Los parámetros de bloque virtuales EN y ENO sólo aparecen en caso de integración de
"PG_DIAL" en la representación KOP o FUP del editor STEP 7. Están estrechamente
vinculados con el bit BR (resultado binario) de la palabra de estado.
● Parámetros de entrada EN
El estado del resultado lógico (RLO) se almacena durante la llamada del bloque en el bit BR.
● Parámetros de salida ENO
Si "PG_DIAL" se ejecuta sin errores, el estado del bit BR disponible en el momento de la
llamada del bloque se restablece al final de la misma.
Cuando se indica un mensaje de error a través del parámetro de salida STATUS, el bit BR
se pone a "0" inmediatamente antes de abandonar "PG_DIAL".

Parámetro PHONE_NO
Descripción
El parámetro de entrada PHONE_NO indica el número de teléfono con el que debe
establecerse una conexión remota. Indique el número de teléfono completo, incluidos los
prefijos y el número de conexión. El string se transmite al módem sin modificaciones. Si utiliza
caracteres no numéricos, asegúrese de que el módem utilizado los soporta.
Para establecer una conexión remota, el TS Adapter utiliza los siguientes valores
parametrizados:
● Ubicación: Sistema de marcación, prefijo de línea externa
● Ajustes de llamada: "Espere señal antes de marcar", "Número de intentos de marcado" y
"Tiempo de espera tras intento de marcado sin éxito"

Parámetro EVENT_ID
Descripción
El parámetro de entrada EVENT_ID indica el ID de evento. Éste se transmite con transparencia
desde el programa de usuario del sistema de automatización al programa de usuario de la PG/
el PC a través de "PG_DIAL", el TS Adapter y la aplicación TeleService de la PG/el PC. La ID
de evento puede tener una estructura cualquiera y transmitir cualquier información del sistema
de automatización a la PG/el PC.
Si en la llamada de "PG_DIAL" se transmite una longitud inferior a 16, los bytes restantes de
la matriz se rellenan con B#16#00.

7630

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro BUSY
Descripción
La instrucción "PG_DIAL" es una instrucción asíncrona, de modo que la ejecución se prolonga
a lo largo de varias llamadas.
● Si el parámetro de salida BUSY = 1, en el parámetro de salida STATUS (Página 7631) se
indica el estado interno de "PG_DIAL".
● Cuando la ejecución ha finalizado, se indica con el parámetro de salida BUSY = 0. El
parámetro de salida STATUS (Página 7631) indica si la petición ha finalizado sin errores
(STATUS = W#16#0000) o con errores.

Parámetro STATUS
Descripción
Los valores de retorno de "PG_DIAL" pueden clasificarse del siguiente modo:
● W#16#0000: "PG_DIAL" ha finalizado correctamente
● W#16#7xxx: estado de "PG_DIAL"
● W#16#8xxx: en la llamada interna de una instrucción de comunicación o de la instrucción
"BLKMOV" se ha notificado un error
● W#16#9xxx: error de parámetro en la llamada de "PG_DIAL"
● W#16#Bxxx: el TS Adapter ha notificado un error
La tabla siguiente muestra los valores de retorno de "PG_DIAL" a excepción del código de error
de las instrucciones de comunicación utilizadas.
Valor de retorno

Explicación

Indicaciones

(W#16#...)
0000

La ejecución de "PG_DIAL" ha finalizado sin errores.

7000

"PG_DIAL" se ha borrado (entretanto se ha deshecho la comuni‐ Vuelva a llamar "PG_DIAL".
cación con el TS Adapter).

7001

"PG_DIAL" está activa (primera llamada, BUSY = 1). La función
se acaba de iniciar.

7002

"PG_DIAL" está activa (llamada siguiente, BUSY = 1). La ejecu‐
ción de la función todavía no ha finalizado.

8xxx o bien 8zxx

La ejecución de "PG_DIAL" ha finalizado con un código de error
de las instrucciones de comunicación llamadas internamente.
Si el mensaje de error procede de la instrucción "BLKMOV" sig‐
nifica

Encontrará más información en la
información de error de las instruc‐
ciones de comunicación:
AUTOHOTSPOT

● z = 2: error al copiar el parámetro PHONE_NO en el búfer
interno
● z = 3: error al copiar el parámetro EVENT_ID en el búfer
interno

Programación del PLC
Manual de programación y manejo, 11/2019

7631

Instrucciones
4.2 Instrucciones
Valor de retorno

Explicación

Indicaciones

9001

Longitud de PHONE_NO = 0 ó > 31

El número de teléfono debe conte‐
ner como mínimo 1 carácter y como
máximo 31.

9002

Longitud de EVENT_ID = 0 ó > 16

La ID de evento debe contener co‐
mo mínimo 1 carácter y como máxi‐
mo 16 caracteres.

B000

Se ha podido establecer la conexión remota con la programadora
o el PC. Sin embargo, en TeleService no se ha registrado ningún
programa para la ID de evento transmitido.

B10A

En el TS Adapter ya hay una petición guardada, que aún está
siendo ejecutada por dicho adaptador.

B10B

Tras el establecimiento de la conexión remota, ésta ha sido des‐ Vuelva a llamar "PG_DIAL".
conectada por el interlocutor antes de que se pudiera transmitir la
ID de evento.

B206

No se ha podido establecer la conexión remota con la programa‐ Compruebe la parametrización del
dora o el PC.
módem en el TS Adapter (local y
remoto).

B302

El TS Adapter está conectado directamente con la programadora
o el PC (conexión directa).

Finalice la comunicación vía cone‐
xión directa.

B305

Todavía hay una conexión remota establecida en la programa‐
dora o el PC.

Vuelva a llamar "PG_DIAL" más tar‐
de.

(W#16#...)

Vuelva a llamar "PG_DIAL".

AS_DIAL: Establecer una conexión remota con el AS
Descripción de AS_DIAL
Definición
Sistema de automatización local y remoto
● Local: El sistema de automatización S7 del que parte la iniciativa de establecer la conexión
remota se denomina local.
● Remoto: El sistema de automatización S7 con el que debe establecerse la conexión remota
se denomina remoto.

Descripción
La instrucción "AS_DIAL" permite establecer una conexión remota entre un sistema de
automatización S7 local y uno remoto y a continuación intercambiar datos de proceso. Los
datos de proceso se pueden intercambiar con las instrucciones "X_GET (Página 7622)",
"X_PUT (Página 7624)" y "X_SEND (Página 7617)".

7632

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La instrucción "AS_DIAL" cuenta con dos funciones:
● Función DIAL: Establecimiento de una conexión remota con un TS Adapter remoto. Esta
función se solicita con el parámetro de entrada REQ_DIAL (Página 7635).
● Función HANGUP: Finalización de una conexión remota existente con un TS Adapter
remoto. Esta función se solicita con el parámetro de entrada REQ_HANGUP (Página 7635).
Sólo puede haber una función activa. Solicitando la función HANGUP se cancela la función
DIAL.
Si se produce un error durante la ejecución, que provoca su interrupción, el código de error se
transmite a la parte que llama la instrucción "AS_DIAL". El TS Adapter deshace cualquier
conexión remota que pueda haber establecida.

Llamada de "AS_DIAL"
"AS_DIAL" puede llamarse cíclicamente o en un programa controlado por tiempo. Si ejecuta
"AS_DIAL" en diferentes niveles de ejecución, tiene que garantizar un bloqueo de llamada
entre niveles.
● En la llamada de "AS_DIAL" es imprescindible indicar un DB de instancia. Para una
conexión remota siempre debe utilizarse la misma instancia.
Excepción: Si la CPU local se comunica a través de varios TS Adapter locales, hay que
asignar una instancia propia a cada TS Adapter.
● Para procesar una función de bloque son necesarias varias llamadas de "AS_DIAL". Por
ello, la llamada de "AS_DIAL" en un "bucle de espera" no es conveniente. El final de la
función de bloque se indica con BUSY = 0.
● Para la comunicación con el TS Adapter, "AS_DIAL" también utiliza instrucciones de
comunicación para conexiones S7 no configuradas.
Por ello, en el programa de usuario local hay que garantizar que al establecer y deshacer
la conexión remota con "AS_DIAL" no haya ninguna instrucción de comunicación para
conexiones S7 no configuradas ("X_PUT (Página 7624)", "X_GET (Página 7622)",
"X_SEND (Página 7617)", "X_RCV (Página 7618)", "X_ABORT (Página 7626)") que haya
sido iniciada con DEST_ID = "dirección MPI del TS Adapter local".

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "AS_DIAL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

ADDR_TS_
ADAPTER

Input

INT

I, Q, M, D, L o cons‐
tante

Parámetro de entrada de la función DIAL y
HANGUP:
Dirección MPI del TS Adapter en la red MPI
local

PHONE_NO
(Página 7635)

Input

LOGIN

Input

ANY

D

Parámetro de entrada de la función DIAL:
Número de teléfono del módem del sistema
de automatización remoto (máx. 31 caracte‐
res)

ANY

D

Parámetro de entrada de la función DIAL:
Nombre de usuario para la legitimación en el
TS Adapter remoto (máx. 8 caracteres)

Programación del PLC
Manual de programación y manejo, 11/2019

7633

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PASSWORD

Input

ANY

D

Parámetro de entrada de la función DIAL:
Contraseña para la legitimación en el
TS Adapter remoto (máx. 8 caracteres)

ADDR_CPU

Input

INT

I, Q, M, D, L o cons‐
tante

Parámetro de entrada de la función DIAL:

REQ_DIAL (Pá‐
gina 7635)

Input

BOOL

I, Q, M, D

Dirección MPI de la CPU en la red MPI re‐
mota con la que debe establecerse la cone‐
xión
Parámetro de entrada para la solicitud de la
función DIAL:
Establecimiento de una conexión remota
con un TS Adapter remoto

REQ_HANGUP
(Página 7635)

Input

BOOL

I, Q, M, D

Parámetro de entrada para la solicitud de la
función HANGUP:
Deshacer una conexión remota existente
con un TS Adapter remoto

STATUS (Pági‐
na 7636)

Output

INT

I, Q, M, D, L

Valor de retorno de "AS_DIAL"

BUSY (Pági‐
na 7636)

Output

BOOL

I, Q, M, D, L

● BUSY = 1: la función DIAL o HANGUP
todavía está activa, de modo que el
establecimiento/la finalización de la
conexión remota todavía no ha
finalizado.
● BUSY = 0: la ejecución de la instrucción
"AS_DIAL" ha finalizado. Ya no hay
ninguna función activa.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros de bloque virtuales EN y ENO y el bit BR
Los parámetros de bloque virtuales EN y ENO sólo aparecen en caso de integración de
"AS_DIAL" en la representación KOP o FUP.
● Parámetro de entrada EN: El estado del resultado lógico (RLO) se almacena durante la
llamada del bloque en el bit BR.
● Parámetro de salida ENO:
Si "AS_DIAL" se ejecuta sin errores, el estado del bit BR disponible en el momento de la
llamada del bloque se restablece al final de la misma.
Cuando se indica un mensaje de error a través del parámetro de salida STATUS
(Página 7636), el bit BR se pone a "0" inmediatamente antes de abandonar "AS_DIAL".

7634

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro PHONE_NO
Descripción
El parámetro de entrada PHONE_NO indica el número de teléfono con el que debe
establecerse una conexión remota. Indique el número de teléfono completo, incluidos los
prefijos de país y población y el número de abonado. El string se transmite al módem sin
modificaciones. Si utiliza caracteres no numéricos, asegúrese de que el módem utilizado los
soporta.
Para establecer una conexión remota, el TS Adapter utiliza los siguientes valores
parametrizados:
● Ubicación: sistema de marcación, prefijo de línea externa
● Ajustes de llamada: "Espere señal antes de marcar", "Número de intentos de marcado" y
"Tiempo de espera tras intento de marcado sin éxito"

Parámetro REQ_DIAL
Descripción
La función DIAL sólo puede solicitarse si en la última llamada de "AS_DIAL" se notificó BUSY
(Página 7636) = 0. Con el parámetro de entrada REQ_DIAL se inicia la función DIAL. El
parámetro de entrada REQ_DIAL se dispara por nivel.
REQ_DIAL lanza la función DIAL de la instrucción "AS_DIAL". La instrucción "AS_DIAL"
comprueba la plausibilidad de los parámetros y los transmite al TS Adapter local.
Si se detecta un error durante la ejecución de la función DIAL, la ejecución de la función DIAL
se cancela. "AS_DIAL" ejecuta automáticamente la función HANGUP (Página 7635) y a
continuación notifica el mensaje de error en el valor de retornoSTATUS (Página 7636).
Resultado: Con BUSY (Página 7636) = 0, el resultado del establecimiento de conexión se
indica en el valor de retorno STATUS (Página 7636).

Parámetro REQ_HANGUP
Descripción
Con el parámetro de entrada REQ_HANGUP se inicia la función HANGUP. La función
HANGUP termina una conexión remota con el TS Adapter remoto que se había establecido
anteriormente con la función DIAL (Página 7635).
El parámetro de entrada REQ_HANGUP se dispara por nivel. La función HANGUP también
puede iniciarse aunque ya se haya iniciado la función DIAL (Página 7635).

Programación del PLC
Manual de programación y manejo, 11/2019

7635

Instrucciones
4.2 Instrucciones
La finalización de la función HANGUP se notifica a través del parámetro de salida BUSY
(Página 7636) = 0. El parámetro de salida STATUS (Página 7636) indica entonces el resultado
de la ejecución de la función.
Valor

Significado

W#16#0000

La conexión remota ha finalizado de forma regular con la función HANGUP.

W#16#3007

El TS Adapter local ha finalizado la conexión remota porque se ha producido un error.

W#16#3008

La conexión remota se ha interrumpido de forma espontánea o el TS Adapter remoto
ha colgado.

Parámetro BUSY
Descripción
La instrucción "AS_DIAL" es una instrucción asíncrona, de modo que la ejecución se prolonga
a lo largo de varias llamadas.
● Si BUSY = 1, en el parámetro de salida STATUS (Página 7636) se indica el STATUS
(Página 7636) interno de "AS_DIAL". Se requiere como mínimo una nueva llamada de
"AS_DIAL".
● Si BUSY = 0, la ejecución ha finalizado. El parámetro de salida STATUS (Página 7636)
indica si la petición ha finalizado sin o con errores.

Parámetro STATUS
Descripción
Los valores de retorno de "AS_DIAL" pueden clasificarse del siguiente modo:
● W#16#0000: "AS_DIAL" ha finalizado sin errores
● W#16#3xxx: último estado de la conexión remota en el TS Adapter
● W#16#7xxx: estado de "AS_DIAL"
● W#16#8xxx: en la llamada interna de una instrucción de comunicación ("X_ABORT
(Página 7626)", "X_GET (Página 7622)", "X_PUT (Página 7624)", "X_RCV (Página 7618)"
y "X_SEND (Página 7617)") se ha notificado un error.
● W#16#9xxx: error de parámetro en la llamada de "AS_DIAL"
● W#16#Bxxx: Error al establecer la conexión.

7636

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra los valores de retorno de "AS_DIAL" a excepción del código de error
de las instrucciones de comunicación utilizadas:
Valor de retorno

Explicación

Indicaciones

No hay ninguna función activa.
La ejecución de "AS_DIAL" ha finalizado sin errores.

Este mensaje sólo se recibe una vez al fina‐
lizar correctamente la función correspondien‐
te.

3007

El TS Adapter local ha colgado.

Sólo lo indica la función HANGUP.

3008

La conexión remota se ha interrumpido de forma espon‐ Sólo lo indica la función HANGUP.
tánea o el TS Adapter remoto ha colgado.

7000

No hay ninguna función activa.

Ni se ha ejecutado una función ni se ha soli‐
citado a través de los parámetros de entrada.

7001

La función DIAL está activa (primera llamada, BUSY
=1). La función se acaba de iniciar.

Hasta el final de la función (BUSY = 0) no se
evalúa el parámetro de entrada REQ_DIAL.

7002

Hasta el final de la función (BUSY = 0) no se
La función DIAL está activa (siguiente llamada, BUSY
=1). La ejecución de la función todavía no ha finalizado. evalúa el parámetro de entrada REQ_DIAL.

7701

La función HANGUP está activa (primera llamada). La
función se acaba de iniciar.

Hasta el final de la función (BUSY = 0) no se
evalúan los parámetros de entrada
REQ_DIAL ni REQ_HANGUP.

7702

La función HANGUP está activa (llamada siguiente). La
ejecución de la función todavía no ha finalizado.

Hasta el final de la función (BUSY = 0) no se
evalúan los parámetros de entrada
REQ_DIAL ni REQ_HANGUP.

8xxx

Mensaje de error: La ejecución de la función de bloque
activa se ha cancelado debido a un mensaje de error
(RET_VAL < 0) de una instrucción llamada internamente
en un bloque.

Encontrará más información en la informa‐
ción de error de las instrucciones de comu‐
nicación:

9001

Longitud de PHONE_NO = 0 ó > 31

El número de teléfono debe contener como
mínimo 1 carácter y como máximo 31.

9003

Longitud de LOGIN > 8

El nombre de usuario para la legitimación en
el TS Adapter remoto no puede tener más de
8 caracteres.

9004

Longitud de PASSWORD > 8

La contraseña para la legitimación en el
TS Adapter remoto no puede tener más de 8
caracteres.

B100

El TS Adapter no puede establecer ninguna conexión
remota en este momento.

El TS Adapter no puede establecer ninguna
conexión con el módem en este momento.
Vuelva a llamar "AS_DIAL".

B10A

En el TS Adapter ya hay guardada una ID de evento de
una función "PG_DIAL" o hay una función "AS_DIAL"
activa que aún debe transmitirse.

Vuelva a llamar "AS_DIAL".

B10B

Tras el correcto establecimiento de la conexión remota,
ésta ha vuelto a desconectarse.

Vuelva a llamar "AS_DIAL".

B206

No se ha podido establecer la conexión remota con el
TS Adapter remoto.

Compruebe la parametrización del módem
en el TS Adapter (local y remoto).

B20A

El tipo de TS Adapter remoto no soporta un acoplamien‐ Utilice un tipo de TS Adapter remoto que so‐
to remoto inter-AS.
porte el acoplamiento remoto inter-AS.

B20B

La instrucción "AS_DIAL" y la versión del TS Adapter
son incompatibles.

(W#16#...)
0000

Programación del PLC
Manual de programación y manejo, 11/2019

AUTOHOTSPOT.

Utilice un tipo de TS Adapter remoto que so‐
porte el acoplamiento remoto inter-AS.

7637

Instrucciones
4.2 Instrucciones
Valor de retorno

Explicación

Indicaciones

El TS Adapter remoto no se integra en la red MPI.

Compruebe la parametrización de los pará‐
metros de red en el TS Adapter remoto.

(W#16#...)
B20C

Causa: Error de parámetros de red
B20D

La versión del TS Adapter remoto no soporta un acopla‐ Utilice un tipo de TS Adapter remoto que so‐
miento remoto inter-AS.
porte el acoplamiento remoto inter-AS.

B20E

Se ha interrumpido la transmisión de datos con el
TS Adapter remoto.

Vuelva a llamar "AS_DIAL".

Causa: Error de transmisión
B20F

El TS Adapter remoto no ha devuelto la llamada.

Compruebe la parametrización de la protec‐
ción de acceso (número de llamada) y del
módem en el TS Adapter remoto.

B210

Fallo en la transmisión al TS Adapter remoto.

Vuelva a llamar "AS_DIAL".

Causa: Timeout
B252

El TS Adapter remoto rechaza la ejecución de la peti‐
ción, ya que falta la legitimación.

No ha indicado ningún nombre de usuario ni
contraseña en la llamada de "AS_DIAL".

B253

El TS Adapter remoto rechaza la legitimación.

Compruebe los parámetros de llamada de
"AS_DIAL" en su programa de usuario.

Causa: Nombre de usuario desconocido
B254

El TS Adapter remoto rechaza la legitimación.
Causa: Contraseña incorrecta

Compruebe los parámetros de llamada de
"AS_DIAL" en su programa de usuario.

B302

El TS Adapter está conectado directamente con la pro‐
gramadora o el PC (conexión directa).

Finalice la comunicación vía conexión direc‐
ta.

B305

Todavía hay una conexión remota con una PG/un PC
establecida por el TS Adapter local.

Vuelva a llamar "AS_DIAL" más tarde.

SMS_SEND: Enviar un mensaje SMS
Descripción de SMS_SEND
Descripción
La instrucción "SMS_SEND" transmite un número de teléfono, un número de servicio y un
mensaje SMS a un TS Adapter. El TS Adapter transmite esos datos mediante comandos GSM
a un módem de radiofrecuencia.
Tras el envío del mensaje SMS, el TS Adapter recibe un acuse, que se transmite a la
instrucción "SMS_SEND". A continuación se termina de ejecutar "SMS_SEND" y a la parte que
llama se le transmite el estado. Este estado no es más que un acuse del envío del SMS, pero
no es una confirmación de recepción.
Si se produce un error durante la ejecución, que provoca su interrupción, el código de error se
transmite a la parte que llama la instrucción "SMS_SEND".

Llamada de "SMS_SEND"
La instrucción "SMS_SEND" puede llamarse cíclicamente o en un programa controlado por
tiempo.

7638

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
En la llamada de "SMS_SEND" es imprescindible indicar un DB de instancia.
Para procesar una función de bloque son necesarias varias llamadas de "SMS_SEND". Por
ello, la llamada de "SMS_SEND" en un "bucle de espera" no es conveniente. El final de la
función de bloque se indica con BUSY = 0.

Interrupción de la conexión
Si la CPU pasa al estado operativo STOP mientras "SMS_SEND" está activa, la conexión con
el TS Adapter se deshace. La conexión con el TS Adapter también se pierde cuando en el bus
MPI se producen problemas de comunicación graves o, por ejemplo, si la CPU se desconecta.
En esos casos el TS Adapter no rechaza el número de teléfono, el número del centro de
servicios ni el mensaje SMS que ya le habían sido transmitidos. El TS Adapter transmite los
datos al módem de radiofrecuencia. Sin embargo, el TS Adapter rechaza el acuse que le envía
el módem de radiofrecuencia.
Si un programa de usuario instalado en la CPU intenta enviar un SMS mientras el TS Adapter
se encuentra en el estado arriba descrito, "SMS_SEND" finaliza con el valor de
retornoW#16#B10A. El programa de usuario puede repetir el envío de un SMS más adelante.
El valor de retorno W#16#B10A se obtiene también cuando varias CPUs intentan enviar un
SMS simultáneamente a través del mismo TS Adapter.
ATENCIÓN
Modificación del programa de usuario STEP 7
Las partes del programa de usuario STEP 7 con efecto directo sobre llamadas de
"SMS_SEND" sólo pueden modificarse con la CPU en el estado operativo STOP. Esto se
refiere en especial al borrado e intercambio de bloques de programa que contienen llamadas
de "SMS_SEND". En caso de incumplimiento, es posible que los recursos de conexión
permanezcan ocupados. El sistema de automatización puede entrar en un sistema no
definido debido a las instrucciones de comunicación para conexiones S7 no configuradas
("X_PUT (Página 7624)", "X_GET (Página 7622)", "X_SEND (Página 7617)", "X_RCV
(Página 7618)", "X_ABORT (Página 7626)").
Una vez transmitidos los cambios es necesario ejecutar un rearranque completo (en caliente)
o un arranque en frío de la CPU.

Coherencia de datos
Los parámetros de entrada del bloque de función se copian en un búfer interno en la primera
llamada de "SMS_SEND". No modifique estos datos antes de que la primera llamada haya
finalizado (valor de respuesta W#16#7001) ya que de lo contrario pueden transmitirse datos
incoherentes.

Programación del PLC
Manual de programación y manejo, 11/2019

7639

Instrucciones
4.2 Instrucciones

Transmisión del PIN al módem de radiofrecuencia
Si utiliza una tarjeta SIM con comprobación de PIN activada, el PIN debe transmitirse al
módem de radiofrecuencia en la fase de inicialización. Esto es posible con el string Init del TS
Adapter, que puede parametrizarse con TeleService. Parametrice el string Init de la siguiente
manera (ejemplo para PIN = 4711):
● AT+CPIN="4711";AT&F.....
Tras recuperarse la tensión, el TS Adapter envía una vez el string "AT+CPIN="4711" con el PIN
de la tarjeta SIM integrada en el módem de radiofrecuencia al componente conectado. A
continuación, el módem se inicializa con "AT&F...".
Atención: Si el PIN es erróneo, no se notifica en la inicialización, sino al enviar un SMS, a través
de la respuesta de "SMS_SEND".

Enviar un fax
Anteponiendo un número especial del proveedor de la red (p. ej. "99") al número en sí, el
proveedor convierte el SMS en un fax y lo envía a un aparato de fax. Se trata de un servicio del
proveedor de la red, y no de una función del TS Adapter.
El número de fax se indica con el prefijo del proveedor de la red en el parámetro PHONE_NO.
Ejemplo de una red con el número de fax 07214711:
● PHONE_NO = '9907214711'

Envío de un correo electrónico
Marcando un número especial del proveedor de la red (p. ej. "8000") y anteponiendo una
dirección de correo electrónico al mensaje SMS es posible enviar el SMS a una dirección de
correo electrónico. Se trata de un servicio del proveedor de la red, y no de una función del TS
Adapter.
El número correspondiente se transmite en el parámetro PHONE_NO (Página 7641).
La dirección de correo electrónico se antepone al texto en sí del mensaje SMS, y se separa de
él con un carácter de separación. La longitud máxima del texto útil del SMS se reduce en la
dirección de correo electrónico + el carácter de separación. Los separadores son, p. ej. un
espacio (" ") o dos puntos (":").
En lugar del carácter "@", algunos proveedores de red requieren un "*".
Ejemplo:
● Se pretende enviar el texto 'CPU in STOP' a la dirección de correo electrónico
"Surname*provider.com".
● PHONE_NO = 8000
● MESSAGE = Surname*provider.comCPU in STOP

7640

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "SMS_SEND":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MPI_TS_
ADAPTER

Input

INT

I, Q, M, D, L o cons‐
tante

Dirección MPI del TS Adapter

PHONE_NO
(Página 7641)

Input

ANY

D

Referencia a un string de datos con una longi‐
tud máxima de 31 caracteres

SCENTER_NO
(Página 7642)

Input

ANY

D

Referencia a un string de datos con una longi‐
tud máxima de 20 caracteres

MESSAGE (Pá‐
gina 7642)

Input

ANY

D

Referencia a un string de datos con una longi‐
tud máxima de 160 caracteres

BUSY (Pági‐
na 7642)

Output

BOOL

I, Q, M, D, L

● BUSY=1: el envío del SMS todavía no ha
finalizado.
● BUSY=0: la ejecución de "SMS_SEND" ha
finalizado

STATUS (Pági‐
na 7642)

Output

INT

I, Q, M, D, L

Valor de retorno de "SMS_SEND"

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros virtuales EN y ENO y el bit BR
Los parámetros de bloque virtuales EN y ENO sólo aparecen en caso de integración de
"SMS_SEND" en la representación KOP o FUP.
● Parámetro de entrada EN:
El estado del resultado lógico (RLO) se almacena durante la llamada del bloque en el bit BR.
● Parámetro de salida ENO:
Si no ha habido errores en la ejecución de "SMS_SEND", el estado del bit BR que había en
el momento de la llamada del bloque se restablece al final de dicha llamada.
Si se emite un mensaje de error a través del parámetro de salida STATUS, el bit BR se pone
a "0" inmediatamente antes abandonar "SMS_SEND".

Parámetro PHONE_NO
Descripción
El parámetro de entrada PHONE_NO indica el número de teléfono al que debe enviarse un
SMS. Indique el número de teléfono completo, incluidos los prefijos de país y población y el
número de abonado. El string se transmite al módem de radiofrecuencia sin modificaciones. Si
utiliza caracteres no numéricos, asegúrese de que el módem de radiofrecuencia utilizado los
soporta.

Programación del PLC
Manual de programación y manejo, 11/2019

7641

Instrucciones
4.2 Instrucciones

Parámetro SCENTER_NO
Descripción
El parámetro de entrada SCENTER_NO indica el número del service center a través del cual
debe enviarse el SMS. El string se transmite al módem de radiofrecuencia sin modificaciones.

Parámetro MESSAGE
Descripción
El parámetro de entrada MESSAGE indica el mensaje SMS. Éste se transmite a través de la
instrucción "SMS_SEND", el TS Adapter y el módem de radiofrecuencia GSM al proveedor de
red.

Parámetro BUSY
Descripción
La instrucción "SMS_SEND" es una instrucción asíncrona, de modo que la ejecución de la
petición se prolonga a lo largo de varias llamadas.
● Si el parámetro de salida BUSY = 1, en el parámetro de salida STATUS (Página 7642) se
indica el estado interno de "SMS_SEND".
● Cuando la ejecución ha finalizado, se indica con el parámetro de salida BUSY = 0. El
parámetro de salida STATUS (Página 7642) indica si la petición ha finalizado sin errores
(STATUS = W#16#0000) o con errores.

Parámetro STATUS
Descripción
Los valores de retorno de "SMS_SEND" pueden clasificarse del siguiente modo:
● W#16#0000: "SMS_SEND" ha finalizado correctamente.
● W#16#7xxx: estado de "SMS_SEND"
● W#16#8xxx: con la llamada interna a una instrucción de comunicación o a la instrucción
"BLKMOV" se ha notificado un error.
● W#16#9xxx: error de parámetro al llamar a "SMS_SEND"
● W#16#Bxxx: TS Adapter ha notificado un error.
● W#16#Cxxx: el módem de radiofrecuencia ha notificado un error.

7642

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra los valores de retorno de "SMS_SEND" con la excepción del código
de error de las instrucciones de comunicación utilizadas, así como el del módem de
radiofrecuencia.
Valor de retorno

Explicación

Indicaciones

(W#16#...)
0000

La ejecución de "SMS_SEND" ha finalizado sin erro‐
res.

7000

"SMS_SEND" se ha restablecido (entre tanto se ha
cancelado la comunicación con el TS Adapter).

7001

"SMS_SEND" está activado (primera llamada,
BUSY = 1). La función se acaba de iniciar.

7002

"SMS_SEND" está activado (llamada sucesiva,
BUSY = 1). La ejecución de la función todavía no ha
finalizado.

8xxx o bien

La ejecución de "SMS_SEND" ha finalizado con un
código de error de las instrucciones de comunica‐
ción llamadas internamente o de la instrucción
"BLKMOV".

8zxx

Vuelva a llamar "SMS_SEND".

Encontrará información detallada en la descrip‐
ción de la instrucción "BLKMOV", así como en la
información de errores de las instrucciones de
comunicación:

Si el mensaje de error procede de "BLKMOV" signi‐ AUTOHOTSPOT
fica
● z = 2 : error al copiar el parámetro PHONE_NO
en el búfer interno
● z = 3 : error al copiar el parámetro
SCENTER_NO en el búfer interno
● z = 4 : error al copiar el parámetro MESSAGE en
el búfer interno
9001

Longitud de PHONE_NO = 0 ó > 31

El número de teléfono debe contener como mí‐
nimo 1 carácter y como máximo 31.

9002

Longitud de SCENTER_NO = 0 ó > 20

El número del service center debe contener co‐
mo mínimo 1 carácter y como máximo 20.

9003

Longitud de MESSAGE = 0 ó > 160

El mensaje SMS debe contener como mínimo 1
carácter y como máximo 160 caracteres.

B10A

En el TS Adapter ya hay una petición guardada, que
aún está siendo ejecutada por dicho adaptador.

Vuelva a llamar "SMS_SEND".

B301

Todavía hay una conexión remota establecida en la
programadora o el PC.

Vuelva a llamar "SMS_SEND" más tarde.

B302

El TS Adapter está conectado directamente con una
PG/un PC (conexión directa)

Conecte el TS Adapter con un módem de radio‐
frecuencia GSM.

B303

El TS Adapter no está conectado ni con un módem
de radiofrecuencia ni con una PG/un PG.

Conecte el TS Adapter con un módem de radio‐
frecuencia GSM.

B304

La interfaz para el módem de radiofrecuencia no es‐ Vuelva a llamar "SMS_SEND" más tarde.
tá lista en este momento para enviar un SMS.

B614

El módem conectado no ha respondido al comando
específico de SMS dentro del tiempo de vigilancia.

Compruebe si hay un módem de radiofrecuencia
GSM conectado.
Vuelva a llamar "SMS_SEND" más tarde.

Programación del PLC
Manual de programación y manejo, 11/2019

7643

Instrucciones
4.2 Instrucciones
Valor de retorno

Explicación

Indicaciones

B615

El TS Adapter ha recibido un mensaje de error no
específico del módem conectado.

Compruebe si hay un módem de radiofrecuencia
GSM conectado.

Cxxx

La ejecución de "SMS_SEND" se ha interrumpido
con un código de error del módem GSM.

Encontrará una lista de los números de error en
el manual de su módem de radiofrecuencia o en
los estándares GSM GSM 04.11, GSM 03.40 y
GSM 07.05.

(W#16#...)

xxx: Número de error

Ejemplos:
● C136 = falta la tarjeta SIM del módem GSM
● C137 = el PIN del módem GSM no es
correcto (consulte Transferencia del PIN al
módem de radiofrecuencia)
● C001 = número incorrecto de Service Center

AS_MAIL: Transmitir un mensaje de correo electrónico
Descripción de AS_MAIL
Instrucciones necesarias
La instrucción "AS_MAIL" transmite un mensaje de correo electrónico desde una CPU a un
servidor de correo a través del Simple Mail Transfer Protocol (SMTP). "AS_MAIL" requiere las
siguientes instrucciones para su ejecución:
● "S_COMP: Comparar cadenas de caracteres (Página 5868)"
● "FIND: Buscar caracteres en una cadena (Página 5881)"
● "INSERT: Insertar caracteres en una cadena (Página 5879)"
● "LEFT: Leer los caracteres izquierdos de una cadena (Página 5876)"
● "LEN: Determinar la longitud de una cadena de caracteres (Página 5875)"
● "RIGHT: Leer los caracteres derechos de una cadena (Página 5877)"

Descripción
La instrucción "AS_MAIL" es una instrucción asíncrona, de modo que la ejecución se prolonga
a lo largo de varias llamadas. En la llamada de la instrucción "AS_MAIL" es imprescindible
indicar un DB de instancia.
El bloque se inicializa con una llamada con COM_RST = 1.
El envío de un mensaje de correo electrónico se inicia con un cambio de flanco de "0" a "1" en
el parámetro REQ.
A través de los parámetros de salida "BUSY", "DONE", "ERROR", así como "STATUS" y
"SFC_STATUS" se indica el estado de la petición. "SFC_STATUS" corresponde al parámetro
de salida "STATUS" de los bloques de comunicación llamados, o bien a la instrucción
"BLKMOV".

7644

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Los parámetros de salida DONE, ERROR, STATUS y SFC_STATUS sólo se indican durante
un ciclo si el estado del parámetro de salida BUSY cambia de "1" a "0".
En la tabla siguiente se muestra la correspondencia entre BUSY, DONE y ERROR. Permite
determinar en qué estado se encuentra la instrucción "AS_MAIL" actualmente o cuándo se
completó el envío del mensaje de correo electrónico.
BUSY

DONE

ERROR

Descripción

1

Irrelevante

Irrelevante

La petición está en proceso.

0

1

0

La petición ha finalizado correctamente.

0

0

1

La petición se ha finalizado con un error. La causa del error se puede con‐
sultar en los parámetros STATUS y SFC_STATUS.

0

0

0

No se ha asignado ninguna (nueva) petición a la instrucción "AS_MAIL".

Si la CPU pasa al estado operativo STOP mientras "AS_MAIL" está activa, la conexión con el
servidor de correo se deshace. La conexión con el servidor de correo también se pierde si
aparecen problemas de comunicación en el bus Industrial Ethernet. En esos casos, el envío
del mensaje de correo electrónico se cancela y éste no llega al receptor.
ATENCIÓN
Cambiar programas de usuario
Las partes del programa de usuario con efecto directo sobre llamadas de "AS_MAIL" sólo
pueden modificarse en los siguientes casos:
● Si la CPU está en estado operativo "STOP"
● Si no se envía ningún mensaje (REQ = 0 y BUSY = 0).
Esto se refiere en especial al borrado e intercambio de bloques de programa que contienen
llamadas de "AS_MAIL" o llamadas del DB de instancia de "AS_MAIL"
En caso de incumplimiento, es posible que los recursos de conexión permanezcan ocupados.
El sistema de automatización puede pasar a un estado no definido con las funciones de
comunicación TCP/IP a través de Industrial Ethernet.
Una vez transmitidas las modificaciones es necesario ejecutar un rearranque completo (en
caliente) o un arranque en frío de la CPU o activar el parámetro COM_RST de la instrucción
"AS_MAIL".

Coherencia de datos
El parámetro de entrada ADDR_MAIL_SERVER de la instrucción se aplica de nuevo cada vez
que se lanza el envío de un mensaje de correo electrónico de la instrucción "AS_MAIL". Si se
produce un cambio durante el funcionamiento, el valor "nuevo" no tendrá efecto hasta que no
se vuelva a lanzar un mensaje de correo electrónico.
Por el contrario, los parámetros WATCH_DOG_TIME, TO_S, CC, FROM, SUB, TEXT,
ATTACHMENT, y, dado el caso, USERNAME y PASSWORD se aplican durante el
funcionamiento de la instrucción "AS_MAIL", por lo que no pueden modificarse hasta que la
petición no haya finalizado (BUSY = 0)

Programación del PLC
Manual de programación y manejo, 11/2019

7645

Instrucciones
4.2 Instrucciones

Parametrización del TS Adapter IE
En el TS Adapter IE hay que introducir los parámetros de las llamadas salientes de forma que
el TS Adapter IE establezca una conexión con el servidor de marcado del proveedor de
servicios de Internet.
Si para establecer la conexión se ajusta "Bajo demanda", la conexión se establecerá cuando
deba enviarse un mensaje de correo electrónico.
Con una conexión analógica vía módem, el establecimiento de la llamada puede requerir cierto
tiempo (aprox. un minuto). El tiempo necesario para el establecimiento de la conexión debe
tenerse en cuenta al especificar el parámetro WATCH_DOG_TIME.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "AS_MAIL":
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

COM_RST

Input /
Output

BOOL

Parámetro de entrada/salida "COMPLETE"

I, Q, M, D, L

RESTART: el bloque tiene una rutina de iniciali‐
zación, que se ejecuta cuando la entrada
COM_RST está activada.
El parámetro COM_RST de la instrucción
"AS_MAIL" debe ponerse a "1":
● Una vez antes de la primera llamada
● Cada vez que se cargue el DB de instancia
correspondiente
Tras la inicialización, la instrucción "AS_MAIL"
desactiva el parámetro COM_RST.

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control REQUEST: Activa el envío
de un mensaje de correo electrónico con un flan‐
co ascendente.

ADDR_MAIL_
SERVER

Input

DWORD

I, Q, M, D, L

Parámetro de entrada Dirección IP del servidor
de correo: Debe indicarse en forma de palabra
de datos en formato HEX, p. ej.: Dirección IP =
192.168.0.200.
ADDR_MAIL_SERVER = DW#16#C0A800C8,
teniendo en cuenta lo siguiente:
● 192 = 16#C0,
● 168 =16#A8
● 0 = 16#00 y
● 200 = 16#C8.

7646

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

WATCH_DOG_
TIME

Input

TIME

Parámetro de entrada Intervalo máx.:

USERNAME

Input

I, Q, M, D, L

En el tiempo predeterminado (WATCH_DOG_TI‐
ME), la instrucción "AS_MAIL" debería estable‐
cer una conexión. Si se supera este tiempo, el
bloque se finaliza con un error. El tiempo hasta
que el bloque finaliza y el error se notifica puede
superar el WATCH_DOG_TIME, ya que el esta‐
blecimiento de la conexión también requiere
tiempo. Para comenzar debe ajustarse un tiem‐
po de 2 minutos. En la conexión telefónica vía
ISDN, puede seleccionarse un tiempo notable‐
mente inferior.
ANY

D

Parámetro de entrada Nombre de usuario:
Referencia a una variable del tipo STRING con
una longitud máxima de 180 caracteres. Para los
procesos de autenticación es imprescindible un
nombre de usuario.

PASSWORD

Input

ANY

D

Parámetro de entrada Contraseña:
Referencia a una variable del tipo STRING con
una longitud máxima de 180 caracteres. Para los
procesos de autenticación es imprescindible una
contraseña.

TO_S

Input

ANY

D

Parámetro de entrada Direcciones de destinata‐
rio:
Referencia a una variable del tipo STRING con
una longitud máxima de 240 caracteres (véase el
ejemplo de llamada).

CC

Input

ANY

D

Parámetro de entrada Direcciones de destinata‐
rio CC:
Referencia a una variable del tipo STRING con
una longitud máxima de 240 caracteres (véase el
ejemplo de llamada).

FROM

Input

ANY

D

Parámetro de entrada Dirección de remitente:
Referencia a una variable del tipo STRING con
una longitud máxima de 240 caracteres (véase el
ejemplo de llamada).

SUB

Input

ANY

D

Parámetro de entrada Asunto del mensaje:
Referencia a una variable del tipo STRING con
una longitud máxima de 240 caracteres.

TEXT

Input

ANY

D

Parámetro de entrada Texto del mensaje:
Referencia a un string de datos con una longitud
máxima de 240 caracteres.

ATTACHMENT

Input

ANY

I, Q, M, D, L

Parámetro de entrada Anexo del mensaje:
Referencia a un campo de byte/palabra/palabra
doble con una longitud máxima de 65534 bytes.

BUSY

Output

BOOL

I, Q, M, D, L

● BUSY = 1: el envío del mensaje de correo
electrónico todavía no ha finalizado.
● BUSY=0: la ejecución de "AS_MAIL" ha
finalizado.

Programación del PLC
Manual de programación y manejo, 11/2019

7647

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

DONE

Output

BOOL

● DONE = 0: la petición aún no se ha iniciado o
todavía se está ejecutando.

I, Q, M, D, L

● DONE = 1: Petición finalizada sin errores.
ERROR

Output

BOOL

I, Q, M, D, L

ERROR = 1: durante la ejecución se ha produci‐
do un error. STATUS y SFC_STATUS devuelve
información detallada sobre el tipo de error.

STATUS (Pági‐
na 7649)

Output

INT

I, Q, M, D, L

Parámetro de salida/estado STATUS:

SFC_STATUS
(Página 7649)

Output

Valor de retorno o información de error de la ins‐
trucción "AS_MAIL".
INT

I, Q, M, D, L

Parámetro de salida/estado "SFC_STATUS":
Información de error de los bloques de comuni‐
cación llamados o de la instrucción "BLKMOV".

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Indicaciones sobre los parámetros de la instrucción
● Si en el bloque en el que se llama "AS_MAIL" se elimina, se inserta de nuevo o se modifica
la asignación de los parámetros USERNAME y PASSWORD, el cambio no tendrá efecto
hasta que el DB de instancia correspondiente no se vuelva a cargar y se active el parámetro
COM_RST. En cualquier otro caso el puntero hacia el parámetro correspondiente se
mantiene en el DB de instancia.
● Por motivos relacionados con el tiempo de ejecución y el espacio en memoria, la instrucción
"AS_MAIL" no realiza una prueba de sintaxis de los parámetros TO_S, CC y FROM.
Observe la sintaxis correcta de los parámetros.
● Los parámetros opcionales CC, TEXT y ATTACHMENT sólo se envían con el mensaje de
correo electrónico si se asignan dentro del bloque en el que se llama la instrucción
"AS_MAIL". Si una asignación de este tipo se elimina de la interfaz de llamada de la
instrucción "AS_MAIL", el cambio no tendrá efecto hasta que el DB de instancia
correspondiente no se vuelva a cargar y el parámetro COM_RST se active. En cualquier
otro caso, el puntero hacia el parámetro correspondiente se mantiene en el DB de instancia.
Recuerde que en una asignación de parámetros no están permitidos los strings vacíos.
● Si el parámetro ATTACHMENT apunta a una matriz de un bloque de datos y se cambia el
tamaño de dicha matriz y se guarda, la interfaz de llamada de la instrucción "AS_MAIL" de
los punteros ANY del parámetro ATTACHMENT debe volver a registrarse.

Autenticación SMTP
Bajo el término "autenticación" se entiende un proceso con el que se garantiza una identidad,
como puede ser una consulta de contraseña.
La instrucción "AS_MAIL" soporta el método de autenticación SMTP AUTH-LOGIN, requerido
por la mayoría de servidores de correo. Para más información sobre el método de
autenticación de su servidor de correo, consulte el manual del servidor o la página web del
proveedor de servicios de Internet.

7648

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Para utilizar el método de autenticación AUTH-LOGIN, la instrucción "AS_MAIL" requiere el
nombre de usuario con el que poder iniciar sesión en el servidor de correo. Este nombre de
usuario equivale al nombre de usuario con el que se ha configurado la cuenta de correo en el
servidor de correo. Se da a conocer a través del parámetro USERNAME de la instrucción
"AS_MAIL".
Asimismo, para iniciar sesión la instrucción "AS_MAIL" requiere la contraseña
correspondiente. Esta contraseña equivale a la contraseña indicada al configurar la cuenta de
correo. Se da a conocer a través del parámetro PASSWORD de la instrucción "AS_MAIL".
El nombre de usuario y la contraseña se transfieren sin cifrar (codificación BASE64) al servidor
de correo.
Si en el DB no se indica ningún nombre de usuario, no se utiliza el método de autenticación
AUTH-LOGIN. El mensaje de correo electrónico se envía entonces sin autenticación.

Parámetros STATUS y SFC_STATUS
Descripción
Los valores de retorno de la instrucción "AS_MAIL" pueden clasificarse del siguiente modo:
● W#16#0000: "AS_MAIL" ha finalizado correctamente
● W#16#7xxx: estado de "AS_MAIL"
● W#16#8xxx: se ha notificado un error en la llamada interna de un bloque de comunicación,
en la llamada de la instrucción "BLKMOV" o por parte del servidor de correo.
La tabla siguiente muestra los valores de retorno de "AS_MAIL" con la excepción del código de
error de los bloques de comunicación llamados internamente, así como de la instrucción
"BLKMOV".
Valor de retorno

Valor de retorno

STATUS

SFC_STATUS

(W#16#...):

(W#16#...):

0000

-

7001

Explicación

Indicaciones

La ejecución de "AS_MAIL" ha finalizado sin
errores.

La finalización sin errores de
"AS_MAIL" no significa que el mensaje
de correo electrónico enviado sea reci‐
bido (véase más abajo - Punto 1 de la
nota)

"AS_MAIL" está activo (BUSY = 1).

7002

7002

"AS_MAIL" está activo (BUSY = 1).

8xxx

xxxx

La ejecución de "AS_MAIL" ha finalizado con
un código de error de las instrucciones de
comunicación llamadas internamente o de la
instrucción "BLKMOV".

Programación del PLC
Manual de programación y manejo, 11/2019

Encontrará información detallada so‐
bre la evaluación del parámetro
SFC_STATUS en las descripciones del
parámetro STATUS de las instruccio‐
nes "BLKMOV".

7649

Instrucciones
4.2 Instrucciones
Valor de retorno

Valor de retorno

STATUS

SFC_STATUS

(W#16#...):

(W#16#...):

800z

xxxx

Explicación

Indicaciones

El mensaje de error procede de la instrucción
"BLKMOV" y significa:
● z = 1: error al copiar el parámetro TO_S
en el búfer interno
● z = 2: error al copiar el parámetro CC en el
búfer interno
● z = 3: error al copiar el parámetro FROM
en el búfer interno
● z = 4: error al copiar el parámetro SUB en
el búfer interno
● z = 5: error al copiar el parámetro TEXT
en el búfer interno
● z = 6: error al copiar el parámetro
ATTACHMENT en el búfer interno
● z = 7: error al copiar el parámetro
USERNAME en el búfer interno
● z = 8: error al copiar el parámetro
PASSWORD en el búfer interno

8010

xxxx

Error al establecer la conexión.

Posiblemente COM_RST no se activó
después de cargar el DB de instancia.

8011

xxxx

Error al enviar los datos.

Encontrará más información sobre la
evaluación de SFC_STATUS en las
descripciones del parámetro STATUS
de la instrucción "TSEND (Pági‐
na 6915)".

8012

xxxx

Error al recibir los datos.

Encontrará más información sobre la
evaluación de SFC_STATUS en las
descripciones del parámetro STATUS
de la instrucción "TRCV (Pági‐
na 6918)".

8013

xxxx

Error al establecer la conexión.

Encontrará más información sobre la
evaluación de SFC_STATUS en las
descripciones del parámetro STATUS
de la instrucción "TCON (Pági‐
na 6910)" y "TDISCON (Página 6913)".

8014

-

No es posible establecer una conexión.

Posiblemente ha introducido una direc‐
ción IP del servidor de correo incorrec‐
ta (ADDR_MAIL_SERVER) o un inter‐
valo demasiado reducido
(WATCH_DOG_TIME) para establecer
la conexión. También existe la posibili‐
dad de que la CPU no tenga conexión
con la red o que la configuración de la
CPU sea incorrecta.

7650

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Valor de retorno

Valor de retorno

STATUS

SFC_STATUS

(W#16#...):

(W#16#...):

82xx, 84xx, o
bien 85xx

-

Explicación

Indicaciones

El mensaje de error procede del servidor de
correo y, exceptuando el "8", corresponde al
número de error del protocolo SMTP.

Véase el punto 2 de la nota.

En las siguientes columnas se indican algu‐
nos códigos de error posibles:
8450

-

Acción no ejecutada: Buzón de correo no dis‐ Vuelva a intentarlo más tarde.
ponible/no accesible.

8451

-

Acción cancelada: Error local en el procesa‐
miento

Vuelva a intentarlo más tarde.

8500

-

Error de sintaxis: Error no detectado. Ello in‐
cluye también el error debido a una cadena
de comandos demasiado larga. Otra posible
causa es que el servidor de correo electróni‐
co no soporte el método de autenticación LO‐
GIN.

Compruebe los parámetros de
"AS_MAIL". Intente enviar un mensaje
de correo electrónico sin autenticación.
Sustituya para ello el parámetro USER‐
NAME por un string vacío.

8501

-

Error de sintaxis: Parámetro o argumento in‐ Posiblemente ha introducido una direc‐
correcto
ción incorrecta en TO_S o CC.

8502

-

Comando desconocido o no implementado.

Compruebe las entradas realizadas,
especialmente el parámetro FROM. Es
posible que esté incompleto y que haya
olvidado "@" o ".".

8535

-

Autenticación SMTP incompleta.

Puede que haya introducido un nombre
de usuario o una contraseña incorrec‐
tas.

8550

-

No es posible acceder al servidor de correo,
no tiene derechos de acceso.

Posiblemente ha introducido un nom‐
bre de usuario o una contraseña inco‐
rrectos o el servidor de correo no so‐
porta el LOGIN. Otra posible causa del
error puede ser la entrada incorrecta
del nombre del dominio después de
"@" en TO_S o CC.

8552

-

Acción cancelada: Rebase del espacio de
memoria asignado

Vuelva a intentarlo más tarde.

8554

-

Transmisión fallida.

Vuelva a intentarlo más tarde.

Nota
Error de estado
1. La entrada incorrecta de las direcciones de los destinatarios no genera un error de estado
de la instrucción "AS_MAIL". En tal caso no es posible garantizar el envío del mensaje de
correo electrónico a otros destinatarios, aunque se hayan introducido correctamente.
2. Encontrará más información sobre el código de error SMTP y otros códigos de error en el
protocolo SMTP en Internet, o bien en la documentación sobre errores del servidor de
correo. También es posible ver el último mensaje de error enviado por el servidor de correo
en forma de texto en el DB de instancia en el parámetro BUFFER1. En él encontrará en
"Datos" los últimos datos enviados por la instrucción "AS_MAIL".

Programación del PLC
Manual de programación y manejo, 11/2019

7651

Instrucciones
4.2 Instrucciones

Ejemplo de llamada de "AS_MAIL"
Descripción
En un bloque de datos se guardan los datos que se dan a conocer a través de punteros ANY
de la instrucción "AS_MAIL". En este ejemplo se utiliza para ello el DB 2.
Por motivos relacionados con el tiempo de ejecución y el espacio en memoria, la instrucción
"AS_MAIL" no realiza una prueba de sintaxis de los parámetros TO_S, CC y FROM.

Parámetros TO_S, CCy FROM
Los parámetros TO_S, CC y FROM son punteros ANY hacia strings con, por ejemplo, el
siguiente contenido:
● TO: <wenna@mydomain.com>, <ruby@mydomain.com>,
● CC: <admin@mydomain.com>, <judy@mydomain.com>,
● FROM: <admin@mydomain.com>
Las siguientes reglas deben observarse a la hora de introducir los parámetros:
● Deben introducirse los caracteres "TO:", "CC:" y "FROM:".
● Antes de cada dirección debe introducirse un espacio y un corchete en "<".
● Después de cada dirección debe introducirse un corchete en ">".
● Después de cada dirección en TO_S y CC debe introducirse una coma.
● En FROM solo puede introducirse una dirección de correo electrónico que además no debe
tener una coma al final.

Inicialización / arranque en el OB 100
El parámetro COM_RST de la instrucción "AS_MAIL" debe activarse antes de la primera
llamada de la instrucción
, o bien cada vez que se cargue el DB de instancia correspondiente.
En el siguiente ejemplo, DB 1 es el DB de instancia de la instrucción "AS_MAIL".
SET

7652

//Activar RLO

R

DB1.REQ

//REQ se desactiva, de modo que la instrucción "AS_MAIL" no comienza
a enviar un mensaje de correo electrónico inmediatamente después de
la activación de COM_RST.

S

DB1.COM_RST

//COM_RST se activa; esto tiene que ocurrir una vez antes de la primera
llamada de la instrucción "AS_MAIL" para la inicialización, o bien des‐
pués de cada carga del DB de instancia correspondiente.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Llamada cíclica
Este ejemplo de llamada de la instrucción "AS_MAIL" debe llamarse cíclicamente (p. ej. en el
OB1).
El parámetro REQ debe ponerse a "1" en el programa de usuario a través de "Forzar variable".
Esta línea puede copiarse en una fuente AWL y compilarse. Para ello es necesario que los
bloques DB 1 y DB 2 hayan sido registrados en la tabla de variables del proyecto.
Ejemplo de llamada de "AS_MAIL"
DATA_BLOCK "DB2"

Explicación
//Bloque de datos global con los datos para la
instrucción "AS_MAIL"

TITLE =
VERSION : 1.0
STRUCT
TO_S : STRING [240 ] := 'TO:
<wenna@mydomain.com>,
<ruby@mydomain.com>,';

//Dirección del destinatario

CC : STRING [240 ] := 'CC:
<admin@mydomain.com>,
<judy@mydomain.com>,';

//Dirección del destinatario CC

FROM : STRING [60 ] := 'FROM:
<admin@mydomain.com>';

//Dirección del remitente

SUB : STRING [60 ] := 'Status plant 7';

//Asunto

TEXT : STRING [240 ] := 'Fault in plant 7
sector 2';

//Texto

USERNAME : STRING [60 ] := 'admin';

//Nombre de usuario para autentificación LOGIN

PASSWORD : STRING [60 ] := 'test';

//Contraseña para autenticación LOGIN

ATTACHMENT : ARRAY [1 .. 178 ] OF BYTE;

//Archivos adjuntos

END_STRUCT ;
BEGIN
END_DATA_BLOCK
DATA_BLOCK "DB1"

//DB de instancia de la instrucción "AS_MAIL"

TITLE =
AUTHOR : TELESERV
FAMILY : TELESERV
VERSION : 1.0
"AS_MAIL"
BEGIN
END_DATA_BLOCK
FUNCTION_BLOCK FB 1

Programación del PLC
Manual de programación y manejo, 11/2019

7653

Instrucciones
4.2 Instrucciones
Ejemplo de llamada de "AS_MAIL"
TITLE =Example AS_MAIL

Explicación
//El parámetro COM_RST de la instrucción
"AS_MAIL" debe activarse antes de la primera
llamada de "AS_MAIL", o bien cada vez que se
cargue el DB de instancia correspondiente. La
condición de llamada se activa durante la
ejecución del programa de usuario.

VERSION : 1.0
VAR
CallCondition: BOOL ;
END_VAR
BEGIN
NETWORK
CALL AS_MAIL, DB1 (

//Llamada de AS_MAIL

REQ := # CallCondition,

//Inicio de la petición con flanco ascendente

ADR_MAIL_SERVER := DW#16#C0A800C8,

//Equivale a la dirección IP 192.168.0.200 en
formato HEX

WATCH_DOG_TIME := T#2M,

//Intervalo de 2 min. dentro del cual debería
concluir el envío

USERNAME := DB2.USERNAME,

//Puntero al nombre de usuario del remitente. Si
DB2.USERNAME se omite, es decir, si no se le
asigna ningún parámetro, no se utiliza el
proceso de autenticación LOGIN.

PASSWORD := DB2.PASSWORD,

//Puntero hacia contraseña

TO_S := DB2.TO_S,

//Puntero hacia dirección de destinatario

CC := DB2.CC,

//Puntero a dirección de destinatario CC
(opcional). Si DB2.CC se omite, es decir, si no
se asigna, el mensaje de correo electrónico no
se envía a los destinatarios CC.

FROM := DB2.FROM,

//Puntero hacia dirección de remitente

SUB := DB2.SUB,

//Puntero hacia el asunto

TEXT := DB2.TEXT,

//Puntero hacia el texto del mensaje
(opcional). Si DB2.TEXT se omite, es decir, si
no se asigna, el mensaje de correo electrónico
se envía sin texto.

ATTACHMENT := DB2.ATTACHMENT,

//Puntero hacia los archivos adjuntos
(opcional). Ejemplo: 101 bytes adjuntos al
mensaje - ATTACHMENT := P#DB2.DBX974.0 BYTE 101
(el ejemplo se refiere al DB anterior).
//Si DB2.ATTACHMENT se omite, es decir, si no se
asigna, el mensaje de correo electrónico se
envía sin archivos adjuntos.

BUSY := M46.0,

//Parámetro de salida/estado BUSY

DONE := M46.1,

//Parámetro de salida/estado DONE

ERROR := M46.2,

//Parámetro de salida/estado ERROR

STATUS := MW48,

//Parámetro de salida/estado STATUS

SFC_STATUS := MW50

//Parámetro de salida/estado SFC_STATUS

);
//Comprobación de los resultados de la llamada
al final de la ejecución

7654

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Ejemplo de llamada de "AS_MAIL"
U M 46.0;

Explicación
//¿es BUSY ==0?

SPB End;

//No, BUSY ==1. "AS_MAIL" todavía está
ejecutando la petición

U M 46.1;

//¿La ejecución de "AS_MAIL" ha finalizado sin
errores?

SPB End;
NOP 0;

//No, se ha producido un error en la ejecución,
BUSY ==0, BR ==0
//Completar aquí valoración del error si
procede, STATUS, SFC_STATUS

End:BE;
END_FUNCTION_BLOCK

Nota
Parámetros opcionales
Para los parámetros opcionales USERNAME, PASSWORD, CC, TEXT y ATTACHMENT rige:
Si se elimina una asignación o se vuelve a insertar, el cambio no tiene efecto hasta que no se
vuelve a cargar el DB de instancia correspondiente (en el ejemplo DB 1), y se activa el
parámetro "COM_RST".

Programación del PLC
Manual de programación y manejo, 11/2019

7655

Instrucciones
4.2 Instrucciones

7656

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.1

5

Sinopsis del editor de programación

Función del editor de programación
El editor de programación es el entorno de desarrollo integrado para la programación de
funciones, bloques de función y bloques de organización. Proporciona toda la ayuda posible
para la creación de programas y la búsqueda de errores.
En función de la CPU utilizada, del lenguaje de programación y del tipo de bloque, el aspecto
y las funciones del editor de programación pueden variar.

Programación del PLC
Manual de programación y manejo, 11/2019

7657

Editor de programación
5.1 Sinopsis del editor de programación

Estructura del editor de programación
La figura siguiente muestra los componentes del editor de programación, tomando como
ejemplo KOP:

5

1
3
2
5

3
6

4

①
②
③
④
⑤
⑥

7658

Barra de herramientas
Interfaz del bloque
Paleta "Favoritos" de la Task Card "Instrucciones" y Favoritos en la ventana de programación
Ventana de programación
Task Card "Instrucciones"
Task Card "Test"

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.1 Sinopsis del editor de programación

Barra de herramientas
La barra de herramientas permite acceder a las principales funciones del editor de
programación, tales como:
● Mostrar y ocultar operandos absolutos
● Mostrar y ocultar Favoritos
● Saltar a errores de sintaxis
● Actualizar llamadas de bloque
● Mostrar y ocultar el estado del programa
Las funciones disponibles en la barra de herramientas pueden variar según el lenguaje de
programación utilizado.

Interfaz del bloque
La interfaz del bloque contiene las declaraciones de las variables locales que se utilizan sólo
en el bloque. Las secciones disponibles varían según el tipo de bloque.

Favoritos
Existe la posibilidad de crear favoritos para las instrucciones utilizadas con frecuencia. Estos
favoritos se muestran en la paleta "Favoritos" de la Task Card "Instrucciones". Además, los
favoritos también se pueden visualizar en la ventana de programación mediante la barra de
herramientas del editor de programación. De esta manera, se puede acceder a los favoritos sin
que la Task Card "Instrucciones" esté visible.

Ventana de programación
La ventana de programación es el área de trabajo del editor de programación. Aquí se puede
introducir el código. En función del lenguaje de programación utilizado, la ventana de
programación puede variar en su aspecto y funcionalidad.

Task Card "Instrucciones"
La Task Card "Instrucciones" permite acceder fácilmente a todas las instrucciones que pueden
utilizarse para crear el programa. Las instrucciones están divididas temáticamente en varias
paletas. Si un perfil de instrucciones está activo, las instrucciones disponibles varían. Para
cada instrucción se dispone de una breve descripción. Si una instrucción está disponible en
varias versiones, las versiones se muestran en una lista desplegable y en el programa se
emplea la versión seleccionada actualmente. Si es necesario es posible elegir otra versión de
la instrucción. Para ello, siga las indicaciones de "Principios básicos de las versiones de
instrucciones (Página 7673)".

Programación del PLC
Manual de programación y manejo, 11/2019

7659

Editor de programación
5.1 Sinopsis del editor de programación
La barra de herramientas de la Task Card permite acceder a las siguientes funciones:
● Examinar instrucciones hacia abajo o hacia arriba
Se pueden buscar instrucciones específicas en las paletas.
● Actualizar proyecto e instrucciones
Si se está trabajando en un proyecto creado con el TIA Portal V14, solo se dispone de las
versiones de instrucciones a partir de V14. El botón "Actualizar proyecto e instrucciones"
permite actualizar con total facilidad el proyecto al TIA Portal V14 SP1. A continuación la
Task Card "Instrucciones" incluye también las nuevas versiones de las instrucciones del
TIA Portal V14 SP1.
Nota
Observe las indicaciones siguientes:
● La actualización no modifica el programa, es decir, sigue incluyendo las versiones
antiguas de las instrucciones de V14. Para utilizar las nuevas versiones de las
instrucciones es necesario actualizar el programa.
● El botón "Actualizar proyecto e instrucciones" solo está activo si se continúa trabajando
con un proyecto del TIA Portal V14. El botón se desactiva en cuanto se actualiza el
proyecto al TIA Portal V14 SP1.
● Actualizar el programa en la CPU actual
Actualiza el programa de la CPU a las nuevas versiones de instrucciones.
● Cambiar modo de paleta
Es posible elegir entre modo de paleta individual y modo multipaleta.
Consulte también: Cambiar modo de paleta
● Mostrar/ocultar títulos de las columnas
Es posible mostrar u ocultar los títulos de las columnas en las paletas. La disposición de las
columnas se puede modificar haciendo clic en el título de la columna y moviendo la columna
mediante Drag & Drop.

Task Card "Test"
En la Task Card "Test" pueden realizarse ajustes que influyen en la búsqueda de errores con
ayuda del estado del programa. Las funciones de la Task Card "Test" están disponibles
únicamente en modo online. Incluye las paletas siguientes, que se muestran en función de la
CPU seleccionada y del lenguaje de programación configurado del bloque:
● Panel de control de la CPU
El estado operativo de la CPU se puede conmutar en el Panel de control de la CPU.
● Puntos de parada
Los bloques creados en uno de los lenguajes de programación textuales AWL o SCL
pueden probarse en el modo de etapa individual. Para ello, inserte puntos de parada en el
código del programa.
En la paleta "Puntos de parada" puede encontrar todos los puntos de parada que ha
introducido; se pueden activar, borrar, navegar hasta puntos de parada concretos o bien
establecer el entorno de llamada del punto de parada.
● Registro AS
En esta paleta se pueden leer los valores de los registros AS y los acumuladores.

7660

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.2 Comandos de teclado del editor de programación
● Control secuencial
En esta paleta se establece el modo de operación para el test de las cadenas secuenciales
de los bloques GRAPH.
● Ajustes de test
En esta paleta se establece la configuración de test de los bloques GRAPH.
● Entorno de llamada
En esta paleta se define el entorno de llamada del bloque.
● Jerarquía de llamada
Esta paleta permite seguir la jerarquía de llamada de los bloques. La jerarquía de llamada
se visualiza únicamente durante la observación de bloques.

Consulte también
Descripción de la interfaz de bloque (Página 7783)
Ampliar la superficie de la ventana de programación (Página 7666)
Buscar instrucciones (Página 7670)
Utilizar perfiles de instrucciones (Página 7677)

5.2

Comandos de teclado del editor de programación

Navegar en el editor
Función

Combinación de teclas

Abrir la Task Card "Instrucciones"

<Ctrl+Mayús+C>

Abrir la Task Card "Test"

<Ctrl+Mayús+O>

Agregar nuevo bloque

<Ctrl+N>

Abrir bloque/tipo de datos PLC

<F7>

Ampliar todos los segmentos

<Alt+F11>

Reducir todos los segmentos

<Alt+F12>

Navegar a la siguiente ubicación del bloque u operando seleccio‐ <Ctrl+Mayús+G>
nado
Navegar al lugar de anterior del bloque u operando seleccionado <Ctrl+Mayús+F>
Navegar al siguiente acceso de lectura o escritura

<Alt+F8>

Navegar al acceso de lectura o escritura anterior

<Alt+F9>

Navegar a la definición del bloque u operando seleccionado

<Ctrl+Mayús+D>

Programación del PLC
Manual de programación y manejo, 11/2019

7661

Editor de programación
5.2 Comandos de teclado del editor de programación

Navegar en el código del programa (KOP/FUP)
Función

Objeto seleccionado

Combinación de teclas

Navegar entre los objetos del segmento

Objeto del segmento

Botones de dirección

Navegar al primer elemento del segmento

Objeto del segmento

<Inicio>

Navegar al último elemento del segmento

Objeto del segmento

<Fin>

Navegar al siguiente elemento del segmento

Objeto del segmento

<Tab>

Navegar al elemento anterior del segmento

Objeto del segmento

<Mayús+Tab>

Insertar segmento

Cualquiera

<Ctrl+R>

Función

Posición del cursor

Combinación de teclas

Navegar en el código del programa

Línea

Botones de dirección

Una palabra hacia la derecha/izquierda

Línea

<Ctrl+botones de direc‐
ción>

Al inicio de la línea

Línea

<Inicio>

Navegar en el código del programa (AWL/SCL)

Al final de la línea

Línea

<Fin>

Al inicio de una sección del código

Línea

<Ctrl+Inicio>

Al final de una sección del código

Línea

<Ctrl+Fin>

Ir al segmento siguiente (solo AWL)

Título del segmento

<Flecha-hacia-abajo>

Ir al segmento siguiente (solo AWL)

Línea

<Tab>
Repita la combinación de
teclas hasta que la marca
de inserción se encuentre
en el siguiente segmento.

Ir al segmento anterior (solo AWL)

Título del segmento

<Flecha-hacia-arriba>

Ir al segmento anterior (solo AWL)

Línea

<Mayús+Tab>
Repita la combinación de
teclas hasta que la marca
de inserción se encuentre
en el segmento anterior.

Insertar segmento

Cualquiera

<Ctrl+R>

Objeto seleccionado

Combinación de teclas

Insertar un contacto normalmente abierto

Circuito

<Mayús+F2>

Insertar un contacto normalmente cerrado

Circuito

<Mayús+F3>

Insertar instrucciones (KOP)
Función

7662

Insertar cuadro vacío

Circuito

<Mayús+F5>

Insertar asignación

Circuito

<Mayús+F7>

Insertar "Abrir rama"

Circuito

<Mayús+F8>

Insertar "Cerrar rama"

Circuito

<Mayús+F9>

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.2 Comandos de teclado del editor de programación

Insertar instrucciones (FUP)
Función

Objeto seleccionado

Combinación de teclas

Insertar operación lógica Y

Segmento, entrada o
salida

<Mayús+F2>

Insertar operación lógica O

Segmento, entrada o
salida

<Mayús+F3>

Insertar cuadro vacío

Segmento

<Mayús+F5>

Insertar asignación

Segmento, entrada o
salida

<Mayús+F7>

Insertar "Abrir rama"

Línea de conexión
entre dos cuadros

<Mayús+F8>

Invertir RLO

Segmento, entrada o
salida

<Ctrl+Mayús+4>

Insertar entrada

Segmento, entrada o
salida

<Ctrl+Mayús+3>

Introducir operandos (KOP/FUP/GRAPH)
Función

Objeto seleccionado

Combinación de teclas

Activar el campo de entrada para el primer ope‐
rando de la instrucción

Instrucción

<Intro>
O bien:
<Letra/número cualquiera>
Al pulsar la tecla <Intro> se
abre un campo de entrada;
al pulsar letras o números,
estos se introducen en el
campo de entrada.

Activar el campo de entrada del operando

Operando

<F2>

Borrar operando

Operando

<Supr>

Definir variable

Operando

<Ctrl+Mayús+I>

Reasignar variable

Operando

<Ctrl+Mayús+P>

Cambiar nombre de la variable

Operando

<Ctrl+Mayús+T>

Introducir operandos

Campo de entrada
de operandos

<Letra/número cualquiera>

Confirmar la entrada del operando

Campo de entrada
de operandos

<Intro>

Abrir la función de autocompletar

Campo de entrada
de operandos

<Ctrl+I>

Rechazar el cambio actual

Campo de entrada
de operandos

<ESC>

Programación del PLC
Manual de programación y manejo, 11/2019

El campo de entrada se de‐
sactiva y se restablece el
contenido anterior.

7663

Editor de programación
5.2 Comandos de teclado del editor de programación

Editar instrucciones (AWL/SCL)
Función

Objeto seleccionado

Combinación de teclas

Aplicar sangría (solo SCL)

Línea

<Tab> o

Anular sangría (solo SCL)

Línea

<Ctrl+R>
<Mayús+Tab> o
<Ctrl+Mayús+R>
Formatear el texto seleccionado de forma auto‐
mática (solo SCL)

<Ctrl+Mayús+W>

Abrir el cuadro de diálogo "Opciones de llamada" Cursor detrás de una
llamada de bloque

<Intro>

Definir variable

Operando

<Ctrl+Mayús+I>

Reasignar variable

Operando

<Ctrl+Mayús+P>

Cambiar nombre de la variable

Operando

<Ctrl+Mayús+T>

Expandir/reducir lista de parámetros (solo SCL)

Operando

<Ctrl+Mayús+barra espa‐
ciadora>

Expandir/contraer sección de código

Marca de inserción
dentro de la sección
de código

<Ctrl+Mayús+Num+>

Expandir/contraer todas las secciones de código Cualquiera

<Ctrl+Mayús+Num->
<Ctrl+Mayús+Num*>
<Ctrl+Mayús+Num/>

Abrir la función de autocompletar

Cualquiera

<Ctrl+I> o <Ctrl+barra espa‐
ciadora>

Activar/borrar marcadores

<Ctrl+Mayús+M>

Ir al marcador siguiente

<Ctrl+Mayús+6>

Ir al marcador anterior

<Ctrl+Mayús+5>

Marcar la selección como comentario

Línea

<Ctrl+Mayús+Y>

Eliminar comentario

Línea

<Ctrl+Mayús+U>

Función

Área

Combinación de teclas

Retroceder/avanzar una página

Navegación, vista de <Retroceder página>/
etapa individual, vis‐ <Avanzar página>
ta de cadena, instruc‐
ciones permanentes

Navegar por la navegación

Navegación

Expandir/contraer objeto

Navegación

Ventana de programación de GRAPH

<Flecha-hacia-arriba>
<Flecha-hacia-abajo>
<+> o <Flecha-hacia-dere‐
cha>/
<-> o <Flecha-hacia-iz‐
quierda>

Cambiar entre la vista de etapa individual y la
vista de cadena si hay una etapa o una transición
seleccionada

7664

Navegación

<Intro>

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.2 Comandos de teclado del editor de programación
Función

Área

Cambiar entre navegación y área de trabajo

Navegación, vista de <ALT+F6>
etapa individual, vis‐
ta de cadena, instruc‐
ciones permanentes

Combinación de teclas

Saltar hasta el primer elemento de un segmento Vista de etapa indivi‐
dual

<Inicio>

Saltar hasta el último elemento de un segmento

Vista de etapa indivi‐
dual

<Fin>

Cambiar a interlock

Vista de etapa indivi‐
dual

<Ctrl+Inicio>

Cambiar a transición

Vista de etapa indivi‐
dual

<Ctrl+Fin>

Navegar por la estructura

Vista de cadena

Botones de dirección

Saltar a la primera etapa

Vista de cadena

<Inicio> o <Ctrl+Inicio>

Saltar a la última etapa

Vista de cadena

<Fin> o <Ctrl+Fin>

Abrir rama

Vista de cadena

<Mayús+F8>

Cerrar rama

Vista de cadena

<Mayús+F9>

Insertar fin de cadena

Vista de cadena

<Mayús+F7>

Insertar salto

Vista de cadena

<Mayús+F12>

Insertar etapa y transición

Vista de cadena

<Mayús+F5>

Borrar elemento

Vista de cadena

<Supr>

Saltar hasta el primer elemento editable

Instrucciones perma‐ <Inicio>
nentes

Saltar hasta el siguiente elemento editable

Instrucciones perma‐ <Tab>
nentes

Saltar hasta el último elemento editable

Instrucciones perma‐ <Fin>
nentes

Saltar hasta el elemento editable anterior

Instrucciones perma‐ <Mayús+Tab>
nentes

Saltar hasta el principio de la celda "Acción"

Acciones

<Inicio>

Saltar hasta el final de la celda "Acción"

Acciones

<Fin>

Insertar nueva acción

Acciones

<Intro>

Función

Área

Combinación de teclas

Expandir área

Vista general de
<Ctrl+Mayús+Num+>
áreas, área en la ven‐
tana de programación

Contraer área

<Ctrl+Mayús+Num->
Vista general de
áreas, área en la ven‐
tana de programación

Ventana de programación de SCL

Programación del PLC
Manual de programación y manejo, 11/2019

7665

Editor de programación
5.3 Ampliar la superficie de la ventana de programación
Función

Área

Combinación de teclas

Expandir todas las áreas

Vista general de
áreas, ventana de
programación

<Ctrl+Mayús+Num*>

Contraer todas las áreas

Vista general de
áreas, ventana de
programación

<Ctrl+Mayús+Num/>

Observar el programa
Función

Combinación de teclas

Posicionar/borrar punto de parada (AWL, SCL)

<Ctrl+Mayús+F9>

Saltar punto de parada (AWL, SCL)

<Ctrl+Mayús+F10>

Saltar a un bloque subordinado (AWL, SCL)

<Ctrl+Mayús+F11>

Regresar al bloque invocante (AWL, SCL)

<Ctrl+Mayús+F12>

Ejecutar el programa hasta la marca (posición del cursor) (AWL, <Ctrl+F3>
SCL)

5.3

Mostrar el estado del programa (AWL, SCL, tabla de variables
PLC, tabla de observación y bloque de datos)

<Ctrl+T>

Activar todos los puntos de parada (AWL, SCL)

<Ctrl+Mayús+F2>

Desactivar todos los puntos de parada (AWL, SCL)

<Ctrl+Mayús+F3>

Forzar a 0 (KOP, FUP)

<Ctrl+Mayús+9>

Forzar a 1 (KOP, FUP)

<Ctrl+Mayús+1>

Forzar operando (KOP, FUP)

<Ctrl+Mayús+2>

Ampliar la superficie de la ventana de programación

Introducción
Si se visualizan todos los elementos de la aplicación, la superficie de la ventana de
programación es relativamente pequeña. Por este motivo, con programas extensos puede ser
preciso desplazar a menudo el área de trabajo. Para evitarlo, es posible ocultar o minimizar la
visualización de los siguientes componentes de la aplicación y del editor de programación:
● Árbol del proyecto
● Task Cards
● Interfaz del bloque
● Favoritos
● Comentarios
● Segmentos

7666

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.3 Ampliar la superficie de la ventana de programación

Nota
Para las Task Cards, el árbol del proyecto y la ventana de inspección se puede utilizar de
manera adicional la opción "Contraer automáticamente". Así, las ventanas se cierran
automáticamente cuando no se necesitan.
Consulte también: Maximizar y minimizar el área de trabajo

Mostrar y ocultar el árbol del proyecto
Desde el árbol del proyecto se accede a todas las áreas del proyecto. Durante la creación del
programa es posible ocultar el árbol del proyecto para ampliar el tamaño de la ventana de
programación.
Para mostrar u ocultar el árbol del proyecto, proceda del siguiente modo:
1. Desactive la casilla de verificación "Árbol del proyecto" del menú "Ver" o haga clic en el
botón "Contraer" de la barra de título del árbol del proyecto para ocultarlo.
2. Active la casilla de verificación "Árbol del proyecto" del menú "Ver" o haga clic en el botón
"Expandir" de la barra de título del árbol del proyecto para mostrarlo.

Abrir y cerrar Task Cards
Las Task Cards se encuentran en el margen derecho de la ventana de programación.
Para abrir o cerrar Task Cards, proceda del siguiente modo:
1. Desactive la casilla de verificación "Task Card" del menú "Ver" o haga clic en el botón
"Contraer" de la barra de título de las Task Cards para cerrarlas.
2. Active la casilla de verificación "Task Card" del menú "Ver" o haga clic en el botón
"Expandir" de la barra de título de las Task Cards para abrirlas.

Mostrar y ocultar la interfaz del bloque
La interfaz de un bloque se encuentra en el área superior del editor de programación. Durante
la programación es posible ocultarla y mostrarla de nuevo en caso necesario.
Para mostrar u ocultar la interfaz del bloque, proceda del siguiente modo:
1. Haga clic en la flecha hacia arriba o hacia abajo situada en el área inferior de la interfaz,
dentro de la línea divisoria de ventanas.

Mostrar y ocultar Favoritos
Para mostrar u ocultar los Favoritos en el editor de programación, proceda del siguiente modo:
1. Haga clic en el botón "Mostrar Favoritos también en el editor" de la barra de herramientas
del editor de programación.

Programación del PLC
Manual de programación y manejo, 11/2019

7667

Editor de programación
5.4 Ajustar los nemónicos

Mostrar y ocultar comentarios
En un bloque es posible introducir un comentario para el bloque o para cada segmento. Estos
dos tipos de comentarios se muestran y ocultan de distintas maneras.
Para mostrar u ocultar un comentario de bloque, proceda del siguiente modo:
1. Haga clic en el triángulo que aparece al comienzo de la fila que contiene el título del bloque.
Para mostrar u ocultar los comentarios de segmentos, proceda del siguiente modo:
1. Haga clic en el botón "Activar/desactivar comentarios de segmentos" de la barra de
herramientas del editor de programación.
Nota
En función del lenguaje de programación utilizado, los comentarios disponibles pueden variar.

Expandir y contraer segmentos
Algunos lenguajes de programación utilizan segmentos. Éstos pueden abrirse o cerrarse
según necesidad.
Para expandir o contraer un segmento en particular, proceda del siguiente modo:
1. Si desea expandir un segmento, haga clic en la flecha hacia la derecha antepuesta al título
del segmento. Si desea contraer un segmento, haga clic en la flecha hacia abajo
antepuesta al título del segmento.
Para expandir o contraer todos los segmentos, proceda del siguiente modo:
1. Haga clic en el botón "Abrir todos los segmentos" o "Cerrar todos los segmentos" de la barra
de herramientas del editor de programación.
Nota
Los segmentos no se utilizan en todos los lenguajes de programación.

Consulte también
Sinopsis del editor de programación (Página 7657)

5.4

Ajustar los nemónicos
Los bloques pueden programarse utilizando nemónicos alemanes o internacionales. Al abrir el
TIA Portal por primera vez están preajustados los nemónicos internacionales. No obstante,
pueden cambiarse en todo momento.

7668

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.5 Mostrar operandos simbólicos y absolutos

Procedimiento
Para ajustar los nemónicos, proceda del siguiente modo:
1. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
2. Seleccione el grupo "General" en la navegación local.
3. Seleccione los nemónicos deseados del grupo "Configuración general".
Los nemónicos se cambian en todos los bloques.

5.5

Mostrar operandos simbólicos y absolutos
Los operandos pueden representarse en el editor de programación de las siguientes maneras:
● Representación simbólica
En el programa se visualizan los operandos simbólicos. Las direcciones absolutas
correspondientes se visualizan en tooltips al situar el puntero del ratón unos instantes sobre
el operando.
● Representación absoluta
En el programa se visualizan las direcciones absolutas. Los operandos simbólicos
correspondientes se visualizan en tooltips.
● Representación simbólica y absoluta
En el programa se visualizan operandos simbólicos y direcciones absolutas. Este ajuste
solo tiene efecto en bloques programados en KOP, FUP, AWL y GRAPH.
Nota
Para bloques GRAPH, tenga en cuenta que no se muestran operandos absolutos si en el
menú contextual de la columna "Acción" se ha desactivado la opción "Mostrar operandos
absolutos".
La representación de los operandos se puede ajustar de forma centralizada para todos los
bloques nuevos del proyecto, o bien para un bloque en particular.

Ajustar la representación de operandos de bloques nuevos
Para ajustar la representación de operandos de todos los bloques nuevos del proyecto,
proceda del siguiente modo:
1. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
2. Seleccione el grupo "Programación PLC > General" en la navegación local.
3. Seleccione la representación deseada en la lista desplegable "Representación de
operandos".
La representación seleccionada se utilizará para todos los bloques nuevos del programa.

Programación del PLC
Manual de programación y manejo, 11/2019

7669

Editor de programación
5.6 Buscar instrucciones

Ajustar la representación de operandos de un bloque concreto
Para cambiar la representación de los operandos, proceda del siguiente modo:
1. Abra el bloque en el editor de programación.
2. Haga clic en el botón "Operandos absolutos/simbólicos" de la barra de herramientas del
editor de programación.
Cada vez que se hace clic en el botón se obtiene una representación diferente y se modifica
el símbolo del botón.
O bien:
1. Abra el bloque en el editor de programación.
2. Haga clic en la flecha pequeña que aparece junto al botón "Operandos absolutos/
simbólicos" de la barra de herramientas del editor de programación.
Se abre una lista desplegable.
3. Seleccione la representación deseada de la lista desplegable.
Se modifica el símbolo del botón.

Consulte también
Fundamentos de los operandos (Página 95)

5.6

Buscar instrucciones
En la Task Card "Instrucciones" se pueden buscar instrucciones específicas para agregarlas
al programa. Tenga en cuenta las reglas siguientes al introducir los términos de búsqueda:
● No se distingue entre mayúsculas y minúsculas.
● En la búsqueda se tienen en cuenta partes de un término buscado.
● No pueden utilizarse caracteres comodín como p. ej. "*" y "?".
● Si una instrucción contiene guiones bajos, se encontrará en la búsqueda aunque no los
introduzca.
● En la búsqueda se tienen en cuenta los textos de las columnas "Nombre" y "Descripción".

Requisitos
● Hay un bloque abierto.
● La Task Card "Instrucciones" está abierta.

7670

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.7 Edición de textos de proyectos multilingües en bloques

Procedimiento
Para buscar una instrucción determinada en la Task Card "Instrucciones", proceda del
siguiente modo:
1. Seleccione el punto inicial de la búsqueda si desea buscar a partir de un punto concreto. Si
no selecciona nada, la búsqueda comenzará por arriba o por abajo dentro de la Task Card,
en función del tipo de búsqueda que haya seleccionado.
2. En la barra de herramientas de la Task Card, introduzca un término de búsqueda en el
campo de texto.
3. Haga clic en el botón "Búsqueda descendente" para buscar en la Task Card de arriba a
abajo.
4. Haga clic en el botón "Búsqueda ascendente" para buscar en la Task Card de abajo a arriba.
Como resultado aparece la primera coincidencia encontrada con el término de búsqueda.
Para continuar la búsqueda, vuelva a hacer clic en el botón "Búsqueda descendente" o
"Búsqueda ascendente". Si no se encuentra ninguna coincidencia, aparecerá el mensaje
correspondiente.

Consulte también
Sinopsis del editor de programación (Página 7657)

5.7

Edición de textos de proyectos multilingües en bloques

Introducción
Un bloque puede contener los siguientes textos de proyectos traducibles:
● Título del bloque y de los segmentos
● Comentarios sobre el bloque y los segmentos
● Comentarios en la interfaz del bloque
● Comentarios sobre los operandos utilizados
● Comentarios libres
Para traducir estos textos a otro idioma hay que activar el idioma como idioma del proyecto.
Encontrará más información sobre la activación de idiomas del proyecto en AUTOHOTSPOT.
Tenga en cuenta que los textos no deben sobrepasar la longitud de 32767 caracteres Unicode
tampoco una vez traducidos.

Requisitos
● Hay varios idiomas de proyecto activados.
● Hay un bloque abierto y este contiene como mínimo un texto traducible.
● El bloque no tiene protección de know-how.

Programación del PLC
Manual de programación y manejo, 11/2019

7671

Editor de programación
5.7 Edición de textos de proyectos multilingües en bloques

Procedimiento
Para editar un texto en todos los idiomas del proyecto, proceda del siguiente modo:
1. Seleccione el elemento deseado en el bloque abierto. La siguiente tabla proporciona una
vista general de las posibilidades de selección.
Elemento selec‐
cionado

Textos del proyecto mostrados

Paleta "Título del
bloque"

Seleccionando la paleta "Título del bloque" podrá editar los siguientes textos del
proyecto:
● Título del bloque y de los segmentos
● Comentarios sobre el bloque y los segmentos
● Comentarios libres en todo el bloque
● Comentarios en la interfaz del bloque
En el caso de las multiinstancias o las instancias de parámetros solo se
muestran los comentarios de elementos que se hayan modificado
específicamente para alguna instancia. Estos comentarios se reconocen
por el hecho de que no se muestran en gris. Los comentarios que se
muestran en gris solo pueden seleccionarse y editarse en el bloque de
función correspondiente.

Paleta de seg‐
mento

Seleccionando una o más paletas de segmento podrá editar los siguientes
textos del proyecto:
● Títulos y comentarios de los segmentos seleccionados
● Comentarios libres en los segmentos

Elemento del len‐ Seleccionando uno o varios elementos del lenguaje (p. ej., cuadros en KOP/
guaje
FUP) o una parte del código del programa en AWL o SCL, podrá editar los
siguientes textos del proyecto:
● Comentarios sobre los operandos utilizados, también sobre las variables
PLC globales
● En llamadas de bloques: comentarios sobre los parámetros de bloque que
reciben parámetros actuales
● Comentarios libres en el elemento del lenguaje
Etapa o transición Seleccionando una etapa o una transición en un bloque GRAPH, podrá editar
los siguientes textos del proyecto:
● Nombre de la etapa
● Nombre de la transición

2. Abra la ficha "Propiedades" de la ventana de inspección.
3. Abra la ficha subordinada "Textos".
En la ficha "Textos" se muestran los textos en los idiomas del proyecto activos y, si los hay,
sus traducciones.
4. Las traducciones se pueden editar directamente en la tabla de la ficha "Textos".
5. Para editar las traducciones con un editor externo, los textos mostrados se pueden exportar
al formato OOXML con los botones "Exportar/Importar textos del proyecto".

7672

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.8 Utilizar versiones de instrucciones

Nota
Editar todos los textos del proyecto en la tabla global "Textos del proyecto"
Las traducciones de los textos del proyecto también se pueden editar en la tabla global "Textos
del proyecto". La tabla se encuentra en el árbol del proyecto, en "Idiomas y recursos > Textos
del proyecto". Contiene todos los textos traducidos de todo el proyecto.
Encontrará más información sobre la traducción de textos en AUTOHOTSPOT.

5.8

Utilizar versiones de instrucciones

5.8.1

Principios básicos de las versiones de instrucciones

Introducción
Las instrucciones disponibles para programar el programa de usuario se gestionan en las
librerías del sistema. Si debido a una actualización se instala una versión nueva de una librería
de sistema, se instalarán también las versiones más recientes de las instrucciones de dicha
librería, si las hubiere.
Si hay varias versiones de una instrucción, se relacionan en una lista desplegable detrás de la
instrucción correspondiente en la Task Card "Instrucciones". Si las versiones de la instrucción
están ocultas, es posible visualizarlas mediante el menú contextual del título de la columna.

Programación del PLC
Manual de programación y manejo, 11/2019

7673

Editor de programación
5.8 Utilizar versiones de instrucciones
Seleccione en la lista desplegable la versión de la instrucción que debe usarse en el programa.
Si no se selecciona ninguna versión se utilizarán las más recientes.
Nota
Tenga en cuenta las indicaciones siguientes:
● Dentro de un dispositivo sólo es posible utilizar una misma versión de una instrucción.
● Si en un bloque con protección de know-how utiliza una instrucción de una versión diferente
de la versión ajustada en el proyecto, puede compilar el bloque con protección de knowhow sin contraseña si las interfaces de las versiones de las instrucciones son idénticas.
Cuando vuelva a abrir el bloque con protección de know-how deberá actualizar la llamada
de la instrucción. La llamada correspondiente está marcada en rojo. Al compilar todo el
programa el sistema actualiza la llamada automáticamente.
● Si se modifica la versión de una instrucción de la que dependen otras instrucciones, se
modificarán también las versiones de las instrucciones dependientes.
● Si se selecciona una versión de una instrucción que no puede ejecutarse en la CPU
utilizada, la instrucción se mostrará atenuada. Esto significa que no es posible utilizar dicha
versión de la instrucción en la CPU.
● En el árbol del proyecto, en las propiedades del bloque de sistema se indica el número de
bloque y este no tiene que coincidir con el número de versión de la instrucción
correspondiente en la Task Card.
● Si modifica la versión de una instrucción en la Task Card, tendrá que compilar el bloque de
sistema correspondiente en el árbol del proyecto para que el número de bloque
correspondiente se actualice.

Modificaciones en las versiones
Las versiones nuevas pueden ser principales o secundarias. Las versiones principales
nuevas, p. ej. 2.0 ó 3.0, incluyen cambios importantes. Por consiguiente, las versiones
principales nuevas pueden provocar cambios en la interfaz del bloque. Las versiones
secundarias nuevas, p. ej. 1.3 ó 1.4, incluyen cambios menores o soluciones a errores.

Uso de versiones de instrucciones
Dentro de un dispositivo existe la posibilidad de decidir qué versión de una instrucción debe
utilizarse. Si se selecciona una versión distinta de una instrucción, se aplicará la versión nueva
en todas las ubicaciones de la instrucción dentro del programa. Estas instrucciones se marcan
con un borde rojo en el programa. Seguidamente hay que cargar el programa en el dispositivo
para que se utilicen las versiones nuevas de la instrucción.
Si se abre el proyecto con una versión nueva del TIA Portal, dentro de la Task Card
"Instrucciones" se puede actualizar el proyecto y las instrucciones a la versión nueva del TIA
Portal. De este modo se dispone de versiones más recientes de algunas instrucciones. Sin
embargo, estas no reemplazan automáticamente las versiones antiguas del programa. Para
utilizar en el programa las nuevas versiones de las instrucciones es necesario actualizar
expresamente el programa.

7674

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.8 Utilizar versiones de instrucciones

Consulte también
Actualizar proyecto e instrucciones (Página 7675)
Actualizar el programa de la CPU actual (Página 7676)

5.8.2

Actualizar proyecto e instrucciones
Es posible actualizar un proyecto y las versiones de las instrucciones en un solo paso a una
nueva versión del TIA Portal. Al hacerlo no cambiará el programa.
Nota
No existe compatibilidad con versiones anteriores
Los proyectos guardados con la versión actual del TIA Portal no son compatibles con versiones
anteriores debido a la ampliación de funciones de la versión actual. Al actualizar se guarda un
proyecto nuevo en la versión actual del proyecto. El proyecto de origen no se sobrescribe y
puede continuar editándose con una versión anterior compatible del TIA Portal.

Procedimiento
Para actualizar un proyecto y las instrucciones, proceda del siguiente modo:
1. Abra un bloque lógico.
2. Abra la Task Card "Instrucciones".
3. Haga clic en el botón "Actualizar proyecto e instrucciones" de la barra de herramientas.
Se abre el cuadro de diálogo "Compatibilidad del proyecto".
4. Para continuar el proceso de actualización, haga clic en "Aceptar".

Resultado
El proyecto y las instrucciones se actualizan. El botón "Actualizar proyecto e instrucciones" se
desactiva y la función ya no puede ejecutarse de nuevo.
En el siguiente paso se actualiza el programa para utilizar las nuevas versiones de las
instrucciones.

Consulte también
Principios básicos de las versiones de instrucciones (Página 7673)
Actualizar el programa de la CPU actual (Página 7676)

Programación del PLC
Manual de programación y manejo, 11/2019

7675

Editor de programación
5.8 Utilizar versiones de instrucciones

5.8.3

Actualizar el programa de la CPU actual
Si en el proyecto hay nuevas versiones de instrucciones, se puede actualizar el programa de
una CPU para utilizar las nuevas versiones. Puede ser necesario, por ejemplo, después de una
actualización del proyecto a una nueva versión del TIA Portal. Tenga en cuenta que después
de la actualización es necesario compilar el programa.

Procedimiento
Para actualizar el programa de la CPU actual, proceda del modo siguiente:
1. En el árbol del proyecto, haga clic con el botón derecho del ratón en la CPU para que la
desee actualizar el programa.
2. En el menú contextual, elija el comando "Actualizar programa".
Se abre el cuadro de diálogo "Actualizar el programa en la CPU actual".
3. Para ejecutar la actualización, haga clic en "Aceptar".
4. Compile el programa para finalizar la actualización.
O:
1. Abra un bloque lógico.
2. Abra la Task Card "Instrucciones".
3. Haga clic en el botón "Actualizar el programa en la CPU actual" de la barra de herramientas.
Se abre el cuadro de diálogo "Actualizar el programa en la CPU actual".
4. Para ejecutar la actualización, haga clic en "Aceptar".
5. Compile el programa para finalizar la actualización.

Consulte también
Principios básicos de las versiones de instrucciones (Página 7673)
Actualizar proyecto e instrucciones (Página 7675)

7676

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.9 Utilizar perfiles de instrucciones

5.9

Utilizar perfiles de instrucciones

5.9.1

Principios básicos de los perfiles de instrucciones

Introducción
El TIA Portal proporciona un gran número de instrucciones para la programación del programa
de usuario. No obstante, si no desea utilizar todas las instrucciones, puede filtrar las que no
utilice. Para ese fin se pueden crear perfiles de instrucciones y definir dentro de cada perfil qué
instrucciones deben aparecer en la Task Card "Instrucciones". Dentro de un proyecto se
pueden crear varios perfiles de instrucciones, pero en cada caso solo puede estar activo un
perfil. A través de librerías globales se pueden intercambiar perfiles de instrucciones con otros
usuarios.
Nota
Tenga en cuenta las indicaciones siguientes:
● Si en un bloque se utilizan instrucciones que están excluidas por el perfil activo, se muestra
un error al compilar el bloque. Eso puede ocurrir p. ej. con un bloque arrastrado al programa
desde una librería.
● Las instrucciones de un perfil que no son soportadas por los productos instalados se borran
del perfil en la siguiente ejecución del mismo. Si se transfiere el perfil a un sistema de
ingeniería en el que las instrucciones sí que son soportadas por los productos instalados,
las instrucciones estarán presentes en el perfil, pero estarán desactivadas. En caso
necesario, es posible volver a activarlas en cualquier momento.
● Si se modifica el perfil activo, deberán compilarse nuevamente los bloques del proyecto.
Esto es necesario también para desactivar y borrar el perfil activo o para activar un perfil.

Consulte también
Crear un perfil de instrucciones (Página 7677)
Abrir y editar un perfil de instrucciones (Página 7679)
Activar y desactivar un perfil de instrucciones (Página 7680)
Borrar un perfil de instrucciones (Página 7681)

5.9.2

Crear un perfil de instrucciones

Requisitos
La carpeta "Datos comunes > Perfiles de instrucciones" del árbol del proyecto está abierta.

Programación del PLC
Manual de programación y manejo, 11/2019

7677

Editor de programación
5.9 Utilizar perfiles de instrucciones

Procedimiento
Para crear un perfil de instrucciones, proceda del siguiente modo:
1. Haga doble clic en el comando "Agregar perfil de instrucciones".
El editor de perfiles de instrucciones se abre y se muestra un perfil nuevo. En el perfil nuevo
están activadas todas las instrucciones.
2. Edite el perfil de instrucciones nuevo conforme a las necesidades.
El nombre del perfil nuevo se puede modificar si es necesario. Proceda para ello del siguiente
modo:
1. Haga clic con el botón derecho del ratón en el nuevo perfil de instrucciones.
2. Elija el comando "Cambiar nombre" del menú contextual.
3. Introduzca un nombre para el nuevo perfil de instrucciones.
Nota
Si se trata del primer perfil de instrucciones creado, se utilizará como perfil activo. En este caso,
hay que compilar todos los bloques del proyecto. Si ya existen otros perfiles de instrucciones,
será necesario activar explícitamente el perfil nuevo para que se utilice como perfil activo. En
el árbol del proyecto el perfil activo se reconoce por el símbolo.

Consulte también
Principios básicos de los perfiles de instrucciones (Página 7677)
Abrir y editar un perfil de instrucciones (Página 7679)
Activar y desactivar un perfil de instrucciones (Página 7680)
Borrar un perfil de instrucciones (Página 7681)

7678

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.9 Utilizar perfiles de instrucciones

5.9.3

Abrir y editar un perfil de instrucciones
Una vez que se ha abierto un perfil de instrucciones, se puede editar del siguiente modo:
● Activar y desactivar instrucciones
Para cada instrucción se puede definir si está permitida o no dentro del perfil de
instrucciones.
Nota
Tenga en cuenta que existen dependencias entre determinadas instrucciones. Por esta
razón, es posible que una única acción active o desactive varias instrucciones. El símbolo
de la casilla de verificación permite reconocer en qué carpetas hay instrucciones
desactivadas.
● Activar y desactivar versiones de instrucción
Algunas instrucciones están disponibles en diferentes versiones. Si una instrucción tiene
varias versiones, se puede definir para cada versión si está permitida o no dentro del perfil
de instrucciones.
● Cambiar un número de bloque
Si una instrucción es un bloque de función (FB) o una función (FC) internamente en el
sistema, la instrucción recibe del sistema un número de bloque determinado. Ese número
de bloque se puede cambiar por un número de bloque propio. Para algunas instrucciones
existen varias implementaciones dentro de una versión. En ese tipo de instrucciones los
números de bloque solo pueden modificarse individualmente para cada implementación.
Nota
Si en el programa se utiliza la instrucción de un perfil y el número de bloque definido ya está
ocupado en el programa de usuario por otro bloque, el número de bloque definido para la
instrucción se cambia por un número de bloque libre.

Requisitos
La carpeta "Datos comunes > Perfiles de instrucciones" del árbol del proyecto está abierta.

Abrir perfiles de instrucciones
Para abrir un perfil de instrucciones, proceda del siguiente modo:
1. Haga clic en el perfil de instrucciones que desea visualizar.
El perfil se abre en el editor de perfiles de instrucciones.

Editar perfiles de instrucciones
Para editar un perfil en el editor de perfiles de instrucciones, proceda del siguiente modo:
1. En la lista desplegable "Familia de dispositivos" seleccione el dispositivo para el cual desea
editar el perfil de instrucciones.
2. En la lista desplegable "Lenguaje" seleccione el lenguaje de programación para el cual
desea editar el perfil de instrucciones.

Programación del PLC
Manual de programación y manejo, 11/2019

7679

Editor de programación
5.9 Utilizar perfiles de instrucciones
3. Desactive las instrucciones o versiones de instrucción que desea excluir del perfil. Si
desactiva una carpeta, se desactivarán todas las instrucciones que contiene.
4. Active las instrucciones o versiones de instrucción que desea permitir dentro del perfil.
5. Si es necesario, asigne números de bloque propios.
Nota
Para CPUs de la serie S7-1200/1500 es posible asignar números hasta 65535. Para CPUs
de la serie S7300/400 encontrará las restricciones de los rangos numéricos en el
correspondiente manual de la CPU.

Nota
Si se modifica el perfil activo, se precisará un nuevo proceso de compilación para todos los
bloques del proyecto.

Consulte también
Principios básicos de los perfiles de instrucciones (Página 7677)
Crear un perfil de instrucciones (Página 7677)
Activar y desactivar un perfil de instrucciones (Página 7680)
Borrar un perfil de instrucciones (Página 7681)
Principios básicos de las versiones de instrucciones (Página 7673)

5.9.4

Activar y desactivar un perfil de instrucciones
Para que el filtrado de las instrucciones de un perfil pueda aplicarse, primero hay que activar
el perfil. El perfil activo puede desactivarse en cualquier momento, y entonces la Task Card
"Instrucciones" volverá a contener las instrucciones estándar.
Nota
Será necesario un nuevo proceso de compilación para todos los bloques del proyecto.

Requisitos
La carpeta "Datos comunes > Perfiles de instrucciones" del árbol del proyecto está abierta.

7680

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.9 Utilizar perfiles de instrucciones

Activar un perfil de instrucciones
Para activar un perfil de instrucciones, proceda del siguiente modo:
1. Haga clic con el botón derecho del ratón en el perfil de instrucciones que desea activar.
2. Elija el comando "Activar perfil de instrucciones" del menú contextual.
El perfil de instrucciones seleccionado será entonces el perfil activo. Así, las instrucciones
solo pueden utilizarse conforme a los ajustes de ese perfil.

Desactivar un perfil de instrucciones
Para desactivar el perfil de instrucciones activo, proceda del siguiente modo:
1. Haga clic con el botón derecho del ratón en el perfil de instrucciones que desea desactivar.
2. Elija el comando "Desactivar perfil de instrucciones" del menú contextual.
Si no hay ningún perfil de instrucciones activo, en la Task Card "Instrucciones" estarán
disponibles de nuevo todas las instrucciones.

Consulte también
Principios básicos de los perfiles de instrucciones (Página 7677)
Crear un perfil de instrucciones (Página 7677)
Abrir y editar un perfil de instrucciones (Página 7679)
Borrar un perfil de instrucciones (Página 7681)

5.9.5

Borrar un perfil de instrucciones

Requisitos
La carpeta "Datos comunes > Perfiles de instrucciones" del árbol del proyecto está abierta.

Procedimiento
Para borrar un perfil de instrucciones, proceda del siguiente modo:
1. Haga clic con el botón derecho del ratón en el perfil de instrucciones que desea borrar.
2. Elija el comando "Borrar" del menú contextual.
Nota
Si se borra el perfil activo, se precisará un nuevo proceso de compilación para todos los
bloques del proyecto.

Programación del PLC
Manual de programación y manejo, 11/2019

7681

Editor de programación
5.10 Utilizar la función automática de autocompletar

Resultado
El perfil de instrucciones seleccionado se borra. Si el perfil de instrucciones borrado era el perfil
activo, no habrá ningún perfil activo y en la Task Card "Instrucciones" se mostrarán de nuevo
todas las instrucciones disponibles de forma estándar.

Consulte también
Principios básicos de los perfiles de instrucciones (Página 7677)
Crear un perfil de instrucciones (Página 7677)
Abrir y editar un perfil de instrucciones (Página 7679)
Activar y desactivar un perfil de instrucciones (Página 7680)

5.10

Utilizar la función automática de autocompletar

5.10.1

Principios básicos de la función automática de autocompletar

Función
En la ventana de programación del editor de programación se puede utilizar la función
automática de autocompletar para acceder fácilmente a las variables o instrucciones
existentes durante la programación. La función automática de autocompletar significa que en
un cuadro de diálogo se obtiene una lista específica de contexto, desde la cual se pueden
seleccionar las variables e instrucciones deseadas.

Consulte también
Utilizar la función automática de autocompletar en los lenguajes de programación gráficos
(Página 7683)
Utilizar la función automática de autocompletar en los lenguajes de programación textuales
(Página 7684)

7682

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.10 Utilizar la función automática de autocompletar

5.10.2

Utilizar la función automática de autocompletar en los lenguajes de programación
gráficos

Insertar variables mediante la función automática de autocompletar
Para insertar variables en los lenguajes gráficos de programación mediante la función
automática de autocompletar, proceda del siguiente modo:
1. Seleccione un operando de la instrucción al que desee asignar una variable.
Se abre el campo de entrada del operando. Junto al campo de entrada aparece el botón de
la función automática de autocompletar.
2. Haga clic en el botón para la función automática de autocompletar o pulse la combinación
de teclas <Ctrl+I>.
Se abre la función automática de autocompletar. Según el contexto, esta contiene solo las
variables locales y globales, los bloques de datos y las multiinstancias permitidos para el
operando. Con <Esc> se puede abandonar la función automática de autocompletar en
cualquier momento.
3. Seleccione la variable deseada de la lista. Si lo desea, también puede filtrar la lista:
– Introduzca p. ej. las iniciales de la variable o instrucción que desea insertar. Con cada
letra introducida se sigue filtrando la función automática de autocompletar. Si no hay
variables o instrucciones que comiencen con las letras introducidas, la función
automática de autocompletar se mantiene en la última concordancia.
– Introduzca # para acceder a las variables locales de la interfaz del bloque.
– Introduzca " para acceder a las variables globales.
– Introduzca % para acceder a direcciones absolutas.
Si la variable es una variable estructurada, un bloque de datos o una multiinstancia, se
muestra una flecha al final de la fila. Haga clic en la flecha para visualizar los elementos
subordinados. De esta manera se puede navegar hasta el último nivel. Si para el operando
está permitida una estructura como tipo de datos, se puede seleccionar "Ninguna entrada"
en la lista. De ese modo se asigna al operando la estructura completa como variable. Utilice
<Retroceso> para regresar al nivel anterior.
4. Pulse la tecla <Intro> para aplicar la variable.

Consulte también
Principios básicos de la función automática de autocompletar (Página 7682)
Utilizar la función automática de autocompletar en los lenguajes de programación textuales
(Página 7684)

Programación del PLC
Manual de programación y manejo, 11/2019

7683

Editor de programación
5.10 Utilizar la función automática de autocompletar

5.10.3

Utilizar la función automática de autocompletar en los lenguajes de programación
textuales

Insertar variables e instrucciones mediante la función automática de autocompletar
Para insertar variables e instrucciones en los lenguajes de programación textuales mediante
la función automática de autocompletar, proceda del siguiente modo:
1. Introduzca las iniciales de la variable o instrucción que desea insertar. Si lo desea, también
puede filtrar por el tipo de variable:
– Introduzca # para acceder a las variables locales de la interfaz del bloque.
– Introduzca " para acceder a las variables globales.
– Introduzca % para acceder a direcciones absolutas.
Se abre la función automática de autocompletar. Según el contexto, esta contiene solo las
variables locales y globales, los bloques de datos, las multiinstancias y las instrucciones
permitidos en la posición actual. Con <Esc> se puede abandonar la función automática de
autocompletar en cualquier momento.
2. Introduzca otras letras de la variable o instrucción que desea insertar. Con <Intro> o <Tab>
se aplica la variable o instrucción y se cierra la función de autocompletar.
Con cada letra introducida se sigue filtrando la función automática de autocompletar. Si no
hay variables ni instrucciones que comiencen con las letras introducidas, la función de
autocompletar contiene solo los resultados coincidentes hasta entonces.
3. Seleccione la variable o instrucción deseadas de la lista.
Si una variable es una variable estructurada, un bloque de datos o una multiinstancia,
seleccione primero la variable, el bloque de datos o la multiinstancia desde la función de
autocompletar y aplique la selección con <Intro>. Para seleccionar los componentes
restantes de la estructura, del bloque de datos o de la multiinstancia, introduzca un punto.
A continuación se vuelve a abrir la función de autocompletar y se puede seleccionar el
siguiente componente.
4. Pulse la tecla <Intro> para aplicar la variable.

Consulte también
Principios básicos de la función automática de autocompletar (Página 7682)
Utilizar la función automática de autocompletar en los lenguajes de programación gráficos
(Página 7683)

7684

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.11 Configuración general de la programación PLC

5.11

Configuración general de la programación PLC

5.11.1

Sinopsis de la configuración general

Sinopsis
La tabla siguiente muestra los ajustes generales que se pueden efectuar:
Grupo

Ajuste

Descripción

Vista

Representación de los operandos (KOP/ Representación de los operandos en el
FUP/AWL/GRAPH)
editor de programación. Existen las op‐
ciones siguientes:
● Simbólica y absoluta
● Simbólica
● Absoluto

Compilación

Programación del PLC
Manual de programación y manejo, 11/2019

Información de variables
(KOP/FUP/AWL/GRAPH)

En el editor de programación se visuali‐
za información adicional de las varia‐
bles utilizadas. Si selecciona la opción
"Información de la variable con comen‐
tarios jerárquicos", en las variables es‐
tructuradas se mostrarán también los
comentarios de los niveles superiores
de la estructura.

Posición de la información de variables
(KOP/FUP)

Determina la posición en la que debe
mostrarse la información de las varia‐
bles. La información de variable puede
visualizarse agrupada debajo de un seg‐
mento KOP/FUP o bien directamente
en el operando correspondiente.

Con comentarios de segmento
(KOP/FUP/AWL)

Los comentarios de segmento se visua‐
lizan.

Borrar parámetros actuales al sincroni‐
zar la interfaz

Los parámetros actuales se borran si el
parámetro formal correspondiente se
ha borrado del bloque llamado y se eje‐
cuta la función "Actualizar llamada de
bloque" o se compila el bloque.

7685

Editor de programación
5.11 Configuración general de la programación PLC
Grupo

Ajuste

Ajuste predeterminado para bloques
nuevos

Comprobación CEI para bloques lógicos La compatibilidad de operandos en ope‐
raciones de comparación y aritméticas
se verifica según las normas CEI. Los
operandos no compatibles deben con‐
vertirse explícitamente.

Descripción

Consulte también: Vista general de los
tipos de datos válidos (Página 241)
Activar "DB accesible desde OPC UA"
para bloques de datos nuevos

Si la casilla de verificación está activa‐
da, el atributo "DB accesible desde OPC
UA" se activará para bloques de datos
globales nuevos. De este modo, el blo‐
que de datos es accesible como objeto
completo desde OPC UA. Seguidamen‐
te, es posible habilitar o bloquear indivi‐
dualmente las diferentes variables del
bloque de datos para OPC UA.

Definir como remanentes los elementos
de bloques de datos de instancia con
acceso "Estándar".

Si la casilla de verificación está activa‐
da, el atributo "Remanente" se activará
en las variables nuevas. Este ajuste se
aplica a los siguientes tipos de bloques
de datos:

Consulte también: AUTOHOTSPOT

● S7-1200/S7-1500: bloques de datos
de instancia sin acceso optimizado el ajuste se aplica a todas las
variables del bloque de datos.
● S7-1200/S7-1500: bloques de datos
de instancia con acceso optimizado
- el ajuste se aplica a todas las
variables que tienen el atributo
"Remanencia: ajustar en IDB".
Nota
En otros tipos de bloques de datos no es
posible definir ajustes predeterminados
para la remanencia.
● S7-300/S7-400: las variables de
bloques de datos de instancia y
bloques de datos globales son
remanentes por defecto. Si se
modifican los ajustes de
remanencia, el cambio se aplica a
todas las variables del bloque.
● S7-1200/S7-1500: las variables de
bloques de datos de instancia con
acceso optimizado no son
remanentes por defecto. La

7686

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.11 Configuración general de la programación PLC
Grupo

Ajuste

Descripción
remanencia puede activarse
individualmente para cada variable.
Consulte también:
Ajustar remanencia (Página 7855)

Configuración avanzada

Definir el título del segmento automáti‐
camente

Define el título de un segmento a partir
del comentario del parámetro de salida
de la primera instrucción de escritura en
el segmento.
Consulte también: Insertar título del seg‐
mento (Página 7952)

Cargar sin reinicializar

Mostrar la función automática de auto‐
completar

La función automática de autocomple‐
tar se visualiza.

Nemónicos

Representación alemana o internacio‐
nal de las operaciones y operandos

Reserva de memoria

Define el tamaño de la reserva en la
memoria estándar disponible para am‐
pliaciones de interfaz.
Consulte también: Cargar bloques para
S7-1200/1500 (Página 8368)

Interfaz de bloque/elementos de bloque
de datos

Definir "Accesible desde HMI/OPC UA/ Activa la opción "Accesible desde HMI/
Web API" para nuevos elementos y ele‐ OPC UA/Web API" para nuevas varia‐
mentos de bloques de datos ARRAY
bles en la interfaz del bloque y los blo‐
ques de datos. Esta opción resulta es‐
pecialmente útil al trabajar con grandes
cantidades de datos en bloques de da‐
tos ARRAY.
Consulte también: Principios básicos de
la programación de bloques de datos
(Página 7839)
Definir "Escribible desde HMI/OPC UA/ Si la casilla de verificación está activa‐
Web API" para nuevos elementos y ele‐ da, el atributo "Escribible desde HMI/
mentos de bloques de datos ARRAY
OPC UA/Web API" se define para nue‐
vos elementos en la interfaz del bloque
y en los bloques de datos. Esta opción
resulta especialmente útil al trabajar
con grandes cantidades de datos en
bloques de datos ARRAY.
Consulte también: Principios básicos de
la programación de bloques de datos
(Página 7839)

Consulte también
Descripción de la interfaz de bloque (Página 7783)
Modificar la configuración (Página 7688)
Direcciones y tipos de datos admisibles para variables PLC (Página 7893)
Fundamentos del acceso a bloques (Página 54)

Programación del PLC
Manual de programación y manejo, 11/2019

7687

Editor de programación
5.12 Corregir errores de sintaxis en el programa
Activar o desactivar la verificación CEI (Página 508)
Utilizar la función automática de autocompletar (Página 7682)

5.11.2

Modificar la configuración

Procedimiento
Para modificar la configuración, proceda del siguiente modo:
1. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
2. Seleccione el grupo "Programación PLC" en la navegación local.
3. Modifique la configuración.

Resultado
El cambio se aplica sin necesidad de guardarlo explícitamente.

Consulte también
Sinopsis de la configuración general (Página 7685)

5.12

Corregir errores de sintaxis en el programa

5.12.1

Principios básicos de los errores de sintaxis

Error de sintaxis
Los siguientes errores se consideran errores de sintaxis:
● Separadores ausentes o la utilización de demasiados separadores
● Fallos de notación de palabras clave
● Notación errónea de las etiquetas
● Falta de concordancia entre la notación y los nemónicos ajustados (p. ej. "I2.3" en lugar de
"I2.3")
● Utilización de palabras clave como operandos

Identificación de errores de sintaxis
Los errores de sintaxis se resaltan con subrayado rojo o con texto rojo.

7688

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.12 Corregir errores de sintaxis en el programa
Esta marca permite detectar a primera vista las entradas incorrectas, y saltar de error a error
para corregirlo. Asimismo, los errores de sintaxis se listan con el respectivo mensaje de error
en la ficha "Información" en la ventana de inspección.

Consulte también
Buscar errores de sintaxis en el programa (Página 7689)

5.12.2

Buscar errores de sintaxis en el programa

Procedimiento
Para buscar errores de sintaxis en el programa de usuario, proceda del siguiente modo:
1. Seleccione la posición del programa en la que desea buscar los errores.
2. Haga clic en el botón "Ir al error siguiente" de la barra de herramientas.
Se marca el primer error desde la posición seleccionada.
Los botones "Ir al error siguiente" e "Ir al error anterior" de la barra de herramientas permiten
encontrar y corregir todos los errores del bloque.
O bien:
1. En la ventana de inspección, elija "Información > Sintaxis" para abrir la lista de errores.
Todos los errores de sintaxis se listan en la tabla junto con una breve descripción del error.
2. Si aparece, haga clic en el signo de interrogación azul situado junto al texto de error para
obtener indicaciones adicionales sobre cómo solucionar el error.
3. Haga doble clic en el error que desea corregir.
Se selecciona el error en cuestión.

Consulte también
Principios básicos de los errores de sintaxis (Página 7688)

Programación del PLC
Manual de programación y manejo, 11/2019

7689

Editor de programación
5.13 Cambiar el lenguaje de programación

5.13

Cambiar el lenguaje de programación

5.13.1

Reglas para cambiar el lenguaje de programación

Reglas
Observe las reglas siguientes al cambiar el lenguaje de programación de un bloque:
● Todas las familias de CPU:
– Sólo es posible cambiar bloques completos. No es posible cambiar segmentos
individuales.
– No es posible cambiar entre bloques programados con los lenguajes de programación
SCL o GRAPH. No obstante, en los bloques GRAPH se puede cambiar el lenguaje de
los segmentos entre KOP y FUP.
● S7-300/400:
– Se puede cambiar entre los lenguajes de programación KOP, FUP y AWL.
– Se pueden crear segmentos en un bloque con un lenguaje de programación diferente y
copiarlos luego al bloque deseado.
– Los segmentos del bloque cuyo lenguaje de programación no se puede cambiar se
visualizan en el lenguaje original.
● S7-1200/1500:
– Se puede cambiar entre los lenguajes de programación KOP y FUP.
● S7-1500:
– Se pueden crear segmentos AWL dentro de bloques KOP y FUP. Lo que no es posible
es copiar entre AWL y KOP/FUP.

5.13.2

Cambiar el lenguaje de programación

Procedimiento
Para cambiar el lenguaje de programación, proceda del siguiente modo:
1. En el árbol del proyecto, haga clic con el botón derecho del ratón en el bloque.
2. Elija el comando "Propiedades" del menú contextual.
Se abre el cuadro de diálogo con las propiedades del bloque.
3. Seleccione la entrada "General" en la navegación local.
4. Seleccione el nuevo lenguaje de programación de la lista desplegable "Lenguaje".
5. Confirme la selección con "Aceptar".

7690

Programación del PLC
Manual de programación y manejo, 11/2019

Editor de programación
5.13 Cambiar el lenguaje de programación

Consulte también
Reglas para cambiar el lenguaje de programación (Página 7690)

Programación del PLC
Manual de programación y manejo, 11/2019

7691

Editor de programación
5.13 Cambiar el lenguaje de programación

7692

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.1

Principios básicos de las Software Units

6.1.1

Introducción a las Software Units

6

Programación con Software Units
Las Software Units permiten subdividir el programa de usuario en unidades de programa
individuales que se pueden editar y cargar independientemente unas de otras. Para ello, en el
árbol del proyecto se dispone de una nueva carpeta "Software Units" en la que podrá crear y
programar sus propias Software Units.
La siguiente figura muestra la carpeta "Software Units" en el árbol del proyecto:

Cada Software Unit contiene los elementos principales siguientes:
● Relaciones: la tabla de relaciones permite crear accesos desde la Software Unit a los
objetos siguientes:
– Tablas de variables PLC, tipos de datos PLC y bloques publicados de otras Software
Units para las que exista una relación
– Bloques de datos globales que se encuentran fuera de la Software Unit
– Objetos tecnológicos
● Carpeta "Bloques de programa": En esta carpeta se crean los bloques de programa
(bloques de organización, bloques de función, funciones, bloques de datos).
● Carpeta "Fuentes externas": en esta carpeta se importan fuentes SCL externas para
generar bloques o tipos de datos PLC a partir de ellas.
● Carpeta "Variables PLC": en esta carpeta se crean las tablas de variables PLC, las
variables PLC y las constantes de usuario.
● Carpeta "Tipos de datos PLC": en esta carpeta se crean los tipos de datos PLC.

Programación del PLC
Manual de programación y manejo, 11/2019

7693

Utilización de las Software Units
6.1 Principios básicos de las Software Units
● Supervisiones y avisos de PLC: abre el editor de avisos y supervisiones
● Listas de textos de aviso de PLC: abre el editor de listas de textos
La posibilidad de crear el programa de usuario dentro de Software Units es una posibilidad de
programación adicional que no existía hasta ahora. Esto significa que se dispone de una gran
flexibilidad para elegir qué partes del programa se crearán dentro de las Software Units y
cuáles fuera.
Nota
Tenga en cuenta las indicaciones siguientes al utilizar Software Units:
● Las Software Units se pueden utilizar con todas las variantes de CPU S7-1500 con versión
de firmware V2.6 o superiores.
● Por cada CPU se pueden utilizar hasta 255 Software Units.
● El atributo "Acceso optimizado al bloque" está activado para todos los bloques de programa
de una Software Unit, y no puede desactivarse.
● Si ha creado una copia de seguridad online de un dispositivo que soporte Software Units,
no podrá utilizar esta copia de seguridad con un dispositivo que no soporte Software Units.
● La información sobre el programa contiene información acerca de todos los bloques,
independientemente de si se han creado en una Software Unit o no.
● Los bloques de datos y variables de Software Units también pueden verse en un proxy de
dispositivo y, por tanto, se pueden exportar e importar. Aquí es indiferente si los bloques de
datos se han publicado o no.
● Interfaz del cliente OPC UA: Los bloques de datos de configuración que el sistema genera
a partir de interfaces de cliente OPC UA ("<nombre de la interfaz de
cliente_Configuration>") se crean siempre fuera de las Software Units. Para acceder a
ellas, se puede crear una relación con estas interfaces de cliente. Como tipo de relación
debe utilizarse la opción "Bloque de datos fuera de la Software Unit".

Estructura del programa
Independientemente de si desea distribuir un programa ya existente en Software Units o iniciar
un proyecto nuevo, primero debe planificar la estructura del programa. La distribución práctica
del programa de usuario en Software Units puede regirse, por ejemplo, por los siguientes
criterios:
● Unidades funcionales y tecnológicas
En Software Units se pueden formar unidades funcionales o tecnológicas que pueden
editarse y cargarse independientemente entre sí. Si los bloques de un programa existente
ya estaban distribuidos en grupos, quizás resulte razonable crear Software Units con ellos.
● Frecuencia de cambios esperada
Otra posibilidad de distribución es la frecuencia de cambios esperada de las partes del
programa. Para que se generen unidades cargables independientemente entre sí, cree
Software Units propias para partes del programa con intervalos de cambio diferentes. De
ese modo es posible crear en una Software Unit bloques con funciones básicas que no
requieran modificaciones frecuentes, y en otra Software Unit bloques que requieran
modificaciones frecuentes para la puesta en marcha. Esta distribución también puede
facilitar la búsqueda de errores.

7694

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.1 Principios básicos de las Software Units
● Autores
Si distribuye el programa por autores, eso facilitará enormemente la coordinación. Para
optimizar aún más la colaboración entre los usuarios del proyecto, utilice Software Units en
combinación con Multiuser Engineering.
● Encapsulado máximo posible de las Software Units
Para poder editar y cargar las Software Units independientemente entre sí debe haber las
mínimas referencias cruzadas posibles entre ellas. Por ello, utilice los elementos del
programa públicos y las relaciones solo si son realmente necesarios. Intente, de ese modo,
encapsular las distintas Software Units en el máximo grado posible.
Naturalmente, también es posible mezclar los diferentes criterios o establecer criterios propios
para la distribución. No obstante, debe establecer el encapsulado de las Software Units como
criterio principal para obtener las máximas ventajas posibles de ellas.
Consulte también: Estructuras de programa posibles con Software Units (Página 7700)

Uso de Software Units para la puesta en marcha común
La estructuración del programa de usuario en Software Units facilita también la puesta en
marcha del programa de usuario en un PLC por parte de varios usuarios. Tal estructuración y
la distribución en diferentes áreas de responsabilidad permiten cargar en el PLC los cambios
realizados en distintas Software Units con independencia entre ellas. El TIA Portal garantiza
que los cambios no sean sobrescritos por otros usuarios. En la mayoría de los casos eso
permite prescindir de la sincronización del programa de usuario a través del PLC, con lo que
se acelera el proceso de carga al PLC. Observe los requisitos para la carga de Software Units.
Nota
En la puesta en marcha común tenga en cuenta que solo es posible sincronizar bloques. En el
proceso de sincronización no se tienen en cuenta las relaciones ni las propiedades de las
Software Units.
Consulte también: Reglas para la sincronización de PLC
Encontrará más información en los siguientes capítulos:
● Carga de Software Units (Página 7720)
● Introducción a Multiuser Commissioning

Accesos a datos
En las Software Units se pueden crear los siguientes elementos de programa:
● Bloques (OB, FB, FC y DB)
● Tablas de variables PLC y variables PLC
● Tipos de datos PLC
Para poder acceder a estos elementos de programa desde fuera de la Software Unit propia es
necesario publicarlos. No obstante, esta función no está disponible para bloques de
organización. A ellos solo puede accederse desde dentro de la Software Unit en la que están
definidos.

Programación del PLC
Manual de programación y manejo, 11/2019

7695

Utilización de las Software Units
6.1 Principios básicos de las Software Units
En las tablas de observación y forzado permanente se puede acceder a todos los datos del
PLC, independientemente de su posición o de su estado de publicación.
Para acceder a FB, FC, DB globales, tablas de variables PLC y tipos de datos PLC desde otras
Software Units es necesario que estos estén publicados y además debe existir una relación
con la Software Unit correspondiente. Mediante relaciones también se puede acceder a
bloques de datos globales y objetos tecnológicos existentes fuera de las Software Units.
La siguiente figura muestra los posibles accesos a datos entre programas dentro y fuera de
Software Units:

3URJUDPDHQ6RIWZDUH8QLWV

3URJUDPDIXHUDGH6RIWZDUH8QLWV

$FFHVRDEORTXHVGHGDWRV
JOREDOHV HO'%QRSXHGHFRQWHQHU
WLSRVGHGDWRV3/&
*OREDO
'%
P\)%

$FFHVRDREMHWRVWHFQROµJLFRV

%ORFN
&DOO

/ODPDGDGHEORTXH
P\)%

$FFHVRDWLSRVGHGDWRV3/&
GHILQLGRVSRUHOXVXDULR
P\)&

XVHU7\SH8'7
(OHPHQW',17
(OHPHQW',17
(OHPHQW',17

$FFHVRDYDULDEOHV3/&JOREDOHV
FRQVWDQWHVPDUFDVWHPSRUL]DGR
UHV\FRQWDGRUHV
*OREDO
'%
$FFHVRGHOSURJUDPDIXHUDGH
6RIWZDUH8QLWV

5HODFLµQQHFHVDULD

7696

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.1 Principios básicos de las Software Units

Consulte también
Creación de programas de PLC en Software Units (Página 7697)
Utilizar archivos fuente externos (Página 7754)

6.1.2

Creación de programas de PLC en Software Units
Los conceptos de programación generales son los mismos cuando se crean programas en
Software Units. El programa de usuario se crea de la forma habitual en el editor de
programación. Se dispone de las mismas ayudas de programación que fuera de las Software
Units, p. ej. arrastrar y colocar instrucciones desde la Task Card "Instrucciones" y la función de
autocompletar al introducir tipos de datos o nombres de operandos.

Particularidades de la creación de programas en Software Units.
Cuando programe dentro de las Software Units tenga en cuenta los siguientes puntos:
● El atributo "Acceso optimizado al bloque" está activado para todos los bloques de programa
de una Software Unit, y no puede desactivarse. Esto implica que este atributo debe estar
activado al desplazar bloques a una Software Unit desde fuera de Software Units. Por esa
razón, no utilice instrucciones cuyos parámetros requieran un direccionamiento absoluto,
como p. ej. "PUT" o "GET".
● Las partes del programa que se crean fuera de una Software Unit no tienen acceso a las
partes del programa que se crean dentro de una Software Unit. Y al revés, los bloques que
se hayan programado en una Software Unit no pueden acceder a los bloques que se
encuentren fuera de las Software Units.
● Sin embargo, es posible permitir a una Software Unit específica el acceso a determinados
elementos de programa ubicados fuera de las Software Units. Así, p. ej., es posible acceder
a bloques de datos globales y objetos tecnológicos existentes fuera de las Software Units.
● El código que se encuentra dentro de las Software Units es parte del programa de usuario
completo. Por ello, p. ej. los nombres de los bloques deben ser unívocos en toda la CPU.
● En las Software Units solo es posible la programación simbólica.
● En las Software Units no pueden utilizarse bloques de seguridad (bloques F).
● Excepto los bloques de organización (OB), todos los bloques se numeran
automáticamente. Los números de bloque asignados automáticamente no se muestran,
aunque se pueden ver en las propiedades del bloque.
● Los tipos de parámetros "TIMER", "COUNTER", "BLOCK_FB" y "BLOCK_FC" no están
permitidos en la interfaz del bloque.
● Las marcas, la función de temporizador "Timer" y la función de contaje "Counter" no están
permitidas en la tabla de variables PLC. Utilice en su lugar temporizadores o contadores
CEI.
● No pueden utilizarse marcas de sistema ni de ciclo. En Siemens Industry Online Support
tiene a su disposición funciones acabadas, que pueden utilizarse como alternativa.
Consulte también: https://support.industry.siemens.com/cs/ww/es/view/109479728
(https://support.industry.siemens.com/cs/ww/en/view/109479728)

Programación del PLC
Manual de programación y manejo, 11/2019

7697

Utilización de las Software Units
6.1 Principios básicos de las Software Units
● Las Software Units pueden editarse y cargarse por separado. Si debido a ello varios
usuarios modifican bloques de la misma Software Unit, al realizar la carga existe la
posibilidad de sincronizar los datos.
● En caso de utilizar instrucciones que están implementadas como función o bloque de
función en el sistema, las funciones o los bloques de función de sistema correspondientes
se crearán en la carpeta "Bloques de sistema" fuera de las Software Units. Por el contrario,
la instancia individual del bloque de datos de un bloque de función de sistema se creará sin
publicar en la carpeta "Bloques de sistema" de la Software Unit correspondiente. Si mueve
el bloque de datos y desea acceder a él, puede ser necesario cambiar el acceso a
"Publicado" y crear una relación con el bloque de datos.
● El uso de Software Units no afecta a las opciones de acceso a variables vía HMI u OPC UA.
Estas se definen como hasta ahora en la interfaz del bloque en el caso de las variables
locales o en la tabla de variables PLC en el caso de las variables globales.

Lenguajes de programación
Dentro de las Software Units pueden utilizarse los siguientes lenguajes de programación:
● KOP
● FUP
● SCL
● GRAPH
● PRODIAG
En los lenguajes de programación KOP, FUP, SCL y GRAPH no hay diferencias respecto al
uso fuera de Software Units. Sin embargo, en la programación con PRODIAG hay que tener
en cuenta las siguientes particularidades en el uso dentro de Software Units:
● Las listas de textos definidas por el usuario que se referencian en textos específicos de una
supervisión, pueden depositarse en cualquier Software Unit, pero no fuera de ellas.
● Cada Software Unit tiene un OB ProDiag al que se le asigna un número >=250.
● Las supervisiones de variables globales de un FB ProDiag solo pueden supervisar
operandos de la misma Software Unit.
● Un FB ProDiag solo contiene supervisiones de bloques que hacen referencia a parámetros
de la misma Software Unit.
● Un FB ProDiag no puede publicarse, por lo que el acceso desde otras Software Units no es
posible.
● En supervisiones y llamadas globales, la adquisición de primeros valores para un FB
ProDiag solo tiene en cuenta los accesos de escritura dentro de la Software Unit en la que
se encuentre el FB ProDiag.

7698

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.1 Principios básicos de las Software Units

Listas de textos de aviso de PLC
Cada Software Unit contiene una entrada "Listas de textos de aviso de PLC" en el árbol del
proyecto. Esto significa que para cada Software Unit pueden crearse las listas de textos
correspondientes. Las listas de textos siempre están publicadas, por lo que puede accederse
a ellas desde otras Software Units sin haber creado relaciones previamente. Sin embargo, no
es posible acceder a ellas desde fuera de Software Units.
En cada Software Unit se muestran únicamente las listas de textos propias. Para crear o borrar
listas de textos, es preciso abrir en cada caso el editor de listas de textos de la Software Unit
o CPU correspondiente. Los nombres de las listas de textos deben ser unívocos en toda la
CPU.

Supervisiones y avisos de PLC
Cada Software Unit contiene un editor general ProDiag propio, que puede abrirse con la
entrada "Supervisiones y avisos del PLC". En dicho editor se pueden agregar supervisiones
para una Software Unit. Las supervisiones que se crean en una Software Unit no se muestran
en otras Software Units. El editor general ProDiag fuera de Software Units, sin embargo,
muestra todas las supervisiones de un PLC, es decir, también las que están dentro de las
Software Units.
Las supervisiones creadas se pueden exportar a una hoja Excel y volverse a importar al TIA
Portal. Si realiza la exportación de una Software Unit en el editor general ProDiag, solo se
exportarán las supervisiones de esa Software Unit concreta. Para exportar todas las
supervisiones de un PLC, inicie el proceso de exportación en el editor general ProDiag fuera
de las Software Units. La hoja Excel tendrá una columna adicional, en la que se indica la
Software Unit en la que se encuentra la supervisión.
Consulte también:
● Visualización de supervisiones ProDiag (Página 8757)
● Exportación e importación de supervisiones ProDiag y propiedades de un FB ProDiag
(Página 8767)

Programación del PLC
Manual de programación y manejo, 11/2019

7699

Utilización de las Software Units
6.1 Principios básicos de las Software Units

Constantes de sistema
Las constantes de sistema son constantes globales unívocas en toda la CPU que el sistema
necesita y crea automáticamente. Las constantes de sistema sirven, p. ej., para direccionar e
identificar objetos de hardware. En función del tipo de constante de sistema, se depositan en
diferentes tablas de variables PLC:
● Algunas constantes de sistema se generan automáticamente al crear un bloque de
organización. Dichas constantes se encuentran en la tabla de variables estándar de la
Software Unit. Otras Software Units pueden acceder a estas constantes si existe una
relación con la Software Unit y la tabla de variables estándar está publicada.
Para garantizar la coherencia del programa online, si se modifica el valor de una constante
de sistema dentro de una Software Unit, la próxima vez que se cargue deberán cargarse
también todas las Software Units dependientes.
● Algunas constantes de sistema se generan automáticamente al insertar un módulo o
submódulo en el proyecto. Dichas constantes se encuentran en la tabla de variables
estándar, fuera de las Software Units. Todas las Software Units pueden acceder a estas
constantes.
Para garantizar la coherencia del programa online, si se modifica el valor de una constante
de sistema en la tabla de variables estándar, la próxima vez que se cargue deberá cargarse
toda la CPU.
Constantes de sistema ubicadas fuera de Software Units que no se pueden desplazar a una
Software Unit.

Comparación de Software Units
Para las Software Units hay disponibles tanto la comparación offline/online, como la
comparación offline/offline. La comparación se lleva a cabo exactamente igual que la
comparación de PLC.
Consulte también: Comparación de Software Units (Página 8415)

Consulte también
Carga de Software Units en un dispositivo (Página 7720)
Introducción a las Software Units (Página 7693)
Estructuras de programa posibles con Software Units (Página 7700)

6.1.3

Estructuras de programa posibles con Software Units
A continuación se muestra a partir de dos ejemplos muy simplificados cómo estructurar un
programa de usuario en Software Units reduciendo al máximo las referencias cruzadas entre
las diferentes Software Units.
Ambos programas de ejemplo controlan una instalación de producción compuesta por dos
estaciones. Las estaciones ejecutan diferentes etapas de procesamiento con piezas y realizan
tareas estandarizadas, como p. ej. sumar la cantidad de piezas producidas.

7700

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.1 Principios básicos de las Software Units

Estructura del programa: Ejemplo 1
En el primer ejemplo la unidad central "UnitMain" realiza tareas de control centralizadas.
Contiene un bloque de organización para la ejecución cíclica del programa y un bloque de
función "LineControl", que coordina ambas estaciones.
Ambas estaciones se representan en sendas Software Units. Las partes del programa
contenidas en ambas Software Units están encapsuladas hasta el punto que pueden ser
editadas por dos programadores diferentes.
La "UnitStandard" cumple la función de una librería que proporciona funciones generales. En
el ejemplo contiene el FB "PartCount" para contar la cantidad de piezas. Este FB es
instanciado una vez por cada estación. En la práctica, una "Software Unit estándar" de este
tipo puede contener un gran número de partes del programa que se reutilizan y que pueden
llamarse a discreción.

8QLW0DLQ

8QLW6WDWLRQ

8QLW6WDQGDUG

3
&RQWURO
6WDWLRQ

2%
3URJUDP
&\FOH

%ORFN
&DOO

/LQH
&RQWURO

%ORFN
&DOO

,QVW
3DUW&RXQW

%ORFN
&DOO
3DUW
&RXQW

8QLW6WDWLRQ
,QVW
/LQH&RQWURO

%ORFN
&DOO

3
&RQWURO
6WDWLRQ

3

%ORFN
&DOO

,QVW
3DUW&RXQW

3

3XEOLVKHG

5HODFLRQHVQHFHVDULDV
2ULJHQGHODUHODFLµQ
8QLW0DLQ
8QLW6WDWLRQ
8QLW6WDWLRQ

'HVWLQRGHODUHODFLµQ
8QLW6WDWLRQ
8QLW6WDWLRQ
8QLW6WDQGDUG

Programación del PLC
Manual de programación y manejo, 11/2019

7701

Utilización de las Software Units
6.1 Principios básicos de las Software Units

Estructura del programa: Ejemplo 2
También en el segundo ejemplo cada una de las unidades se encapsula en una Software Unit
propia. Sin embargo, en el segundo ejemplo cada estación tiene un bloque de organización
cíclico propio. Si un programa contiene varios bloques de organización, el sistema operativo
los llama uno tras otro siguiendo el orden de sus números de OB.
Igual que en el primer ejemplo, también aquí existe la "UnitStandard", que se utiliza como
librería para partes del programa reutilizadas. Además del FB "PartCount", aquí recibe también
un tipo de datos PLC (UDT) que refleja los datos de producción de una pieza. El tipo de datos
PLC puede utilizarse en la interfaz de cada uno de los bloques de programa, permitiendo así
una ubicación estandarizada de los datos de las piezas.
Para la ubicación y el procesamiento centralizado de los datos se utiliza
"UnitGlobalMachineData". Contiene un bloque de datos global, en el que cada Software Unit
puede guardar los datos de las piezas.

7702

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.1 Principios básicos de las Software Units

8QLW6WDWLRQ
%ORFN
&DOO

2%
6WDWLRQ

8QLW6WDQGDUG

&RQWURO
6WDWLRQ

%ORFN
&DOO
3DUW
&RXQW

,QVW&RQWURO
6WDWLRQ

,QVW
3DUW&RXQW

8QLW6WDWLRQ
%ORFN
&DOO

2%
6WDWLRQ

3
W\SH8'7
(OHPHQW',17
(OHPHQW',17
(OHPHQW',17
3/&'DWHQW\S

%ORFN
&DOO

&RQWURO
6WDWLRQ

8QLW*OREDO0DFKLQH'DWD
*OREDO'%

,QVW&RQWURO
6WDWLRQ

3

5HODFLRQHVQHFHVDULDV

8QLW6WDWLRQ
8QLW6WDWLRQ
8QLW*OREDO0DFKLQH'DWD

3

W\SH8'7
(OHPHQW',17
(OHPHQW',17
(OHPHQW',17

,QVW
3DUW&RXQW

2ULJHQGHODUHODFLµQ

3

3XEOLVKHG

'HVWLQRGHODUHODFLµQ
8QLW6WDQGDUG
8QLW*OREDO0DFKLQH'DWD
8QLW6WDQGDUG
8QLW*OREDO0DFKLQH'DWD
8QLW6WDQGDUG

Consulte también
Introducción a las Software Units (Página 7693)
Creación de programas de PLC en Software Units (Página 7697)

Programación del PLC
Manual de programación y manejo, 11/2019

7703

Utilización de las Software Units
6.2 Creación y administración de Software Units

6.2

Creación y administración de Software Units

6.2.1

Creación de Software Units

Requisitos
La carpeta "Software Units" del árbol del proyecto está abierta.

Procedimiento
Para crear una Software Unit nueva, proceda del siguiente modo:
1. Haga doble clic en la entrada "Agregar nueva Software Unit".
Se abre el cuadro de diálogo "Agregar nueva Software Unit".
2. Introduzca un nombre para la nueva Software Unit.
3. Para introducir más propiedades de la nueva Software Unit, haga clic en "Información
adicional".
Se abre un área con campos de entrada adicionales.
4. Introduzca todas las propiedades deseadas.
5. Confirme las entradas con "Aceptar".

Resultado
Se crea la nueva Software Unit. A la Software Unit pueden agregarse elementos de programa
adicionales y crear las relaciones necesarias.

Consulte también
Introducción a las Software Units (Página 7693)
Cambiar el nombre de las Software Units (Página 7704)
Copiar e insertar Software Units (Página 7705)
Borrar Software Units (Página 7706)
Mostrar y modificar las propiedades de una Software Unit (Página 7710)

6.2.2

Cambiar el nombre de las Software Units

Requisitos
La carpeta "Software Units" del árbol del proyecto está abierta.

7704

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.2 Creación y administración de Software Units

Procedimiento
Para cambiar el nombre de una Software Unit, proceda del siguiente modo:
1. Haga clic con el botón derecho del ratón en la Software Unit cuyo nombre desea cambiar.
2. Elija el comando "Cambiar nombre" del menú contextual.
El nombre de la Software Unit se convierte en un campo de entrada en el árbol del proyecto.
3. Introduzca el nuevo nombre para la Software Unit.
4. Confirme la entrada con la tecla Intro.

Resultado
El nombre de la Software Unit se cambia en todos los lugares de uso del programa.

Consulte también
Creación de Software Units (Página 7704)
Copiar e insertar Software Units (Página 7705)
Borrar Software Units (Página 7706)
Mostrar y modificar las propiedades de una Software Unit (Página 7710)

6.2.3

Copiar e insertar Software Units
También se pueden crear Software Units nuevas copiando Software Units existentes e
insertando la copia. Existen las posibilidades siguientes:
● Copiar la Software Unit e insertarla en la misma CPU
● Copiar la Software Unit e insertarla en otra CPU ubicada dentro del mismo proyecto
● Copiar la Software Unit de un proyecto de referencia e insertarla en el proyecto abierto
● Copiar la Software Unit desde una instancia del TIA Portal e insertarla en otra instancia del
TIA Portal.
Al insertar Software Units copiadas que tengan el mismo nombre que otras Software Units ya
existentes se producen conflictos que deben solucionarse del siguiente modo:
● Insertar la Software Unit copiada en la misma CPU:
La copia de la Software Unit obtiene un nombre que se complementa con un número. Por
ejemplo, si se copia la Software Unit "SoftwareUnit_1", un nombre posible de la copia sería
"SoftwareUnit_2". La numeración no se realiza de forma correlativa, sino que se utiliza
siempre el número libre más bajo. Por tanto, el nombre de la copia de la Software Unit
"Software Unit_1" también podría ser "SoftwareUnit_25" si no está disponible ningún otro
número más bajo.
● Insertar la Software Unit copiada en otra CPU:
Se abre un cuadro de diálogo en el que es posible seleccionar si se desea sustituir la
Software Unit homónima o insertar la Software Unit copiada con un nombre nuevo.

Programación del PLC
Manual de programación y manejo, 11/2019

7705

Utilización de las Software Units
6.2 Creación y administración de Software Units

Copiar Software Units
Para copiar una Software Unit, proceda del siguiente modo:
1. Haga clic con el botón derecho del ratón en la Software Unit que desea copiar.
2. Elija el comando "Copiar" del menú contextual.
El portapapeles contiene una copia de la Software Unit, que puede insertarse en la misma
CPU o en otra diferente.

Insertar Software Units
Para insertar una Software Unit, proceda del siguiente modo:
1. En el árbol del proyecto, abra la estructura de carpetas de la CPU en la que desea insertar
la Software Unit copiada.
2. Haga clic con el botón derecho del ratón en la carpeta "Software Units".
3. Elija el comando "Pegar" del menú contextual.
– Si inserta la Software Unit en la misma CPU, la copia se insertará con la extensión de
nombre "_<número correlativo>".
– Si inserta la Software Unit en una CPU diferente y ya existe una Software Unit
homónima, se abrirá el cuadro de diálogo "Pegar". Seleccione la opción deseada y
confírmela con "Aceptar".

Consulte también
Creación de Software Units (Página 7704)
Cambiar el nombre de las Software Units (Página 7704)
Borrar Software Units (Página 7706)
Mostrar y modificar las propiedades de una Software Unit (Página 7710)

6.2.4

Borrar Software Units

Requisitos
La carpeta "Software Units" del árbol del proyecto está abierta.

Procedimiento
Para borrar una Software Unit, proceda del siguiente modo:
1. En la carpeta "Software Units" del árbol del proyecto, haga clic con el botón derecho del
ratón en la Software Unit que desea borrar.
2. Elija el comando "Borrar" del menú contextual.
3. Confirme la consulta de seguridad con "Sí".
La Software Unit se borra del proyecto.

7706

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.2 Creación y administración de Software Units

Consulte también
Creación de Software Units (Página 7704)
Cambiar el nombre de las Software Units (Página 7704)
Copiar e insertar Software Units (Página 7705)
Mostrar y modificar las propiedades de una Software Unit (Página 7710)

6.2.5

Reglas para elementos de programa en Software Units

Introducción
En las Software Units están disponibles los siguientes elementos de programa:
● Bloques y llamadas de bloque
● Variables PLC y constantes globales
● Tipos de datos PLC
Básicamente, estos elementos se pueden crear y utilizar igual que fuera de las Software Units.
No obstante, tenga en cuenta las particularidades descritas a continuación.

Uso de bloques
Dentro de una Software Unit pueden utilizarse los tipos de bloque siguientes:
● Bloques de organización (OB)
● Funciones (FC)
● Bloques de función (FB)
● Bloques de datos (DB)
Para programar los bloques pueden utilizarse los lenguajes de programación KOP, FUP, SCL,
GRAPH y PRODIAG.
Los números de los FB, FC y DB se asignan siempre de manera automática y no es posible
modificarlos. Por el contrario, los números de bloque de los OB se pueden asignar libremente
dependiendo del rango de numeración disponible. En una Software Unit los números de
bloque no se muestran en el árbol del proyecto. Sin embargo, es posible abrir las propiedades
de un bloque para mostrar su número.
Tenga en cuenta que todas las restricciones relativas a los bloques de organización
permanecen inalteradas en las Software Units. Esto significa que solo es posible utilizar el
número máximo de un tipo de bloque de organización, independientemente de que los bloques
de organización se encuentren dentro o fuera de las Software Units.

Programación del PLC
Manual de programación y manejo, 11/2019

7707

Utilización de las Software Units
6.2 Creación y administración de Software Units
Si se desea acceder a un bloque de una Software Unit diferente, es necesario que en "Acceso"
esté activada la opción "Publicado" para ese bloque. Tenga en cuenta las siguientes
particularidades:
● Bloques de organización:
Para los bloques de organización no está disponible la propiedad "Acceso". No se puede
acceder a ellos desde una Software Unit diferente.
● Bloques de función ProDiag:
En los bloques de función ProDiag la opción "Publicado" siempre está desactivada. Esto
significa que no se puede acceder a ellos desde una Software Unit diferente.

Llamar bloques
Dentro de las Software Units, las llamadas de bloque pueden usarse igual que fuera de ellas.
No obstante, tenga en cuenta las particularidades siguientes:
● Dentro de una Software Unit pueden llamarse bloques independientemente de su estado
de publicación. Eso significa que el bloque llamado no tiene que estar publicado.
● En llamadas de bloque entre dos Software Units debe existir una relación entre ellas y el
bloque llamado debe estar publicado. El bloque llamante debe obtener acceso al bloque
llamado y al bloque de datos de instancia correspondiente. El bloque de datos de instancia
también debe tener acceso a su bloque de función. Asegúrese de que no se establecen
relaciones circulares.
● Las llamadas entre bloques de Software Units y bloques fuera de ellas no son posibles.
● No es posible publicar un bloque de datos de instancia si el bloque de función
correspondiente no está publicado.

Uso de variables PLC y constantes globales
Dentro de las Software Units es posible trabajar con variables PLC y constantes globales de
igual modo que fuera de las Software Units. No obstante, tenga en cuenta las particularidades
siguientes:
● En una Software Unit no está disponible la tabla de variables "Mostrar todas las variables".
● La tabla de variables "Mostrar todas las variables" que está fuera de las Software Units
también muestra las variables y las constantes globales de las Software Units. Aquí
también pueden editarse las variables y las constantes globales de las Software Units.
● Las tablas de variables PLC se pueden publicar en Software Units para poder acceder a
ellas desde otras Software Units. Para ello es necesaria una relación entre estas Software
Units. No está permitido el acceso a las variables y constantes globales de una Software
Unit desde fuera de las Software Units. Sin embargo, no se restringe el acceso vía HMI y
OPC UA.
● Los temporizadores y contadores S5 no están permitidos como tipos de datos para
operandos.

7708

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.2 Creación y administración de Software Units
● No se permite el uso de marcas.
● También es posible exportar a Software Units tablas de variables PLC para así poderlas
editar con aplicaciones externas. Del mismo modo es posible importar a Software Units
tablas de variables PLC editadas externamente. Para la importación y exportación se
soportan los formatos siguientes:
– XLSX (Excel)
– XML
– SDF
En el formato "XLSX" se crea una columna adicional, en la que se indica la Software Unit
desde la que se ha exportado la tabla de variables PLC. Los otros dos formatos no
contienen información sobre la Software Unit exportadora. Recuerde que las variables PLC
de un archivo Excel con la columna adicional para la Software Unit solo se pueden importar
a otras Software Units, pero no a tablas de variables PLC fuera de Software Units.

Uso de tipos de datos PLC
Dentro de una Software Unit también es posible trabajar con tipos de datos PLC. Si desea
acceder a ellos desde otras Software Units, active la propiedad "Publicado" y cree una relación
con la correspondiente Software Unit. Fuera de las Software Units no es posible utilizar este
tipo de datos PLC.

Consulte también
Crear bloques (Página 7727)
Llamadas de bloque (Página 59)
Crear tipos de datos PLC (Página 7929)
Declarar variables PLC (Página 7899)

6.2.6

Copiar o mover elementos de programa

Principios básicos sobre la copia y el movimiento de elementos de programa
Los siguientes elementos de programa pueden copiarse o moverse:
● Bloques
● Tabas de variables PLC y variables
● Tipos de datos PLC
● Listas de textos

Programación del PLC
Manual de programación y manejo, 11/2019

7709

Utilización de las Software Units
6.2 Creación y administración de Software Units
Los procesos de copia y desplazamiento posibles son los siguientes:
● Copiar o mover un elemento del programa de una Software Unit a otra Software Unit
Todas las propiedades activas del elemento de programa se conservan.
● Copiar o mover un elemento de programa de una Software Unit a un área fuera de las
Software Units
En bloques, tablas de variables PLC y tipos de datos PLC se elimina la propiedad "Acceso".
Para bloques está ajustada la numeración automática.
● Copiar o mover un elemento del programa de un área fuera de las Software Units a una
Software Unit
En una Software Unit solo se pueden insertar y editar bloques numerados automáticamente
y que tengan activado el atributo "Acceso optimizado al bloque". Los bloques que no
cumplen los requisitos sí que pueden insertarse, pero no se soportan y por ello no pueden
editarse.
En bloques, tablas de variables PLC y tipos de datos PLC soportados se agrega la
propiedad "Acceso" y la casilla de verificación "Publicado" se desactiva.
Tenga en cuenta que al mover a otra CPU mediante la función de arrastrar y colocar, siempre
se realiza una operación de copia. El objeto no se borra en el origen.

Consulte también
Reglas para elementos de programa en Software Units (Página 7707)
Copiar o mover tablas de variables PLC (Página 7898)
Copiar entradas de la tabla de variables PLC (Página 7917)
Copiar o mover tipos de datos PLC (Página 7930)
Copiar o mover bloques (Página 7733)

6.2.7

Mostrar y modificar las propiedades de una Software Unit
Es posible mostrar y modificar las propiedades siguientes de las Software Units:
● Nombre
● Autor
● Comentario

Requisitos
La carpeta "Software Units" del árbol del proyecto está abierta.

7710

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.2 Creación y administración de Software Units

Procedimiento
Para mostrar y modificar las propiedades de una Software Unit, proceda del siguiente modo:
1. Haga clic con el botón derecho del ratón en la Software Unit cuyas propiedades desea
mostrar o editar.
2. Elija el comando "Propiedades" del menú contextual.
Se abre el cuadro de diálogo de propiedades del bloque y se muestran las propiedades.
3. Modifique la propiedad que desee, si es necesario.
4. Confirme las entradas con "Aceptar".

Consulte también
Creación de Software Units (Página 7704)
Cambiar el nombre de las Software Units (Página 7704)
Copiar e insertar Software Units (Página 7705)
Borrar Software Units (Página 7706)

6.2.8

Administración de elementos de Software Units en librerías

Introducción
Las Software Units pueden administrarse en librerías para así poder reutilizarlas junto con los
elementos de programa que contienen. Las Software Units pueden insertarse como plantillas
maestras en la librería del proyecto o en una librería global.
Para crear plantillas maestras se dispone de las siguientes posibilidades:
● Seleccionar una o varias Software Units y crear a partir de ellas plantillas maestras
independientes.
● Seleccionar varias Software Units y crear a partir de ellas una única plantilla maestra que
contenga todas las Software Units seleccionadas.
Consulte también: Agregar plantillas maestras
Los bloques y tipos de datos PLC incluidos en las Software Units se pueden insertar también
en la librería del proyecto o en una librería global, independientemente de la Software Unit a
la que pertenezcan. No existe ninguna diferencia en el uso de bloques y tipos de datos PLC
que se hayan programado fuera de las Software Units. Por ejemplo, también se pueden
insertar como plantillas maestras en la librería del proyecto o en librerías globales para
reutilizarlos en el proyecto. Si el bloque o el tipo de datos PLC ya están disponibles en el
proyecto, aparecerá el correspondiente aviso. En este aviso puede elegir si desea mover el
objeto existente a la carpeta seleccionada o mantenerlo en la ubicación actual.

Programación del PLC
Manual de programación y manejo, 11/2019

7711

Utilización de las Software Units
6.3 Crear relaciones

6.3

Crear relaciones

6.3.1

Principios básicos de las relaciones

Función de las relaciones
Las Software Units le permiten subdividir el programa de usuario en unidades de programa
individuales que se pueden editar, compilar y cargar individualmente. Mediante las relaciones
se pueden crear conexiones que permiten acceder a los siguientes objetos ubicados fuera de
la Software Unit propia:
● Bloques de función (FB), funciones (FC)
● Bloques de datos globales (DB)
● Variables PLC
● Tipos de datos PLC
● Objetos tecnológicos
Al utilizar relaciones tenga en cuenta las indicaciones siguientes:
● Una Software Unit no puede crear una relación consigo misma.
● Una relación solo puede establecerse en un sentido. Así, una Software Unit no puede crear
una relación con otra Software Unit si ya existe una relación con ella.
Ejemplo: La Software Unit A tiene una relación con la Software Unit B. La Software Unit B
no puede crear ninguna otra relación con la Software Unit A ni acceder a los elementos de
programa de la Software Unit A.
● No pueden crearse relaciones que produzcan referencias circulares.
Las relaciones pueden crearse, modificarse y borrarse en la tabla de relaciones.

Acceso a bloques de función (FB) y funciones (FC)
Desde una Software Unit puede accederse a los bloques de función y las funciones de otras
Software Units si están publicados y existe una relación con la Software Unit. En la Software
Unit que accede se puede crear un nuevo bloque de datos como instancia del bloque de
función de la otra Software Unit. Como alternativa también es posible publicar el bloque de
datos de instancia de un FB correspondiente para acceder a él
No es posible acceder a un bloque de función o a una función de una Software Unit desde un
bloque que no ha sido creado en una Software Unit. Del mismo modo, un bloque de función o
una función ubicados dentro de una Software Unit no pueden acceder a un bloque ubicado
fuera de una Software Unit. Fuera de una Software Unit se encuentran los bloques que se han
creado directamente en la carpeta "Bloques de programa" dentro de la CPU.
Una excepción son las funciones de sistema y los bloques de sistema: a ellos puede accederse
de la forma acostumbrada.

7712

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.3 Crear relaciones

Acceso a bloques de datos globales (DB)
Existen las siguientes posibilidades para acceder a bloques de datos globales que no se
encuentran en la propia Software Unit:
● Desde una Software Unit es posible acceder a los bloques de datos globales ubicados fuera
de Software Units si se ha creado la correspondiente relación. Para el acceso a bloques de
datos globales se aplican las siguientes reglas:
– No está permitido el acceso a un bloque de datos global que contenga tipos de datos
PLC.
– No está permitido acceder a un bloque de datos no optimizado.
– No está permitido acceder a bloques de datos ARRAY globales.
– No está permitido el acceso a un bloque de datos global de seguridad (F-DB).
● A los bloques de datos globales de una Software Unit puede accederse desde otra
Software Unit si los bloques de datos están publicados y existe una relación con la Software
Unit. Sin embargo, no es posible acceder a los bloques de datos globales de una Software
Unit desde bloques que no están depositados en Software Units.

Acceso a variables PLC
Desde una Software Unit puede accederse a las variables PLC de otra Software Unit si estas
están incluidas en una tabla de variables PLC publicada y existe una relación con esta
Software Unit. Sin embargo, no es posible acceder a las variables PLC de una Software Unit
desde bloques que no están depositados en Software Units.

Acceso a tipos de datos PLC
Desde una Software Unit puede accederse a los tipos de datos PLC de otras Software Units
si están publicados y existe una relación con esta Software Unit. Sin embargo, no es posible
acceder a los tipos de datos PLC de una Software Unit desde bloques que no están
depositados en Software Units.
Los bloques y los tipos de datos PLC que se utilicen en la interfaz del bloque en las secciones
"Input", "Output", "InOut" y "Static" deben tener el mismo estado de publicación. Así, por
ejemplo, si un bloque "Motor" está publicado y el tipo de datos PLC "UDT1" utiliza la misma
Software Unit, este tipo de datos PLC "UDT1" también debe estar publicado.

Acceso a objetos tecnológicos
Desde una Software Unit se puede acceder a objetos tecnológicos creando en la Software Unit
una relación con el objeto correspondiente.

Consulte también
Publicación de elementos del programa (Página 7714)
Crear relaciones (Página 7715)

Programación del PLC
Manual de programación y manejo, 11/2019

7713

Utilización de las Software Units
6.3 Crear relaciones

6.3.2

Publicación de elementos del programa
Para que otras Software Units puedan acceder a los bloques de función (FB), funciones (FC),
bloques de datos globales (DB), tablas de variables PLC y los tipos de datos PLC de una
Software Unit es necesario que estos elementos del programa estén publicados. Si no es lo
está en el momento de crear esos elementos, es posible cambiarlo en cualquier momento.
También es posible deshacer la publicación de un elemento concreto. En tal caso ya no es
posible acceder desde fuera.
Para los siguientes elementos del programa no se puede modificar el estado de publicación:
● Bloques de organización (OB)
● Bloques de función ProDiag
Estos elementos del programa siempre están sin publicar. No es posible acceder desde fuera
de la propia Software Unit.
El estado de publicación de un elemento del programa se puede cambiar en las ubicaciones
siguientes:
● En las propiedades del elemento del programa
● En la vista general
● En la vista del portal
En la vista detallada se puede visualizar el estado de publicación para cada elemento del
programa.

Cambiar el estado de publicación en las propiedades del elemento del programa
Para cambiar el estado de publicación de un elemento del programa en sus propiedades,
proceda del siguiente modo:
1. En el árbol del proyecto abra la carpeta "Software Units" y desplácese al elemento del
programa cuyo estado de publicación desee modificar.
2. Haga clic con el botón derecho del ratón en el elemento del programa.
3. Elija el comando "Propiedades" del menú contextual.
Se abre el cuadro de diálogo de propiedades del elemento del programa.
4. En caso de que no se muestre el elemento, haga clic en el grupo "General" de la navegación
local.
5. En "Acceso", active o desactive la casilla de verificación "Publicado".
6. Confirme las entradas con "Aceptar".
Se modifica el estado de publicación para el elemento del programa seleccionado.

7714

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.3 Crear relaciones

Cambiar el estado de publicación en la vista general
Para cambiar el estado de publicación de un elemento del programa en la vista general,
proceda del siguiente modo:
1. En el árbol del proyecto abra la carpeta "Software Units" y desplácese a la Software Unit del
elemento del programa cuyo estado de publicación desea cambiar.
2. Seleccione la carpeta "Bloques de programa", "Variables PLC" o "Tipos de datos PLC",
dependiendo del tipo de elemento del programa.
3. Abra la vista general mediante el botón "Maximizar/minimizar vista" o mediante el menú
"Vista > Vista general".
4. Abra la ficha "Detalles".
En la columna "Publicado" se indica el estado de publicación para cada elemento.
5. En la columna "Publicado", active o desactive la casilla de verificación del elemento del
programa que desea modificar.
6. Como alternativa puede seleccionar varios elementos del programa y cambiar
simultáneamente el estado de publicación de todos los elementos seleccionados con el
comando "Publicación" del menú contextual.

Cambiar el estado de publicación en la vista del portal
Para cambiar el estado de publicación de un elemento del programa en la vista del portal,
proceda del siguiente modo:
1. Cambie a la vista del portal.
2. Haga clic en "Programación PLC".
3. Haga clic en "Mostrar todos los objetos".
4. Abra la ficha "Detalles".
En la columna "Publicado" se indica el estado de publicación para cada elemento.
5. En la columna "Publicado", active o desactive la casilla de verificación del elemento del
programa que desea modificar.

Consulte también
Principios básicos de las relaciones (Página 7712)
Crear relaciones (Página 7715)

6.3.3

Crear relaciones
Es posible crear relaciones con otras Software Units, bloques de datos globales y objetos
tecnológicos. Tenga en cuenta que solo se puede acceder a los objetos de otra Software Unit
que tenga activada la propiedad "Publicado". Las relaciones se pueden modificar o borrar en
todo momento.

Programación del PLC
Manual de programación y manejo, 11/2019

7715

Utilización de las Software Units
6.3 Crear relaciones

Requisitos
La carpeta "Software Units" del árbol del proyecto está abierta.

Crear relaciones
Para crear una relación nueva, proceda del siguiente modo:
1. En el árbol del proyecto, abra la Software Unit para la que desea crear una relación.
2. Haga doble clic en "Relaciones".
Se abre la tabla de relaciones.
3. Haga clic en "<Agregar nueva relación>".
4. Seleccione el tipo de relación en la columna "Tipo de relación".
5. En la columna "Elemento utilizable" seleccione el elemento al que desea acceder, o
introdúzcalo.
Se crea la relación y es posible acceder al elemento.

Modificar relaciones
Para modificar una relación, proceda del siguiente modo:
1. En el árbol del proyecto, abra la Software Unit de la que desea modificar una relación.
2. Haga doble clic en "Relaciones".
Se abre la tabla de relaciones.
3. En la columna "Elemento utilizable" seleccione en caso necesario el elemento al que desea
acceder.

Borrar relaciones
Para borrar una relación, proceda del siguiente modo:
1. En el árbol del proyecto, abra la Software Unit de la que desea borrar una relación.
2. Haga doble clic en "Relaciones".
Se abre la tabla de relaciones.
3. Seleccione las relaciones que desea borrar.
4. En el menú contextual, elija el comando "Borrar" o pulse la tecla <Supr>.
5. Confirme la consulta de seguridad con "Sí".
Las relaciones seleccionadas se borran.

Consulte también
Principios básicos de las relaciones (Página 7712)
Publicación de elementos del programa (Página 7714)

7716

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.4 Compilación y carga de Software Units

6.4

Compilación y carga de Software Units

6.4.1

Fundamentos sobre la compilación y carga de Software Units

Introducción
Las Software Units son unidades de programa, que pueden compilarse y cargarse
independientemente del resto del código de programa. Si existen dependencias entre las
Software Units, al compilar aparecerá el mensaje correspondiente. Una vez completada la
compilación, las Software Units pueden cargarse en un dispositivo o en una Memory Card. El
proceso de carga solo puede realizarse si se cumplen los requisitos siguientes:
● El volumen de la carga no incluye ningún elemento del programa que ya exista con el
mismo nombre o el mismo número en otra posición en el dispositivo o en la Memory Card.
● Si una Software Unit tiene relaciones con objetos situados fuera de ella y esos objetos han
cambiado desde la última vez que se cargaron, los objetos en cuestión deben estar
contenidos en el volumen de carga. Eso afecta a bloques publicados de otras Software
Units, pero también a bloques de datos globales, tablas de variables PLC y objetos
tecnológicos fuera de Software Units.
● El volumen de la carga no incluye ningún bloque de sistema que ya exista con otro número
o versión en el dispositivo o en la Memory Card.
● El volumen de la carga no incluye ningún bloque de organización con números que se
utilizan en el dispositivo o en la Memory Card para bloques de organización de otro tipo.
● Si el volumen de la carga incluye un bloque de organización con un evento de arranque
determinado y hay otras Software Units con bloques de organización con el mismo evento
de arranque, estas últimas también tendrán que estar incluidas en el volumen de la carga.
Eso afecta, p. ej., al OB cíclico y al OB de arranque.
● El número máximo de bloques de organización de un tipo determinado no se supera en el
dispositivo o la Memory Card con el proceso de carga. Si aún así desea ejecutar la carga,
cargue toda la CPU en el dispositivo o en la Memory Card. De ese modo restablecerá la
coherencia entre el proyecto y el dispositivo o la Memory Card.
● La carga de todas las Software Units a través de la carpeta "Software Units" solo es posible
si todas las Software Units que hay en el dispositivo o la Memory Card está también en el
proyecto offline. De lo contrario, una Software Unit que solo existiera online se borraría.
Si aún así desea ejecutar la carga, cargue toda la CPU en el dispositivo o en la Memory
Card. De ese modo restablecerá la coherencia entre el proyecto y el dispositivo o la Memory
Card.
● Todos los tipos de datos PLC existentes en el dispositivo o la Memory Card existen con la
misma versión también en el proyecto offline.
● En el dispositivo o en la Memory Card ya existe la configuración hardware para el
dispositivo. Si no es así, habrá que cargar toda la CPU.
Si no existen dependencias con otras partes del programa, solo estarán en el volumen de la
carga las Software Units para las que se ha lanzado el proceso de carga. Eso significa que en

Programación del PLC
Manual de programación y manejo, 11/2019

7717

Utilización de las Software Units
6.4 Compilación y carga de Software Units
el resto del programa podrá haber diferencias entre los elementos del programa del proyecto
y del dispositivo o de la Memory Card.
Nota
Suma de verificación con Software Units cargadas individualmente
Para comprobar la identidad o integridad de programas de PLC, al compilar una CPU se
genera una suma de verificación en el proyecto, que también se carga en el dispositivo o la
Memory Card. La instrucción "GetChecksum" permite leer la suma de verificación en el
programa en tiempo de ejecución. Si, por el contrario, carga Software Units individuales en un
dispositivo o una Memory Card, la suma de verificación se pondrá de nuevo a
"0x0000000000000000". Esto sucede porque la suma de verificación del proyecto ya no
concuerda con la suma de verificación del dispositivo. La próxima vez que cargue el programa
PLC completo obtendrá de nuevo una suma de verificación válida. Téngalo en cuenta cuando
utilice "GetChecksum".

Carga de Software Units en el estado operativo "RUN"
Para cargar Software Units en el estado operativo "RUN" rigen las mismas normas que para
cargar los diferentes elementos de programa fuera de las Software Units. Observe al respecto
las descripciones de las páginas "Carga de bloques en el dispositivo en el estado operativo
"RUN"" de las diferentes familias de CPU en el sistema de información.

Software Units en combinación con OPC UA
Si utiliza la comunicación OPC UA en combinación con las Software Units, al compilar el
programa de usuario tenga en cuenta las particularidades siguientes:
● Al compilar las interfaces de cliente se generan los bloques de datos relevantes para OPC
UA. Estos se guardan siempre fuera de las Software Units. Por ello, muévalos a las
Software Units que desee mediante la función de arrastrar y colocar.
● Al compilar las interfaces de cliente, además se generan nuevos tipos de datos PLC en la
carpeta "Tipos de datos de sistema" fuera de las Software Units. Muévalos también a la
carpeta "Tipos de datos PLC" de las Software Units correspondientes.
● Si cambia el nombre de listas de lectura, de escritura o de métodos, se generan nuevos
tipos de datos PLC. Estos también deben moverse a las Software Units correspondientes.
● Si crea nuevos nodos o cambia el nombre de nodos existentes en las listas es necesario
compilar de nuevo la interfaz de cliente correspondiente para que los nombres de los
bloques de datos y de los tipos de datos PLC se actualicen en las Software Units.

Consulte también
Compilación de Software Units (Página 7719)
Fundamentos sobre la compilación y carga de programas de PLC (Página 8361)

7718

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.4 Compilación y carga de Software Units

6.4.2

Compilación de Software Units
Para compilar Software Units dispone de las siguientes posibilidades:
● Compilar los elementos de programa de un dispositivo. La compilación incluye los
elementos de programa de las Software Units.
● Compilar los elementos de programa de todas las Software Units de un dispositivo.
● Compilar los elementos de programa de Software Units individuales.
● Compilar los bloques de la carpeta "Bloques de programa" de una Software Unit
Dependiendo de la posibilidad que utilice, dispondrá de diferentes opciones para el proceso de
compilación:
● Hardware y software (solo cambios)
● Hardware (solo cambios)
● Hardware (compilar por completo)
● Software (solo cambios)
● Software (compilar por completo)
● Software (inicializar reserva de memoria)
Si una Software Unit accede a elementos de programa de otra Software Unit, pueden
producirse incoherencias al compilar. En tal caso, compile también la Software Unit
dependiente.

Compilación de los elementos de programa de un dispositivo
Para compilar los elementos de programa de un dispositivo con las Software Units incluidas,
proceda del siguiente modo:
1. Seleccione en el árbol del proyecto el dispositivo cuyos elementos de programa desea
compilar.
2. Seleccione la opción deseada del menú contextual en el submenú "Compilar".

Compilación de los elementos de programa de todas las Software Units de un dispositivo
Para compilar los elementos de programa de todas las Software Units de un dispositivo,
proceda del siguiente modo:
1. Seleccione la carpeta "Software Units" en el árbol del proyecto.
2. Seleccione la opción deseada del menú contextual en el submenú "Compilar".

Compilación de los elementos de programa de Software Units individuales
Para compilar los elementos de programa de Software Units individuales, proceda del
siguiente modo:
1. En la carpeta "Software Units" del árbol del proyecto, seleccione las Software Units cuyos
elementos de programa desea compilar.
2. Seleccione la opción deseada del menú contextual en el submenú "Compilar".

Programación del PLC
Manual de programación y manejo, 11/2019

7719

Utilización de las Software Units
6.4 Compilación y carga de Software Units

Compilar los bloques de la carpeta "Bloques de programa" de una Software Unit
Para compilar los bloques de una Software Unit, proceda del siguiente modo:
1. En la carpeta "Bloques de programa" del árbol del proyecto dentro de una Software Unit,
seleccione los bloques que desea compilar.
2. Seleccione la opción deseada del menú contextual en el submenú "Compilar".

Resultado
Los elementos de programa se compilan. En la ventana de inspección puede verificar bajo
"Información > Compilar" si la compilación se ha realizado correctamente.

Consulte también
Fundamentos sobre la compilación y carga de Software Units (Página 7717)

6.4.3

Carga de Software Units

6.4.3.1

Carga de Software Units en un dispositivo
Es posible cargar una, varias o todas las Software Units en un dispositivo en un proceso de
carga. Para cargar todas las Software Units en un solo proceso, en el dispositivo no puede
haber ninguna Software Unit que no exista en el proyecto offline. En ese caso es posible cargar
toda la CPU o bien Software Units individuales.

Requisitos
La configuración hardware existe en el dispositivo.

Carga de una o varias Software Units en un dispositivo
Para cargar una o varias Software Units en un dispositivo, proceda del siguiente modo:
1. Abra la carpeta "Software Units" en el árbol del proyecto.
2. Seleccione las Software Units que desea cargar.

7720

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.4 Compilación y carga de Software Units
3. Seleccione uno de los dos comandos siguientes del menú contextual del submenú "Cargar
en dispositivo":
– "Software (solo cambios)": Esta opción solo carga las Software Units seleccionadas. Sin
embargo, si se han realizado cambios en otras Software Units que provocan
incoherencias con las Units seleccionadas, también habrá que cargar esas Software
Units. En ese caso, el proceso de carga no puede llevarse a cabo y la carga debe volver
a iniciarse con la opción "Software (con Software Units relacionadas)".
– "Software (con Software Units relacionadas)": Esta opción carga las Software Units
seleccionadas junto con las Software Units con las que existen relaciones, siempre que
sean necesarias para garantizar la coherencia del programa online.
Si ya se ha definido una conexión online, los datos de proyecto se compilan en caso
necesario y se abre el cuadro de diálogo "Cargar vista preliminar". En este cuadro de
diálogo se visualizan avisos y se proponen las acciones necesarias para la carga. Si hasta
ahora no se ha establecido ninguna conexión online, aparece el cuadro de diálogo "Carga
avanzada". Seguidamente, ejecute el paso 4.
4. Ajuste todos los parámetros necesarios para la conexión y haga clic en "Cargar".
Se abre el cuadro de diálogo "Cargar vista preliminar". En este cuadro de diálogo se
visualizan avisos y se proponen las acciones necesarias para la carga.
5. Preste atención a los avisos y, si es necesario, active las acciones en la columna "Acción".
En cuanto pueda efectuarse la carga se activará el botón "Cargar".
6. Haga clic en "Cargar".
Si es necesario realizar una sincronización, el sistema muestra automáticamente el cuadro
de diálogo "Sincronización". En él se muestran avisos y se proponen las acciones
necesarias para la sincronización. Existe la posibilidad de ejecutar estas acciones o forzar
la carga sin sincronización haciendo clic en "Forzar la carga en dispositivo". Si ha ejecutado
las acciones propuestas, el sistema le preguntará si desea continuar con la carga. Haga clic
en "Continuar carga" para que se carguen las Software Units. A continuación se abre el
cuadro de diálogo "Cargar resultados", que muestra el estado y las acciones después del
proceso de carga.
7. Si el proceso de carga no se ha ejecutado en el estado operativo "RUN" y los módulos se
deben rearrancar inmediatamente después de la carga, seleccione la entrada "Arrancar
módulo" en la lista desplegable "Arrancar módulos tras cargar".
8. Cierre el cuadro de diálogo "Cargar resultados" haciendo clic en "Finalizar".

Carga de todas las Software Units en un dispositivo
Para cargar todas las Software Units en un dispositivo en un solo proceso de carga, proceda
del siguiente modo:
1. Seleccione la carpeta "Software Units" en el árbol del proyecto.
2. Elija el comando "Cargar en dispositivo > Software (solo cambios)" del menú contextual.
Si ya se ha definido una conexión online, los datos de proyecto se compilan en caso
necesario y se abre el cuadro de diálogo "Cargar vista preliminar". En este cuadro de
diálogo se visualizan avisos y se proponen las acciones necesarias para la carga. Si hasta
ahora no se ha establecido ninguna conexión online, aparece el cuadro de diálogo "Carga
avanzada". Seguidamente, ejecute el paso 3.

Programación del PLC
Manual de programación y manejo, 11/2019

7721

Utilización de las Software Units
6.4 Compilación y carga de Software Units
3. Ajuste todos los parámetros necesarios para la conexión y haga clic en "Cargar".
Se abre el cuadro de diálogo "Cargar vista preliminar". En este cuadro de diálogo se
visualizan avisos y se proponen las acciones necesarias para la carga.
4. Preste atención a los avisos y, si es necesario, active las acciones en la columna "Acción".
En cuanto pueda efectuarse la carga se activará el botón "Cargar".
5. Haga clic en "Cargar".
Si es necesario realizar una sincronización, el sistema muestra automáticamente el cuadro
de diálogo "Sincronización". En él se muestran avisos y se proponen las acciones
necesarias para la sincronización. Existe la posibilidad de ejecutar estas acciones o forzar
la carga sin sincronización haciendo clic en "Forzar la carga en dispositivo". Si ha ejecutado
las acciones propuestas, el sistema le preguntará si desea continuar con la carga. Haga clic
en "Continuar carga" para que se carguen las Software Units. A continuación se abre el
cuadro de diálogo "Cargar resultados", que muestra el estado y las acciones después del
proceso de carga.
6. Si el proceso de carga no se ha ejecutado en el estado operativo "RUN" y los módulos se
deben rearrancar inmediatamente después de la carga, seleccione la entrada "Arrancar
módulo" en la lista desplegable "Arrancar módulos tras cargar".
7. Cierre el cuadro de diálogo "Cargar resultados" haciendo clic en "Finalizar".

Resultado
Las Software Units se cargan en el dispositivo. Si los cambios afectan a otros objetos, estos
también se compilan y se cargan en el dispositivo. Los objetos que existen solo online en el
dispositivo se borran. Recuerde que al cargar Software Units individuales pueden surgir
incoherencias entre el programa de usuario del dispositivo y el programa de usuario del
proyecto offline.
Los mensajes que aparecen en la ventana de inspección bajo "Información > General" indican
si la carga se ha realizado correctamente.

6.4.3.2

Carga de Software Units de un dispositivo
Puede cargar las Software Units por separado desde un dispositivo o bien junto con todos los
datos del proyecto. Para cargar las Software Units junto con los datos del proyecto desde un
dispositivo, observe la descripción de la página "Carga de datos de proyecto de un dispositivo".

Procedimiento
Para cargar Software Units de un dispositivo, proceda del siguiente modo:
1. Establezca una conexión online con el dispositivo del que desea cargar las Software Units.
Consulte también: "Establecer o modificar conexión online"
2. Seleccione en el árbol del proyecto las Software Units que desea cargar desde el
dispositivo.
3. Elija el comando "Cargar de dispositivo" del menú "Online".
Se abre el cuadro de diálogo "Vista preliminar para cargar del dispositivo". En este cuadro
de diálogo se visualizan avisos y se proponen las acciones necesarias para la carga.

7722

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.4 Compilación y carga de Software Units
4. Preste atención a los avisos y, si es necesario, active las acciones en la columna "Acción".
El botón "Cargar de dispositivo" se activa tan pronto como sea posible la carga.
5. Haga clic en el botón "Cargar de dispositivo".
La carga se lleva a cabo.

Resultado
Las Software Units se cargan en el proyecto desde el dispositivo. Se pueden editar, compilarse
nuevamente y cargarse de nuevo en el dispositivo.

6.4.3.3

Carga de Software Units en una Memory Card
Existen las siguientes posibilidades para cargar Software Units junto con el resto de datos de
proyecto en una Memory Card:
● Cargar los datos de proyecto en una Memory Card con la función Drag & Drop
● Escribir los datos de proyecto en una Memory Card

Requisitos
Se muestra una Memory Card.

Procedimiento
Para cargar Software Units junto con los restantes datos de proyecto en una Memory Card,
proceda del siguiente modo:
1. En el árbol del proyecto, arrastre los datos de proyecto que desea cargar hasta la Memory
Card. Tenga en cuenta que la carpeta "Bloques de programa" no se puede utilizar como
destino.
Los datos de proyecto se compilan en caso necesario. A continuación se abre el cuadro de
diálogo "Cargar vista preliminar". En este cuadro de diálogo se visualizan avisos y se
proponen las acciones necesarias para la carga.
2. Preste atención a los avisos y, si es necesario, active las acciones en la columna "Acción".
En cuanto pueda efectuarse la carga se activará el botón "Cargar".
3. Haga clic en el botón "Cargar".
4. La carga se lleva a cabo.
O bien:
1. En el árbol del proyecto, seleccione los datos de proyecto que desea cargar.
2. Haga clic en la selección con el botón derecho del ratón y elija el comando "Copiar" del
menú contextual. Alternativamente puede usar la combinación de teclas <Ctrl+C>.
3. Haga clic en la Memory Card con el botón derecho del ratón y elija el comando "Pegar" del
menú contextual. Alternativamente puede usar la combinación de teclas <Ctrl+V>.
Los datos de proyecto se compilan en caso necesario. A continuación se abre el cuadro de
diálogo "Cargar vista preliminar". En este cuadro de diálogo se visualizan avisos y se
proponen las acciones necesarias para la carga.

Programación del PLC
Manual de programación y manejo, 11/2019

7723

Utilización de las Software Units
6.4 Compilación y carga de Software Units
4. Preste atención a los avisos y, si es necesario, active las acciones en la columna "Acción".
En cuanto pueda efectuarse la carga se activará el botón "Cargar".
5. Haga clic en el botón "Cargar".
La carga se lleva a cabo.
O bien:
1. En el árbol del proyecto, seleccione los datos de proyecto que desea cargar.
2. Elija el comando "Lector de tarjetas/memoria USB > Escribir en Memory Card" del menú
"Proyecto".
Se abre el cuadro de diálogo "Seleccionar Memory Card".
3. Seleccione una Memory Card compatible con la CPU.
En la parte inferior del cuadro de diálogo se activa un botón con una marca de verificación
verde.
4. Haga clic en el botón con la marca de verificación verde.
Los datos de proyecto se compilan en caso necesario. A continuación se abre el cuadro de
diálogo "Cargar vista preliminar". En este cuadro de diálogo se visualizan avisos y se
proponen las acciones necesarias para la carga.
5. Preste atención a los avisos y, si es necesario, active las acciones en la columna "Acción".
En cuanto pueda efectuarse la carga se activará el botón "Cargar".
6. Haga clic en el botón "Cargar".
La carga se lleva a cabo.

6.4.3.4

Carga de Software Units desde una Memory Card
Es posible volver a cargar en el proyecto Software Units que se encuentran en una Memory
Card junto con los datos de proyecto restantes. Para ello existen las posibilidades siguientes:
● Cargar datos de proyecto de la Memory Card como estación nueva
Esta opción permite cargar los datos de proyecto de una Memory Card en el proyecto
propio como estación nueva.
● Cargar datos de proyecto de la Memory Card en un dispositivo existente
Esta opción permite cargar los datos de proyecto de una Memory Card en un dispositivo
existente en el proyecto.

Requisitos
● Hay un proyecto abierto.
● Se muestra la Memory Card.

Carga como estación nueva
Para cargar los datos de proyecto de una Memory Card en el proyecto como estación nueva,
proceda del siguiente modo:
1. En el árbol del proyecto, seleccione la Memory Card cuyos datos de proyecto desea cargar.
2. En el menú "Online" seleccione el comando "Carga del dispositivo como estación nueva
(hardware y software)".

7724

Programación del PLC
Manual de programación y manejo, 11/2019

Utilización de las Software Units
6.4 Compilación y carga de Software Units
O bien:
1. En el árbol del proyecto, arrastre la carpeta de la Memory Card al proyecto.
O bien:
1. Haga clic en la Memory Card con el botón derecho del ratón.
2. Elija el comando "Copiar" del menú contextual.
3. Haga clic con el botón derecho del ratón en el proyecto.
4. Elija el comando "Pegar" del menú contextual.

Carga en un dispositivo existente
Para cargar los datos de proyecto de una Memory Card en un dispositivo existente, proceda
del siguiente modo:
1. En el árbol del proyecto, arrastre la carpeta de la Memory Card a un dispositivo del proyecto
o bien copie la Memory Card y pegue los datos en un dispositivo.
Se abre el cuadro de diálogo "Vista preliminar para cargar del dispositivo".
2. Verifique los avisos en el cuadro de diálogo "Vista preliminar para cargar del dispositivo" y,
dado el caso, active las acciones en la columna "Acción".
El botón "Cargar de dispositivo" se activa tan pronto como sea posible la carga.
3. Haga clic en el botón "Cargar de dispositivo".
La carga se lleva a cabo.

Programación del PLC
Manual de programación y manejo, 11/2019

7725

Utilización de las Software Units
6.4 Compilación y carga de Software Units

7726

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.1

Crear bloques

7.1.1

Carpeta de bloques

7

Función
El árbol del proyecto contiene la carpeta "Bloques de programa" en la que se pueden crear y
gestionar los bloques siguientes:
● Bloques de organización (OB)
● Bloques de función (FB)
● Funciones (FC)
● Bloques de datos (DB)
Además, en la carpeta "Bloques de programa" se crea una subcarpeta "Bloques de sistema"
con otra subcarpeta "Recursos de programa" al arrastrar por primera vez al programa una
instrucción que ejerce de bloque de función en el programa. El bloque de datos de instancia del
bloque de función interno del sistema se inserta así en la carpeta "Recursos de programa".
Estos bloques de datos de instancia de la carpeta "Recursos de programa" se pueden copiar,
renombrar y borrar. La carpeta "Recursos de programa" se borrará junto con la carpeta
"Bloques de sistema" si ya no contiene bloques.
Para cada dispositivo se crea automáticamente un OB de ciclo y se inserta en la carpeta
"Bloques de programa".
Nota
Mover bloques desde la carpeta "Recursos de programa" o a la carpeta "Recursos de
programa"
Existe la posibilidad de mover bloques entre la carpeta "Recursos de programa" y otras
carpetas. Cuando mueva bloques desde la carpeta "Recursos de programa" o a la carpeta
"Recursos de programa" tenga en cuenta las indicaciones siguientes:
● Mover bloques desde la carpeta "Recursos de programa" a cualquier otra carpeta: La
próxima vez que se compile el programa de usuario, los bloques de datos de instancia
desplazados se volverán a mover a la carpeta "Recursos de programa".
● Mover bloques cualesquiera a la carpeta "Bloques de programa": Los bloques de la carpeta
"Recursos de programa" que no sean necesarios para la ejecución del programa de usuario
se eliminarán en el próximo proceso de compilación. El resultado puede ser que se borre
el bloque que ha desplazado.

Programación del PLC
Manual de programación y manejo, 11/2019

7727

Creación y gestión de bloques
7.1 Crear bloques

Consulte también
Crear funciones y bloques de función (Página 7729)
Crear bloques de datos (Página 7730)
Crear bloques de organización (Página 7728)
Utilizar bloques de librerías (Página 7731)

7.1.2

Crear bloques de organización

Requisitos
La carpeta "Bloques de programa" del árbol del proyecto está abierta.

Procedimiento
Para crear un bloque de organización, proceda del siguiente modo:
1. Haga doble clic en el comando "Agregar nuevo bloque".
Se abre el diálogo "Agregar nuevo bloque".
2. Haga clic en el botón "Bloque de organización (OB)".
3. Seleccione el tipo del nuevo bloque de organización.
4. Introduzca un nombre para el nuevo bloque de organización.
5. Introduzca las propiedades del nuevo bloque de organización.
6. Haga clic en "Más información" para introducir más propiedades del nuevo bloque de
organización.
Se abre un área con campos de entrada adicionales.
7. Introduzca todas las propiedades deseadas.
8. Active la casilla de verificación "Agregar y abrir" si el bloque de organización debe abrirse
inmediatamente después de crearse.
9. Confirme las entradas realizadas con "Aceptar".

Resultado
Se crea el nuevo bloque de organización. Éste se encuentra entonces en la carpeta "Bloques
de programa" del árbol del proyecto. Algunos bloques de organización se pueden seguir
parametrizando en la ventana de inspección o en la vista de dispositivos después de crearse.
En la descripción del bloque de organización se puede leer si el bloque de organización creado
recientemente tiene parámetros adicionales.

Consulte también
Bloques de organización (OB) (Página 39)
Carpeta de bloques (Página 7727)

7728

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.1 Crear bloques
Crear funciones y bloques de función (Página 7729)
Crear bloques de datos (Página 7730)
Utilizar bloques de librerías (Página 7731)
Introducir el título del bloque (Página 7737)
Introducir el comentario de bloque (Página 7738)

7.1.3

Crear funciones y bloques de función

Requisitos
La carpeta "Bloques de programa" del árbol del proyecto está abierta.

Procedimiento
Para crear una función (FC) o un bloque de función (FB), proceda del siguiente modo:
1. Haga doble clic en el comando "Agregar nuevo bloque".
Se abre el diálogo "Agregar nuevo bloque".
2. Haga clic en el botón "Bloque de función (FB)" o "Función (FC)".
3. Introduzca un nombre para el nuevo bloque.
4. Introduzca las propiedades del nuevo bloque.
5. Haga clic en "Más información" para introducir más propiedades del nuevo bloque.
Se abre un área con campos de entrada adicionales.
6. Introduzca todas las propiedades deseadas.
7. Active la casilla de verificación "Agregar y abrir" si el bloque debe abrirse inmediatamente
después de crearse.
8. Confirme las entradas realizadas con "Aceptar".

Resultado
Se crea el nuevo bloque. Éste se encuentra entonces en la carpeta "Bloques de programa" del
árbol del proyecto.

Consulte también
Bloques de función (FB) (Página 40)
Funciones (FC) (Página 39)
Fundamentos del acceso a bloques (Página 54)
Carpeta de bloques (Página 7727)
Crear bloques de organización (Página 7728)

Programación del PLC
Manual de programación y manejo, 11/2019

7729

Creación y gestión de bloques
7.1 Crear bloques
Crear bloques de datos (Página 7730)
Utilizar bloques de librerías (Página 7731)
Introducir el título del bloque (Página 7737)
Introducir el comentario de bloque (Página 7738)

7.1.4

Crear bloques de datos

Requisitos
La carpeta "Bloques de programa" del árbol del proyecto está abierta.

Procedimiento
Para crear un bloque de datos, proceda del siguiente modo:
1. Haga doble clic en el comando "Agregar nuevo bloque".
Se abre el cuadro de diálogo "Agregar nuevo bloque".
2. Haga clic en el botón "Bloque de datos (DB)".
3. Seleccione el tipo de bloque de datos. Existen las posibilidades siguientes:
– Para crear un bloque de datos global, seleccione la entrada de la lista "DB global".
– Para crear un bloque de datos ARRAY, seleccione la entrada de la lista "DB ARRAY".
– Para crear un bloque de datos instancia, seleccione de la lista el bloque de función al
que desea asignar el bloque de datos instancia. En la lista solo aparecen bloques de
función que se han creado con anterioridad para la CPU.
– Para crear un bloque de datos basado en un tipo de datos PLC, seleccione en la lista el
tipo de datos en cuestión. En la lista solo aparecen tipos de datos PLC que se han
creado con anterioridad para la CPU.
– Para crear un bloque de datos basado en un tipo de datos de sistema, seleccione en la
lista el tipo de datos en cuestión. En la lista solo se muestran los tipos de datos del
sistema que se han insertado con anterioridad en bloques de programa de la CPU.
4. Introduzca un nombre para el bloque de datos.
5. Introduzca las propiedades del nuevo bloque de datos.
6. Si se ha seleccionado como "tipo" un bloque de datos ARRAY, introduzca el tipo de datos
ARRAY y el límite superior de ARRAY.
El límite superior de ARRAY puede modificarse en todo momento en la ventana de
propiedades del bloque generado. El tipo de datos ARRAY no puede modificarse a
posteriori.
7. Si en "Tipo" se ha seleccionado un bloque que contiene supervisiones, asigne un bloque de
función ProDiag a dichas supervisiones.
8. Haga clic en "Más información" para introducir más propiedades del nuevo bloque de datos.
Se abre un área con campos de entrada adicionales.

7730

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.1 Crear bloques
9. Introduzca todas las propiedades deseadas.
10.Active la casilla de verificación "Agregar y abrir" si el bloque debe abrirse inmediatamente
después de crearse.
11.Confirme la entrada realizada con "Aceptar".

Resultado
Se crea el nuevo bloque de datos. Este se encuentra entonces en la carpeta "Bloques de
programa" del árbol del proyecto.
Nota
Remanencia de bloques de datos ARRAY
Los bloques de datos ARRAY y sus componentes no se pueden ajustar como remanentes.

Consulte también
Principios básicos de la programación de bloques de datos (Página 7839)
Bloques de datos globales (DB) (Página 41)
Bloques de datos instancia (Página 52)
Tipos de datos de sistema (Página 360)
Utilizar bloques de librerías (Página 7731)

7.1.5

Utilizar bloques de librerías
Los bloques se pueden depositar en la librería del proyecto o en una librería global para poder
utilizarlos varias veces en el programa de usuario. Para ello, los bloques pueden insertarse
como plantilla maestra o como tipo.
Consulte también: Principios básicos de las librerías

Requisitos
● Se visualiza la Task Card "Librerías".
● Las librerías globales no están protegidas contra escritura.

Programación del PLC
Manual de programación y manejo, 11/2019

7731

Creación y gestión de bloques
7.1 Crear bloques

Agregar bloques como plantillas maestras a la librería del proyecto o a una librería global
Para agregar bloques nuevos como plantillas maestras a la librería del proyecto o a una librería
global, proceda del siguiente modo:
1. Maximice la librería del proyecto o la librería global.
2. Arrastre el bloque que quiere agregar a la librería mediante Drag & Drop a la carpeta
"Plantillas maestras" o a una subcarpeta cualquiera de las "Plantillas maestras" de la
librería del proyecto o de una librería global. No suelte el botón izquierdo del ratón hasta que
aparezca un signo "más" (+) pequeño debajo del puntero del ratón.
O bien:
1. Copie el bloque que desea agregar como plantilla maestra.
2. Maximice la librería del proyecto o la librería global.
3. Haga clic con el botón derecho del ratón en la carpeta "Plantillas maestras" o en cualquier
subcarpeta de "Plantillas maestras".
4. Elija el comando "Pegar" del menú contextual.

Agregar bloques como tipos a la librería del proyecto o a una librería global
Para agregar bloques nuevos como tipos a la librería del proyecto o a una librería global,
proceda del siguiente modo:
1. Maximice la librería del proyecto.
2. Arrastre mediante Drag and Drop el bloque que desea agregar como tipo hasta la carpeta
"Tipos" o a cualquier subcarpeta de "Tipos" de la librería. No suelte el botón izquierdo del
ratón hasta que aparezca un signo "más" (+) pequeño debajo del puntero del ratón.
3. En caso necesario, arrastre el bloque desde la carpeta "Tipos" de la librería del proyecto
hasta la carpeta "Tipos" de una librería global. Otra posibilidad consiste en copiar el bloque
en la librería del proyecto y pegarlo en una librería global.
O bien:
1. Copie el bloque que desea agregar como tipo.
2. Maximice la librería del proyecto.
3. Haga clic con el botón derecho del ratón en la carpeta "Tipos" o en cualquier subcarpeta de
"Tipos".
4. Elija el comando "Pegar" del menú contextual.
5. En caso necesario, arrastre el bloque desde la carpeta "Tipos" de la librería del proyecto
hasta la carpeta "Tipos" de una librería global. Otra posibilidad consiste en copiar el bloque
en la librería del proyecto y pegarlo en una librería global.

7732

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.1 Crear bloques

Utilizar bloques de la librería del proyecto o de una librería global
Para utilizar un bloque de la librería del proyecto o de una librería global en el proyecto,
proceda del siguiente modo:
1. Maximice la librería del proyecto o la librería global, de manera que se visualice el bloque
que desea utilizar.
2. Arrastre el bloque mediante Drag & Drop hasta la carpeta de bloques de la CPU. Los puntos
de inserción no permitidos se identifican por el hecho de que el puntero del ratón se
transforma en un círculo tachado (señal de prohibición).
Nota
Al derivar una instancia de un tipo de una librería global, el tipo también se agregará a la librería
del proyecto. A partir de entonces la instancia solo estará enlazada al tipo de la librería del
proyecto.

7.1.6

Copiar o mover bloques

7.1.6.1

Principios básicos sobre la copia de bloques

Función
Los bloques nuevos también se pueden crear copiando bloques existentes e insertando la
copia. A este respecto, tenga en cuenta lo siguiente a la hora de copiar en las CPU de la misma
familia de dispositivos:
● Los bloques de organización (OBs), funciones (FCs), bloques de función (FBs) y bloques
de datos globales (DBs) pueden copiarse sin limitación alguna.
● Los bloques de datos instancia solo se pueden copiar para el mismo bloque de función,
puesto que la asignación al bloque de función no se puede modificar a posteriori. No
obstante, la asignación se deshace si el bloque de datos instancia se copia a una CPU
diferente. Sin embargo, si allí existe un bloque de función con el mismo nombre, el bloque
de datos de instancia se asignará a este bloque de función. Si el bloque de datos instancia
se copia junto con el bloque de función a la otra CPU, se asignará a la copia del bloque de
función.
Las diferentes familias de dispositivos soportan en parte diferentes bloques, especialmente en
el caso de los bloques de organización. No obstante, también es posible programar bloques de
función y funciones en los diferentes dispositivos con distintos tipos de acceso. Por

Programación del PLC
Manual de programación y manejo, 11/2019

7733

Creación y gestión de bloques
7.1 Crear bloques
consiguiente, no todos los dispositivos soportan todos los bloques. Al copiar en otra familia de
dispositivos, tenga en cuenta lo siguiente
● Copiar en una CPU S7-1200:
– En una S7-1200 pueden copiarse bloques de organización con tipo de acceso
"optimizado". Si la CPU S7-1200 soporta el tipo de OB copiado, el OB copiado conserva
las propiedades de su evento. No obstante, es necesario compilarlo de nuevo.
– En un S7-1200 pueden copiarse bloques de organización con tipo de acceso "estándar",
pero la CPU no los soportará.
– En un S7-1200 pueden copiarse bloques de función (FB), funciones (FC) y bloques de
datos globales (DB) con tipo de acceso "optimizado". A continuación es necesario
compilarlos de nuevo.
– Bloques de datos de instancia: si en la CPU de destino ya existe un bloque de función
con el nombre asignado al bloque de datos de instancia en la CPU de origen, el bloque
de datos de instancia se asignará al bloque de función en la CPU de destino. Si el bloque
de datos de instancia se copia a la CPU de destino junto con el bloque de función al que
fue asignado en la CPU de origen, el bloque de datos de instancia se asignará a la copia
del bloque de función.
● Copiar en una CPU S7-1500:
– En un S7-1500 pueden copiarse bloques de organización con tipo de acceso
"optimizado". Si la CPU S7-1500 soporta el tipo de OB copiado, el OB copiado conserva
las propiedades de su evento. No obstante, es necesario compilarlo de nuevo. Los tipos
de OB no soportados se marcan con el símbolo de "prohibido aparcar".
– En un S7-1500 pueden copiarse bloques de organización con el tipo de acceso
"estándar". Si el OB procede de una CPU S7-300/400, obtiene el evento estándar del
tipo de OB correspondiente. Si el OB procede de una CPU S7-1200/1500, conserva las
propiedades de su evento pero es necesario compilarlo de nuevo.
– En un S7-1500 pueden copiarse bloques de función (FB), funciones (FC) y bloques de
datos globales (DB) con tipo de acceso "optimizado". A continuación es necesario
compilarlos de nuevo.
– Bloques de datos de instancia: si en la CPU de destino ya existe un bloque de función
con el nombre asignado al bloque de datos de instancia en la CPU de origen, el bloque
de datos de instancia se asignará al bloque de función en la CPU de destino. Si el bloque
de datos de instancia se copia a la CPU de destino junto con el bloque de función al que
fue asignado en la CPU de origen, el bloque de datos de instancia se asignará a la copia
del bloque de función.
● Copiar en CPU S7-300/400:
– Los bloques de organización pueden copiarse a voluntad entre S7-300 y S7-400.
– Los bloques de organización de las CPU S7-1200/1500 se pueden copiar en las CPU
S7-300/400, pero la CPU de destino no los soportará.
– Los bloques de función (FB), las funciones (FC) y los bloques de datos globales (DB) se
pueden copiar a voluntad entre S7-300 y S7-400.
– Los bloques de función (FB), las funciones (FC) y los bloques de datos globales (DB) de
las CPU S7-1200/1500 se pueden copiar en las CPU S7-300/400, pero la CPU de
destino no los soportará.

7734

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.1 Crear bloques
– Bloques de datos de instancia: si en la CPU de destino ya existe un bloque de función
con el nombre asignado al bloque de datos de instancia en la CPU de origen, el bloque
de datos de instancia se asignará al bloque de función en la CPU de destino. Si el bloque
de datos de instancia se copia a la CPU de destino junto con el bloque de función al que
fue asignado en la CPU de origen, el bloque de datos de instancia se asignará a la copia
del bloque de función.
– Los bloques de función (FB) y las funciones (FC) que se han programado con KOP o
FUP y están incluidos en segmentos SCL se pueden copiar en las CPU S7-300/400,
pero la CPU de destino no los soportará.
Los bloques no soportados se identifican en el árbol del proyecto con el símbolo de "prohibido
aparcar". Los bloques con un símbolo de "prohibido aparcar" no pueden editarse, solo
reutilizarse como fuentes para copiar.
Nota
Cuando se copian bloques entre diferentes familias de dispositivos, existe la posibilidad de que
el bloque copiado deba compilarse de nuevo. Esto también afecta a la copia de bloques entre
CPU y controladores por software. Si el bloque tiene una protección de know-how, solo se
puede volver a compilar introduciendo la contraseña correcta.

Datos copiados
Al insertar se copian todos los datos del bloque y se transmiten a la copia. Algunos de estos
datos son:
● Variables de la interfaz del bloque
● Todos los segmentos
● Comentarios en todas las traducciones existentes
● Avisos definidos en el bloque
● El código del programa completo del bloque copiado, incluyendo las instrucciones de
llamada que contiene.
Sin embargo, no se copian los siguientes objetos:
– bloques llamados ni bloques de datos instancia asociados
– variables globales referenciadas en el bloque copiado
– los tipos de datos PLC utilizados en el bloque copiado para la declaración de los
parámetros de bloque y las variables locales
– los objetos tecnológicos utilizados en el bloque copiado

Programación del PLC
Manual de programación y manejo, 11/2019

7735

Creación y gestión de bloques
7.1 Crear bloques

Evitar conflictos de nombre al insertar
Al insertar un bloque copiado cuyo nombre sea idéntico al de un bloque existente, se aplican
los siguientes mecanismos para evitar conflictos de nombre:
● Inserción del bloque copiado en la misma CPU:
La copia del bloque obtiene un nombre que se complementa con un número. Por ejemplo,
si se copia el bloque "A", un nombre posible de la copia sería "A_1". La numeración no se
realiza de forma correlativa, sino que se utiliza siempre el número libre más bajo. Por tanto,
el nombre de la copia del bloque "A" también podría ser "A_25" si no está disponible ningún
otro número más bajo.
● Inserción del bloque copiado en una CPU diferente:
Se abre un diálogo en el que es posible seleccionar si se desea sustituir el bloque
homónimo o insertar el bloque copiado con una identificación de duplicado
(nombre_número).
Nota
Conflictos de números
No obstante, pueden ocurrir conflictos de nombre si el bloque insertado tiene el mismo número
que un bloque existente. El número de bloque no se modifica automáticamente al realizar la
inserción. Esto puede afectar p. ej. a las llamadas de bloques. Por tanto, al copiar bloques,
compruebe con cuidado los números de bloque y, en caso necesario, corrija manualmente los
números repetidos a través de las propiedades del bloque. Los números de bloque repetidos
provocan un error de compilación.

Consulte también
Copiar o mover bloques (Página 7736)
Copiar o mover elementos de programa (Página 7709)

7.1.6.2

Copiar o mover bloques

Requisitos
La carpeta "Bloques de programa" del árbol del proyecto está abierta.

Copiar bloques
Para copiar un bloque, proceda del siguiente modo:
1. Haga clic con el botón derecho del ratón en el bloque que desea copiar.
2. Elija el comando "Copiar" del menú contextual.

7736

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.1 Crear bloques
3. En el árbol del proyecto, haga clic con el botón derecho del ratón en la carpeta de bloques
de programa en la que desea insertar el bloque copiado.
4. Elija el comando "Pegar" del menú contextual.
– Si inserta el bloque en la misma CPU, la copia se insertará con la extensión "_<número
correlativo>".
– Si inserta el bloque en una CPU diferente y ya existe un bloque con el mismo nombre,
se abrirá el cuadro de diálogo "Pegar". Seleccione la opción deseada y confírmela con
"Aceptar".
También es posible copiar el bloque mediante la función Drag & Drop con la tecla <Ctrl>
pulsada.

Mover bloques
Para mover un bloque, proceda del siguiente modo:
1. Seleccione el bloque que desea mover.
2. Arrastre el bloque hasta la posición nueva mediante la función Drag & Drop.

Consulte también
Principios básicos sobre la copia de bloques (Página 7733)

7.1.7

Introducir el título del bloque
El título del bloque es la cabecera del bloque. No es idéntico al nombre de bloque que se asignó
al crear el bloque. La longitud del título del bloque está limitada a una línea. Es posible
introducir títulos de bloque para los bloques tanto abiertos como cerrados.

Requisitos
Existe un bloque lógico.

Introducir el título de un bloque abierto
Para introducir el título de un bloque abierto, proceda del siguiente modo:
1. En el editor de programación, haga clic en en la barra de título del bloque.
2. Introduzca el título del bloque.

Introducir el título de un bloque cerrado
Para introducir el título de un bloque cerrado, proceda del siguiente modo:
1. En el árbol del proyecto, haga clic con el botón derecho del ratón en el bloque.
2. Elija el comando "Propiedades" del menú contextual.
Se abre el cuadro de diálogo con las propiedades del bloque.

Programación del PLC
Manual de programación y manejo, 11/2019

7737

Creación y gestión de bloques
7.1 Crear bloques
3. Seleccione la entrada "Información" en la navegación local.
4. Introduzca el título del bloque en el campo de entrada "Título".
5. Confirme las entradas realizadas con "Aceptar".

Consulte también
Crear bloques de organización (Página 7728)
Crear funciones y bloques de función (Página 7729)
Introducir el comentario de bloque (Página 7738)

7.1.8

Introducir el comentario de bloque
El comentario de bloque permite documentar todo el bloque lógico. Por ejemplo, se puede
describir la finalidad del bloque, o bien llamar la atención sobre peculiaridades. Es posible
introducir comentarios de bloque para los bloques tanto abiertos como cerrados.
Nota
El comentario del bloque no debería tener más de 32.767 caracteres Unicode.

Requisitos
Existe un bloque lógico.

Introducir el comentario de un bloque abierto
Para introducir el comentario de un bloque abierto, proceda del siguiente modo:
1. Haga clic en la flecha pequeña antepuesta al título del bloque.
La flecha hacia la derecha se convierte en una flecha hacia abajo y aparece el área de
comentario.
2. En el área de comentario, haga clic en "Comentario".
El texto "Comentario" aparece seleccionado.
3. Introduzca el comentario de bloque.

Introducir el comentario de un bloque cerrado
Para introducir el comentario de un bloque cerrado, proceda del siguiente modo:
1. En el árbol del proyecto, haga clic con el botón derecho del ratón en el bloque.
2. Elija el comando "Propiedades" del menú contextual.
Se abre el cuadro de diálogo con las propiedades del bloque.
3. Seleccione la entrada "Información" en la navegación local.

7738

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.2 Definir propiedades de bloques
4. Introduzca el comentario de bloque en el campo de entrada "Comentario".
5. Confirme las entradas realizadas con "Aceptar".

Consulte también
Crear bloques de organización (Página 7728)
Crear funciones y bloques de función (Página 7729)
Introducir el título del bloque (Página 7737)

7.2

Definir propiedades de bloques

7.2.1

Principios básicos de las propiedades de bloques

Propiedades de bloques
Todo bloque tiene determinadas propiedades que se pueden visualizar y editar. Estas
propiedades tienen, por ejemplo, las siguientes tareas:
● Identificar el bloque
● Visualizar la memoria necesaria y el estado de compilación del bloque
● Visualizar el sello de tiempo
● Visualizar la información de referencia
● Ajustar la protección de acceso

Consulte también
Sinopsis de las propiedades de bloques (Página 7740)
Sellos de tiempo de bloques (Página 7745)
Mostrar y editar propiedades de bloques (Página 7747)
Ajustar los nemónicos (Página 7668)

Programación del PLC
Manual de programación y manejo, 11/2019

7739

Creación y gestión de bloques
7.2 Definir propiedades de bloques

7.2.2

Sinopsis de las propiedades de bloques

Sinopsis
Las propiedades de los bloques son específicos del bloque y la CPU. Por eso, no todas las
propiedades están disponibles para todos los bloques y en todas las familias de CPU. La
siguiente tabla muestra una vista general de las propiedades del bloque:
Grupo

Propiedad

Descripción

Propiedades

Nombre

Nombre unívoco del bloque en la estación.

Nombre de la constante

Nombre de la constante que se inserta para el OB en
la tabla de variables PLC

Tipo

Tipo de bloque (no se puede modificar)

Número

Número de bloque

Clase de evento

Clase de evento de un OB (no modificable)

Lenguaje

Lenguaje de programación del bloque

Lenguaje en segmentos

Es el lenguaje que se utiliza para programar las con‐
diciones en los bloques GRAPH.

Versión

Versión del bloque GRAPH

Número de la memoria
Indicación de las memorias imagen parciales de pro‐
imagen parcial del proceso ceso asignadas al bloque de organización (no modi‐
ficable)
Tipo de datos ARRAY

Tipo de datos de un bloque de datos ARRAY (no mo‐
dificable)

Límite de ARRAY

Límite superior de un bloque de datos ARRAY
La sección "Transferencia" de la Task Card "Instruc‐
ciones" permite direccionar bloques de datos ARRAY.

Información

Sello de tiempo

7740

Título

Título del bloque

Comentario

Comentario del bloque

Versión

Número de versión del bloque

Familia

Nombre de la familia de bloques

Autor

Nombre del autor, empresa, departamento u otro
nombre

ID personalizada

ID creada por el usuario

Bloque

Fecha y hora de creación y modificación del bloque
(no modificable)

Interfaz

Fecha de modificación de la interfaz del bloque (no
modificable)

Código

Fecha de modificación del código (no modificable)

Datos

Fecha de modificación de los datos (no modificable)

Relevante para la carga

Hora del último cambio relevante para la carga (no
modificable)

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.2 Definir propiedades de bloques
Grupo

Propiedad

Descripción

Compilación

Estado

Detalles de la última compilación (no modificable)

Longitudes

Detalles de las longitudes de bloque (no modificable)

Simulación

Indica si el bloque puede simularse con SIMATIC S7PLCSIM Advanced. Para ello es imprescindible que
la opción "Permitir la simulación al compilar bloques"
esté activada en las propiedades del proyecto.
Consulte también: Visualizar las propiedades del pro‐
yecto

Protección

Idoneidad para la librería

Indica si el bloque puede agregarse como tipo a una
librería.

Protección

Ajustar protección de know-how y contra copia del
bloque
Consulte también: Proteger bloques (Página 7763)

Programación del PLC
Manual de programación y manejo, 11/2019

7741

Creación y gestión de bloques
7.2 Definir propiedades de bloques
Grupo

Propiedad

Descripción

Atributos

Verificación CEI

La compatibilidad de operandos en operaciones de
comparación y aritméticas se verifica según CEI
61131. Los operandos no compatibles deben conver‐
tirse explícitamente.
Consulte también: Sinopsis de la conversión de tipos
de datos (Página 506)

Tratamiento de errores lo‐
cales en el bloque

Tratamiento de errores en el bloque con las instruc‐
ciones GET_ERROR y/o GET_ERR_ID (no modifica‐
ble).
Consulte también: Tratamiento de errores de ejecu‐
ción del programa (Página 145)

Acceso optimizado al blo‐
que

En bloques de acceso optimizado, la declaración de
variables solo contiene los nombres simbólicos de los
elementos de datos. Las direcciones son optimizadas
y gestionadas automáticamente por el sistema. El
rendimiento de la CPU aumenta y no se producen
errores de acceso, p. ej. desde SIMATIC HMI.
Consulte también: Bloques con acceso optimizado
(Página 54)

7742

Apto para multiinstancia

El bloque se puede llamar con la opción de llamada
"Multiinstancia". Este atributo no se puede modificar.

Crear información avanza‐
da de estado

Permite observar todas las variables de un bloque
SCL. Sin embargo, la cantidad de memoria que re‐
quiere el programa y los tiempos de ejecución au‐
mentan con esta opción.

Comprobar límites de
ARRAY

Comprueba durante el tiempo de ejecución de un blo‐
que SCL si hay índices de campo en el área declara‐
da para un ARRAY. Si un índice de campo está fuera
del rango permitido, la salida de habilitación ENO del
bloque se pone a "0".

Activar ENO automática‐
mente/Activar ENO auto‐
máticamente para bloques
SCL y segmentos SCL

Comprueba durante el tiempo de ejecución de un blo‐
que SCL si se producen errores en el procesamiento
de determinadas instrucciones. Si se produce un
error en el tiempo de ejecución, la salida de habilita‐
ción ENO del bloque se pone a "0".

Generar DB minimizado

Genera bloques de datos de instancia en formato mi‐
nimizado para bloques GRAPH de las S7-300 y
S7-400. Esta opción reduce considerablemente la
cantidad de memoria que requiere el FB GRAPH. Por
otro lado, solo se obtiene información limitada sobre
el estado del programa.

Saltar etapas

Si las transiciones en un bloque GRAPH se vuelven
válidas al mismo tiempo antes y después de una eta‐
pa, esta no se activa y por consiguiente se salta.

Acuse obligatorio de erro‐
res de supervisión

Si se produce un error de supervisión durante el fun‐
cionamiento de un bloque GRAPH, dicho error se de‐
be acusar antes de que se siga ejecutando el progra‐
ma.

Procesamiento permanen‐
te de todos los interlocks
en modo manual

Hace que las condiciones de interlock de un bloque
GRAPH se comprueben permanentemente en modo
manual.

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.2 Definir propiedades de bloques
Grupo

Propiedad

Descripción

Adquisición de primeros
valores
(solo puede activarse a
partir de la versión del blo‐
que V4.0)

El estado lógico de operandos y el resultado de com‐
paradores de una etapa o una transición se guardan
en los parámetros estáticos "CRIT_LOC",
"CRIT_LOC_ERR", "CRIT" y "CRIT_FLT" de la inter‐
faz de bloque GRAPH.

Bloqueo de selección de
modo

Impide la selección de un modo de operación de un
bloque GRAPH.

Nombre del bloque de am‐ Define el bloque de ampliación que permite acceder a
pliación
los parámetros no visibles en la interfaz del bloque de
función GRAPH.
Bloque de datos protegido
contra escritura en el dis‐
positivo

Indica si el bloque de datos está protegido contra es‐
critura en el sistema de destino, por lo que no se pue‐
de sobrescribir durante la ejecución del programa. La
opción solo está disponible para bloques de datos.

Depositar solo en la memo‐ Si se activa, el bloque de datos se depositará solo en
ria de carga
la memoria de carga, no ocupará espacio en la me‐
moria de trabajo y no se incorporará en el programa.
La paleta "Instrucciones avanzadas > Funciones de
bloques de datos" de la Task Card "Instrucciones"
ofrece posibilidades de manejar los bloques de datos.
La opción solo está disponible para bloques de datos.
Bloque de datos accesible
desde OPC UA

Si la casilla de verificación está activada, el bloque de
datos es accesible como objeto completo desde OPC
UA. Seguidamente, es posible habilitar o bloquear in‐
dividualmente las diferentes variables del bloque de
datos para OPC UA.
La opción solo está disponible para bloques de datos
de S7-1200/S7-1500.

Programación del PLC
Manual de programación y manejo, 11/2019

Bloque de datos accesible
a través del servidor web

Si la casilla de verificación está activada, el bloque de
datos es accesible como objeto completo a través de
un servidor web. A continuación es posible habilitar o
bloquear individualmente las diferentes variables del
bloque de datos. Esta opción solo está disponible pa‐
ra bloques de datos.

Información de arranque

En las CPU S7-1500, aquí se define la estructura de
la información de arranque del bloque de organiza‐
ción: como en las CPU S7-300 y S7-400 o bien infor‐
mación de arranque optimizada.

Prioridad

En los bloques de organización muestra la prioridad
ajustada. El que pueda cambiarse la prioridad depen‐
derá de la familia de CPU utilizada y del tipo de bloque
de organización.

Alimentación de paráme‐
tros a través de registros

En un bloque AWL de una CPU S7-1500, permite
alimentar parámetros a través de registros. Ello per‐
mite utilizar las instrucciones "Llamada condicional"
(CC) y "Llamada incondicional" (UC) en el bloque.

Activar relectura

Permite marcar diferentes parámetros del bloque co‐
mo "relegibles". La función "Releer variables" es re‐
levante cuando el bloque se utiliza en un esquema
CFC.

7743

Creación y gestión de bloques
7.2 Definir propiedades de bloques
Grupo

Propiedad

Descripción

Representación del bloque Determina cómo se representará el bloque en un es‐
quema CFC.
Encontrará más información al respecto en la ayuda
de CFC, en la página "Variantes de representación
del símbolo de bloque en el esquema CFC".
Alarma horaria

Alarma horaria

Parámetros del OB de alarma horaria: Activo (sí o
no), ejecución, fecha y hora de inicio, hora local o de
sistema

Alarma cíclica

Alarma cíclica

Tiempo de ciclo y desfase del OB de alarma cíclica

Eventos de inicio

Eventos de inicio

Indicación de los eventos de inicio del OB de alarma
de proceso

Modo isócrono

Modo isócrono

Parámetros del OB de alarma de sincronismo: Ciclo
de aplicación, ajuste automático (sí o no), tiempo de
retardo.
Además se indica el sistema PROFINET IO o el sis‐
tema maestro DP cuyos dispositivos IO o esclavos
DP, respectivamente, están asignados al OB de alar‐
ma de sincronismo.

Cargar sin reini‐
cializar

Reserva de memoria

Tamaño de la reserva en la memoria estándar dispo‐
nible para ampliaciones de interfaz.
El número de bytes disponibles actualmente se indica
entre paréntesis. Esta indicación se actualiza en cada
proceso de compilación.

Activar la carga sin reinicia‐ Permite definir una reserva en la memoria remanente.
lizar para variables rema‐
nentes
Reserva en la memoria re‐ Tamaño de la reserva en la memoria remanente dis‐
manente
ponible para ampliaciones de interfaz.
El número de bytes disponibles actualmente se indica
entre paréntesis. Esta indicación se actualiza en cada
proceso de compilación.

Consulte también
Principios básicos de las propiedades de bloques (Página 7739)
Sellos de tiempo de bloques (Página 7745)
Mostrar y editar propiedades de bloques (Página 7747)
Fundamentos del acceso a bloques (Página 54)
Configuración general de la programación PLC (Página 7685)

7744

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.2 Definir propiedades de bloques

7.2.3

Sellos de tiempo de bloques

Introducción
A los bloques se les asignan diferentes sellos de tiempo, que permiten saber cuándo se ha
creado el bloque y cuándo se ha modificado por última vez. Estos sellos de tiempo también se
utilizan para comprobar la coherencia de forma automática antes de un proceso de
compilación.

Sellos de tiempo para bloques lógicos
Para los bloques lógicos (OBs, FBs, FCs) se generan los siguientes sellos de tiempo:
● Bloque: Fecha de creación, fecha de la última modificación
● Interfaz: Fecha de la última modificación
● Código/datos: Fecha de la última modificación
● Relevante para la carga: Fecha de la última modificación
Al compilar se indica un conflicto de sello de tiempo cuando el sello de tiempo del bloque que
llama es más antiguo que el de la interfaz del bloque llamado.
Los sellos de tiempo de los bloques lógicos se actualizan del siguiente modo:
● Bloque: El sello de tiempo de la última modificación del bloque corresponde siempre al sello
de tiempo de la interfaz o del código, dependiendo de qué área fue modificada por última
vez.
● Interfaz: El sello de tiempo de la interfaz se actualiza cada vez que ésta se modifica. Aunque
se deshaga manualmente la modificación de la interfaz, p. ej. se vuelva a cambiar el
nombre, la modificación actualiza el sello de tiempo. Pero si se deshace la modificación
mediante la función "Deshacer", el sello de tiempo se restablece al valor anterior a la
modificación deshecha.
● Código/datos: El sello de tiempo del código se actualiza cada vez que se modifica el código
del bloque. Aunque se deshaga manualmente la modificación del código, p. ej. se vuelva a
quitar una instrucción, la modificación actualiza el sello de tiempo. Pero si se deshace la
modificación mediante la función "Deshacer", el sello de tiempo se restablece al valor
anterior a la modificación deshecha.
● Relevante para la carga: El sello de tiempo de "Relevante para la carga" se modifica cada
vez que se modifica un bloque lógico. Estos cambios pueden afectar al código, a los datos
o a la interfaz.

Sellos de tiempo para bloques de datos globales
Para los bloques de datos globales se generan los siguientes sellos de tiempo:
● Bloque: Fecha de creación, fecha de la última modificación
● Interfaz: Fecha de la última modificación
● Datos: Fecha de la última modificación
● Relevante para la carga: Fecha de la última modificación

Programación del PLC
Manual de programación y manejo, 11/2019

7745

Creación y gestión de bloques
7.2 Definir propiedades de bloques
Al compilar un bloque de datos global basado en un tipo de datos PLC se indica un conflicto de
sello de tiempo cuando el sello de tiempo del bloque de datos global es más antiguo que el del
tipo de datos PLC utilizado.
Los sellos de tiempo de los bloques de datos globales se actualizan del siguiente modo:
● Bloque: El sello de tiempo de la última modificación de un bloque de datos global
corresponde siempre al sello de tiempo de la interfaz y los datos.
● Interfaz y datos: Los sellos de tiempo de la interfaz y los datos se actualizan cada vez que
se modifica el bloque de datos global. Aunque se deshaga manualmente la modificación,
p. ej. se vuelva a quitar una variable, la modificación actualiza los sellos de tiempo. Pero si
se deshace la modificación mediante la función "Deshacer", los sellos de tiempo se
restablecen al valor anterior a la modificación deshecha.
● Relevante para la carga: El sello de tiempo de "Relevante para la carga" se modifica cada
vez que se modifica el bloque de datos global. Estos cambios pueden afectar a los datos o
a la interfaz.

Sellos de tiempo para bloques de datos de instancia
Para los bloques de datos de instancia se generan los siguientes sellos de tiempo:
● Bloque: Fecha de creación, fecha de la última modificación
● Interfaz: Fecha de la última modificación
● Datos: Fecha de la última modificación
● Relevante para la carga: Fecha de la última modificación
Al compilar un bloque de datos de instancia se indica un conflicto del sello de tiempo cuando
el sello de tiempo de las interfaces del bloque de datos de instancia y del bloque de función no
son idénticos.
Los sellos de tiempo de los bloques de datos de instancia se actualizan del siguiente modo:
● Bloque: El sello de tiempo de la última modificación de un bloque de datos de instancia
corresponde siempre al sello de tiempo de la interfaz y los datos.
● Interfaz y datos: Los sellos de tiempo de la interfaz y los datos se actualizan cada vez que
se modifica el bloque de datos de instancia. Aunque se deshaga manualmente la
modificación, p. ej. se vuelva a anular la remanencia de una variable, la modificación
actualiza los sellos de tiempo. Pero si se deshace la modificación mediante la función
"Deshacer", los sellos de tiempo se restablecen al valor anterior a la modificación deshecha.
● Relevante para la carga: El sello de tiempo de "Relevante para la carga" se modifica cada
vez que se modifica un bloque de datos de instancia. Estos cambios pueden afectar a los
datos o a la interfaz.

Sellos de tiempo para tipos de datos PLC
Para los tipos de datos PLC se generan los siguientes sellos de tiempo:
● Bloque: Fecha de creación, fecha de la última modificación
● Interfaz: Fecha de la última modificación
● Relevante para la carga: Fecha de la última modificación

7746

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.2 Definir propiedades de bloques
Los sellos de tiempo de los tipos de datos PLC se actualizan del siguiente modo:
● Bloque: El sello de tiempo de la última modificación de un tipo de datos PLC corresponde
siempre al sello de tiempo de la interfaz.
● Interfaz: El sello de tiempo de la interfaz se actualiza cada vez que se modifica el tipo de
datos PLC. Aunque se deshaga manualmente la modificación, p. ej. se vuelva a borrar el
contenido del tipo de datos PLC, la modificación actualiza el sello de tiempo. Pero si se
deshace la modificación mediante la función "Deshacer", el sello de tiempo se restablece
al valor anterior a la modificación deshecha.
● Relevante para la carga: El sello de tiempo de "Relevante para la carga" se modifica cada
vez que se modifica un tipo de datos PLC.

Consulte también
Principios básicos de las propiedades de bloques (Página 7739)
Sinopsis de las propiedades de bloques (Página 7740)
Mostrar y editar propiedades de bloques (Página 7747)
Principios básicos de la compilación de bloques (Página 8362)

7.2.4

Mostrar y editar propiedades de bloques
Las propiedades de los bloques son específicos del bloque y la CPU. Por eso, no todas las
propiedades están disponibles para todos los bloques y en todas las familias de CPU. Las
propiedades que sólo se pueden mostrar están protegidas contra escritura.

Mostrar y editar las propiedades de un bloque cerrado
Para mostrar o editar las propiedades de un bloque cerrado, proceda del siguiente modo:
1. Abra la carpeta "Bloques de programa" del árbol del proyecto.
2. Haga clic con el botón derecho del ratón en el bloque cuyas propiedades desea mostrar o
editar.
3. Elija el comando "Propiedades" del menú contextual.
Se abre el diálogo de propiedades del bloque.
4. En la navegación local, haga clic en el grupo cuyas propiedades desea mostrar o editar.
5. Modifique la propiedad deseada.
6. Confirme las entradas realizadas con "Aceptar".

Programación del PLC
Manual de programación y manejo, 11/2019

7747

Creación y gestión de bloques
7.3 Gestionar bloques

Mostrar y editar las propiedades de un bloque abierto
Para mostrar o editar las propiedades de un bloque abierto, proceda del siguiente modo:
1. Active la opción "Ventana de inspección" del menú "Ver".
Se abre la ventana de inspección.
2. Haga clic en la ficha "Propiedades".
Las propiedades del bloque se visualizan en la ficha "Propiedades" de la ventana de
inspección.
3. En la navegación local, haga clic en el grupo cuyas propiedades desea mostrar o editar.
4. Modifique la propiedad deseada.

Resultado
Se modifican las propiedades del bloque. No obstante, los cambios no se guardarán hasta que
se guarde el proyecto.

Consulte también
Principios básicos de las propiedades de bloques (Página 7739)
Sinopsis de las propiedades de bloques (Página 7740)
Sellos de tiempo de bloques (Página 7745)

7.3

Gestionar bloques

7.3.1

Abrir bloques
Es posible abrir tanto los bloques del proyecto (bloques offline) como los bloques del
dispositivo (bloques online).
Los bloques offline se abren de las maneras siguientes:
● Abrir bloque offline directamente
Puede abrir directamente un bloque si ha abierto la correspondiente carpeta de bloques en
el árbol del proyecto o en la ventana general.
● Buscar y abrir bloque offline
Puede buscar bloques dentro de un proyecto, un dispositivo, la carpeta "Bloques de
programa" y en el editor de programación y después abrirlos.
Al abrir bloques online observe las siguientes particularidades:
● Los bloques online no se pueden editar.
● Debido al trabajo conjunto en paralelo en una CPU, es posible que otro usuario esté
ejecutando una operación de carga en la CPU seleccionada. Esto puede provocar que el
bloque online que tenga abierto se borre con el proceso de carga si solo existe en el
dispositivo. En este caso, el bloque online se cierra y aparece un mensaje en la ventana de
inspección.

7748

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.3 Gestionar bloques

Abrir bloque offline directamente
Para abrir un bloque offline directamente, proceda del siguiente modo:
1. Abra la carpeta con el bloque que desee abrir, en el árbol del proyecto o en la ventana
general.
2. Haga doble clic en el bloque que desea abrir.
El bloque se abre en el editor de programación.

Buscar y abrir bloque offline
Para buscar un bloque offline y abrirlo, proceda del siguiente modo:
1. El proceso de búsqueda se puede iniciar de las dos formas siguientes:
– Dentro del árbol del proyecto, en el menú contextual del proyecto, un dispositivo o de la
carpeta "Bloque de programa", elija el comando "Abrir bloque/Tipo de datos PLC" o
pulse la tecla <F7>.
– Pulse la tecla <F7> en el editor de programación abierto.
Se abre el cuadro de diálogo "Abrir bloque/Tipo de datos PLC".
2. Introduzca el nombre, la dirección o el tipo de bloque que está buscando.
Con cada letra introducida se sigue filtrando la lista de bloques. Si no hay ningún bloque que
coincida con su entrada, se cierra la lista de bloques. Puede mostrar la lista completa de
bloques en todo momento haciendo clic en el botón situado a la derecha del campo de
texto. Sin embargo, tenga en cuenta que después no tiene lugar ningún filtrado. Si desea
filtrar de nuevo por sus entradas, vuelva a hacer clic en el botón.
3. En la lista de bloques, haga clic en el bloque que desee abrir.
El bloque se abre en el editor de programación y se muestra como selección en el árbol del
proyecto.

Abrir bloque online
Para abrir un bloque online, proceda del siguiente modo:
1. Abra la carpeta "Accesos online" en el árbol del proyecto.
2. Haga clic en el símbolo de flecha que aparece a la izquierda de la interfaz para mostrar
todos los objetos subordinados.
3. Haga doble clic en el comando "Actualizar dispositivos accesibles" debajo de la interfaz.
Se muestran todos los dispositivos accesibles desde esta interfaz.
4. Abra la carpeta del dispositivo que contiene el bloque que desea abrir.
5. Abra la carpeta "Bloques de programa".
Se muestran todos los bloques del dispositivo.
6. Haga doble clic en el bloque que desea abrir.
El bloque se abre en el editor de programación.

Programación del PLC
Manual de programación y manejo, 11/2019

7749

Creación y gestión de bloques
7.3 Gestionar bloques

Consulte también
Guardar bloques (Página 7750)
Cerrar bloques (Página 7750)
Cambiar el nombre de bloques (Página 7751)
Borrar bloques offline (Página 7752)
Borrar bloques online (Página 7752)
Abrir bloques con protección de know-how (Página 7777)

7.3.2

Guardar bloques
Los bloques se guardan siempre junto con el proyecto. También es posible guardar bloques
erróneos. Los errores pueden solucionarse en cualquier momento.

Procedimiento
Para guardar un bloque, proceda del siguiente modo:
1. Elija el comando "Guardar" o "Guardar como" del menú "Proyecto".
Consulte también: Guardar proyectos

Consulte también
Abrir bloques (Página 7748)
Cerrar bloques (Página 7750)
Cambiar el nombre de bloques (Página 7751)
Borrar bloques offline (Página 7752)
Borrar bloques online (Página 7752)

7.3.3

Cerrar bloques

Procedimiento
Para cerrar un bloque, proceda del siguiente modo:
1. Haga clic en el botón "Cerrar" de la barra de título del editor de programación.
Nota
Tenga en cuenta que el bloque no se guarda al cerrarlo.

7750

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.3 Gestionar bloques

Consulte también
Abrir bloques (Página 7748)
Guardar bloques (Página 7750)
Cambiar el nombre de bloques (Página 7751)
Borrar bloques offline (Página 7752)
Borrar bloques online (Página 7752)

7.3.4

Cambiar el nombre de bloques

Requisitos
La carpeta "Bloques de programa" del árbol del proyecto está abierta.

Procedimiento
Para cambiar el nombre de un bloque, proceda del siguiente modo:
1. Haga clic con el botón derecho del ratón en el bloque cuyo nombre desea cambiar.
2. Elija el comando "Cambiar nombre" del menú contextual.
El nombre del bloque se transforma en un campo de entrada en el árbol del proyecto.
3. Introduzca el nuevo nombre para el bloque.
4. Confirme las entradas realizadas pulsando la tecla Intro.

Resultado
El nombre del bloque se cambia en todas las ubicaciones del programa.

Consulte también
Abrir bloques (Página 7748)
Guardar bloques (Página 7750)
Cerrar bloques (Página 7750)
Borrar bloques offline (Página 7752)
Borrar bloques online (Página 7752)

Programación del PLC
Manual de programación y manejo, 11/2019

7751

Creación y gestión de bloques
7.3 Gestionar bloques

7.3.5

Borrar bloques offline

Requisitos
La carpeta "Bloques de programa" del árbol del proyecto está abierta.

Procedimiento
Para borrar un bloque que exista offline, proceda del siguiente modo:
1. En la carpeta "Bloques de programa" del árbol del proyecto, haga clic con el botón derecho
del ratón en el bloque que desea borrar.
2. Elija el comando "Borrar" del menú contextual.
3. Confirme la consulta de seguridad con "Sí".
El bloque se borra del proyecto offline.
Nota
Al borrar bloques de organización, recuerde que pueden tener eventos asignados. Si borra
estos bloques de organización, el programa no podrá reaccionar a los eventos parametrizados.

Consulte también
Abrir bloques (Página 7748)
Guardar bloques (Página 7750)
Cerrar bloques (Página 7750)
Cambiar el nombre de bloques (Página 7751)
Borrar bloques online (Página 7752)
Cargar bloques para S7-1200/1500 (Página 8368)

7.3.6

Borrar bloques online

Requisitos
La carpeta "Bloques de programa" del árbol del proyecto está abierta.

7752

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.3 Gestionar bloques

Procedimiento
Para borrar un bloque que exista online, proceda del siguiente modo:
1. En la carpeta "Bloques de programa" del árbol del proyecto, haga clic con el botón derecho
del ratón en el bloque que desea borrar del dispositivo.
2. Elija el comando "Borrar" del menú contextual.
Se abre el cuadro de diálogo "Borrar".
3. Active el botón de opción "Borrar del dispositivo".
4. Haga clic en "Sí".
El bloque se borra del dispositivo online.

Consulte también
Abrir bloques (Página 7748)
Guardar bloques (Página 7750)
Cerrar bloques (Página 7750)
Cambiar el nombre de bloques (Página 7751)
Borrar bloques offline (Página 7752)

7.3.7

Borrar bloques de datos de CPU
Los bloques de datos de CPU se pueden borrar tanto offline como online.

Borrar bloques de datos de CPU offline
Para borrar un bloque de datos de CPU disponible offline en el proyecto, proceda del siguiente
modo:
1. En la carpeta "Bloques de programa" del árbol del proyecto, haga clic con el botón derecho
del ratón en el bloque de datos de CPU que desea borrar.
2. Elija el comando "Borrar" del menú contextual.
3. Confirme la consulta de seguridad con "Sí".
El bloque de datos de CPU se borra del proyecto offline.

Borrar un bloque de datos de CPU online
Para borrar un bloque de datos de CPU disponible online, proceda del siguiente modo:
1. Establezca una conexión online con el dispositivo que contiene el bloque de datos de CPU
que desea borrar.
2. En la carpeta "Bloques de programa" del árbol del proyecto, haga clic con el botón derecho
del ratón en el bloque de datos de CPU que desea borrar en el dispositivo.
3. Elija el comando "Borrar" del menú contextual.
Se abre el cuadro de diálogo "Borrar".

Programación del PLC
Manual de programación y manejo, 11/2019

7753

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos
4. Active el botón de opción "Borrar del dispositivo".
5. Haga clic en "Sí".
El bloque de datos de CPU se borra online del dispositivo.

Consulte también
Bloques de datos de CPU (Página 52)

7.4

Utilizar archivos fuente externos

7.4.1

Principios básicos de la utilización de archivos fuente externos

Función
Para los lenguajes de programación textual AWL y SCL existe la posibilidad de introducir el
código de programa en un editor ASCII cualquiera y guardarlo como un archivo fuente externo.
Aquí pueden realizarse p. ej. las siguientes acciones:
● Declarar variables
● Definir propiedades de bloques
● Programar bloques
Adicionalmente, es posible guardar tipos de datos PLC en archivos fuente externos.
Nota
Observe las indicaciones siguientes:
● Para que sea posible generar bloques o tipos de datos PLC en TIA Portal a partir del archivo
fuente externo, este debe almacenarse con una de las siguientes codificaciones de
caracteres:
– ANSI
– UTF-8 con BOM (Byte Order Mark)
– UTF-16 con BOM, formato Little Endian y Big Endian
– UTF-32 con BOM, formato Little Endian y Big Endian
– UCS2 en formato Little Endian y Big Endian
● Dentro de las Software Units pueden utilizarse archivos fuente externos solo con bloques
optimizados en lenguaje de programación SCL y con tipos de datos PLC.
● Con las fuentes externas solo es posible generar bloques y tipos de datos PLC en el entorno
correspondiente, es decir, dentro de una Software Unit o directamente debajo del PLC. Esto
significa, por ejemplo, que en otras Software Units no se sobrescribirán bloques ni tipos de
datos PLC. Si esto fuera necesario debido a la fuente externa seleccionada, la generación
no se llevará a cabo.

7754

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos
Los archivos fuente externos se pueden importar al proyecto para generar bloques o tipos de
datos PLC a partir de ellos. De esta manera se pueden generar varios objetos a partir de un
archivo fuente. Cuando genere bloques a partir de un archivo fuente, tenga en cuenta las
siguientes particularidades:
● Si en el proyecto ya existe un bloque o tipo de datos PLC con el mismo nombre, el bloque
o tipo de datos PLC se sobrescribe en el proyecto.
● Si un bloque se ha programado en el archivo fuente con su número de bloque absoluto en
lugar de con un nombre simbólico, y ese número ya está asignado a otro bloque del
proyecto, el bloque recién generado recibirá el siguiente nombre simbólico libre.
● Si en el archivo fuente externo no ha definido explícitamente el tipo de acceso para un
bloque, el tipo de acceso para el bloque se ajustará en función de la familia de CPU:
– Los bloques generados para una CPU de la serie S7-1200/1500 reciben de forma
predeterminada el tipo de acceso "optimizado".
– Los bloques generados para una CPU de la serie S7-300/400 reciben de forma
predeterminada el tipo de acceso "estándar".
Son excepción los bloques de organización que, en ese caso, siempre reciben de forma
predeterminada el tipo de acceso "estándar", independientemente de la familia de CPU. El
acceso al bloque se puede cambiar manualmente.
● Puede suceder que no todos los comentarios del archivo fuente se adopten en el bloque.
● Si en el archivo de origen externo se utiliza el direccionamiento absoluto, al crear el bloque
se genera una variable simbólica para cada dirección absoluta. Los nombres de dichas
variables se componen de "Tag_" y un sello de tiempo. De esta composición pueden
resultar nombres de variables relativamente largos, que pueden modificarse manualmente
en caso necesario.
● Si en el archivo fuente externo utiliza instrucciones de una versión distinta al dispositivo de
destino, esto puede provocar errores de compilación. En ese caso, corrija las instrucciones
correspondientes e inicie de nuevo el proceso de compilación. Otra posibilidad es
seleccionar otra versión para el dispositivo de destino.
● Las CPU de la serie S7-300/400 aceptan durante la importación bloques de organización
con cualquier nombre. Si se importa un OB con un nombre estándar (por ejemplo,
CYCL_EXC o CYC_INT5), automáticamente se asignará la clase de OB correcta. Si se
importa un OB con un nombre desconocido, se creará un OB 0. Este número puede
modificarse después de la importación para, de este modo, asignar la clase de OB
deseada. Para cambiar el número del OB, elija el comando "Propiedades" del menú
contextual.
● Al importar una fuente SCL, esta no se comprueba automáticamente. Esto conlleva que los
bloques que se generen a partir de ella puedan contener errores que no se mostrarán con
mensajes de error hasta la próxima compilación.
Asimismo, existe la posibilidad de guardar bloques existentes como archivos fuente externos.
Es posible guardar en un archivo fuente solo el código del bloque seleccionado, o también el
código de todos los bloques y tipos de datos PLC dependientes del bloque seleccionado. Al
guardar varios bloques en un archivo fuente, todos los bloques deben emplear el mismo
lenguaje de programación y ningún bloque puede tener protección de know-how. Los tipos de
datos PLC también pueden copiarse individualmente como texto e insertarse en un archivo de
texto.

Programación del PLC
Manual de programación y manejo, 11/2019

7755

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos

Consulte también
Reglas para la programación de archivos fuente externos (Página 7756)
Guardar un bloque como archivo fuente externo (Página 7757)
Integrar archivos fuente externos (Página 7759)
Abrir y editar archivos fuente externos (Página 7759)
Generar bloques a partir de archivos fuente externos (Página 7760)

7.4.2

Reglas para la programación de archivos fuente externos
Un archivo fuente externo consta, en principio, de un texto continuo. Sin embargo, para poder
compilarlo en bloques se deben respetar estructuras y normas sintácticas determinadas.

Reglas de sintaxis
La sintaxis de las instrucciones en los archivos fuente externos se parece a la utilizada en la
creación del programa de usuario en el editor de programación con AWL o SCL. Pero tenga en
cuenta las siguientes reglas sintácticas adicionales:
● Llamada de bloque
Al llamar un bloque, transfiera los parámetros en una secuencia definida en el editor ASCII.
De lo contrario, las asignaciones de comentario de estas filas posiblemente no
concordarán.
Indique los parámetros entre paréntesis. Los distintos parámetros se separan entre sí
mediante una coma.
● Mayúsculas o minúsculas
Por lo general, el editor de programación no tiene en cuenta mayúsculas o minúsculas.
Excepto en las etiquetas. Al introducir cadenas de caracteres (tipo de datos "STRING")
también se deben tener en cuenta las mayúsculas y minúsculas. Las palabras clave se
representan en mayúscula. En la compilación no se tienen en cuenta las mayúsculas o
minúsculas, así que las palabras clave se pueden indicar en mayúsculas, minúsculas o
ambas mezcladas.
● Punto y coma
Identifique el final de las instrucciones y declaraciones de variables con un punto y coma.
Se pueden introducir varias instrucciones por fila.
● Barras inclinadas
Comience cada comentario con dos barras inclinadas (//) y finalícelo con la tecla <Intro>.
● Uso de constantes String
Para evitar errores de compilación al utilizar constantes String, introduzca los textos en el
lenguaje del proyecto de destino. Para CPU de la serie S7-1200/1500 se puede utilizar el
tipo de datos WSTRING explícitamente mediante el prefijo "WString#":
Operando := WString#'<constante String>';

7756

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos

Consulte también
Principios básicos de la utilización de archivos fuente externos (Página 7754)
Guardar un bloque como archivo fuente externo (Página 7757)
Integrar archivos fuente externos (Página 7759)
Abrir y editar archivos fuente externos (Página 7759)
Generar bloques a partir de archivos fuente externos (Página 7760)

7.4.3

Guardar un bloque como archivo fuente externo
Existen las posibilidades siguientes para guardar bloques AWL y SCL y tipos de datos PLC
como archivos fuente externos:
● Copiar un bloque como texto
Tenga en cuenta que en el caso de bloques protegidos solo se adopta en el archivo fuente
la información que es visible incluso sin contraseña.
● Generar archivo fuente externo a partir de bloques
Es posible guardar en un archivo fuente externo solo el código del bloque seleccionado, o
también el código de todos los bloques y tipos de datos PLC dependientes del bloque
seleccionado. En ese caso, todos los bloques deben emplear el mismo lenguaje de
programación y ningún bloque puede tener protección de know-how.
Nota
Al utilizar la interfaz de bloque tabular, recuerde que no todos los valores iniciales se
exportan al origen, p. ej. tipos de datos PLC.

Copiar un bloque como texto
Para copiar un bloque o tipo de datos PLC como texto y guardarlo en un archivo fuente externo,
proceda del siguiente modo:
1. En el árbol del proyecto, haga clic con el botón derecho del ratón en el bloque que desea
guardar en un archivo fuente externo.
2. Seleccione el comando "Copiar como texto" del menú contextual.
3. Abra un editor de texto externo.
4. En el editor de texto, inserte el texto copiado desde el portapapeles.
5. Guarde el archivo con una de las siguientes extensiones de nombre de archivo:
– ".scl", si quiere generar un archivo fuente para un bloque SCL
– ".awl", si quiere generar un archivo fuente para un bloque AWL
– ".DB", si quiere generar un archivo fuente para un bloque de datos
– ".UDT", si quiere generar un archivo fuente para un tipo de datos PLC

Programación del PLC
Manual de programación y manejo, 11/2019

7757

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos

Generar archivo fuente externo a partir de bloques
Para generar archivos fuente externos a partir de bloques AWL o SCL o tipos de datos PLC,
proceda del siguiente modo:
1. En el árbol del proyecto o en la ventana general, seleccione los bloques o tipos de datos
PLC a partir de los que desea generar un archivo fuente externo.
Nota
Seleccione solo bloques que tengan el mismo lenguaje de programación y no tengan
protección de know-how.
2. Seleccione el comando "Generar fuente a partir de bloques > Solo bloques seleccionados"
del menú contextual para guardar los bloques o tipos de datos PLC seleccionados en un
archivo fuente externo. O bien seleccione el comando "Generar fuente a partir de bloques
> Incluir bloques dependientes" si también desea guardar en el archivo fuente externo el
código de los bloques dependientes y de los tipos de datos PLC referenciados.
Se abre el cuadro de diálogo "Guardar como".
3. Especifique una ruta y un nombre para la fuente externa.
4. Haga clic en "Aceptar".
También se puede generar un archivo fuente externo a partir de un bloque AWL o SCL abierto.
Para ello, proceda del siguiente modo:
1. En la lista desplegable "Generar fuente a partir de bloques" de la barra de herramientas del
editor de programación seleccione el comando "Generar fuente a partir de este bloque"
para guardar el bloque abierto en un archivo fuente externo. O bien seleccione el comando
"Generar fuente a partir de este bloque y de todos los bloques dependientes" si también
desea guardar en el archivo fuente externo el código de programa de los bloques
dependientes y de los tipos de datos PLC referenciados.
Se abre el cuadro de diálogo "Guardar como".
2. Especifique una ruta y un nombre para la fuente externa.
3. Haga clic en "Aceptar".

Resultado
Dependiendo de la opción seleccionada, se guardará como archivo fuente externo solo el
bloque, o el bloque junto con los bloques y los tipos de datos PLC dependientes. Este archivo
fuente se puede integrar en un proyecto en el TIA Portal para volver a generar bloques a partir
de él. Pero tenga en cuenta que los archivos fuente AWL solo pueden utilizarse en las CPU
S7-300/400/1500.

Consulte también
Principios básicos de la utilización de archivos fuente externos (Página 7754)
Reglas para la programación de archivos fuente externos (Página 7756)
Integrar archivos fuente externos (Página 7759)
Abrir y editar archivos fuente externos (Página 7759)
Generar bloques a partir de archivos fuente externos (Página 7760)

7758

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos

7.4.4

Integrar archivos fuente externos

Requisitos
● Existe un archivo fuente externo y se corresponde con las reglas de sintaxis y estructura.
● La carpeta "Fuentes externas" del árbol del proyecto está abierta.

Procedimiento
Para integrar un archivo fuente externo, proceda del siguiente modo:
1. Haga doble clic en el comando "Agregar nuevo archivo externo".
Se abrirá el cuadro de diálogo "Abrir".
2. Navegue hasta el archivo fuente externo existente y selecciónelo.
3. Confirme la selección con "Abrir".
Si ya existe un archivo fuente externo con este nombre en el proyecto, se abre el cuadro de
diálogo "Agregar archivo externo". A continuación, siga con el paso 4.
4. Elija si la nueva fuente externa debe insertarse cambiándole el nombre o bien si debe
reemplazarse la fuente externa existente.
5. Haga clic en "Aceptar".

Resultado
El nuevo archivo fuente se inserta en la carpeta "Fuentes externas".

Consulte también
Principios básicos de la utilización de archivos fuente externos (Página 7754)
Reglas para la programación de archivos fuente externos (Página 7756)
Guardar un bloque como archivo fuente externo (Página 7757)
Abrir y editar archivos fuente externos (Página 7759)
Generar bloques a partir de archivos fuente externos (Página 7760)

7.4.5

Abrir y editar archivos fuente externos
Si enlaza archivos con las extensiones "awl", "scl", "db" y "udt" con un editor, existe la
posibilidad de abrir y editar directamente los archivos fuente externos con estos formatos.
Como editor se debe utilizar Notepad, ya que con otros editores de texto posiblemente no
puedan abrirse varias fuentes al mismo tiempo.
De esta manera no es necesario volver a integrar los archivos fuente externos después de
editarlos.

Programación del PLC
Manual de programación y manejo, 11/2019

7759

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos

Enlazar archivos con las extensiones "awl", "scl", "db" y "udt" a un editor
Para enlazar los archivos con las extensiones "awl", "scl", "db" y "udt" con un editor, proceda
del siguiente modo:
1. Abra el Explorador de Windows.
2. Haga clic con el botón derecho del ratón en un archivo AWL.
3. Elija "Propiedades" del menú contextual.
Se abre el cuadro de diálogo "Propiedades".
4. Haga clic en "Cambiar" en el área "Tipo de datos" de la ficha "General".
Se abre el cuadro de diálogo "Abrir con".
5. Elija el editor de texto que desea enlazar con el tipo de archivo "awl".
6. Confirme la selección con "Aceptar".
7. Cierre el cuadro de diálogo "Propiedades" con "Aceptar".
8. Repita los pasos 2 a 7 con cada uno de los tipos de archivo restantes.

Abrir y editar archivos fuente externos
Para abrir un archivo fuente externo, proceda del siguiente modo:
1. Abra la carpeta "Fuentes externas" del árbol del proyecto.
2. Haga doble clic en el archivo fuente externo que desea abrir.
El archivo fuente externo se abre en el editor enlazado y se puede editar.

Consulte también
Principios básicos de la utilización de archivos fuente externos (Página 7754)
Reglas para la programación de archivos fuente externos (Página 7756)
Guardar un bloque como archivo fuente externo (Página 7757)
Integrar archivos fuente externos (Página 7759)
Generar bloques a partir de archivos fuente externos (Página 7760)

7.4.6

Generar bloques a partir de archivos fuente externos

Requisitos
● La carpeta "Fuentes externas" del árbol del proyecto está abierta.
● Existe un archivo fuente externo.
● El archivo fuente externo se guardó con una codificación de caracteres permitida.

7760

Programación del PLC
Manual de programación y manejo, 11/2019

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos

Procedimiento
Para generar bloques desde un archivo fuente externo, proceda del siguiente modo:
1. Seleccione el archivo fuente externo desde el que desea generar los bloques.
2. Elija el comando "Generar fuente a partir de bloques" del menú "Edición".
3. Una consulta de seguridad le informa de que los bloques existentes posiblemente se
sobrescribirán.
4. Confirme la consulta de seguridad con "Sí".

Resultado
Los bloques del archivo fuente externo se generan e insertan en la carpeta "Bloques de
programa" del árbol del proyecto. Si se producen errores, encontrará información sobre este
respecto en la ventana de inspección. Sin embargo, esta información se refiere al archivo
fuente externo y no al bloque generado.

Consulte también
Principios básicos de la utilización de archivos fuente externos (Página 7754)
Reglas para la programación de archivos fuente externos (Página 7756)
Guardar un bloque como archivo fuente externo (Página 7757)
Integrar archivos fuente externos (Página 7759)
Abrir y editar archivos fuente externos (Página 7759)
Definir propiedades de bloques (Página 7739)

Programación del PLC
Manual de programación y manejo, 11/2019

7761

Creación y gestión de bloques
7.4 Utilizar archivos fuente externos

7762

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.1

8

Proteger bloques

Introducción
Existen las siguientes posibilidades de proteger bloques:
● Protección de know-how:
Mediante la protección de know-how es posible proteger por contraseña contra accesos no
autorizados los bloques del tipo OB, FB, FC y los bloques de datos globales.
● Protección contra copia:
Para las CPU S7-1200/1500 se puede establecer una protección contra copia para bloques
lógicos que vincule la ejecución del bloque a la CPU o la Memory Card con el número de
serie especificado. Si se utiliza la protección contra copia para un bloque, es razonable
dotar también a ese bloque de una protección de know-how para que la protección contra
copia solo pueda suprimirse con contraseña.
● Protección contra escritura:
Para bloques lógicos es posible asignar una protección contra escritura que impida que el
bloque pueda modificarse inadvertidamente.
Para la protección de know-how tenga en cuenta las siguientes particularidades:
● No es posible proteger manualmente los bloques de datos de instancia, sino que dependen
de la protección de know-how del FB asignado. Esto significa que si se genera un bloque
de datos instancia para un FB con protección de know-how, el bloque de datos instancia
obtiene también la protección de know-how. Esto sucede independientemente de si se crea
el bloque de datos instancia de forma explícita o si se genera por una llamada de bloque.
● Con bloques de datos globales y con bloques de datos de instancia la protección de knowhow actúa como protección contra escritura.
● Los bloques de datos ARRAY no pueden dotarse de protección de know-how.
● La memoria de carga necesaria puede ser mayor con bloques con protección de know-how.
En un bloque con protección de know-how pueden leerse únicamente los datos siguientes sin
una contraseña correcta:
● Parámetros de transferencia Input, Output, InOut, Return, Static
● Título del bloque
● Comentario del bloque
● Propiedades de bloques
● Variables de bloques de datos globales sin indicación de la ubicación
Además, en un bloque con protección de know-how pueden realizarse las acciones siguientes:
● Copiar y borrar
● Llamar en un programa

Programación del PLC
Manual de programación y manejo, 11/2019

7763

Protección de bloques
8.1 Proteger bloques
● Comparación offline/online
● Cargar
En cambio, el código del bloque no se puede leer ni modificar si no se dispone de la
autorización necesaria.
Nota
Tenga en cuenta las indicaciones siguientes:
● S7-1200 versión 1.0 y S7-300/400 (solo bloques GRAPH y SCL): Si carga un bloque con
protección de know-how en un dispositivo, no se cargará la información de restauración.
Esto significa que un bloque con know-how protegido no se podrá volver a abrir si se carga
del dispositivo, ni siquiera conociendo la contraseña correcta.
● En las versiones offline y online de los bloques con protección de know-how solo se
comparan los datos sin protección.
● Sin la contraseña no es posible acceder al bloque.
● Si se inserta un bloque con protección de know-how a una librería, la plantilla maestra
resultante obtiene también la protección de know-how.
● En las propiedades del bloque, bajo "Compilación > Conformidad con librería" se indica si
el bloque puede utilizarse como elemento protegido de librería. Para ello, el bloque no
puede utilizar variables de las áreas de operandos Salidas (Q), Entradas (I), Marcas (M),
Temporizadores (T) o Contadores (Z) y no puede acceder a bloques de datos.
● Las referencias cruzadas a variables, marcas, entradas y salidas utilizadas en bloques con
protección de know-how solo se muestran si los bloques en cuestión se han desbloqueado
introduciendo la contraseña correcta antes de generar la lista de referencias cruzadas.
● La renumeración automática o manual del número de bloques con protección de know-how
sin una contraseña solo es posible en las CPU de las series S7-1500 y S7-1200 (a partir de
V4). Además, la protección de know-how debe haberse activado con una versión del TIA
Portal igual o superior a V13 SP1. Si no se cumplen estos requisitos para un bloque con
protección de know-how, en caso de cambio de número el componente binario cargable del
bloque ya no es actual. En este caso, el bloque debe volver a compilarse antes de cargarlo
en un dispositivo, lo que en el caso de un bloque con protección de know how solo es
posible con la contraseña correcta. Este punto debe recordarse especialmente si se desea
copiar un bloque con protección de know how a otro dispositivo que ya contenga un bloque
con ese número.
● Transmita siempre como fichero de proyecto o de librería un proyecto que contenga
bloques con protección de know-how. De ese modo, se asegurará de que no se omita la
protección de know-how.
● En un bloque abierto con protección de know-how no pueden modificarse los ajustes de
protección de know-how.

Empleo de un proveedor de contraseñas
Existe la posibilidad de vincular el TIA Portal a una administración de contraseñas externa a
través de un proveedor de contraseñas. Para ello se necesita un proyecto con versión de
producto V14 SP1 o superior.
Si se utiliza un proveedor de contraseñas, al activar la protección de know-how, contra copia
o contra escritura es posible seleccionar la contraseña de una lista. En la lista se muestran solo

7764

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.1 Proteger bloques
los nombres de las contraseñas; las contraseñas como tales no son visibles. Al abrir el bloque,
el TIA Portal se conecta con el proveedor de contraseñas y recoge la contraseña
correspondiente. Si en ese momento el proveedor de contraseñas no está disponible, solo es
posible abrir completamente el bloque si como estrategia alternativa se ha establecido la
introducción manual de la contraseña y se conoce la contraseña correspondiente. En este
caso el nombre de la contraseña no es suficiente. Dependiendo del ajuste de seguridad
seleccionado, en el proveedor de contraseñas es posible cambiar la contraseña para un
bloque con protección de know-how o desbloquear de nuevo la protección.
El uso de un proveedor de contraseñas incrementa la seguridad del código del programa,
puesto que no es necesario trasmitir a otros operadores las contraseñas para bloques con
protección de know-how. En vez de eso, todos los operadores pueden vincularse con el mismo
proveedor de contraseñas para obtener acceso a los bloques. Si un operador abandona el
proyecto, no es necesario cambiar la contraseña.
Si se producen problemas con los proveedores de contraseñas vinculados, existe la
posibilidad de registrar las actividades del proveedor de contraseñas y remitirlas al Customer
Support para su análisis.
Nota
Información de seguridad sobre la protección de bloques
Si un bloque está protegido por una contraseña introducida manualmente, esta deberá
introducirse cada vez que quiera editarse el bloque o modificar sus ajustes de protección. Esto
también se aplica si posteriormente un proveedor de contraseña contiene una contraseña con
el mismo texto.

Consulte también
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

Programación del PLC
Manual de programación y manejo, 11/2019

7765

Protección de bloques
8.2 Vincular un proveedor de contraseñas

8.2

Vincular un proveedor de contraseñas
Como alternativa a la entrada manual de contraseñas, existe la posibilidad de vincular al TIA
Portal un proveedor de contraseñas. Si se utiliza un proveedor de contraseñas se puede
seleccionar una contraseña de una lista de contraseñas disponibles. Al abrir un bloque con
protección de know-how, el TIA Portal se conecta con el proveedor de contraseñas y recoge
la contraseña correspondiente.
Para vincular un proveedor de contraseñas es necesario instalarlo y activarlo. Además se
necesita un archivo de configuración en el que esté definido el uso de un proveedor de
contraseñas.

Instalar y activar un proveedor de contraseñas
Para instalar y activar un proveedor de contraseñas, proceda del siguiente modo:
1. Instale el proveedor de contraseñas deseado siguiendo las instrucciones de instalación del
proveedor de contraseñas.
2. Abra el TIA Portal.
3. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
4. Seleccione el grupo "Proveedor de contraseña > Proveedores de contraseña disponibles"
en la navegación local.
El proveedor de contraseñas recién instalado se mostrará en la tabla de los proveedores de
contraseñas disponibles.
5. Active la casilla de verificación de la columna "Estado" para utilizar el proveedor de
contraseñas.
El proveedor de contraseñas instalado está activo y puede utilizarse.
6. Ajuste la entrada de contraseña preferente de modo que se utilice el proveedor de
contraseñas.
Consulte también: Definir la asignación preferente de contraseña (Página 7770)

Crear un archivo de configuración para el empleo de proveedores de contraseñas
Para crear un archivo de configuración para el empleo de proveedores de contraseñas,
proceda del siguiente modo:
1. Cree un archivo de configuración XML con el contenido indicado a continuación. Utilice la
codificación "UTF-8".
2. En el Setting-Tag denominado "EnablePasswordPreference" especifique si el usuario
puede conmutar entre la asignación manual de contraseñas y la asignación de contraseñas
mediante un proveedor de contraseñas.
3. En el Setting-Tag denominado "PasswordPreference" especifique el tipo de asignación de
contraseña que debe emplearse.
4. Guarde el archivo XML.
5. Guarde el archivo con el nombre "CorporateSettings.xml" en el siguiente directorio del PC:
C:\ProgramData\Siemens\Automation\Portal V15_1\CorporateSettings\

7766

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.2 Vincular un proveedor de contraseñas

Contenido del archivo de configuración
El archivo de configuración debe tener el contenido siguiente:
XML
<?xml version="1.0" encoding="utf-8"?>
<Document>
<Settings.Settings ID="0">
<ObjectList>
<Settings.General ID="1" AggregationName="General">
<ObjectList>
<Settings.PasswordProviders ID="3" AggregationeName="PasswordProviders">
<AttributeList>
<EnablePasswordPreference>
<Value>true</Value>
</EnablePasswordPreference>
<DefaultPasswordPreference>
<Value>Advanced</Value>
</DefaultPasswordPreference>
</AttributeList>
</Settings.PasswordProviders>
</ObjectList>
</Settings.General>
</ObjectList>
</Settings.Settings>
</Document>

Los ajustes del proveedor de contraseñas se definen en el elemento
"Settings.PasswordProviders":
● Para "EnablePasswordPreference" son posibles los valores siguientes:
– "true": El usuario puede conmutar en el TIA Portal entre la asignación manual de
contraseñas y la asignación de contraseñas mediante proveedor de contraseñas.
– "false": En el TIA Portal no está permitido conmutar entre asignación manual de
contraseñas y asignación de contraseñas mediante proveedor de contraseñas.
El ajuste estándar es "false".
● Para "DefaultPasswordPreference" son posibles los valores siguientes:
– "Manual": En el TIA Portal las contraseñas se asignan manualmente.
– "Advanced": En el TIA Portal las contraseñas se asignan mediante un proveedor de
contraseñas.
– "AdvancedWithManualFallback": En el TIA Portal las contraseñas se asignan mediante
un proveedor de contraseñas. Si el proveedor de contraseñas no está disponible, puede
accederse al bloque protegido introduciendo manualmente una contraseña.
El ajuste estándar es "Manual":
Si el archivo "CorporateSettings.xml" ya existe y contiene otros ajustes, complete el
elemento "Settings.PasswortProviders" dentro del elemento "ObjectList".

Programación del PLC
Manual de programación y manejo, 11/2019

7767

Protección de bloques
8.3 Mostrar proveedores de contraseñas disponibles

Consulte también
Proteger bloques (Página 7763)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.3

Mostrar proveedores de contraseñas disponibles
Es posible visualizar los proveedores de contraseñas que están disponibles en el TIA Portal.

Requisitos
Mediante un archivo de configuración se ha especificado la asignación de contraseñas
mediante proveedor de contraseñas.

Procedimiento
Para mostrar los proveedores de contraseñas disponibles, proceda del siguiente modo:
1. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
2. Seleccione el grupo "Proveedor de contraseña > Proveedores de contraseña disponibles"
en la navegación local.
Los proveedores de contraseñas disponibles se muestran en la tabla de la vista general.

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)

7768

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.4 Registrar actividades de los proveedores de contraseñas
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.4

Registrar actividades de los proveedores de contraseñas
Si se presentan problemas relacionados con los proveedores de contraseñas vinculados,
existe la posibilidad de registrar las actividades de los mismos. En tal caso no se registran
contraseñas. El registro se puede transferir al Customer Support para su análisis.

Requisitos
Hay un proveedor de contraseñas vinculado y activado.

Activar el registro de las actividades de los proveedores de contraseñas
Para activar el registro, proceda del siguiente modo:
1. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
2. Seleccione el grupo "Proveedor de contraseña > Análisis del proveedor de contraseña" en
la navegación local.
3. Active la casilla de verificación "Grabar actividades del proveedor de contraseña".
Se activan el campo de texto para la ubicación del archivo de registro y el botón "Examinar".
4. Introduzca una ubicación para el archivo de registro o selecciónelo mediante el botón
"Examinar".

Desactivar el registro de las actividades de los proveedores de contraseñas
Para desactivar el registro, proceda del siguiente modo:
1. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
2. Seleccione el grupo "Proveedor de contraseña > Análisis del proveedor de contraseña" en
la navegación local.
3. Desactive la casilla de verificación "Grabar actividades del proveedor de contraseña".
Se desactivan el campo de texto para la ubicación del archivo de registro y el botón
"Examinar".

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Definir el tipo de asignación de contraseñas (Página 7770)
Programación del PLC
Manual de programación y manejo, 11/2019

7769

Protección de bloques
8.5 Definir el tipo de asignación de contraseñas
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.5

Definir el tipo de asignación de contraseñas
En el tipo de asignación de contraseña para bloques con protección de know-how, con
protección contra copia y con protección contra escritura, el TIA Portal le ofrece las siguientes
posibilidades:
● "Entrada manual de contraseña"
En la entrada manual de contraseña, la contraseña se introduce directamente en el cuadro
de diálogo de consulta de contraseña.
● "Selección mediante proveedor de contraseña"
Al introducir una contraseña mediante un proveedor de contraseñas externo, esta puede
seleccionarse mediante un nombre en la lista de contraseñas disponibles. Si el proveedor
de contraseñas no está disponible, no es posible activar la protección. Un acceso posterior
al bloque solo es posible si existe conexión con el proveedor de contraseñas.
● "Selección mediante proveedor de contraseña con entrada manual como estrategia
alternativa para el acceso"
Igual que la entrada de contraseña mediante un proveedor de contraseñas externo. Si el
proveedor de contraseñas no está disponible y se conoce la contraseña, introduciendo
manualmente la contraseña se puede abrir el bloque para ejecutarlo.
La entrada manual de la contraseña es el ajuste predeterminado.

Requisitos
Para poder utilizar la asignación de contraseñas mediante un proveedor de contraseñas
externo deben cumplirse los requisitos siguientes:
● Mediante un archivo de configuración se ha especificado la asignación de contraseñas
mediante proveedor de contraseñas.
● En el archivo de configuración se ha permitido cambiar el tipo de asignación de
contraseñas.
● Hay conectado un proveedor de contraseñas.

7770

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.6 Establecer y quitar la protección contra copia de un bloque

Procedimiento
Para definir el tipo de asignación de contraseñas, proceda del siguiente modo:
1. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
2. Seleccione el grupo "Proveedor de contraseña > Asignación de contraseña" en la
navegación local.
3. Active el tipo deseado de asignación de contraseñas.

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.6

Establecer y quitar la protección contra copia de un bloque
Para las CPU S7-1200/1500 se puede crear una protección contra copia, de modo que la
ejecución del bloque quede vinculada a una CPU o una Memory Card determinadas. Solo si
el bloque se encuentra en el dispositivo con el número de serie definido es posible ejecutarlo.
Si desea insertar el número de serie automáticamente mediante una operación de carga, hay
que definir una contraseña de protección contra copia. Esta contraseña deberá introducirse
cuando se cargue el bloque. Es posible cambiar la contraseña sin eliminar la protección de
know how del bloque. Cuando se cambian los ajustes de protección contra copia o se elimina
dicha protección, la contraseña se conserva hasta el próximo proceso de compilación.

Programación del PLC
Manual de programación y manejo, 11/2019

7771

Protección de bloques
8.6 Establecer y quitar la protección contra copia de un bloque
Si se establece una protección contra copia para un bloque, es importante dotar a ese bloque
también con una protección de know-how. De lo contrario, cualquier persona puede desactivar
la protección contra copia.
Nota
Observe las notas siguientes:
S7-1500 y S7-1200 V2.2 y superior: Si carga un bloque con protección de copia en un
dispositivo que no coincide con el número de serie determinado, se rechaza todo el proceso de
carga. Eso significa que tampoco se cargan bloques sin protección contra copia.

Configurar protección contra copia
Para configurar la protección contra copia, proceda del siguiente modo:
1. Abra las propiedades del bloque para el que desea crear la protección contra copia.
2. En las propiedades del bloque de la navegación local seleccione la entrada "Protección".
3. Seleccione la entrada "Asociar al número de serie de la CPU" o "Asociar a número de serie
de la Memory Card" en la sección "Protección contra copia" de la lista desplegable.
4. Introduzca directamente el número de serie o active la opción "Número de serie agregado
al cargar en un dispositivo o una Memory Card", si el número de serie se debe insertar
automáticamente en el proceso de carga.
Si ha introducido directamente el número de serie, continúe con el paso 7. Si el número de
serie debe insertarse automáticamente durante el proceso de carga, deberán ejecutarse
también los pasos 5 y 6.
5. Haga clic en "Definir contraseña".
Se abre el cuadro de diálogo "Definir protección".
6. Si se emplea la entrada manual de la contraseña, introduzca la contraseña en los campos
"Contraseña nueva" y "Confirmar contraseña".
7. Si se utiliza un proveedor de contraseñas, seleccione primero el proveedor de contraseñas
y a continuación la contraseña.
8. Confirme las entradas con "Aceptar".
En el campo de estado se indicará que se ha definido una contraseña de protección contra
copia.
9. En el área "Protección de know-how" se puede configurar la protección de know-how del
bloque, siempre que el bloque no tenga ya protección de know-how.

7772

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.7 Establecer y quitar la protección contra escritura de bloques

Quitar protección contra copia
Para quitar la protección contra copia, proceda del siguiente modo:
1. Abra las propiedades del bloque del que desea eliminar la protección contra copia.
Nota
Si el bloque posee una protección de know-how, para poder cambiar los ajustes a
protección contra copia es necesario abrir el bloque con la contraseña correcta.
2. En las propiedades del bloque de la navegación local seleccione la entrada "Protección".
3. Seleccione la entrada "Sin binding" de la lista desplegable en el área "Protección contra
copia".

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.7

Establecer y quitar la protección contra escritura de bloques
Es posible establecer una protección contra escritura para bloques del tipo OB, FB y FC con
el fin de evitar que se modifiquen involuntariamente. Los bloques con una protección contra
escritura solo pueden abrirse en modo de lectura, pero es posible seguir editando las
propiedades del bloque.
Tenga en cuenta que la protección contra escritura no es una protección de know-how, puesto
que la protección contra escritura se puede volver a quitar en cualquier momento. Si un bloque
está protegido contra escritura, no es posible configurar además la protección de know-how.
Si desea que el bloque esté protegido por know-how, quite su protección contra escritura.

Programación del PLC
Manual de programación y manejo, 11/2019

7773

Protección de bloques
8.7 Establecer y quitar la protección contra escritura de bloques

Configurar la protección contra escritura
Para configurar la protección contra escritura de un bloque, proceda del siguiente modo:
1. Abra las propiedades del bloque para el que desea configurar la protección contra escritura.
2. En las propiedades del bloque de la navegación local seleccione la entrada "Protección".
3. En el área "Protección contra escritura" haga clic en "Definir contraseña".
Se abre el cuadro de diálogo "Definir protección".
4. Si se emplea la entrada manual de la contraseña, introduzca la contraseña en los campos
"Contraseña nueva" y "Confirmar contraseña".
5. Si se utiliza un proveedor de contraseñas, seleccione primero el proveedor de contraseñas
y a continuación la contraseña.
6. Confirme las entradas con "Aceptar".
En el campo de estado se indicará que se ha definido una contraseña de protección contra
escritura. El texto del botón cambia a "Cambiar contraseña".
7. Haga clic en la casilla de verificación "Protección contra escritura".
Se abre el cuadro de diálogo "Protección de acceso".
8. Introduzca la contraseña correcta o, si utiliza un proveedor de contraseñas, seleccione la
contraseña correcta.
La protección contra escritura se activa y continuará activa a partir de la siguiente vez que
se abra el bloque.

Desactivar la protección contra escritura
Para desactivar la protección contra escritura, proceda del siguiente modo:
1. Abra las propiedades del bloque para el que desea desactivar la protección contra
escritura.
2. En las propiedades del bloque de la navegación local seleccione la entrada "Protección".
3. En el área "Protección contra escritura" haga clic en la casilla de verificación "Protección
contra escritura".
Se abre el cuadro de diálogo "Protección de acceso".
4. Introduzca la contraseña correcta o, si utiliza un proveedor de contraseñas, seleccione la
contraseña correcta.
La protección contra escritura se desactiva, y el bloque podrá ejecutarse de nuevo la
siguiente vez que se abra. Sin embargo, la contraseña se mantiene, de manera que la
protección contra escritura puede activarse de nuevo en todo momento.

Activar la protección contra escritura
Para activar de nuevo la protección contra escritura, proceda del siguiente modo:
1. Abra las propiedades del bloque para el que desea activar de nuevo la protección contra
escritura.
2. Seleccione la entrada "Protección" en la ventana de inspección, en la navegación local.

7774

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.7 Establecer y quitar la protección contra escritura de bloques
3. En el área "Protección contra escritura" haga clic en la casilla de verificación "Protección
contra escritura".
Se abre el cuadro de diálogo "Protección de acceso".
4. Introduzca la contraseña correcta o, si utiliza un proveedor de contraseñas, seleccione la
contraseña correcta.
La protección contra escritura se activa de nuevo para el bloque y continuará activa la
siguiente vez que se abra el bloque.

Cambiar contraseña de protección contra escritura
Para cambiar la contraseña de protección contra escritura, proceda del siguiente modo:
1. Abra las propiedades del bloque para el que desea cambiar la contraseña de protección
contra escritura.
2. En las propiedades del bloque de la navegación local seleccione la entrada "Protección".
3. Haga clic en el botón "Cambiar contraseña".
Se abre el cuadro de diálogo "Cambiar protección".
4. Si se emplea la entrada manual de la contraseña, introduzca la contraseña antigua en el
campo "Contraseña antigua" y la contraseña nueva en el campo "Contraseña nueva".
Además, introduzca la contraseña nueva en el campo "Confirmar contraseña".
5. Si se utiliza un proveedor de contraseñas, seleccione primero el proveedor de contraseñas
y a continuación la contraseña nueva.
6. Confirme las entradas con "Aceptar".
La contraseña de protección contra escritura para el bloque cambia.
Nota
Siempre es posible cambiar la contraseña de protección contra escritura para el bloque. Solo
depende de si la protección contra escritura está activa o no.

Quitar la protección contra escritura
Para quitar la protección contra escritura de un bloque, proceda del siguiente modo:
1. Abra las propiedades del bloque del que desea eliminar la protección contra escritura.
2. En las propiedades del bloque de la navegación local seleccione la entrada "Protección".
3. Haga clic en el botón "Cambiar contraseña".
Se abre el cuadro de diálogo "Cambiar protección".
4. Si se emplea la entrada manual de la contraseña, introduzca la contraseña actual en el
campo "Contraseña antigua".
5. Si se utiliza un proveedor de contraseñas, seleccione primero el proveedor de contraseñas
y a continuación la contraseña actual.
6. Haga clic en "Eliminar".
La protección contra escritura del bloque se elimina. Al contrario que al desactivar la
protección contra escritura, también se borra la contraseña.

Programación del PLC
Manual de programación y manejo, 11/2019

7775

Protección de bloques
8.8 Configurar la protección de know-how para bloques

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.8

Configurar la protección de know-how para bloques
Es posible configurar una protección de know-how para los bloques en los dispositivos del
proyecto.

Procedimiento
Para configurar una protección de know-how para bloques, proceda del siguiente modo:
1. Seleccione los bloques sin protección de know-how que desea proteger.
2. En el menú "Edición", elija el comando "Protección de know-how".
Se abre el cuadro de diálogo "Definir protección".
3. Si se emplea la entrada manual de la contraseña, introduzca la contraseña en los campos
"Contraseña nueva" y "Confirmar contraseña".
4. Si se utiliza un proveedor de contraseñas, seleccione primero el proveedor de contraseñas
y a continuación la contraseña.
5. Confirme las entradas con "Aceptar".
6. Cierre el cuadro de diálogo "Definir protección" con "Aceptar".

Resultado
Los bloques seleccionados se dotan con una protección de know-how. Los bloques con
protección de know-how se marcan con un candado en el árbol del proyecto. La contraseña es
válida para todos los bloques seleccionados.

7776

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.9 Abrir bloques con protección de know-how

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.9

Abrir bloques con protección de know-how
Si como tipo de asignación de contraseñas se ha configurado el empleo de un proveedor de
contraseñas, al abrir un bloque protegido el TIA Portal se conecta con el proveedor de
contraseñas. Si la conexión se realiza correctamente no es necesario introducir la contraseña.
Si el proveedor de contraseñas no está disponible, solo es posible abrir completamente el
bloque si como estrategia alternativa se ha establecido la entrada manual de la contraseña y
se conoce la contraseña correspondiente. En este caso el nombre de la contraseña no es
suficiente.
Sólo es posible abrir varios bloques con protección de know-how en conjunto, si se protegen
con la misma contraseña.

Requisitos
● Está configurado el tipo de asignación de contraseñas "Entrada manual de la contraseña".
● Está configurado el tipo de asignación de contraseñas "Selección mediante proveedor de
contraseña con entrada manual como estrategia alternativa para el acceso" y no existe
conexión con el proveedor de contraseñas.

Procedimiento
Para abrir un bloque con protección de know-how, proceda del siguiente modo:
1. Haga clic en el bloque que desea abrir.
Se abre el cuadro de diálogo "Protección de acceso".
2. Introduzca la contraseña para el bloque con protección de know-how.
3. Confirme las entradas con "Aceptar".

Programación del PLC
Manual de programación y manejo, 11/2019

7777

Protección de bloques
8.10 Imprimir bloques con protección de know-how

Resultado
Si se introduce la contraseña correcta, se abre el bloque con protección de know-how. Sin
embargo, la protección de know-how del bloque no se anula. Si el bloque se copia o se inserta
a una librería, el know-how de las copias también estará protegido.
Después de abrir el bloque, el código del programa y la interfaz del bloque se pueden editar
hasta que se cierre el bloque o el TIA Portal. Cuando se vuelva a abrir el bloque, será necesario
volver a introducir la contraseña. Si se cierra el cuadro de diálogo "Protección de acceso" con
"Cancelar", el bloque se abre pero el código del bloque no se visualiza y por consiguiente el
bloque no se puede editar.

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.10

Imprimir bloques con protección de know-how
Sólo es posible imprimir completamente los bloques con protección de know-how si el bloque
en cuestión se ha abierto con la contraseña correcta. Si se imprime un bloque cerrado o se
abre con una contraseña incorrecta, sólo se imprimirán los datos del bloque que no estén
protegidos.

Procedimiento
Para imprimir completamente un bloque con protección de know-how, proceda del siguiente
modo:
1. Abra el bloque con protección de know-how que desea imprimir.
Consulte también: Abrir bloques con protección de know-how (Página 7777)
2. Elija el comando "Imprimir" del menú "Proyecto".
Se abre el cuadro de diálogo "Imprimir".
3. Seleccione la impresora en el campo "Nombre".
4. Haga clic en "Avanzadas", para editar los ajustes de Windows de la impresora.

7778

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.11 Cambiar la contraseña
5. Seleccione en la lista desplegable "Información del documento" el juego de datos del
documento que se debe utilizar para el diseño del borde.
6. En "Impresión de objeto/área desactivada", elija si desea imprimir todo el objeto o el área
completa, o bien únicamente una selección.
7. Seleccione el alcance de la impresión en "Propiedades".
– Elija "Todos" para imprimir todo el bloque.
– Elija "Visible" para imprimir toda la información actualmente visible en pantalla del
interior del bloque.
– Elija "Compacto" para imprimir el bloque en un formato reducido.
8. Haga clic en "Vista preliminar" para generar una vista preliminar.
En el área de trabajo se crea una vista preliminar.
9. Haga clic en "Imprimir" para iniciar la impresión.

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Cambiar la contraseña (Página 7779)
Quitar la protección de know-how para los bloques (Página 7780)

8.11

Cambiar la contraseña
Si se utiliza un proveedor de contraseñas, de las especificaciones del mismo depende que se
pueda modificar la contraseña para bloques con protección de know-how.

Programación del PLC
Manual de programación y manejo, 11/2019

7779

Protección de bloques
8.12 Quitar la protección de know-how para los bloques

Procedimiento
Para cambiar la contraseña, proceda del siguiente modo:
1. Seleccione los bloques con protección de know-how cuya contraseña desea cambiar.
Nota
Si desea cambiar simultáneamente la contraseña de varios bloques, los bloques
seleccionados deben tener la misma contraseña.
2. En el menú "Edición", elija el comando "Protección de know-how".
Se abre el cuadro de diálogo "Cambiar protección".
3. Si se emplea la entrada manual de la contraseña, introduzca la contraseña antigua en el
campo "Contraseña antigua" y la contraseña nueva en el campo "Contraseña nueva".
Además, introduzca la contraseña nueva en el campo "Confirmar contraseña".
4. Si se utiliza un proveedor de contraseñas, seleccione primero el proveedor de contraseñas
y a continuación la contraseña nueva.
5. Cierre el cuadro de diálogo "Cambiar protección" con "Aceptar".

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Quitar la protección de know-how para los bloques (Página 7780)

8.12

Quitar la protección de know-how para los bloques
Si se utiliza un proveedor de contraseñas, de las especificaciones del mismo depende que se
pueda eliminar la protección de know-how de un bloque.

7780

Programación del PLC
Manual de programación y manejo, 11/2019

Protección de bloques
8.12 Quitar la protección de know-how para los bloques

Procedimiento
Para quitar la protección de know-how para los bloques, proceda del siguiente modo:
1. Seleccione el bloque cuya protección de know-how desea quitar.
Nota
Si desea quitar simultáneamente la protección de know-how de varios bloques, los bloques
seleccionados deben tener la misma contraseña.
2. En el menú "Edición", elija el comando "Protección de know-how".
Se abre el cuadro de diálogo "Cambiar protección".
3. Si se emplea la entrada manual de la contraseña, introduzca en el campo "Contraseña
antigua" la contraseña para la protección de know-how del bloque. No es necesario hacerlo
si se utiliza un proveedor de contraseñas.
4. Haga clic en el botón "Eliminar".

Resultado
La protección de know-how del bloque se elimina.

Consulte también
Proteger bloques (Página 7763)
Vincular un proveedor de contraseñas (Página 7766)
Mostrar proveedores de contraseñas disponibles (Página 7768)
Registrar actividades de los proveedores de contraseñas (Página 7769)
Definir el tipo de asignación de contraseñas (Página 7770)
Establecer y quitar la protección contra copia de un bloque (Página 7771)
Establecer y quitar la protección contra escritura de bloques (Página 7773)
Configurar la protección de know-how para bloques (Página 7776)
Abrir bloques con protección de know-how (Página 7777)
Imprimir bloques con protección de know-how (Página 7778)
Cambiar la contraseña (Página 7779)

Programación del PLC
Manual de programación y manejo, 11/2019

7781

Protección de bloques
8.12 Quitar la protección de know-how para los bloques

7782

Programación del PLC
Manual de programación y manejo, 11/2019

9

Declaración de la interfaz del bloque
9.1

Descripción de la interfaz de bloque

Introducción
La interfaz contiene las declaraciones de las variables y constantes locales que se utilizan en
el bloque. Las variables se dividen en dos grupos:
● Parámetros de bloque que forman la interfaz de bloque para la llamada del bloque en el
programa.
● Datos locales que sirven para almacenar resultados intermedios.
La declaración de variables permite determinar la interfaz de llamada de un bloque en el
programa, así como el nombre y el tipo de datos de las variables y constantes que se desean
utilizar en el bloque.
La interfaz de los bloques de función define además la estructura de las instancias que se
asignan al bloque de función.

Representación tabular o textual de la interfaz del bloque
Por defecto la interfaz se muestra en la vista tabular. En SCL la interfaz también puede
representarse en una vista textual.
Consulte también:
Seleccionar representación tabular o textual de la interfaz del bloque (Página 7790)

Parámetros del bloque
La tabla siguiente muestra los tipos de parámetros del bloque:
Tipo

Sección

Función

Disponible en

Parámetros de entrada

Input

Parámetros cuyos valores lee el bloque.

Funciones, bloques de función
y algunos tipos de bloques de
organización

Parámetros de salida

Output

Parámetros cuyos valores escribe el bloque. Funciones y bloques de fun‐
ción

Parámetros de entrada/salida

InOut

El bloque lee los valores de estos paráme‐
Funciones y bloques de fun‐
tros al efectuar la llamada y los vuelve a es‐ ción
cribir en ellos tras la ejecución.

Valor de retorno

Return

Valor que se devuelve al bloque que realiza
la llamada.

Funciones

Según el tipo del bloque abierto se pueden visualizar más secciones.

Programación del PLC
Manual de programación y manejo, 11/2019

7783

Declaración de la interfaz del bloque
9.1 Descripción de la interfaz de bloque

Datos locales
La tabla siguiente muestra los tipos de datos locales:
Tipo

Sección

Función

Disponible en

Datos locales temporales

Temp

Variables que sirven para almacenar resul‐
tados intermedios temporales. Los datos
temporales se conservan solo durante un ci‐
clo. Si utiliza datos locales temporales, se
debe asegurar de que los valores se escri‐
ben dentro del ciclo en el que desea leerlos.

Funciones, bloques de función
y bloques de organización

Nota:

Nota:
en los bloques de datos de ins‐
tancia no se visualizan los da‐
tos locales temporales.

Si utiliza datos locales temporales en funcio‐
nes (FC) con acceso estándar, inicialice los
datos antes de usarlos. De lo contrario los
valores pueden ser aleatorios.
Datos locales estáticos

Static

Variables que sirven para almacenar resul‐ Bloques de función
tados intermedios estáticos en el bloque de
datos de instancia. Los datos estáticos se
conservan hasta que se vuelven a escribir,
también a lo largo de varios ciclos. Los nom‐
bres de los bloques que son llamados como
multiinstancia en un bloque lógico también
se depositan en datos locales estáticos.

Constante

Constant

Constantes con nombres simbólicos decla‐
rados que se utilizan dentro del bloque.

Funciones, bloques de función
y bloques de organización
Nota:
en los bloques de datos de ins‐
tancia no se visualizan las
constantes locales.

Consulte también
Variables (Página 102)
Palabras clave (Página 95)
Tipos de datos válidos en la interfaz de bloque (Página 7787)
Remanencia de las variables locales (Página 7789)
Principios básicos de las constantes (Página 103)
Transferencia de parámetros en la llamada de un bloque (Página 80)
Utilizar valores de ajuste durante la puesta en marcha (Página 7882)

7784

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.2 Reglas de la declaración de la interfaz del bloque

9.2

Reglas de la declaración de la interfaz del bloque

9.2.1

Reglas generales de la declaración de la interfaz del bloque

Uso de parámetros de bloque
Para el uso de parámetros de bloque en un bloque rigen las reglas siguientes:
● Los parámetros de entrada solo pueden leerse.
● Los parámetros de salida solo pueden escribirse.
● Los parámetros de entrada/salida pueden leerse y escribirse.
Nota
Número máximo de parámetros por bloque
El número máximo permitido de parámetros formales es suficiente para todos los casos de
aplicaciones habituales. El número exacto depende, entre otros, de los tipos de datos
seleccionados y de las secciones de declaración.
En caso de exceder el número máximo aparecerá un mensaje durante el proceso de
compilación. En este caso se pueden agrupar varios parámetros en un tipo de datos PLC
(UDT) o en un bloque de datos global (DB) y transferir el tipo o el bloque en forma de parámetro
de bloque.

Asignar valores predeterminados a los parámetros de bloque
Es posible asignar valores predeterminados a determinados parámetros en la interfaz de los
bloques de función. La posibilidad de asignar estos valores depende de la sección de
declaración y del tipo de datos de cada parámetro. Si no se introduce ningún valor
predeterminado, se utilizará el valor predefinido para el tipo de datos indicado. Por ejemplo, el
valor predefinido para BOOL es "false".
La tabla siguiente muestra a qué parámetros puede asignarse un valor predeterminado:
Tipo de parámetro

Sección

Parámetros de entrada Input

Es posible asignar un valor predeterminado
Tipos de datos simples Tipos de datos estruc‐
turados

Tipos de parámetros

X

X

-

Parámetros de salida

Output

X

X

-

Parámetros de entra‐
da/salida

InOut

X

- (1)

-

Datos locales estáticos Static

X

X

-

Datos locales tempora‐ Temp
les

-

-

-

Constantes

X

-

-

Constant

Programación del PLC
Manual de programación y manejo, 11/2019

7785

Declaración de la interfaz del bloque
9.2 Reglas de la declaración de la interfaz del bloque
Excepción: en los bloques con acceso optimizado, en determinadas condiciones existe la
posibilidad de utilizar tipos de datos PLC como valores predeterminados.

(1)

Nota
Encontrará más información sobre los caracteres admisibles en nombres de variables en el
Siemens Industry Online Support, en el artículo siguiente:
¿Cuándo hay que utilizar identificadores u operandos "entre comillas" en STEP 7 (TIA Portal)?
https://support.industry.siemens.com/cs/ww/es/view/10947785 (https://
support.industry.siemens.com/cs/ww/es/view/109477857)
Encontrará recomendaciones para nombrar variables unívocamente en todo el proyecto en la
guía de estilo del programador:
https://support.industry.siemens.com/cs/ww/de/view/109478084 (https://
support.industry.siemens.com/cs/ww/es/view/81318674)

Consulte también
Variables (Página 102)
Palabras clave (Página 95)
Declarar parámetros actuales predefinidos (Página 7805)

9.2.2

Tipos de datos válidos en la interfaz de bloque

Tipos de datos válidos en la interfaz de bloque, en S7-300/400
La tabla siguiente muestra a qué tipos de datos pueden asignarse los parámetros en las
diferentes secciones de la interfaz.
Sección

Estándar

ARRAY

Tipos de da‐
tos

STRUCT

Tipos de pa‐
rámetros

VOID

POINTER

ANY

-

-

-

X

-

-

-

-

STRING
DT

Bloque de organización
Temp

X

X

Constant

X

X

X

X

X

-

X

X

(3)

Bloque de función
Input
Output

X

X

-

-

-

-

InOut

X

X(1)

-

-

X

X

Static

X

X

-

-

-

-

Temp

X

X

-

-

-

X

7786

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.2 Reglas de la declaración de la interfaz del bloque
Sección

Estándar

ARRAY

Tipos de da‐
tos

STRUCT

Tipos de pa‐
rámetros

VOID

POINTER

ANY

STRING
DT

Constant

X

X (3)

-

-

-

-

Input

X

X (1)

X

-

X

X

Output

X

X

(1)

-

-

X

X

InOut

X

X(1)

-

-

X

X

Función

Temp

X

X

-

-

-

X

Return

X

X

-

X

X

X (2)

Constant

X

X (3)

-

-

-

-

(1)

STRING solo puede definirse en la longitud estándar de 254 caracteres.

(2)

En SCL, ANY no se admite como valor de función.

(3)

No se admiten constantes con los tipos de datos ARRAY o STRUCT.

Consulte también
Transferencia de parámetros en la llamada de un bloque (Página 80)

9.2.3

Tipos de datos válidos en la interfaz de bloque

Tipos de datos válidos en la interfaz de bloque, en S7-1200
La tabla siguiente muestra qué tipos de datos pueden asignarse en los parámetros de las
diferentes secciones de la interfaz.
Sección

Estándar

ARRAY

Tipos de datos

STRUCT

ARRAY [*]

VOID

VARIANT

STRING/
WSTRING
DT
Bloque de organización
Temp

X

X (5)

-

-

X

Constant

X

X

-

-

-

X

X

-

-

X

(1) (2)

Bloque de función
Input
Output

X

X

-

-

-

InOut

X

X (1)

X (4)

-

X

Static

X

X

-

-

-

Temp

X

X (5)

-

-

X

Constant

X

X

-

-

-

(1) (2)

Función

Programación del PLC
Manual de programación y manejo, 11/2019

7787

Declaración de la interfaz del bloque
9.2 Reglas de la declaración de la interfaz del bloque
Sección

Estándar

ARRAY

Tipos de datos

STRUCT

ARRAY [*]

VOID

VARIANT

STRING/
WSTRING
DT
Input

X

X (1)

X (4)

-

X

Output

X

X (1)

X (4)

-

X

InOut

X

X (1)

X (4)

-

X

Temp

X

X (5)

-

-

X

Return

X

X (3)

-

X

-

Constant

X

X

-

-

-

(1) (2)

En estas secciones no se pueden indicar declaraciones de longitud para STRING y WSTRING. Los STRING siempre
tienen una longitud estándar de 254 y los WSTRING, de 16832. La declaración en formato MyString[3] no sería admisible.
En estas secciones, WSTRING solo está permitido en bloques con acceso optimizado.

(1)

(2)

No se admiten constantes con los tipos de datos ARRAY o STRUCT.

(3)

Los valores de función del tipo de datos WSTRING no pueden tener más de 1022 caracteres.

(4)

ARRAY[*] está disponible a partir del firmware V4.2 en bloques con acceso optimizado.

Los accesos a tipos de datos estructurados (p. ej., ARRAY, STRUCT, tipo de datos PLC, etc.) que se hayan declarado en
la sección "Temp", pueden influir en el tiempo de ejecución del programa. En tal caso, no acceda a toda la estructura sino a
los distintos elementos de la misma.
(5)

Tipos de datos válidos en la interfaz de bloque, en S7-1500
La tabla siguiente muestra qué tipos de datos pueden asignarse en los parámetros de las
diferentes secciones de la interfaz.
Sección

Están‐
dar

ARRAY

Tipos
de da‐
tos

STRING/
WSTRIN
G

STRUCT

ARRAY[ Tipos
VOID
*]
de pará‐
metros

DB_AN
Y

POIN‐
TER

ANY

VA‐
RIANT

REF_T
O

DT
Bloque de organización
Temp

X

X(9)

-

- (4)

-

X

-

X (3)

X

X

Constant

X

X

-

-

-

-

-

-

-

-

Input

X

X

-

X

-

X

X

X

X

-

Output

X

X

-

-

-

X

-

-

-

-

InOut

X

X (1)

X(7)(8)

- (4)

-

X

X

X

X

-

Static

X

X

-

-

-

X

-

-

-

-

Temp

X

X

-

-

-

X

-

X

X

X

Constant

X

X (1) (5)

-

-

-

-

-

-

-

-

Input

X

X (1)

X(7)

X

-

X

X

X

X

X

Output

X

X

X

-

-

X

X

X

X

X

InOut

X

X (1)

X(7)

- (4)

-

X

X

X

X

-

(1) (5)

Bloque de función

(9)

(4)

(3)

Función

7788

(1)

(7)

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.2 Reglas de la declaración de la interfaz del bloque
Sección

Están‐
dar

ARRAY

Tipos
de da‐
tos

STRING/
WSTRIN
G

STRUCT

ARRAY[ Tipos
VOID
*]
de pará‐
metros

DB_AN
Y

POIN‐
TER

ANY

VA‐
RIANT

REF_T
O

DT
Temp

X

X(9)

-

- (4)

-

X

-

X (3)

X

X

Return

X

X

(6)

-

-

X

X

X

x

-

X

Constant

X

X

(1) (5)

-

-

-

-

-

-

-

-

(2)

En estas secciones no se pueden indicar declaraciones de longitud para STRING y WSTRING. Los STRING
siempre tienen una longitud estándar de 254 y los WSTRING, de 16832. La declaración en formato MyString[3] no
sería admisible. En estas secciones, WSTRING solo está permitido en bloques con acceso optimizado.

(1)

(2)

En SCL, ANY no se admite como valor de función.

(3)

ANY solo puede utilizarse en bloques con acceso estándar de la sección "Temp".

(4)

El tipo de parámetros "INSTANCE" es la única excepción permitida en las secciones "TEMP" e "InOut".

(5)

No se admiten constantes con los tipos de datos ARRAY o STRUCT.

(6)

Los valores de función del tipo de datos WSTRING no pueden tener más de 1022 caracteres.

(7)

ARRAY[*] está disponible a partir del firmware V2.0 en bloques con acceso optimizado.

(8)

ARRAY[*] solo está disponible si no se ha activado el atributo "Ajustar en IDB".

Los accesos a tipos de datos estructurados (p. ej., ARRAY, STRUCT, tipo de datos PLC, etc.) que se hayan
declarado en la sección "Temp", pueden influir en el tiempo de ejecución del programa. En tal caso, no acceda a
toda la estructura sino a los distintos elementos de la misma.
(9)

Consulte también
Transferencia de parámetros en la llamada de un bloque (Página 80)

9.2.4

Remanencia de las variables locales

Introducción
Los bloques de función almacenan sus datos en una instancia. Para impedir la pérdida de
estos datos en caso de un corte de alimentación, los datos pueden marcarse como
remanentes. Entonces se guardarán en un área de memoria remanente. Las posibilidades de
ajustar la remanencia dependen del tipo de acceso configurado para el bloque de función.

Comportamiento remanente en los bloques con acceso estándar
En los bloques con acceso estándar, el comportamiento remanente de las distintas variables
no puede ajustarse. Sólo se pueden definir como remanentes en la instancia asignada. Todas
las variables que contiene son consideradas entonces remanentes.

Remanencia en el acceso optimizado a bloques
En los bloques de datos con acceso optimizado se puede definir el comportamiento de
remanencia de las distintas variables.
Programación del PLC
Manual de programación y manejo, 11/2019

7789

Declaración de la interfaz del bloque
9.3 Seleccionar representación tabular o textual de la interfaz del bloque
En las variables de tipo de datos estructurado, la configuración de remanencia se aplica
siempre a la totalidad de la estructura. No se puede ajustar la remanencia individualmente para
cada uno de los elementos de la estructura.
En la sección "InOut" no se pueden crear variables remanentes de tipos de datos
estructurados. Los parámetros de entrada/salida con tipo de datos estructurado, p. ej. ARRAY,
STRUCT o STRING siempre son no remanentes.
Existen los siguientes ajustes:
● Remanente
Los valores de la variable o estructura están disponibles incluso después de un corte de
alimentación.
● No remanente
Los valores de la variable o estructura se pierden en caso de corte de alimentación.
● Ajustar en IDB
La remanencia se puede ajustar en el bloque de datos instancia. El ajuste realizado en el
bloque de datos instancia rige, sin embargo, de forma centralizada para todas las variables
que están marcadas con "Ajustar en IDB".

Consulte también
Propiedades de variables y constantes locales (Página 7829)
Fundamentos del acceso a bloques (Página 54)

9.3

Seleccionar representación tabular o textual de la interfaz del bloque

Representación tabular o textual de la interfaz de bloque
Por defecto la interfaz se muestra en la vista de tabla. En SCL la interfaz también puede
representarse en una vista de texto.
La representación de la interfaz de un bloque SCL se puede configurar de forma centralizada.
Si selecciona la representación textual como ajuste predeterminado, la interfaz de todos los
bloques generados a partir de ese momento se mostrará en la vista de texto.
Los elementos siguientes solo se pueden utilizar en la vista de texto:
● Comentarios entre las secciones o al inicio de una sección
● Varias secciones de un tipo (p.ej. VAR_INPUT).
Nota
Bloques de seguridad y bloques de sistema
Con bloques de seguridad y bloques de sistema, la interfaz se muestra exclusivamente en la
representación tabular.

7790

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

Configurar la representación de la interfaz para bloques nuevos
Para configurar la representación de la interfaz para bloques nuevos, proceda del siguiente
modo:
1. Elija el comando "Configuración" del menú "Opciones".
Se abre la ventana "Configuración" en el área de trabajo.
2. Seleccione el grupo "Programación PLC > SCL" en la navegación local.
3. Vaya a "Ajuste predeterminado para bloques nuevos > Interfaz de bloque" y elija la vista
deseada de la interfaz.
Si crea bloques nuevos, su interfaz se representará en la vista seleccionada.
Nota
Representación de la interfaz tras importar un bloque
Tras importar un bloque su interfaz se representa en la vista de tabla.

Consulte también
Estructura de la interfaz de bloque (Página 7791)
Estructura de la interfaz de bloque textual (Página 7809)

9.4

Declaración de la interfaz de bloque

9.4.1

Estructura de la interfaz de bloque

Estructura de la interfaz de bloque
La siguiente figura muestra la estructura de la interfaz de bloque. El número de columnas y
secciones varía según el tipo de bloque.

Programación del PLC
Manual de programación y manejo, 11/2019

7791

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

Significado de las columnas
En la siguiente tabla se explica el significado de las distintas columnas. Las columnas pueden
mostrarse u ocultarse según convenga. El número de columnas mostradas varía en función de
la familia de CPU y del tipo de objeto que esté abierto.
Columna

Explicación
Símbolo en el que se puede hacer clic para arrastrar un elemento
mediante Drag & Drop hasta un programa y utilizarlo allí como ope‐
rando.

Nombre

Nombre del elemento.

Tipo de datos

Tipo de datos del elemento.

Offset

Dirección relativa de una variable del bloque. Esta columna solo es
visible en los bloques con acceso estándar.
Nota:
Muchas instrucciones de las librerías de sistema SIMATIC tienen la
propiedad "Acceso optimizado al bloque" y por tanto no ocupan di‐
recciones de memoria fijas. Para estas instrucciones no se muestra
ningún offset aunque se utilicen como multiinstancia en un bloque de
acceso estándar.

Valor predeterminado

Valor que permite predeterminar determinadas variables en la interfaz
del bloque lógico o bien valor de una constante local.
La indicación del valor predeterminado es opcional para variables. Si
no se especifica ningún valor, se utilizará el valor predefinido para el
tipo de datos indicado. Por ejemplo, el valor predefinido para BOOL es
"false".
El valor predeterminado de una variable se aplica como valor de
arranque en el respectivo bloque de datos de instancia. Los valores
aplicados pueden sustituirse en el bloque de datos de instancia por los
valores de arranque específicos de la instancia.
Las constantes siempre tienen el valor predeterminado que se declaró
en la interfaz de bloque. No se visualizan en los bloques de datos de
instancia y por tanto tampoco se les puede asignar valores específi‐
cos de la instancia.

Remanencia

Marca una variable como remanente.
Los valores de las variables remanentes se conservan incluso tras
desconectar la alimentación.
Esta columna solo es visible en la interfaz de bloques de función con
acceso optimizado.

Visible en HMI Engineering

Indica si una variable está visible en la lista de selección de HMI de
forma predeterminada.

Accesible desde HMI / OPC
UA / Web API

Indica si HMI / OPC UA / Web API puede acceder a esta variable en
tiempo de ejecución.

Escribible desde HMI / OPC
UA / Web API

Indica si la variable puede escribirse desde HMI / OPC UA / Web API
en tiempo de ejecución.

Valor de ajuste

Marca una variable como valor de ajuste. Los valores de ajuste son
valores que requieren un ajuste fino en la puesta en marcha.
Esta columna solo existe en la interfaz de bloques de función.

7792

Supervisión

Muestra si para la variable se ha creado una supervisión para el diag‐
nóstico de proceso.

Comentario

Comentario para documentar el elemento.

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

Consulte también
Variables (Página 102)
Palabras clave (Página 95)
Tipos de datos válidos en la interfaz de bloque (Página 7787)
Remanencia de las variables locales (Página 7789)
Principios básicos de las constantes (Página 103)
Seleccionar representación tabular o textual de la interfaz del bloque (Página 7790)
Transferencia de parámetros en la llamada de un bloque (Página 80)
Utilizar valores de ajuste durante la puesta en marcha (Página 7882)

9.4.2

Declarar variables y constantes locales en la interfaz del bloque

Requisitos
La interfaz del bloque está abierta.

Procedimiento
Para declarar una variable o constante, proceda del siguiente modo:
1. Seleccione la sección de declaración que desee en la interfaz de bloque.
Las constantes deben declararse en la sección "Constant".
2. En la columna "Nombre", introduzca un nombre para el elemento.
3. Introduzca el tipo de datos deseado en la columna "Tipo de datos". Al introducirlo, se
dispone de la función de autocompletar.
4. Introduzca un valor para constantes en la columna "Valor predeterminado".
5. Opcionalmente: Modifique las propiedades que se visualizan en las otras columnas de la
interfaz del bloque.

Resultado
Se crea el elemento.

Programación del PLC
Manual de programación y manejo, 11/2019

7793

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

Comprobación de sintaxis
Cada vez que se efectúa una entrada se comprueba la sintaxis. Si hay errores, se destacan en
color rojo. No es necesario corregir estos errores inmediatamente, sino que es posible
continuar con la edición y efectuar las correcciones necesarias en un momento posterior. No
obstante, mientras que la declaración de variables contenga errores de sintaxis, no se podrá
compilar el programa.
Nota
Si se modifica la interfaz de un bloque, las llamadas del bloque serán posiblemente
incoherentes en el programa. Los puntos de llamada se actualizan automáticamente si es
posible.
Si no es posible una actualización automática, se tendrán que actualizar manualmente las
llamadas de bloque incoherentes.
Consulte también:
Actualizar llamadas de bloque en KOP (Página 7966)
Actualizar llamadas de bloque en FUP (Página 8027)

Consulte también
Reglas de la declaración de la interfaz del bloque (Página 7785)
Variables (Página 102)
Constantes (Página 103)
Declarar variables del tipo de datos ARRAY (Página 7796)
Declarar variables del tipo de datos STRUCT (Página 7798)
Declaración de variables del tipo de datos STRING y WSTRING (Página 7799)
Declarar variables basadas en un tipo de datos PLC (Página 7800)
Declarar variables superpuestas (Página 7801)
Declarar multiinstancias (Página 7802)
Declaración de instancias de parámetro (Página 7803)
Principios básicos de los valores de arranque (Página 7853)
Remanencia de las variables locales (Página 7789)
Propiedades de variables y constantes locales (Página 7829)

9.4.3

Declarar una variable local en el editor de programación

Requisitos
El editor de programación está abierto.

7794

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

Procedimiento
Para declarar una variable local, proceda del siguiente modo:
1. Inserte una instrucción en el programa.
Las cadenas de caracteres "<???>", "<??.?>" o "..." representan comodines de operandos.
2. Reemplace un comodín de operando con el nombre de la variable que se va a crear.
3. Seleccione el nombre del elemento.
Si desea declarar varios elementos, seleccione los nombres de todos los elementos que
desea declarar.
4. Elija el comando "Definir variable" del menú contextual.
Se abre el cuadro de diálogo "Definir variable". Muestra una tabla de declaración en la que
ya figura el nombre del elemento.
5. Para declarar una variable local, seleccione una de las secciones siguientes:
– Local In
– Local Out
– Local InOut
– Local Static
– Local Temp
6. Introduzca el tipo de datos y el comentario en las respectivas columnas.
7. Haga clic en el botón "Definir" para finalizar la entrada.

Resultado
La declaración se escribe directamente en la interfaz del bloque y es válida en todo el bloque.
Nota
Si se modifica la interfaz de un bloque, las llamadas del bloque serán posiblemente
incoherentes en el programa. Los puntos de llamada se actualizan automáticamente si es
posible.
Si no es posible una actualización automática, se tendrán que actualizar manualmente las
llamadas de bloque incoherentes.
Consulte también:
Actualizar llamadas de bloque en KOP (Página 7966)
Actualizar llamadas de bloque en FUP (Página 8027)

Consulte también
Variables (Página 102)
Palabras clave (Página 95)
Principios básicos de los valores de arranque (Página 7853)

Programación del PLC
Manual de programación y manejo, 11/2019

7795

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque
Propiedades de variables y constantes locales (Página 7829)
Remanencia de las variables locales (Página 7789)
Edición de la tabla de la interfaz de bloque (Página 7806)
Reglas de la declaración de la interfaz del bloque (Página 7785)

9.4.4

Declarar variables del tipo de datos ARRAY

Requisitos
La interfaz del bloque está abierta.

Procedimiento
Para declarar una variable del tipo de datos ARRAY, proceda del siguiente modo:
1. Seleccione la sección de declaración que desee en la interfaz de bloque.
2. Introduzca un nombre de variable en la columna "Nombre".
3. Haga clic en el botón para la selección del tipo de datos de la columna "Tipo de datos".
Se abre una lista de los tipos de datos permitidos.
4. Seleccione el tipo de datos "Array".
Se abre el cuadro de diálogo "Array".
5. Indique el tipo de datos de los elementos ARRAY en el campo de entrada "Tipo de datos".
6. A continuación, indique los límites inferior y superior de cada dimensión en el campo
"Límites de matriz".
Ejemplo de un ARRAY unidimensional:
Array[0..3] of Bool
Ejemplo de un ARRAY tridimensional:
Array[0..3, 0..15, 0..33]of Bool
Ejemplo de un Array unidimensional con límites variables:
Array[*]of Bool
Ejemplo de un ARRAY tridimensional con límites variables:
Array[*, *, *]of Bool
Ejemplo de un ARRAY unidimensional con constantes locales como límites de ARRAY
Array[#My_local_const1..#My_local_const2]of Bool
Ejemplo de un ARRAY unidimensional con constantes globales como límites de ARRAY
Array["My_global_const1".."My_global_const1"]of Bool
7. Confirme la entrada.
8. Opcionalmente: Modifique las propiedades de las variables que se visualizan en las otras
columnas de la interfaz de bloque.

7796

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque
Se crea la variable, pero permanece contraída. Para expandir el ARRAY, haga clic en el
triángulo situado delante de la variable. Tenga en cuenta que los ARRAYs de más de 10000
elementos no pueden expandirse para garantizar una mayor claridad.
Nota
Disponibilidad de ARRAY[*]
ARRAY[*] está disponible en las CPU de la serie S7-1200 a partir de la versión de firmware >=
4.2 y en las CPU de la serie S7-1500 a partir de la versión de firmware >= 2.0 en bloques
optimizados. En las funciones (FC) es posible utilizar ARRAY[*] en todas las secciones de
declaración. En los bloques de función (FB) solo es posible declarar ARRAY[*] como
parámetro de entrada/salida en la sección "InOut".

Introducir valores predeterminados de elementos ARRAY
Para preseleccionar los valores predeterminados de los distintos elementos de un ARRAY,
proceda del siguiente modo:
1. Haga clic en el triángulo situado delante de la variable del tipo de datos ARRAY.
El ARRAY se expande y cada uno de sus elementos aparece en una fila.
2. Introduzca los valores deseados en la columna "Valor predeterminado".

Comentar ARRAYs
Para introducir un comentario para todo el ARRAY, introdúzcalo en la fila superior de la
declaración ARRAY. El comentario se utiliza como ajuste predeterminado para todos los
elementos ARRAY subordinados.
Para asignar comentarios específicos a los diferentes elementos de un ARRAY, proceda del
siguiente modo:
1. Haga clic en el triángulo situado delante de la variable del tipo de datos ARRAY.
El ARRAY se expande y cada uno de sus elementos aparece en una fila.
2. Introduzca los valores que desee en la columna "Comentario".

Visualizar los ARRAYs en modo avanzado
En la vista "Modo avanzado", los ARRAYs se muestran expandidos de forma predeterminada.
Para activar el modo avanzado, proceda del siguiente modo:
1. Haga clic en el botón "Modo avanzado" de la barra de herramientas.

Programación del PLC
Manual de programación y manejo, 11/2019

7797

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

Nota
Restricción en la vista "Modo avanzado"
Dependiendo del tamaño de la memoria de trabajo del equipo existen los siguientes límites
máximos para el modo avanzado:
● Memoria de trabajo < 8 GB: Como máximo se visualizan 10.000 líneas.
● Memoria de trabajo >= 8 GB: Como máximo se visualizan 40.000 líneas.

Consulte también
ARRAY (Página 293)
Reglas de la declaración de la interfaz del bloque (Página 7785)
Variables (Página 102)
Palabras clave (Página 95)
Propiedades de variables y constantes locales (Página 7829)
Remanencia de las variables locales (Página 7789)

9.4.5

Declarar variables del tipo de datos STRUCT

Requisitos
La interfaz del bloque está abierta.

Procedimiento
Para declarar una variable del tipo de datos STRUCT, proceda del siguiente modo:
1. Seleccione la sección de declaración que desee en la interfaz de bloque.
2. Introduzca un nombre de variable en la columna "Nombre".
3. Introduzca "Struct" en la columna "Tipo de datos". Al introducirlo, se dispone de la función
de autocompletar.
Debajo de las nuevas variables se inserta una fila vacía sangrada.
4. Inserte el primer elemento de estructura en la fila vacía.
Debajo del elemento se inserta nuevamente una fila vacía.
5. Seleccione un tipo de datos para el elemento de estructura.
6. Opcionalmente: Modifique las propiedades del elemento de estructura que se visualizan en
las otras columnas de la interfaz del bloque.

7798

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque
7. Repita los pasos 4 a 6 para todos los demás elementos de estructura.
No es necesario finalizar explícitamente la estructura. La estructura termina con el último
elemento introducido.
8. Para insertar una nueva variable después de la estructura, deje una fila vacía al final de la
estructura e introduzca la nueva variable en la segunda fila vacía.

Resultado
Se crea la variable del tipo de datos STRUCT.

Nota
S7-1500: Máximo 252 estructuras en un bloque de datos
En un bloque de datos se permite un máximo de 252 estructuras. Si necesita más estructuras,
tendrá que reestructurar el programa. Por ejemplo se pueden crear las estructuras en varios
bloques de datos globales.

Consulte también
Declaración de STRUCT (Página 7813)
Reglas de la declaración de la interfaz del bloque (Página 7785)
Variables (Página 102)
Palabras clave (Página 95)
Propiedades de variables y constantes locales (Página 7829)
Remanencia de las variables locales (Página 7789)

9.4.6

Declaración de variables del tipo de datos STRING y WSTRING

Requisitos
La interfaz de bloque está abierta.

Procedimiento
Para declarar una variable del tipo de datos STRING o WSTRING, proceda del siguiente modo:
1. Seleccione la sección de declaración que desee en la interfaz de bloque.
2. Introduzca un nombre de variable en la columna "Nombre".

Programación del PLC
Manual de programación y manejo, 11/2019

7799

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque
3. Introduzca "STRING" o "WSTRING" en la columna "Tipo de datos". Al introducirlo, se
dispone de la función de autocompletar.
4. Opcionalmente: Indique la longitud máxima de la cadena de caracteres entre corchetes a
continuación de la palabra clave STRING o WSTRING. Si no indica una longitud máxima,
STRING tendrá una longitud estándar de 254 caracteres.
Ejemplo de un WSTRING de la longitud máxima 4:
WSTRING[4]
Ejemplo de un STRING cuya longitud máxima se define mediante una constante local:
STRING[#My_local_const1]
Ejemplo de un STRING cuya longitud máxima se define mediante una constante global:
STRING["My_global_const1"]

Resultado
Se crea la variable del tipo de datos STRING o WSTRING.

Consulte también
Declaración de STRING y WSTRING (Página 7820)

9.4.7

Declarar variables basadas en un tipo de datos PLC

Requisitos
En la CPU actual está declarado un tipo de datos PLC.

Procedimiento
Para declarar una variable basada en el tipo de datos PLC, proceda del siguiente modo:
1. Seleccione la sección de declaración que desee en la interfaz de bloque.
2. Introduzca el tipo de datos PLC en la columna "Tipo de datos". Al introducirlo, se dispone
de la función de autocompletar.
La variable se crea.
3. Si en la declaración del tipo de datos PLC ya se han definido valores predeterminados o
comentarios para las variables de un tipo de datos PLC, se mostrarán en gris. Esos valores
se pueden modificar en la interfaz del bloque.
Los valores modificados se representan en negro y solo son válidos para el lugar de uso
específico.
Nota
Si modifica o borra tipos de datos PLC utilizados en la interfaz del bloque, la interfaz se volverá
incoherente. Para corregir esta incoherencia es necesario volver a compilar el programa.
Consulte también: Actualizar la interfaz del bloque (Página 7834)

7800

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

9.4.8

Declarar variables superpuestas

Introducción
Para acceder a determinadas áreas de datos dentro de una variable declarada, se puede
superponer a las variables declaradas otra declaración más. De esta manera existe la
posibilidad de direccionar una variable ya declarada con otro tipo de datos. Por ejemplo, cada
bit de una variable del tipo de datos WORD se puede direccionar con un ARRAY of BOOL.

Superponer variable
Para superponer una variable con un tipo de datos nuevo, proceda del siguiente modo:
1. Abra la interfaz del bloque.
2. En la interfaz, seleccione la variable que desea superponer con un tipo de datos nuevo.
3. Haga clic en el botón "Agregar fila" de la barra de herramientas.
Debajo de la variable superpuesta se agrega una fila. La variable que se va a superponer
debe declararse en la fila inmediatamente después de la variable superpuesta.
4. Introduzca un nombre de variable en la columna "Nombre".
5. Introduzca la entrada "AT" en la columna "Tipo de datos". Se dispone de la ayuda de la
función de autocompletar.
La entrada de la columna "Nombre" se complementa con el siguiente suplemento.
"AT<Nombre de la variable superpuesta>"
6. Haga clic nuevamente en el botón para seleccionar el tipo de datos y seleccione el tipo de
datos para la variable nueva.
La variable se crea. En ella aparecen los mismos datos de la variable superpuesta pero se
interpretan con el tipo de datos nuevo.

Eliminar superposición
Para eliminar la superposición de una variable, proceda del siguiente modo:
1. Seleccione en la interfaz del bloque la variable superpuesta que desee eliminar.
2. Elija el comando "Borrar" del menú contextual.
La superposición se elimina.

Consulte también
Superponer variables con AT (Página 118)

Programación del PLC
Manual de programación y manejo, 11/2019

7801

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

9.4.9

Declarar multiinstancias

Requisitos
El bloque de función que debe llamarse se encuentra disponible en el árbol del proyecto y es
apto para multiinstancia.

Declaración de multiinstancias
Para declarar como multiinstancia un bloque de función que debe llamarse, proceda del
siguiente modo:
1. Abra la interfaz del bloque de función que efectúa la llamada.
2. Introduzca una denominación para la llamada de bloque en la columna "Nombre" de la
sección "Static".
3. Introduzca en la columna "Tipo de datos" un nombre simbólico para el bloque de función
que debe llamarse.
Nota
El editor de programación declara automáticamente la multiinstancia si se programa una
llamada de bloque en un segmento y en el cuadro de diálogo siguiente "Opciones de llamada"
se indica que el bloque debe llamarse como multiinstancia.

Declaración de multiinstancias como ARRAY
Para declarar un ARRAY de multiinstancias, proceda del siguiente modo:
1. Abra la interfaz del bloque de función que efectúa la llamada.
2. En la sección "Static", introduzca un nombre para el ARRAY en la columna "Nombre".
3. Seleccione el tipo de datos ARRAY en la columna "Tipo de datos".
Se abre el cuadro de diálogo "Array".
4. Introduzca en el campo "Tipo de datos" el nombre del bloque de función para el que deba
definirse una instancia. El nombre del bloque tiene que indicarse entre comillas.
5. A continuación, indique los límites inferior y superior de cada dimensión en el campo
"Límites de matriz".
Ejemplo de un ARRAY unidimensional: ARRAY:[0..3]
Ejemplo de un ARRAY tridimensional:[0..3, 0..15, 0..33]
6. Confirme la entrada.

Consulte también
Actualizar la interfaz del bloque (Página 7834)
Declaración de instancias (Página 7821)

7802

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

9.4.10

Declaración de instancias de parámetro

Introducción
La tabla siguiente muestra las posibilidades de declaración y uso de instancias de parámetro
en la interfaz del bloque:
Declaración

Tipo de
bloque

Utilización

InOut

FB

La instancia que se transfiere en calidad de parámetro actual se puede llamar posteriormente en
el bloque de función.

Input

FC

Se puede acceder en lectura a los datos de la instancia que se transfiera en calidad de pará‐
metro actual. Sin embargo, la instancia no se puede llamar desde el bloque.

Output

FC

Se puede acceder en escritura a los datos de la instancia que se transfiera en calidad de pará‐
metro actual. Sin embargo, la instancia no se puede llamar desde el bloque.

FC

Requisitos
La interfaz del bloque está abierta.

Procedimiento
Para declarar una instancia de parámetro, proceda del siguiente modo:
1. Abra la sección deseada de la interfaz del bloque (ver tabla).
2. Introduzca en la columna "Nombre" un nombre para el parámetro de entrada/salida al que
se transfiera la instancia.
3. Introduzca en la columna "Tipo de datos" el nombre del bloque de función para el que deba
definirse una instancia. El nombre del bloque tiene que indicarse entre comillas.
Nota
Declaración automática de la instancia de parámetro
El editor de programación declara la instancia de parámetro aunque se programe una llamada
de bloque en un segmento y en el cuadro de diálogo siguiente "Opciones de llamada" se
indique que el bloque debe llamarse como instancia de parámetro.

Consulte también
Instancias de parámetro (Página 67)
Declaración de instancias (Página 7821)

Programación del PLC
Manual de programación y manejo, 11/2019

7803

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

9.4.11

Ocultar parámetros en la llamada del bloque

Introducción
Existe la posibilidad de ocultar parámetros de bloque al llamar el bloque en KOP o FUP. En
principio, los parámetros ocultos no son visibles, aunque pueden visualizarse utilizando una
pequeña flecha situada en el borde inferior del cuadro de llamada.
Para ocultar un parámetro existen dos posibilidades:
●

Ocultar
El parámetro se oculta siempre.

● Ocultar cuando no hay ningún parámetro asignado
El parámetro se oculta a menos que esté conectado. Cuando se asigna un parámetro
actual se muestra el parámetro en el cuadro de llamada.

Procedimiento
Para definir si un parámetro de bloque debe mostrarse u ocultarse durante la llamada, proceda
del siguiente modo:
1. Abra la interfaz del bloque.
2. Seleccione un parámetro en la interfaz del bloque.
3. Abra la ficha "Propiedades" en la ventana de inspección.
4. Seleccione el grupo "Atributos" en la navegación local.
5. En "Visibilidad en llamadas de bloque en KOP/FUP" elija una de las opciones siguientes:
– "Mostrar"
– "Ocultar"
– "Ocultar si no hay ningún parámetro asignado"

Resultado
Al llamar el bloque en KOP o FUP, el parámetro se muestra u oculta en función del ajuste.
Si se detecta un error de sintaxis en la llamada del bloque no es posible ocultar el parámetro.

Consulte también
Cablear parámetros ocultos (Página 7982)
Declarar parámetros actuales predefinidos (Página 7805)

7804

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

9.4.12

Declarar parámetros actuales predefinidos

Introducción
Cuando se declara un parámetro de bloque es posible especificar qué parámetro actual debe
utilizarse en la llamada del bloque.
Esto puede ser útil cuando se utilizan bloques de programa como elementos de librería y se
desea almacenar junto con el elemento de librería información sobre los parámetros actuales
que deben utilizarse.
Además, en KOP y FUP es posible ocultar en la llamada del bloque parámetros que tienen un
parámetro actual predefinido y válido. En principio, los parámetros ocultos no son visibles,
aunque pueden visualizarse utilizando una pequeña flecha situada en el borde inferior del
cuadro de llamada.
Para ocultar un parámetro predefinido existen dos posibilidades:
● El parámetro se oculta siempre.
● El parámetro se ocultará mientras el parámetro actual predefinido esté asignado. Sin
embargo, al asignar otro parámetro actual se muestra el parámetro.

Requisitos
El parámetro se encuentra en la sección "Input", "Output" o "InOut".

Procedimiento
Para predefinir un parámetro actual, proceda del siguiente modo:
1. Abra la interfaz del bloque.
2. Seleccione un parámetro en la interfaz del bloque.
3. Abra la ficha "Propiedades" en la ventana de inspección.
4. Seleccione el grupo "Atributos" en la navegación local.
5. Introduzca el parámetro actual deseado en el campo de entrada "Parámetro actual
predefinido".
6. También puede optar por elegir la opción "Ocultar" en "Visibilidad en llamadas de bloque en
KOP/FUP".
7. Como opción adicional elija "Mostrar cuando el parámetro actual asignado no sea idéntico
al parámetro actual predefinido". Esta opción solo está disponible si previamente se ha
activado la opción "Ocultar".

Programación del PLC
Manual de programación y manejo, 11/2019

7805

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

Resultado
● Hay un parámetro actual predefinido. Si se guarda el bloque de programa como elemento
de librería, se incluirá también la información sobre el parámetro actual que debe utilizarse.
● Si se utiliza el elemento de librería en el programa, se comprueba si se puede direccionar
el parámetro actual que ha predefinido. En caso afirmativo se utiliza automáticamente
como parámetro actual.
● Si no se encuentra el parámetro actual en el programa se notifica un error de sintaxis y el
suministro de parámetros debe llevarse a cabo manualmente. Los parámetros con un
suministro no válido no se ocultan.

Consulte también
Ocultar parámetros en la llamada del bloque (Página 7804)

9.4.13

Edición de la tabla de la interfaz de bloque

9.4.13.1

Insertar filas en la tabla

Procedimiento
Para insertar una fila encima de la fila seleccionada, proceda del siguiente modo:
1. Seleccione la fila sobre la cual desea insertar una fila nueva.
2. Haga clic en el botón "Insertar fila" de la barra de herramientas de la tabla.

Resultado
Se inserta una fila nueva sobre la seleccionada.

9.4.13.2

Agregar filas en la tabla

Procedimiento
Para agregar una fila nueva detrás de la fila seleccionada, proceda del siguiente modo:
1. Seleccione la fila tras la que desea insertar la fila nueva.
2. Haga clic en el botón "Agregar fila" de la barra de herramientas de la tabla.

Resultado
Se inserta una fila nueva y vacía detrás de la fila seleccionada.

7806

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

9.4.13.3

Borrar variables

Procedimiento
Para borrar variables, proceda del siguiente modo:
1. Seleccione la fila que contiene la variable que desea borrar. También puede seleccionar
varias filas simultáneamente manteniendo pulsada la tecla <Ctrl> y haciendo clic
consecutivamente en las filas que desea seleccionar, o bien en la primera y en la última.
2. Elija el comando "Borrar" del menú contextual.

9.4.13.4

Rellenar celdas consecutivas automáticamente
Es posible transferir el contenido de una o varias celdas de la tabla a las celdas situadas
debajo, rellenando así las celdas consecutivas automáticamente.
Si se rellenan automáticamente las celdas de la columna "Nombre", cada uno de los nombres
se complementará con un número correlativo. Por ejemplo, el nombre "Motor" se transforma
en "Motor_1".
Es posible definir como área de origen una celda individual o varias celdas, o bien filas
completas.
Si la tabla abierta contiene menos filas de las que deben rellenarse, en primer lugar se deben
insertar más filas vacías.

Requisitos
● La tabla está abierta.
● Se dispone de filas de declaración suficientes.

Procedimiento
Para rellenar celdas consecutivas automáticamente, proceda del siguiente modo:
1. Seleccione las celdas cuyo contenido desea transferir.
2. Haga clic en el símbolo de rellenar situado en la esquina inferior derecha de la celda.
El puntero del ratón adopta la forma de una cruz con puntas de flecha.
3. Con el botón del ratón pulsado, arrastre el puntero hacia abajo hasta situarlo sobre las
celdas que desea rellenar automáticamente.
4. Suelte el botón del ratón.
Las celdas se rellenan automáticamente.
5. Si ya existen entradas en las celdas que van a rellenarse automáticamente, aparece un
cuadro de diálogo. En este diálogo puede indicarse si se quieren sobrescribir las entradas
existentes o si se quieren insertar nuevas filas para las variables nuevas.

9.4.13.5

Mostrar y ocultar las columnas de la tabla
Las columnas de las tablas pueden mostrase u ocultarse según necesidad.

Programación del PLC
Manual de programación y manejo, 11/2019

7807

Declaración de la interfaz del bloque
9.4 Declaración de la interfaz de bloque

Procedimiento
Para mostrar u ocultar las columnas de una tabla, proceda del siguiente modo:
1. Haga clic en el encabezado de una columna.
2. Elija el comando "Mostrar/ocultar" del menú contextual.
Aparece una selección de las columnas disponibles.
3. Para mostrar una columna, active la casilla de verificación correspondiente.
4. Para ocultar una columna, desactive la casilla de verificación correspondiente.
5. Para mostrar u ocultar varias columnas, haga clic en "Más" y active o desactive la casilla de
verificación de las columnas en cuestión en el cuadro de diálogo "Mostrar/ocultar".

9.4.13.6

Editar variables con editores externos
Para editar variables individuales en editores de tablas, p. ej., en Excel, éstas se pueden copiar
y pegar para exportarlas o importarlas.
Nota
Restricciones en la visualización y copia de elementos ARRAY
Dependiendo del tamaño de la memoria de trabajo del equipo existen los siguientes límites
máximos para la visualización y copia de elementos ARRAY de la interfaz del bloque a una
tabla Excel:
● Memoria de trabajo < 8 GB: Como máximo se visualizan y se copian 10.000 elementos.
● Memoria de trabajo >= 8 GB: Como máximo se visualizan y se copian 40.000 elementos.

Requisitos
Hay una interfaz de bloque y un editor externo abiertos.

Procedimiento
Para exportar distintas variables a un editor externo y volverlas a importar, proceda del
siguiente modo:
1. Para mostrar todos los elementos de tipos de datos estructurados, haga clic en el botón
"Modo avanzado".
2. Seleccione una o más variables.
3. Elija el comando "Copiar" del menú contextual.
4. Cambie al editor externo y pegue la variable copiada.
5. Edite las variables de la forma necesaria.
6. Copie las variables en el editor externo.
7. Seleccione las variables en el editor externo.
8. Cambie nuevamente a la interfaz del bloque.
9. Elija el comando "Pegar" del menú contextual.

7808

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

9.5

Declaración de la interfaz de bloque en la vista de texto

9.5.1

Estructura de la interfaz de bloque textual

Estructura de la interfaz de bloque textual
La siguiente figura muestra la estructura de la interfaz de bloque textual tal y como se
representa tras crear un bloque de función nuevo.

1

2

3

4

La interfaz de bloque textual se compone de las áreas siguientes:

Área

① Declaración de
bloques
② Secciones de
declaración

Significado
La declaración de bloques define el nombre y el tipo del bloque.
En las secciones de declaración se declaran los parámetros y los datos locales del bloque. En la interfaz
de bloque vacía ya se han introducido las secciones de declaración. No obstante, las secciones se
pueden mover, copiar y eliminar de la forma deseada.

Programación del PLC
Manual de programación y manejo, 11/2019

7809

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Área

Significado

③ Barra lateral
④ Números de lí‐

En la barra lateral se pueden insertar marcadores.
A la izquierda se muestran los números de línea junto a las secciones de declaración.

nea

Consulte también
Seleccionar representación tabular o textual de la interfaz del bloque (Página 7790)

9.5.2

Declaración de bloque y valor de retorno

Declaración de bloques
La interfaz de bloque textual comienza con la declaración de bloques. No es necesario
introducir la declaración de bloques personalmente. Ya está contenida en la plantilla de la
interfaz.

Valor de retorno
En las funciones (FC), indique el valor de retorno de la función después de la declaración del
bloque. El valor de retorno es el valor que se devuelve al bloque que realiza la llamada. Si se
indica el valor "VOID", la función no devolverá ningún valor de retorno.

Sintaxis
Para la declaración de bloques y el valor de retorno se utiliza la siguiente sintaxis:

Tipo de bloque

Sintaxis

Ejemplo

Función (FC)

FUNCTION <Nombre> [:Tipo de datos
Valor de retorno>]

FUNCTION "My_Function" : Int

<Declaración>
Bloque de función
(FB)

FUNCTION_BLOCK <Nombre>

Bloque de organi‐
zación (OB)

ORGANIZATION_BLOCK <Nombre>

FUNCTION "My_Function" : Void
FUNCTION_BLOCK "My_FunctionBlock"

<Declaración>
ORGANIZATION_BLOCK "My_OrganizationBlock"

<Declaración>

Consulte también
Ejemplo de una interfaz de bloque textual (Página 7827)

7810

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

9.5.3

Secciones de declaración

Secciones de declaración
La interfaz de bloque textual se divide en diferentes secciones de declaración marcadas
mediante pares de palabras clave. Dependiendo del tipo de bloque se admiten diferentes
secciones.
El orden de las secciones de declaración puede ser cualquiera. Una determinada sección
puede aparecer varias veces en la interfaz de bloque.
Para las secciones de declaración se utiliza la siguiente sintaxis:

Sección de declaración

Sintaxis

Parámetros de entrada

VAR_INPUT [<ATRIBUTO>]
<Declaración>
END_VAR

Parámetros de salida

VAR_OUTPUT [<ATRIBUTO>]
<Declaración>
END_VAR

Parámetros de entrada/
salida

VAR_IN_OUT [<ATRIBUTO>]
<Declaración>
END_VAR

Datos locales tempora‐
les

VAR_TEMP
<Declaración>
END_VAR

Datos locales estáticos

VAR [<ATRIBUTO>]
<Declaración>
END_VAR

Constante

VAR CONSTANT
<Declaración>
END_VAR

Encontrará más información sobre el significado de las diferentes secciones de declaración en:
Descripción de la interfaz de bloque (Página 7783)

Atributos para las secciones de declaración
Opcionalmente es posible asignar atributos a secciones. Los atributos son aplicables para
todas las variables declaradas en esa sección. Si una sección aparece varias veces, se
pueden utilizar atributos diferentes para cada instancia.
Los atributos disponibles son los siguientes:

Programación del PLC
Manual de programación y manejo, 11/2019

7811

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

Atributo

Significado

RETAIN

Las variables de esta sección son remanentes, lo que significa que sus valores continúan disponibles
tras un corte eléctrico.

DB_SPECIFIC

La remanencia se puede configurar en el bloque de datos de instancia.

Si no se indica ningún atributo, los datos de la sección de declaración no son remanentes.

Consulte también
Remanencia de las variables locales (Página 7789)
Ejemplo de una interfaz de bloque textual (Página 7827)

9.5.4

Declaración de variables e inicialización

Declaración e inicialización de variables o constantes
En las diferentes secciones de declaración se declaran las variables y constantes locales que
se utilizan en el bloque.
Una declaración de variables se compone de un nombre simbólico y un tipo de datos.
Opcionalmente se puede indicar un valor predeterminado para la inicialización de las
variables.
Además del nombre simbólico y el tipo de datos, una declaración de constantes siempre
contiene un valor. Las declaraciones de constantes solo están permitidas en la sección "VAR
CONSTANT".

Superponer variables con AT
Para acceder a determinadas áreas de datos dentro de una variable declarada, se puede
superponer a la variable declarada otra declaración más. De esta manera existe la posibilidad
de direccionar una variable ya declarada con otro tipo de datos. Por ejemplo, cada bit de una
variable del tipo de datos WORD se puede direccionar con un ARRAY of BOOL.
Mientras en la vista tabular una declaración AT debe estar justo detrás de la variable
referenciada, en la vista de texto puede estar en cualquier posición.
Las declaraciones AT no pueden inicializarse. Tenga en cuenta que las declaraciones AT en
principio solo pueden utilizarse en bloques no optimizados.

Sintaxis
Para la declaración de variables y constantes se utiliza la siguiente sintaxis:

7812

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

Declaración

Sintaxis

Ejemplos

Variable

<Nombre> : <Tipo de datos> [:= <Valor>];

myBit : BOOL;

Constante

<Nombre> : <Tipo de datos> := <Valor>;

myBit : BOOL := true;
PI : REAL := 3.141592;
myInt: INT := INT#16#7FFF;
myString: STRING := 'hello';
Declaración
AT

<Nombre> AT <Nombre de la variable referenciada> : <Ti‐ myReferenceToVar2 AT Var_2 : Int;
po de datos>;

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Reglas generales de la declaración de la interfaz del bloque (Página 7785)
Superponer variables con AT (Página 118)
Declarar variables superpuestas (Página 7801)
Ejemplo de una interfaz de bloque textual (Página 7827)
Constantes (Página 103)

9.5.5

Declaración de STRUCT

Declaración de STRUCT
El tipo de datos STRUCT representa una estructura de datos compuesta por un número fijo de
componentes de diferentes tipos de datos.
Una estructura también puede basarse en un tipo de datos PLC (UDT). Para ello, indique el tipo
de datos PLC como tipos de datos de la estructura. Un Tooltip indica los diversos elementos
del tipo de datos PLC.

Sintaxis
Para declarar un STRUCT se utiliza la siguiente sintaxis:

Programación del PLC
Manual de programación y manejo, 11/2019

7813

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

Declaración

Sintaxis

Ejemplos

STRUCT

<Nombre> : Struct

myStruct : Struct

<Nombre del elemento> : <Tipo de datos> [:= <Va‐
lor>];
<Nombre del elemento> : <Tipo de datos> [:= <Va‐
lor>];
...

mem_1 : Int;
mem_2 : Int;
mem_3 : BOOL;
END_Struct := (6,0, TRUE) ;

END_Struct := (<Lista de inicialización>);
STRUCT a
<Nombre> : "<Nombre UDT>" := (<Lista de iniciali‐
partir de un ti‐ zación>);
po de datos
PLC (UDT)

myStruct : "myType" := (6,0, TRUE);

Nota
S7-1500: Máximo 252 estructuras en un bloque de datos
En las CPU de la serie S7-1500 se permite un máximo de 252 estructuras en un bloque de
datos. Si necesita más estructuras, tendrá que reestructurar el programa. Por ejemplo se
pueden crear las estructuras en varios bloques de datos globales.

Inicialización de STRUCT
La inicialización de STRUCT es opcional. Para la inicialización introduzca un valor
directamente después de la declaración de variables o utilice una lista de inicialización.
Las listas de inicialización aparecen entre paréntesis tras la palabra clave END_STRUCT y se
introducen con :=. Si la estructura contiene estructuras subordinadas, para la inicialización se
utilizan paréntesis anidados. Si por error se utilizan las dos posibilidades de inicialización, se
empleará el valor de la lista de inicialización.

7814

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Para la lista de inicialización se utiliza la siguiente sintaxis:
Declaración

Sintaxis

Ejemplos

Comentario

Inicialización
de STRUCT

<Nombre> : Struct

myStruct : Struct

Los elementos de es‐
tructura se inicializan
como se indica a conti‐
nuación:

<Nombre del elemento> : <Tipo
de datos> [:= <Valor>];
...
END_Struct

mem_1 : Int := 1;
mem_2 : Int := 2;
mem_3 : BOOL := FALSE
End_Struct

// mem_1 := 1
// mem_2 := 2
// mem_3 := FALSE

Lista de inicia‐ := (<Valor>,<Valor>,<Valor>... )
lización para
STRUCT

myStruct : Struct
mem_1 : Int;
mem_2 : Int;
mem_3 : BOOL
End_Struct:=(2,0,TRUE);

Los elementos de es‐
tructura se inicializan
como se indica a conti‐
nuación:
// mem_1 := 2
// mem_2 := 0
// mem_3 := TRUE

Lista de inicia‐ := (<Valor>,(<Valor>,<Valor>... )) myStruct : Struct
lización para
mem_1 : Int;
STRUCT ani‐
mem_2 : Int;
dada
mem_3 : Struct
mem_4 : BOOL;
mem_5 : BOOL;
End_Struct;
End_Struct:=(2,0, (TRUE,TRUE));
Lista de inicia‐ := (<Nombre de elemento> :=
lización para
<Valor>), (<Nombre de elemen‐
STRUCT con to> := <Valor>)...
indicación del
nombre del
elemento

myStruct : Struct

Lista de inicia‐ := (<Valor>,<Valor>,<Valor>... )
lización para
el tipo de da‐
tos PLC
(UDT)

myStruct : "myType" := (2,0,TRUE);

mem_1 : Int;
mem_2 : Int;
End_Struct:=(mem_2:=55);

Los elementos de es‐
tructura se inicializan
como se indica a conti‐
nuación:
// mem_1 := 2
// mem_2 := 0
// mem_4 := TRUE
// mem_5 := TRUE
Los elementos de es‐
tructura se inicializan
como se indica a conti‐
nuación:
// mem_2 := 55
Los elementos de es‐
tructura se inicializan
como se indica a conti‐
nuación:
// mem_1 := 2
// mem_2 := 0
// mem_3 := TRUE

Programación del PLC
Manual de programación y manejo, 11/2019

7815

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Declaración

Sintaxis

Ejemplos

Comentario

Lista de inicia‐ := (<Valor>,(<Valor>,<Valor>... )) myStruct : "myType" := (2,0,
(TRUE,TRUE);
lización para
el tipo de da‐
tos PLC
(UDT) anida‐
do

Los elementos de es‐
tructura se inicializan
como se indica a conti‐
nuación:
// mem_1 := 2
// mem_2 := 0
// mem_3 := TRUE
// mem_4 := TRUE

Lista de inicia‐ := (<Nombre de elemento> :=
lización para
<Valor>), (<Nombre de elemen‐
el tipo de da‐ to> := <Valor>)...
tos PLC
(UDT) con in‐
dicación del
nombre del
elemento

Los elementos de es‐
tructura se inicializan
como se indica a conti‐
nuación:

myStruct : "myType" :=
(mem_1:=22,mem_2:=55);

// mem_1 := 22
// mem_2 := 55

Consulte también
Declarar variables del tipo de datos STRUCT (Página 7798)
Estructura de datos STRUCT (estructuras anónimas) (Página 288)
Reglas de la declaración de la interfaz del bloque (Página 7785)
Ejemplo de una interfaz de bloque textual (Página 7827)

9.5.6

Declaración de ARRAY

Declaración de ARRAY
El tipo de datos ARRAY representa una estructura de datos compuesta por un número fijo de
elementos del mismo tipo de datos.
Para declarar un ARRAY se utiliza la siguiente sintaxis:

Declaración

Sintaxis

Ejemplos

ARRAY

<Nombre> : ARRAY [valor límite inferior..valor límite supe‐
rior] OF <Tipo de datos> := [<Lista de inicialización>];

MyARRAY_1 : ARRAY[0..7] OF BOOL;

ARRAY con
límites varia‐
bles

7816

<Nombre> : ARRAY [*] OF <Tipo de datos>;

MyARRAY_1 : ARRAY[0..7] OF BOOL :=
[1,1,0,0,0,1,0,0];
MyARRAY_1 : ARRAY[*] OF INT;
MyARRAY_2 : ARRAY[*, *, *] OF INT;

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Declaración

Sintaxis

Ejemplos

ARRAY con
constantes
locales como
límites

<Nombre> : ARRAY [#<Nombre de constante>..#<Nombre
de constante>] OF <Tipo de datos> := [<Lista de inicializa‐
ción>];

MyARRAY_1 :
ARRAY[#LocConst1..#LocConst2] OF
INT;
MyARRAY_2 : ARRAY[1..#LocConst]
OF INT;
MyARRAY_3 : ARRAY[1..#LocConst]
OF INT := [1,1,0,0];

ARRAY con
constantes
globales co‐
mo límites

<Nombre> : ARRAY ["<Nombre de constante>".."<Nombre MyARRAY_1 :
de constante>"] OF <Tipo de datos> := [<Lista de inicializa‐ ARRAY["GlobConst1".."GlobConst2"]
ción>];
OF INT;
MyARRAY_2 : ARRAY[1.."GlobConst",
2..5,#l..#u] OF INT;
MyARRAY_3 : ARRAY[1.."GlobConst"]
OF INT:= [1,1,0,0];

ARRAY OF
STRUCT

<Nombre> : ARRAY[valor límite inferior..valor límite supe‐
rior] OF Struct
<Nombre de elemento> : <Tipo de datos>;
<Nombre de elemento> : <Tipo de datos>;
...

MyARRAY_1 : Array[0..1] OF Struct
mem_1 : Int;
mem_2 : Int;
END_STRUCT := [ (2,4),(22,44) ];

END_Struct := [<Lista de inicialización>];
ARRAY OF
UDT

<Nombre> : ARRAY[Valor límite inferior..valor límite supe‐
rior] OF "<Nombre_UDT>" := [<Lista de inicialización>];

MyARRAY_1 : Array[0..1] OF
MyType := [ (2,4),(22,44) ];

Inicialización de ARRAY
La inicialización de un ARRAY es opcional. Para ello se utiliza una lista de inicialización. Esta
aparece entre corchetes tras la declaración y se introduce con :=. La lista contiene valores
separados por coma para todos los elementos del ARRAY. Se pueden inicializar como máximo
10000 elementos.
Opcionalmente se pueden utilizar factores de repetición entre paréntesis para inicializar varios
elementos consecutivos con el mismo valor. El factor de repetición debe ser un entero positivo.
En el caso de ARRAY OF STRUCT también existe la opción de inicializar por elementos. Para
ello se asigna un valor a cada elemento de la estructura de un tipo de forma centralizada.

Programación del PLC
Manual de programación y manejo, 11/2019

7817

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Para la lista de inicialización se utiliza la siguiente sintaxis:
Declaración

Sintaxis

Ejemplos

Comentario

Lista de ini‐
cialización

:= [<Valor>,<Valor>,<Valor>... ]

myArray : ARRAY[0..2] OF
BOOL := [1,1,0];

Los elementos ARRAY se ini‐
cializan como se indica a con‐
tinuación:
// myArray[0] := 1
// myArray[1] := 1
// myArray[2] := 0

Lista de ini‐
cialización
con factor de
repetición

:= [<Valor>,<Factor de repeti‐
ción>(Valor),<Valor>... ]

myArray : ARRAY[1..2, 1..3]
OF INT := [9,8,3(10),6];

Los elementos ARRAY se ini‐
cializan como se indica a con‐
tinuación:
// myArray[1,1] := 9
// myArray[1,2] := 8
// myArray[1,3] := 10
// myArray[2,1] := 10
// myArray[2,2] := 10
// myArray[2,3] := 6

Lista de ini‐
cialización
para ARRAY
of STRUCT

:= [(<Lista de valores Elemento 1>),
(<Lista de valores Elemento 2>)...]

myArray : Array[0..1] OF
Struct
Element1 : Int;
Element2 : Int;
END_Struct := [ (2,4),
(22,44) ];

Los elementos ARRAY se ini‐
cializan como se indica a con‐
tinuación:
// myArray[0].Element1 := 2
// myArray[0].Element2 := 4
// myArray[1].Element1 := 22
// myArray[1].Element2 := 44

Lista de ini‐
:= [(<Nombre de elemento> := <Va‐
cialización
lor>), (<Nombre de elemento> :=
para ARRAY <Valor>)...]
of STRUCT
con indica‐
ción del nom‐
bre del ele‐
mento

7818

myArray : Array[0..1] OF
Struct
Element1 : Int;
Element2 : Int;
END_Struct := [ (Element1 :=
2 , Element2:=4),
(Element1 := 22,
Element2:=44) ];

Los elementos ARRAY se ini‐
cializan como se indica a con‐
tinuación:
// myArray[0].Element1 := 2
// myArray[0].Element2 := 4
// myArray[1].Element1 := 22
// myArray[1].Element2 := 44

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Declaración

Sintaxis

Ejemplos

Comentario

Lista de ini‐
cialización
para ARRAY
of STRUCT
con factor de
repetición

:= [<Factor de repetición>(Lista de
valores Elemento 1),<Factor de re‐
petición>(Lista de valores Elemen‐
to 2),... ]

myArray : Array[0..1, 0..1]
OF Struct
Element_x : Int;
Element_y : Int;
End_Struct:=[2((1, 11)),
2((2, 22))];

Los elementos ARRAY se ini‐
cializan como se indica a con‐
tinuación:
// myArray[0,0].Element_x:=
1
// myArray[0,0].Element_y:=
11
// myArray[0,1].Element_x:=
1
// myArray[0,1].Element_y:=
11
// myArray[1,0].Element_x:=
2
// myArray[1,0].Element_y:=
22
// myArray[1,1].Element_x:=
2
// myArray[1,1].Element_y:=
22

Lista de ini‐
cialización
para ARRAY
of UDT

:= [(Lista de valores Elemento 1>),
(<Lista de valores Elemento 2>)...]

myArray : Array[0..1] OF
MyType := [ (2,4),(22,44) ];

Los elementos ARRAY se ini‐
cializan como se indica a con‐
tinuación:
// myArray[0].UDT-Ele‐
ment1 := 2
// myArray[0].UDT-Ele‐
ment2 := 4
// myArray[1].UDT-Ele‐
ment1 := 22
// myArray[1].UDT-Ele‐
ment2 := 44

Programación del PLC
Manual de programación y manejo, 11/2019

7819

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Declaración

Sintaxis

:= [(<Nombre de elemento> := <Va‐
Lista de ini‐
lor>), (<Nombre de elemento> :=
cialización
para ARRAY <Valor>)...]
of UDT con in‐
dicación del
nombre del
elemento

Ejemplos

Comentario

myArray : Array[0..1] OF
MyType := [ (UDT-Element1 :=
2,UDT-Element2:=4),(UDTElement1 := 22,UDTElement2:=44) ];

Los elementos ARRAY se ini‐
cializan como se indica a con‐
tinuación:
// myArray[0].UDT-Ele‐
ment1 := 2
// myArray[0].UDT-Ele‐
ment2 := 4
// myArray[1].UDT-Ele‐
ment1 := 22
// myArray[1].UDT-Ele‐
ment2 := 44

Lista de ini‐
cialización
para ARRAY
of UDT con
factor de re‐
petición

:= [<Factor de repetición>(Lista de
valores Elemento 1),<Factor de re‐
petición>(Lista de valores Elemen‐
to 2),... ]

myArray : Array[0..1] OF
myType :=[2(((),1))];

Los elementos ARRAY se ini‐
cializan como se indica a con‐
tinuación:
// myArray[0].UDT-Ele‐
ment1 := 0
// myArray[0].UDT-Ele‐
ment2 := 1
// myArray[1].UDT-Ele‐
ment1 := 0
// myArray[1].UDT-Ele‐
ment2 := 1

Consulte también
ARRAY (Página 293)
Reglas de la declaración de la interfaz del bloque (Página 7785)
Ejemplo de una interfaz de bloque textual (Página 7827)

9.5.7

Declaración de STRING y WSTRING

Declaración de STRING y WSTRING
Los tipos de datos STRING y WSTRING guardan varios caracteres en una cadena de
caracteres. En la cadena de caracteres se admiten todos los caracteres del código ASCII. Los
caracteres se indican entre comillas simples.
Opcionalmente se puede indicar un valor predeterminado para la inicialización de la cadena de
caracteres.
En la declaración de un operando, la longitud máxima de la cadena de caracteres puede
indicarse entre corchetes a continuación de la palabra clave STRING o WSTRING (p. ej.
WSTRING[4]). Para la declaración de la longitud máxima se puede introducir un valor absoluto
o pueden utilizarse constantes locales o globales.
Si no se indica la longitud máxima, se utilizará para el correspondiente operando la longitud
estándar de 254 caracteres.

7820

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

Sintaxis
Para la declaración de STRING y WSTRING se utiliza la siguiente sintaxis:

Declaración

Sintaxis

Ejemplos

STRING

<Nombre> : STRING [:=
<Valor>];

myString: STRING;

WSTRING

<Nombre> : WSTRING [:=
<Valor>];

myWstring: WSTRING;

STRING con longitud má‐ <Nombre> :
xima definida
STRING[[Constante]];

myString: STRING := 'hello';
myWstring_var: WSTRING := 'helloWorld';
myString: STRING[10];
myString: STRING["globConst"];
myString: STRING[#locConst];

Consulte también
STRING (Página 274)
WSTRING (Página 277)
Declaración de variables del tipo de datos STRING y WSTRING (Página 7799)
Reglas de la declaración de la interfaz del bloque (Página 7785)
Ejemplo de una interfaz de bloque textual (Página 7827)

9.5.8

Declaración de instancias

Declaración de multiinstancias
Las multiinstancias se declaran en la sección "VAR...END_VAR" de la interfaz de bloque
textual. En ese caso sencillamente se coloca el nombre del bloque llamado como tipo de datos.
Las multiinstancias también pueden crearse como ARRAY.
En la interfaz textual no es posible inicializar los parámetros del bloque llamado.
Consulte también:
Multiinstancias (Página 64)
Declarar multiinstancias (Página 7802)

Declaración de instancias de parámetros
Lo mejor es declarar instancias de parámetros como parámetros de entrada/salida en la
sección "VAR_IN_OUT...END_VAR" de la interfaz de bloque textual. No obstante, también son
posibles en funciones (FC) como parámetros de entrada o de salida. En ese caso
sencillamente se coloca el nombre del bloque llamado como tipo de datos.
Programación del PLC
Manual de programación y manejo, 11/2019

7821

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
En la interfaz textual no es posible inicializar los parámetros del bloque llamado.
Consulte también:
Instancias de parámetro (Página 67)
Declaración de instancias de parámetro (Página 7803)

Instan‐
cia

Sintaxis

Mul‐
VAR
tiinstan‐
<Nombre de multiinstancia>:"<Nombre de blo‐
cia
que>";
END_VAR

Ejemplos

Significado

VAR

"instFB" es una multiins‐
tancia del bloque "MyFB".

instFB : "MyFB";
END_VAR

ARRAY VAR
de mul‐
<Nombre de multiinstancia>: ARRAY [n...m] of
tiinstan‐ "<Nombre de bloque>";
cias
END_VAR

VAR

Instan‐
cia de
pará‐
metro

VAR_IN_OUT

VAR

"instArray" es un array de
instArray : ARRAY [0… multiinstancias del blo‐
que "MyFB".
4] of "MyFB";
END_VAR

<Nombre de la instancia de parámetro>:"<Nom‐
instParam:"MyFB";
bre del bloque>";
END_VAR
END_VAR

"instParam" es una ins‐
tancia de parámetro del
bloque "MyFB".

Consulte también
Ejemplo de una interfaz de bloque textual (Página 7827)

9.5.9

Atributos para variables

Atributos para variables
Opcionalmente es posible asignar atributos a las diferentes variables. Si no asigna un atributo
explícitamente a una variable, esta tendrá los valores de atributo predeterminados. El ajuste
predeterminado de algunos atributos se puede modificar en la configuración general para la
programación del PLC.
Los atributos disponibles son los siguientes:

Atributo

Significado

Ajuste predetermi‐
nado

Visible en HMI Engineering

Indica si una variable está visible en la lista de selección de
HMI de forma predeterminada.

TRUE

Accesible desde HMI / OPC UA / Web
API

Indica si HMI / OPC UA / Web API puede acceder a esta
variable en tiempo de ejecución.

TRUE

7822

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Atributo

Significado

Ajuste predetermi‐
nado

Escribible desde HMI / OPC UA / Web
API

Indica si la variable puede escribirse desde HMI / OPC UA /
Web API en tiempo de ejecución.

FALSE

Valor de ajuste

Marca una variable como valor de ajuste. Los valores de
ajuste son valores que requieren un ajuste fino en la puesta
en marcha. Esta columna solo existe en la interfaz de blo‐
ques de función.

FALSE

Sintaxis
Para los atributos se utiliza la siguiente sintaxis:

Atributo

Sintaxis

Ejemplos

Visible en HMI
Engineering

<Nombre> {EXTERNALVISIBLE:=<Valor>}: <Tipo de
datos>;

myInt {EXTERNALVISIBLE:=
'False'} : INT;

Accesible des‐
de HMI / OPC
UA / Web API

<Nombre> {EXTERNALACCESSIBLE:=<Valor>}: <Ti‐
po de datos>;

myInt {EXTERNALACCESSIBLE:=
'False'} : INT;

Escribible des‐
de HMI / OPC
UA / Web API

<Nombre> {EXTERNALWRITABLE:=<Valor>}: <Tipo
de datos>;

myInt {EXTERNALWRITABLE:=
'False'} : INT;

Valor de ajuste

<Nombre> {S7_SETPOINT:=<Valor>}: <Tipo de da‐
tos>;

myInt {S7_SETPOINT:= 'False'} :
INT;

Consulte también
Ejemplo de una interfaz de bloque textual (Página 7827)
Configuración general de la programación PLC (Página 7685)

9.5.10

Comentarios

Comentarios
Tiene varias posibilidades para comentar una variable en la interfaz de bloque textual:
● Comentario de línea
Los comentarios de línea comienzan con "//" y se extienden hasta el final de la línea.
● Sección de comentario
Una sección de comentario se inicia con "(*" y se cierra con "*)". Esta sección puede abarcar
varias líneas.

Programación del PLC
Manual de programación y manejo, 11/2019

7823

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
Para los comentarios se aplican las reglas siguientes:
● Los comentarios no pueden anidarse unos dentro de otros.
● No es posible introducir comentarios en varios idiomas en la interfaz de bloque textual.
● Entre la declaración del bloque y la primera sección de declaración no se permiten
comentarios.
Excepción: en las funciones (FC) se permite en este punto un comentario de una línea.

Sintaxis
Para los comentarios se utiliza la siguiente sintaxis:

Atributo

Sintaxis

Ejemplos

Comentario de
línea

<Declaración>; //<Co‐
mentario>

MyInt : INT; // este es mi comentario

Sección de co‐
mentario

<Declaración>; (*<Co‐
mentario>*)

MyInt : INT; (* estos son mis comentarios:
1er comentario
2.º comentario*)

Consulte también
Editar comentarios multilingües en la interfaz del bloque (Página 7833)
Ejemplo de una interfaz de bloque textual (Página 7827)

9.5.11

Edición de la interfaz de bloque textual
Al editar la interfaz de bloque textual se pueden utilizar las mismas funciones de edición que
al editar el código del programa.

Utilizar la función de autocompletar
1. Introduzca la sintaxis de la declaración mediante el teclado.
Mientras introduce la sintaxis se abre la función de autocompletar. Esta ofrece todos los
elementos de sintaxis permitidos en la posición actual.
2. Seleccione el elemento deseado de la función de autocompletar.
Consulte también: Entrada manual de instrucciones SCL (Página 8150)

7824

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

Formatear líneas automáticamente
1. Seleccione el texto que desea formatear o sitúe la marca de inserción en la línea en
cuestión.
2. Seleccione el botón "Formatear automáticamente el texto seleccionado" en la barra de
herramientas del editor de programación.
Todas las líneas marcadas se formatean siempre que sean sintácticamente correctas.
Consulte también: Formatear un código SCL (Página 8143)

Anulación y aplicación individual de sangrías
1. Haga clic en las líneas en las que desea aplicar o anular la sangría.
2. Seleccione en la barra de herramientas del editor del programa el botón "Aplicar sangría"
o "Anular sangría".
El ancho de la sangría se define en "Opciones > Configuración".
Consulte también: Formatear un código SCL (Página 8143)

Expandir y contraer secciones de código
1. Haga clic en el símbolo menos de la vista de esquema.
La sección de código se contrae.
2. Haga clic en el símbolo más de la vista de esquema.
La sección de código se expande.
Consulte también: Expandir y contraer secciones de código (Página 8144)

Uso de marcadores
1. Haga clic en la línea en la que desea colocar el marcador.
2. Haga clic en el botón "Activar/borrar marcadores" de la barra de herramientas.
Nota
Navegación entre interfaz y código de programa
Si se han activado marcadores tanto en la interfaz como en el código de programa, los
comandos "Ir al marcador siguiente/anterior" no permiten navegar entre ambas ventanas.
Consulte también: Uso de marcadores (Página 8146)

Copiar o mover variables entre interfaz textual y tabular.
Es posible copiar o mover variables entre una interfaz textual y una interfaz tabular.
1. Seleccione una o varias variables de una sección de declaración.
2. Elija el comando "Copiar" o "Cortar" del menú contextual.

Programación del PLC
Manual de programación y manejo, 11/2019

7825

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto
3. Sitúe el cursor en la posición en la que desea insertar la variable.
4. Elija el comando "Pegar" del menú contextual.
Nota
Copiar o mover tipos de datos estructurados con inicializaciones
Al copiar tipos de datos estructurados anidados (p.ej., ARRAY of STRUCT) de una interfaz
textual a una interfaz tabular no se copian ni mueven los valores predeterminados de las
estructuras anidadas.

9.5.12

Restablecimiento de la interfaz estándar de un bloque de organización

Introducción
Los bloques de organización tienen parámetros de interfaz definidos que contienen la
información de arranque del OB. Si modifica o borra los parámetros predeterminados en la
interfaz de bloque textual, en el caso de los bloques de organización optimizados podrá
restablecer la interfaz estándar definida.

Procedimiento
Para restablecer la interfaz estándar de un bloque de organización, proceda del siguiente
modo:
1. En el menú contextual, elija el comando "Restablecer interfaz estándar".

Resultado
● Se restablecen los parámetros borrados o modificados del OB.
● Los parámetros agregados manualmente no se borran, sino que se conservan.

7826

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

9.5.13

Ejemplo de una interfaz de bloque textual

Ejemplo
La figura siguiente muestra el ejemplo de una interfaz de bloque textual:

Programación del PLC
Manual de programación y manejo, 11/2019

7827

Declaración de la interfaz del bloque
9.5 Declaración de la interfaz de bloque en la vista de texto

7828

Programación del PLC
Manual de programación y manejo, 11/2019

Declaración de la interfaz del bloque
9.6 Editar las propiedades de variables y constantes locales

9.6

Editar las propiedades de variables y constantes locales

9.6.1

Propiedades de variables y constantes locales

Propiedades
La tabla siguiente muestra una vista general de las propiedades de las variables y constantes
locales:
Grupo

Propiedad

Descripción

General

Nombre

Nombre del elemento

Tipo de datos

Tipo de datos del elemento

Valor predetermina‐
do

Valor que permite predeterminar determinadas variables
en la interfaz del bloque lógico o bien valor de una cons‐
tante local.
La indicación del valor predeterminado es opcional para
variables. Si no se especifica ningún valor, se utilizará el
valor predefinido para el tipo de datos indicado. Por ejem‐
plo, el valor predefinido para BOOL es "false".
El valor predeterminado de una variable se aplica como
valor de arranque en la respectiva instancia. Estos valores
aplicados pueden sustituirse por valores de arranque es‐
pecíficos de la instancia.

Comentario

Programación del PLC
Manual de programación y manejo, 11/2019

Comentario sobre el elemento

7829

Declaración de la interfaz del bloque
9.6 Editar las propiedades de variables y constantes locales
Grupo

Propiedad

Descripción

Atributos

Remanencia

Marca la variable como remanente.
Los valores de las variables remanentes se conservan
incluso tras desconectar la alimentación.
Este atributo solo está disponible en la interfaz de bloques
de función con acceso optimizado.

Visible en HMI Engi‐ Indica si la variable está visible de forma predeterminada
neering
en la lista desplegable de HMI.
Indica si la variable puede escribirse desde HMI / OPC
Escribible desde
HMI / OPC UA / Web UA / Web API en tiempo de ejecución.
API
Indica si HMI / OPC UA / Web API puede acceder a esta
Accesible desde
HMI / OPC UA / Web variable en tiempo de ejecución.
API
No obstante, tenga en cuenta que con el atributo "Acce‐
sible desde HMI /OPC UA / Web API" no se consigue una
protección de acceso general para la variable. El acceso
en modo de escritura o lectura a través de otras aplica‐
ciones puede ser posible aunque el atributo no esté acti‐
vado.
Visibilidad con lla‐
madas de bloques
en KOP/FUP

Mostrar:
El parámetro es visible siempre en llamadas de bloques
en KOP 