
OUT => "Tag_Result"
)

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Parámetro

Operando

Valor

MN

Tag_LowLimit

12000

IN

Tag_InputValue

8000

MX

Tag_HighLimit

16000

OUT

Tag_Result

12000

El valor del operando "Tag_InputValue" se compara con los valores de los operandos
"Tag_LowLimit" y "Tag_HighLimit". Puesto que el valor del operando "Tag_InputValue" es
menor que el valor límite inferior, el valor del operando "Tag_LowLimit" se copia en la salida
"Tag_Result".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

SQR: Calcular cuadrado
Descripción
La instrucción "Calcular cuadrado" permite elevar al cuadrado el valor del número en coma
flotante del operando y escribir el resultado en la salida.

Programación del PLC
Manual de programación y manejo, 11/2019

5725

Instrucciones
4.2 Instrucciones
Si el operando contiene un número en coma flotante no válido, el valor del resultado tampoco
será válido.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L, P o
constante

Valor de entrada

<Resultado>

Output

Números en coma
flotante

I, Q, M, D, L, P

Cuadrado del valor de entra‐
da

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := SQR("Tag_InValue")

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

5.0

Tag_OutValue

25.0

La instrucción eleva al cuadrado el valor del operando "Tag_InValue" e indica el resultado en
el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

SQRT: Calcular raíz cuadrada
Descripción
La instrucción "Calcular raíz cuadrada" permite extraer la raíz cuadrada del valor de entrada y
guardar el resultado en el operando indicado. La instrucción da un resultado positivo si el valor
de entrada es mayor que cero. En los valores de entrada menores que cero, la instrucción
devuelve un número en coma flotante no válido. Si el valor del operando es "0", el resultado
también es "0".

5726

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L, P o
constante

Valor de entrada

<Resultado>

Output

Números en coma
flotante

I, Q, M, D, L

Raíz cuadrada del valor de
entrada

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := SQRT("Tag_InValue")

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

25.0

Tag_OutValue

5.0

La instrucción extrae la raíz cuadrada del valor del operando "Tag_InValue" e indica el
resultado en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

LN: Calcular logaritmo natural
Descripción
La instrucción "Calcular logaritmo natural" permite calcular el logaritmo natural en base e (e =
2,718282) a partir del valor de entrada. La instrucción da un resultado positivo si el valor de
entrada es mayor que cero. En los valores de entrada menores que cero, la instrucción
devuelve un número en coma flotante no válido.

Programación del PLC
Manual de programación y manejo, 11/2019

5727

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L, P o
constante

Valor de entrada

<Resultado>

Output

Números en coma
flotante

I, Q, M, D, L, P

Logaritmo natural del valor
de entrada

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := LN("Tag_InValue")

La instrucción calcula el logaritmo natural del valor del operando "Tag_InValue" e indica el
resultado en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

EXP: Calcular valor exponencial
Descripción
La instrucción "Calcular valor exponencial" permite calcular la potencia en base e (e =
2,718282) del valor del operando.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L, P o
constante

Valor de entrada

<Resultado>

Output

Números en coma
flotante

I, Q, M, D, L, P

Valor exponencial del valor
de entrada

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

5728

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := EXP("Tag_InValue")

La instrucción calcula la potencia en base e del valor del operando "Tag_InValue" e indica el
resultado (eIN) en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

SIN: Calcular valor de seno
Descripción
La instrucción "Calcular valor de seno" permite calcular el seno del ángulo. El tamaño del
ángulo se indica en radianes en el operando.
El valor del resultado no es válido si el valor del operando no es un número en coma flotante
válido.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

REAL

I, Q, M, D, L, P o
constante

Tamaño del ángulo en radia‐
nes

<Resultado>

Output

REAL

I, Q, M, D, L, P

Seno del ángulo indicado

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := SIN("Tag_InValue")

Programación del PLC
Manual de programación y manejo, 11/2019

5729

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

+1.570796 (π/2)

Tag_OutValue

1.0

La instrucción calcula el seno del ángulo indicado en el operando "Tag_InValue" e indica el
resultado en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

COS: Calcular valor de coseno
Descripción
La instrucción "Calcular valor de coseno" permite calcular el coseno de un ángulo. El tamaño
del ángulo se indica en radianes en el operando.
El valor del resultado no es válido si el valor del operando no es un número en coma flotante
válido.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

REAL

I, Q, M, D, L, P o
constante

Tamaño del ángulo en radia‐
nes

<Resultado>

Output

REAL

I, Q, M, D, L, P

Coseno del ángulo indicado

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := COS("Tag_InValue")

5730

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

+1.570796 (π/2)

Tag_OutValue

0

La instrucción calcula el coseno del ángulo indicado en el operando "Tag_InValue" e indica el
resultado en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

TAN: Calcular valor de tangente
Descripción
La instrucción "Calcular valor de tangente" permite calcular la tangente de un ángulo. El
tamaño del ángulo se indica en radianes en el operando.
El valor del resultado no es válido si el valor del operando no es un número en coma flotante
válido.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

REAL

I, Q, M, D, L, P o
constante

Tamaño del ángulo en radia‐
nes

<Resultado>

Output

REAL

I, Q, M, D, L, P

Tangente del ángulo indicado

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := TAN("Tag_InValue")

Programación del PLC
Manual de programación y manejo, 11/2019

5731

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

+3.141593 (π)

Tag_OutValue

0

La instrucción calcula la tangente del ángulo indicado en el operando "Tag_InValue" e indica
el resultado en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

ASIN: Calcular valor de arcoseno
Descripción
La instrucción "Calcular valor de arcoseno" permite calcular a partir del valor de seno indicado
en el operando el tamaño del ángulo que corresponde a este valor. En el operando solo se
pueden indicar números en coma flotante válidos, comprendidos en un rango de valores entre
-1 y +1. El tamaño del ángulo calculado puede estar comprendido entre -π/2 y +π/2.
El valor del resultado no es válido si se cumple una de las siguientes condiciones:
● El valor del operando no es un número en coma flotante válido.
● El valor del operando está fuera del rango de valores permitido (-1 hasta +1).

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

REAL

I, Q, M, D, L, P o
constante

Valor de seno

<Resultado>

Output

REAL

I, Q, M, D, L, P

Tamaño del ángu‐
lo en radianes

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := ASIN("Tag_InValue")

5732

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

1.0

Tag_OutValue

+1.570796 (π/2)

La instrucción calcula el tamaño del ángulo que corresponde al valor de seno del operando
"Tag_InValue". El resultado de la instrucción se deposita en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

ACOS: Calcular valor de arcocoseno
Descripción
La instrucción "Calcular valor de arcocoseno" permite calcular a partir del valor de coseno
indicado en el operando el tamaño del ángulo que corresponde a este valor. En el operando
solo se pueden indicar números en coma flotante válidos, comprendidos en un rango de
valores entre -1 y +1. El tamaño del ángulo calculado puede estar comprendido entre 0 y +π.
El valor del resultado no es válido si se cumple una de las siguientes condiciones:
● El valor del operando no es un número en coma flotante válido.
● El valor del operando está fuera del rango de valores permitido (-1 hasta +1).

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

REAL

I, Q, M, D, L, P o
constante

Valor de coseno

<Resultado>

Output

REAL

I, Q, M, D, L, P

Tamaño del ángu‐
lo en radianes

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := ACOS("Tag_InValue")

Programación del PLC
Manual de programación y manejo, 11/2019

5733

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

0

Tag_OutValue

+1.570796 (π/2)

La instrucción calcula el tamaño del ángulo que corresponde al valor de coseno del operando
"Tag_InValue". El resultado de la instrucción se deposita en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

ATAN: Calcular valor de arcotangente
Descripción
La instrucción "Calcular valor de arcotangente" permite calcular a partir del valor de tangente
indicado en el operando el tamaño del ángulo que corresponde a este valor. En el operando
solo se pueden indicar números en coma flotante válidos (o -NaN/+NaN). El tamaño del ángulo
calculado puede estar comprendido entre -π/2 y +π/2.
El valor de la salida OUT no es válido si el valor de la entrada IN no es un número en coma
flotante válido.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L, P o
constante

Valor de tangente

<Resultado>

Output

Números en coma
flotante

I, Q, M, D, L, P

Tamaño del ángulo en radia‐
nes

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := ATAN("Tag_InValue")

5734

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

1.0

Tag_OutValue

+0,785398 (π/4)

La instrucción calcula el tamaño del ángulo que equivale al valor de tangente del operando
"Tag_InValue". El resultado de la instrucción se deposita en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Números en coma flotante no válidos (Página 263)
Principios básicos de GRAPH (Página 8191)

Transferencia
SWAP: Cambiar disposición
Descripción
Con la instrucción "Cambiar disposición" se modifica la disposición de los bytes del operando.
Dependiendo del tipo de datos utilizado, se puede cambiar el orden de los bytes en todo el
acumulador 1 o solamente en la palabra derecha del acumulador 1.
La siguiente figura muestra cómo se cambian las posiciones de los bytes del operando del tipo
de datos DWORD:

Programación del PLC
Manual de programación y manejo, 11/2019

5735

Instrucciones
4.2 Instrucciones


,1

 

 
 

 

 

 


 



 

 

 

 

 

 


 



 

 


 


 



 
 

 






287

 



 

 




 

 




 

 

 

 


 


 

 

 





Disposición de los bytes en la palabra derecha del acumulador 1
Para el tipo de datos WORD se cambia la disposición de los bytes en la palabra derecha del
acumulador 1.
La tabla siguiente muestra el contenido del acumulador 1 antes y después de ejecutar la
instrucción:
Estado

Bytes del acumulador 1

Antes de la ejecución

Valor A

Valor B

Valor C

Valor D

Después de la ejecución

Valor A

Valor B

Valor D

Valor C

El resultado de la instrucción se guarda en la palabra derecha del acumulador 1. Los bytes de
la palabra izquierda del acumulador 1 no se ven influidos por la instrucción y no cambian.

Parámetro
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

WORD, DWORD

I, Q, M, D, L o
constante

Operando cuyas posiciones
de bytes se cambian

<Resultado>

Output

WORD, DWORD

I, Q, M, D, L

Resultado

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

5736

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := "SWAPTag_InValue")

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

0000

1111

0000

1111

Tag_OutValue

0000

1111

1111

0000

Cambiar la disposición de los bytes en todo el acumulador 1:
Para el tipo de datos DWORD se modifica la disposición de los bytes en todo el acumulador 1.
La tabla siguiente muestra el contenido del acumulador 1 antes y después de ejecutar la
instrucción:
Estado

Bytes del acumulador 1

Antes de la ejecución

Valor A

Valor B

Valor C

Valor D

Después de la ejecución

Valor D

Valor C

Valor B

Valor A

El resultado de la instrucción se guarda en el acumulador 1. El contenido del acumulador 2 no
cambia.
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

1111

0000

0000

1111

0000

0000

1111

1111

Tag_OutValue

1111

1111

0000

0000

0000

1111

1111

0000

La disposición de los bytes en el operando "Tag_InValue" se guarda cambiada en el operando
"Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Programación del PLC
Manual de programación y manejo, 11/2019

5737

Instrucciones
4.2 Instrucciones

BLKMOV: Copiar área
Descripción
La instrucción "Copiar área" copia los contenidos de un área de memoria (área de origen) en
un área de memoria diferente (área de destino). La operación de copia se realiza por orden
ascendente de direcciones. Las áreas de origen y destino se definen mediante punteros ANY.
Nota
En esta instrucción solo se pueden utilizar tipos de datos que sean válidos en una CPU de la
serie S7-300/400.
La figura siguiente muestra el principio de la operación de copia:

'%'%:

$

%

'%'%:

&

'

'%'%:

(

)

'%'%:

*

+

&RSLDU
/DFRSLDVHHIHFW¼DHQ
VHQWLGRDVFHQGHQWHGH
ODVGLUHFFLRQHV

0:

$

%

0:

&

'

0:

(

)

0:

*

+

UHDGHPHPRULD

Coherencia de los datos de origen y destino
Tenga en cuenta que al ejecutar la instrucción "Copiar área" no se modifican los datos de
origen. De lo contrario no está garantizada la coherencia de los datos de destino.

Posibilidad de interrupción
Mientras el área de origen no forme parte de un bloque de datos que solo figura en la memoria
de carga, no hay limitaciones en cuanto a la profundidad de anidamiento.
Por el contrario, en caso de interrumpirse la ejecución de BLKMOV, en la que se copia desde
un DB no relevante para la ejecución, no puede anidarse más la ejecución de la BLKMOV.

5738

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Áreas de memoria
La instrucción "Copiar área" permite copiar las siguientes áreas de memoria:
● Áreas de un bloque de datos
● Marcas
● Memoria imagen de proceso de las entradas
● Memoria imagen de proceso de las salidas
● Bloques de datos no relevantes para la ejecución

Reglas generales para copiar
Las áreas de origen y destino no deben solaparse. Si las áreas de origen y destino son de
diferente longitud, se copia solo hasta la longitud del área más pequeña.
Si el área de origen es más pequeña que el área de destino, el área de origen se copiará por
completo en el área de destino. Los restantes bytes del área de destino permanecen
inalterados.
Si el área de destino es más pequeña que el área de origen, se escribirá en toda el área de
destino. Los restantes bytes del área de origen se ignoran.
Al copiar un área del tipo de datos BOOL, la longitud indicada del área debe ser un múltiplo de
8, pues de lo contrario no se ejecutará la instrucción.
Nota
Si el área de origen o destino realmente existente es menor que el área de origen o destino
indicada en el parámetro SRCBLK o DSTBLK, el comportamiento dependerá del tipo de CPU:
● Para las CPU S7-300 rige lo siguiente:
No se transfieren datos. En el parámetro RET_VAL se devuelve el código de error
W#16#837F. Este código de error debe evaluarse en el programa de usuario.
● Para las CPU V4 del S7-400 (V4, CPU H V4 y CPU H V4.5 se aplica lo siguiente:
No se transfieren datos. En el parámetro RET_VAL se devuelve el código de error
W#16#8122 o W#16#8323. Este código de error debe evaluarse en el programa de usuario.
● Para las restantes CPU S7-400 rige:
Se transfieren datos. En el parámetro RET_VAL se devuelve el código de error W#16#8122
o W#16#8323. Este código de error debe evaluarse en el programa de usuario.

Reglas para copiar cadenas de caracteres
La instrucción "Copiar área" permite copiar asimismo áreas de origen y destino del tipo de
datos STRING. Si solo el área de origen es del tipo de datos STRING, se copiarán los
caracteres realmente contenidos en la cadena de caracteres. La información sobre la longitud
real y máxima también se escribe en el área de destino. Si tanto el área de origen como el área
de destino son del tipo de datos STRING, la longitud actual de la cadena de caracteres en el
área de destino se pone al número de caracteres realmente copiados.
Si se desea copiar información sobre la longitud máxima y real de una cadena de caracteres,
las áreas de los parámetros SRCBLK y DSTBLK deben indicarse en bytes.

Programación del PLC
Manual de programación y manejo, 11/2019

5739

Instrucciones
4.2 Instrucciones

Reglas para copiar bloques de datos no relevantes para la ejecución
El área de origen también puede encontrarse en un bloque de datos no relevante para la
ejecución en la memoria de carga. Los bloques de datos no relevantes para la ejecución se
identifican con la palabra clave UNLINKED.
Si en la memoria de trabajo se copia un bloque de datos no relevante para la ejecución con la
instrucción "Copiar área" y, al mismo tiempo, este se vuelve a cargar p. ej. desde la
programadora, la ejecución de la instrucción puede retardarse varios milisegundos. Esto
prolonga el ciclo del OB y puede activar la vigilancia del tiempo de ciclo.
Si un bloque de datos no relevante para la ejecución se copia con la instrucción "Copiar área"
y la operación de copia se interrumpe, la instrucción no se podrá seguir ejecutando.
Si en la CPU existe la instrucción "Leer de un bloque de datos de la memoria de carga", debe
utilizarse dicha instrucción para leer los bloques de datos no relevantes para la ejecución en
la memoria de carga. Si se utiliza la instrucción "Copiar área" se emite el error W#16#8092.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SRCBLK

Input

ANY

I, Q, M, D, L, P

Indicación del área de memo‐
ria que se copia (área de ori‐
gen).

RET_VAL

Output

INT

I, Q, M, D, L, P

Información de error:
El parámetro RET_VAL de‐
vuelve un código de error
cuando se produce un error
durante la ejecución de la ins‐
trucción.

DSTBLK

Output 1)

ANY

I, Q, M, D, L, P

Indicación del área de memo‐
ria en la que se copia (área
de destino).

1) El parámetro DSTBLK se declara como Output, pero en la interfaz del bloque debe declararse como
InOut.

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

8092

El área de origen o destino está solo en la memoria de carga.

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

5740

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL BLKMOV ANY
(SRCBLK := P#M100.0 BYTE 10
RET_VAL => "Tag_ErrorCode"
DSTBLK => P#DB1.DBX0.0 BYTE 10
)

La instrucción copia 10 bytes a partir de MB100 y los escribe en el DB1. Si ocurre un error
durante la operación de copia, el respectivo código de error se indica en la variable
"Tag_ErrorCode".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

UBLKMOV: Copiar área sin interrupciones
Descripción
La instrucción "Copiar área sin interrupciones" copia los contenidos de un área de memoria
(área de origen) en un área de memoria diferente (área de destino). La operación de copia se
realiza por orden ascendente de direcciones. Las áreas de origen y destino se definen
mediante punteros ANY.
La operación de copia no debe ser interrumpida por otras actividades del sistema operativo.
Ello puede aumentar el tiempo de reacción a alarmas de la CPU durante la ejecución de la
instrucción "Copiar área sin interrupciones".
Nota
En esta instrucción solo se pueden utilizar tipos de datos que sean válidos en una CPU de la
serie S7-300/400.

Áreas de memoria
La instrucción "Copiar área sin interrupciones" permite copiar las siguientes áreas de memoria:
● Áreas de un bloque de datos
● Marcas

Programación del PLC
Manual de programación y manejo, 11/2019

5741

Instrucciones
4.2 Instrucciones
● Memoria imagen de proceso de las entradas
● Memoria imagen de proceso de las salidas

Reglas generales para copiar
Al ejecutar la instrucción "Copiar área sin interrupciones" no pueden solaparse las áreas de
origen y destino. Si el área de origen es más pequeña que el área de destino, el área de origen
se copiará por completo en el área de destino. Los restantes bytes del área de destino
permanecen inalterados.
Si el área de destino es más pequeña que el área de origen, se escribirá en toda el área de
destino. Los restantes bytes del área de origen se ignoran.
Si un área de origen o destino definida como parámetro formal es menor que un área de origen
o destino indicada en los parámetros SRCBLK o DSTBLK, no se transferirán datos.
Al copiar un área del tipo de datos BOOL, la longitud indicada del área debe ser un múltiplo de
8, pues de lo contrario no se ejecutará la instrucción.
La instrucción "Copiar área sin interrupciones" permite copiar 512 bytes como máximo. A este
respecto deben tenerse en cuenta las limitaciones específicas de la CPU.
Nota
Si el área de origen o destino realmente existente es menor que el área de origen o destino
indicada en el parámetro SRCBLK o DSTBLK, el comportamiento dependerá del tipo de CPU:
● Para las CPU S7-300 rige lo siguiente:
No se transfieren datos. En el parámetro RET_VAL se devuelve el código de error
W#16#837F. Este código de error debe evaluarse en el programa de usuario.
● Para las CPU V4 del S7-400 (V4, CPU H V4 y CPU H V4.5 se aplica lo siguiente:
No se transfieren datos. En el parámetro RET_VAL se devuelve el código de error
W#16#8122 o W#16#8323. Este código de error debe evaluarse en el programa de usuario.
● Para las restantes CPU S7-400 rige:
Se transfieren datos. En el parámetro RET_VAL se devuelve el código de error W#16#8122
o W#16#8323. Este código de error debe evaluarse en el programa de usuario.

Reglas para copiar cadenas de caracteres
La instrucción "Copiar área sin interrupciones" permite copiar asimismo áreas de origen y
destino del tipo de datos STRING. Si solo el área de origen es del tipo de datos STRING, se
copiarán los caracteres realmente contenidos en la cadena de caracteres. La información
sobre la longitud real y máxima no se escribe en el área de destino. Si tanto el área de origen
como el área de destino son del tipo de datos STRING, la longitud actual de la cadena de
caracteres en el área de destino se pone al número de caracteres realmente copiados. Si se
copian áreas del tipo de datos STRING, debe indicarse "1" como longitud del área.

5742

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SRCBLK

Input

ANY

I, Q, M, D, L, P

Indicación del área de memo‐
ria que se copia (área de ori‐
gen).

RET_VAL

Output

INT

I, Q, M, D, L, P

Información de error:
El parámetro RET_VAL de‐
vuelve un código de error
cuando se produce un error
durante la ejecución de la ins‐
trucción.

DSTBLK

Output 1)

ANY

I, Q, M, D, L, P

Indicación del área de memo‐
ria en la que se copia (área
de destino).

1) El parámetro DSTBLK se declara como Output, pero en la interfaz del bloque debe declararse como
InOut.

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

8091

El área de origen o destino está solo en la memoria de carga.

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL UBLKMOV ANY
(SRCBLK := P#M100.0 BYTE 10
RET_VAL => "Tag_ErrorCode"
DSTBLK => P#DB1.DBX0.0 BYTE 10
)

La instrucción copia 10 bytes a partir de MB100 y los escribe en el DB1. Si ocurre un error
durante la operación de copia, el respectivo código de error se indica en la variable
"Tag_ErrorCode".

Programación del PLC
Manual de programación y manejo, 11/2019

5743

Instrucciones
4.2 Instrucciones

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

FILL: Rellenar área
Descripción
La instrucción "Rellenar área" rellena un área de memoria (área de destino) con el contenido
de un área de memoria diferente (área de origen). La instrucción "Rellenar área" copia el
contenido del área de origen en el área de destino hasta que el área de destino quede escrita
por completo. La operación de copia se realiza por orden ascendente de direcciones.
Las áreas de origen y destino se definen mediante punteros ANY.
Nota
En esta instrucción solo se pueden utilizar tipos de datos que sean válidos en una CPU de la
serie S7-300/400.
La figura siguiente muestra el principio de la operación de copia:
),//

%9$/

$

%

0:

$

%

0:

&

'

0:

&

'

0:

(

)

0:

(

)

0:

*

+

0:

*

+

0:

$

%

0:

&

'

0:

(

)

0:

*

+

0:

$

%

0:

&

'

0:

%/.

Ejemplo: El contenido del área MW100 a MW118 debe inicializarse con el contenido de las
palabras de marcas MW14 a MW20.

5744

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Coherencia de los datos de origen y destino
Tenga en cuenta que al ejecutar la instrucción "Rellenar área" no se modifican los datos de
origen, pues de lo contrario no se podría garantizar la coherencia de los datos de destino.

Áreas de memoria
La instrucción "Rellenar área" permite copiar las siguientes áreas de memoria:
● Áreas de un bloque de datos
● Marcas
● Memoria imagen de proceso de las entradas
● Memoria imagen de proceso de las salidas

Reglas generales para copiar
Las áreas de origen y destino no deben solaparse. Aunque el área de destino que se debe
inicializar no sea múltiplo entero de la longitud del parámetro de entrada BVAL, el área de
destino se rellenará igualmente hasta el último byte.
Si el área de destino que se debe preasignar es menor que el área de origen, solo se copian
los datos que caben en el área de destino.
Si el área de destino o de origen disponible realmente es menor que el tamaño del área de
memoria parametrizada para el área de origen o destino (parámetros BVAL, BLK), los datos no
se transfieren.
Si el puntero ANY (origen o destino) es del tipo BOOL, la longitud indicada debe ser divisible
por 8. De lo contrario, la instrucción no se ejecutará.
Si el área de destino es del tipo de datos STRING, la instrucción escribe la cadena de
caracteres completa, incluida la información de administración.
Nota
Si el área de origen o destino realmente existente es menor que el área de origen o destino
indicada en el parámetro BVAL o BLK, el comportamiento dependerá del tipo de CPU:
● Para las CPU S7-300 rige lo siguiente:
No se transfieren datos. En el parámetro RET_VAL se devuelve el código de error
W#16#837F. Este código de error debe evaluarse en el programa de usuario.
● Para las CPU V4 del S7-400 (V4, CPU H V4 y CPU H V4.5 se aplica lo siguiente:
No se transfieren datos. En el parámetro RET_VAL se devuelve el código de error
W#16#8122 o W#16#8323. Este código de error debe evaluarse en el programa de usuario.
● Para las restantes CPU S7-400 rige:
Se transfieren datos. En el parámetro RET_VAL se devuelve el código de error W#16#8122
o W#16#8323. Este código de error debe evaluarse en el programa de usuario.

Programación del PLC
Manual de programación y manejo, 11/2019

5745

Instrucciones
4.2 Instrucciones

Reglas para copiar estructuras
Al indicar una estructura a modo de parámetro de entrada, tenga en cuenta que la longitud de
una estructura se rige siempre por un número entero de bytes. Si se declara una estructura con
un número impar de bytes, esta estructura necesita un byte adicional de espacio en memoria.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

BVAL

Input

ANY

I, Q, M, D, L, P

Indicación del área de memo‐
ria (área de origen) con cuyo
contenido se rellena el área
de destino en el parámetro
BLK.

RET_VAL

Output

INT

I, Q, M, D, L, P

Información de error:
El parámetro RET_VAL de‐
vuelve un código de error
cuando se produce un error
durante la ejecución de la ins‐
trucción.

BLK

Output 1)

ANY

I, Q, M, D, L, P

Indicación del área de memo‐
ria que se rellena con el con‐
tenido del área de origen.

1) El parámetro BLK se declara como Output, pero en la interfaz del bloque debe declararse como
InOut.

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

8092

El área de origen o destino está solo en la memoria de carga.

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL FILL ANY
(BVAL := P#M14.0 WORD 4
RET_VAL => "Tag_ErrorCode"

5746

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
GRAPH
BLK => P#M100.0 WORD 10
)

La instrucción copia el área de origen de MW14 a MW20 y rellena el área de destino de MW100
a MW118 con el contenido de las 4 palabras contenidas en el área de memoria del parámetro
BVAL.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

Conversión
CONVERT: Convertir valor
Descripción
La instrucción "Convertir valor" lee el contenido del operando y lo convierte según los tipos de
datos parametrizados.
Encontrará información relacionada con las conversiones posibles en el apartado "Conversión
explícita" de "Consulte también".
El valor del resultado no es válido si se producen errores durante la ejecución, p. ej. un
desbordamiento.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Enteros, números
en coma flotante,
BCD16, BCD32

I, Q, M, D, L, P o
constante

Valor que se convierte

<Resultado

Output

Enteros, números
en coma flotante,
BCD16, BCD32

I, Q, M, D, L, P

Resultado de la conversión

En las listas desplegables "???" puede seleccionar los tipos de datos de la instrucción.
Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Programación del PLC
Manual de programación y manejo, 11/2019

5747

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := INT_TO_DINT("Tag_InValue")

El contenido del operando "Tag_InValue" se lee y se convierte en un entero (32 bits). El
resultado se deposita en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

ROUND: Redondear número
Descripción
La instrucción "Redondear número" permite redondear el valor del operando al siguiente
número entero. La instrucción interpreta el valor como número en coma flotante y lo convierte
a un número entero del tipo de datos DINT. Si el valor de entrada se encuentra entre un número
par y uno impar, se selecciona el número par.
El valor del resultado no es válido si se producen errores durante la ejecución, p. ej. un
desbordamiento.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L, P o
constante

Valor de entrada que se re‐
dondea

<Resultado>

Output

DINT

I, Q, M, D, L, P

Resultado del redondeo

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := ROUND("Tag_InValue")

5748

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

1.50000000

-1.50000000

Tag_OutValue

2

-2

El número en coma flotante del operando "Tag_InValue" se redondea al siguiente número
entero par y se indica en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

CEIL: Redondear un número en coma flotante al siguiente entero superior
Descripción
La instrucción "Redondear un número en coma flotante al siguiente entero superior" permite
redondear el valor del operando al siguiente número entero superior. La instrucción interpreta
el valor como número en coma flotante y lo convierte al siguiente número entero superior. El
resultado de la instrucción puede ser mayor o igual al valor de entrada.
El valor del resultado no es válido si se producen errores durante la ejecución, p. ej. un
desbordamiento.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L, P o
constante

Valor de entrada

<Resultado>

Output

Enteros, números
en coma flotante

I, Q, M, D, L, P

Resultado con el siguiente
entero superior

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := CEIL("Tag_InValue")

Programación del PLC
Manual de programación y manejo, 11/2019

5749

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

0.50000000

-0.50000000

Tag_OutValue

1

0

El número en coma flotante del operando "Tag_InValue" se redondea al siguiente número
entero superior y se indica en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

FLOOR: Redondear un número en coma flotante al siguiente entero inferior
Descripción
La instrucción "Redondear un número en coma flotante al siguiente entero inferior" permite
redondear el valor del operando al siguiente número entero inferior. La instrucción interpreta
el valor como número en coma flotante y lo convierte al siguiente número entero inferior. El
resultado de la instrucción puede ser menor o igual al valor de entrada.
El valor del resultado no es válido si se producen errores durante la ejecución, p. ej. un
desbordamiento.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L, P o
constante

Valor de entrada

<Resultado>

Output

Enteros, números
en coma flotante

I, Q, M, D, L, P

Resultado con el siguiente
entero inferior

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := FLOOR("Tag_InValue")

5750

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

0.50000000

-0.50000000

Tag_OutValue

0

-1

El número en coma flotante del operando "Tag_InValue" se redondea al siguiente número
entero inferior y se indica en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

TRUNC: Truncar a entero
Descripción
La instrucción "Truncar a entero" permite generar un número entero a partir del valor del
operando. El valor se interpreta como número en coma flotante. La instrucción selecciona solo
la parte entera del número en coma flotante y la indica sin decimales como resultado.
El valor del resultado no es válido si se producen errores durante la ejecución, p. ej. un
desbordamiento.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Números en coma
flotante

I, Q, M, D, L o
constante

Valor de entrada

<Resultado>

Output

Enteros

I, Q, M, D, L

Parte entera del valor de en‐
trada

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := TRUNC("Tag_InValue")

Programación del PLC
Manual de programación y manejo, 11/2019

5751

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

1.50000000

-1.50000000

Tag_OutValue

1

-1

La parte entera del número en coma flotante del operando "Tag_InValue" se convierte en un
número entero y se indica en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

SCALE: Escalar
Descripción
La instrucción "Escalar" convierte el entero del parámetro IN en un número en coma flotante
que se escala en unidades físicas entre un límite inferior y uno superior. Los límites inferior y
superior del rango de valores en el que se escala el valor de entrada se definen mediante los
parámetros LO_LIM y HI_LIM. El resultado de la instrucción se devuelve en el parámetro OUT.
La instrucción "Escalar" utiliza la siguiente ecuación:
OUT = [((FLOAT (IN) – K1)/(K2–K1)) ∗ (HI_LIM–LO_LIM)] + LO_LIM
El estado lógico del parámetro BIPOLAR determina los valores de las constantes "K1" y "K2".
El parámetro BIPOLAR puede tener los siguientes estados lógicos:
● Estado lógico "1": se presupone que el valor del parámetro IN es bipolar y está comprendido
en un rango de valores entre -27648 y 27648. En este caso, la constante "K1" tiene el valor
"-27648,0" y la constante "K2", el valor "+27648,0".
● Estado lógico "0": se presupone que el valor del parámetro IN es unipolar y está
comprendido en un rango de valores entre 0 y 27648. En este caso, la constante "K1" tiene
el valor "0,0" y la constante "K2", el valor "+27648,0".
Si el valor del parámetro IN es mayor que el de la constante "K2", el resultado de la instrucción
se pone al valor del límite superior (HI_LIM) y se emite un error.
Si el valor del parámetro IN es menor que el de la constante "K1", el resultado de la instrucción
se pone al valor del límite inferior (LO_LIM) y se emite un error.
Si el límite inferior indicado es mayor que el límite superior (LO_LIM > HI_LIM), el resultado se
escala de forma inversamente proporcional al valor de entrada.

5752

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

INT

I, Q, M, D, L, P o
constante

Valor de entrada que se es‐
cala

HI_LIM

Input

REAL

I, Q, M, D, L, P o
constante

Valor límite superior

LO_LIM

Input

REAL

I, Q, M, D, L, P o
constante

Valor límite inferior

BIPOLAR

Input

BOOL

I, Q, M, D, L o
constante

Indica si el valor del paráme‐
tro IN se interpreta como bi‐
polar o unipolar. El paráme‐
tro puede adoptar los valores
siguientes:
1: Bipolar
0: Unipolar

OUT

Output

REAL

I, Q, M, D, L, P

Resultado de la instrucción

RET_VAL

Output

WORD

I, Q, M, D, L, P

Información de error

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

0008

El valor del parámetro IN es mayor que el de la constante "K2" o menor que el de la
constante "K1".

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL SCALE
(IN := "Tag_InputValue"
HI_LIM := "Tag_HighLimit"
LO_LIM := "Tag_LowLimit"
BIPOLAR := "Tag_Bipolar"
RET_VAL => "Tag_ErrorCode"
OUT => "Tag_OutputValue"
)

Programación del PLC
Manual de programación y manejo, 11/2019

5753

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra los valores de los distintos operandos antes de ejecutar la
instrucción:
Parámetro

Operando

Valor

IN

Tag_InputValue

22

HI_LIM

Tag_HighLimit

100.0

LO_LIM

Tag_LowLimit

0.0

BIPOLAR

Tag_Bipolar

1

RET_VAL

Tag_ErrorCode

W#16#0000

OUT

Tag_OutputValue

0.0

La tabla siguiente muestra los valores de los distintos operandos después de ejecutar la
instrucción:
Parámetro

Operando

Valor

IN

Tag_InputValue

22

HI_LIM

Tag_HighLimit

100.0

LO_LIM

Tag_LowLimit

0.0

BIPOLAR

Tag_Bipolar

1

RET_VAL

Tag_ErrorCode

W#16#0000

OUT

Tag_OutputValue

50.03978588

En el operando "Tag_InputValue" se indica el valor que debe convertirse y escalarse. El valor
límite superior y el inferior se definen mediante los operandos "Tag_HighLimit" y
"Tag_LowLimit". Con ayuda del operando "Tag_Bipolar" = TRUE se indica que el valor del
parámetro IN debe interpretarse como bipolar. En el operando "Tag_OutputValue" se indica el
resultado de la instrucción.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

UNSCALE: Desescalar
Descripción
La instrucción "Desescalar" permite desescalar el número en coma flotante del parámetro IN
en unidades físicas comprendidas entre un límite inferior y uno superior y convertirlo en un
número entero. Los límites inferior y superior del rango de valores en el que se desescala el
valor de entrada se definen mediante los parámetros LO_LIM y HI_LIM. El resultado de la
instrucción se devuelve en el parámetro OUT.
La instrucción "Desescalar" utiliza la siguiente ecuación:
OUT = [ ((IN–LO_LIM)/(HI_LIM–LO_LIM)) ∗ (K2–K1) ] + K1

5754

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El estado lógico del parámetro BIPOLAR determina los valores de las constantes "K1" y "K2".
El parámetro BIPOLAR puede tener los siguientes estados lógicos:
● Estado lógico "1": se presupone que el valor del parámetro IN es bipolar y está comprendido
en un rango de valores entre -27648 y 27648. En este caso, la constante "K1" tiene el valor
"-27648,0" y la constante "K2", el valor "+27648,0".
● Estado lógico "0": se presupone que el valor del parámetro IN es unipolar y está
comprendido en un rango de valores entre 0 y 27648. En este caso, la constante "K1" tiene
el valor "0,0" y la constante "K2", el valor "+27648,0".
Si el valor del parámetro IN no se encuentra dentro de los límites definidos por HI_LIM y
LO_LIM, se emite un error. El resultado se ajusta al límite más próximo.
Si el límite inferior indicado es mayor que el límite superior (LO_LIM > HI_LIM), el resultado se
escala de forma inversamente proporcional al valor de entrada.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

REAL

I, Q, M, D, L, P o
constante

Valor de entrada que se de‐
sescala en un valor entero

HI_LIM

Input

REAL

I, Q, M, D, L, P o
constante

Valor límite superior

LO_LIM

Input

REAL

I, Q, M, D, L, P o
constante

Valor límite inferior

BIPOLAR

Input

BOOL

I, Q, M, D, L o
constante

Indica si el valor del paráme‐
tro IN se interpreta como bi‐
polar o unipolar. El paráme‐
tro puede adoptar los valores
siguientes:
1: Bipolar
0: Unipolar

OUT

Output

INT

I, Q, M, D, L, P

Resultado de la instrucción

RET_VAL

Output

WORD

I, Q, M, D, L, P

Información de error

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

0008

El valor del parámetro IN es mayor que el del límite superior (HI_LIM) o menor que el del
límite inferior (LO_LIM).

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización aquí: Cambiar
formatos de visualización en el estado del programa (Página 8529)

Programación del PLC
Manual de programación y manejo, 11/2019

5755

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL UNSCALE
(IN := "Tag_InputValue"
HI_LIM := "Tag_HighLimit"
LO_LIM := "Tag_LowLimit"
BIPOLAR := "Tag_Bipolar"
RET_VAL => "Tag_ErrorCode"
OUT => "Tag_OutputValue"
)

La tabla siguiente muestra los valores de los distintos operandos antes de ejecutar la
instrucción:
Parámetro

Operando

Valor

IN

Tag_InputValue

50.03978588

HI_LIM

Tag_HighLimit

100.0

LO_LIM

Tag_LowLimit

0.0

BIPOLAR

Tag_Bipolar

1

RET_VAL

Tag_ErrorCode

W#16#0000

OUT

Tag_OutputValue

0.0

La tabla siguiente muestra los valores de los distintos operandos después de ejecutar la
instrucción:
Parámetro

Operando

Valor

IN

Tag_InputValue

50.03978588

HI_LIM

Tag_HighLimit

100.0

LO_LIM

Tag_LowLimit

0.0

BIPOLAR

Tag_Bipolar

1

RET_VAL

Tag_ErrorCode

W#16#0000

OUT

Tag_OutputValue

22

En el operando "Tag_InputValue" se indica el valor que debe convertirse y desescalarse. El
valor límite superior y el inferior se definen mediante los operandos "Tag_HighLimit" y
"Tag_LowLimit". Con ayuda del operando "Tag_Bipolar" = TRUE se indica que el valor del
parámetro IN debe interpretarse como bipolar. En el operando "Tag_OutputValue" se indica el
resultado de la instrucción.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Principios básicos de GRAPH (Página 8191)

5756

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Control del programa
Control del tiempo de ejecución
COMPRESS: Comprimir la memoria de la CPU
Descripción
La instrucción "Comprimir la memoria de la CPU" permite comprimir la memoria de trabajo de
la CPU o la memoria de carga RAM. Los huecos creados por haber borrado o cargado bloques,
se rellenan juntando los bloques existentes.
Con la llamada de la instrucción "Comprimir la memoria de la CPU" se lanza el proceso de
compresión. El proceso de compresión se reparte entre varios ciclos del programa. La
vigilancia del proceso de compresión se realiza mediante los valores de los distintos
parámetros. Si el parámetro BUSY tiene el valor "1", significa que el proceso de compresión se
está ejecutando todavía. El valor "1" del parámetro DONE indica que ha finalizado el proceso
de compresión. La información de error puede consultarse en el parámetro RET_VAL.
Si se está ejecutando un proceso de compresión lanzado externamente, la llamada de la
instrucción "Comprimir la memoria de la CPU" origina un error.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RET_VAL

Output

INT

I, Q, M, D, L

Información de error:
El parámetro RET_VAL de‐
vuelve un código de error
cuando se produce un error
durante la ejecución de la ins‐
trucción.

BUSY

Output

BOOL

I, Q, M, D, L

Información de si está activo
el proceso de compresión

DONE

Output

BOOL

I, Q, M, D, L

Información de si ha finaliza‐
do el proceso de compresión

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Programación del PLC
Manual de programación y manejo, 11/2019

5757

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error
El estado del proceso de compresión puede consultarse en los parámetros BUSY y DO‐
NE.

8091

Ya se está ejecutando un proceso de compresión lanzado externamente.

8092

La instrucción no se puede ejecutar porque se cumple una de las condiciones siguientes:
● La función "Borrar bloque" está activa.
● Una función de test y de puesta en servicio repercute sobre un bloque (p. ej. estado).
● La función "Copiar bloques" se ha activado por un impulso externo.
● La CPU H se encuentra en un proceso de acoplamiento o actualización.

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

RE_TRIGR: Reiniciar tiempo de vigilancia del ciclo
Descripción
La instrucción "Reiniciar tiempo de vigilancia del ciclo" reinicia el tiempo de vigilancia del ciclo
de la CPU. El tiempo de vigilancia del ciclo se reinicia entonces con la duración ajustada en la
configuración de la CPU.
La instrucción "Reiniciar tiempo de vigilancia del ciclo" se puede llamar en todos los bloques
independientemente de la prioridad.
Si se llama la instrucción en un bloque de prioridad superior, p. ej. en una alarma de proceso
o una alarma de diagnóstico, la instrucción no se ejecuta.
La instrucción "Reiniciar tiempo de vigilancia del ciclo" se ejecuta correctamente en un espacio
de tiempo (10 veces el ciclo máximo del programa), independientemente de la cantidad de
llamadas. Transcurrido ese tiempo, el ciclo del programa ya no puede prolongarse.

5758

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro
La instrucción "Reiniciar tiempo de vigilancia del ciclo" no tiene parámetros y no devuelve
información de error.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

STP: Finalizar programa
Descripción
La instrucción "Finalizar programa" conmuta la CPU al estado operativo STOP, con lo que se
finaliza la ejecución del programa. Los efectos al conmutar de RUN a STOP dependen de la
configuración de la CPU.

Parámetros
La instrucción "Finalizar programa" no tiene parámetros y no devuelve información de error.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

WAIT: Programar retardo
Descripción
La instrucción "Programar retardo" detiene la ejecución del programa durante un periodo
parametrizado. El periodo se indica en microsegundos en el parámetro WT.
Es posible programar tiempos de retardo de -32768 a 32767 microsegundos (μs). El tiempo de
retardo mínimo depende de la CPU utilizada y equivale al tiempo de ejecución de la instrucción.
La ejecución de la instrucción puede verse interrumpida por eventos de prioridad superior y no
arrojará información de error.
Válido para CPU S7-300:

Programación del PLC
Manual de programación y manejo, 11/2019

5759

Instrucciones
4.2 Instrucciones
En las CPU S7-300 (a excepción de S7-318), el tiempo de retardo programado con la
instrucción es un tiempo mínimo. Se prolonga con el tiempo de ejecución de las clases de
prioridad que intervienen y con las cargas del sistema.
Nota
Tiempo de retardo negativo
Si indica un tiempo de retardo negativo en el parámetro WT, la salida de habilitación ENO, o
el RLO y el bit BR arrojan el estado lógico FALSE. Un tiempo de retardo negativo no afecta para
nada a la CPU. En KOP y FUP no se ejecutan las siguientes instrucciones vinculadas a la
salida de habilitación ENO.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

WT

Input

INT

I, Q, M, D, L, P o
constante

Tiempo de retardo en micro‐
segundos (μs)

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

PROTECT: Cambiar nivel de protección
Descripción
La instrucción "Cambiar nivel de protección" permite modificar el nivel de protección "1"
configurado para la CPU.
El nivel de protección "1" parametrizado con la opción activada "Eliminable por contraseña"
hace que sea necesario parametrizar una contraseña. Esta contraseña permite durante el
funcionamiento acceder en escritura a la CPU protegida contra escritura mediante la
instrucción "Cambiar nivel de protección" (p. ej. cargar).
El nivel de protección se especifica en el parámetro MODE de la instrucción. El nivel de
protección actual de la CPU se visualiza en la ventana de inspección en "Propiedades >
Protección".

5760

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra una explicación de los niveles de protección:
Nivel
de
pro‐
tec‐
ción

Explicación

1

Se permiten todas las funciones de PG. En el caso que exista un bloqueo de la legitimación de
la contraseña, este se elimina llamando la instrucción "Cambiar nivel de protección".

2

● El programa y la configuración de la CPU no se pueden modificar. El programa contenido
en la CPU se puede leer.
● Se permiten las funciones de control, observación y comunicación del proceso.
● Se permiten todas las funciones de información.
● Si conoce la contraseña válida, podrá desactivar la protección contra escritura ajustada.
● En el caso que exista un bloqueo de la legitimación de la contraseña, este se elimina
llamando la instrucción "Cambiar nivel de protección".

3

● Aun conociendo la contraseña válida, no podrá desactivar la protección contra lectura y
escritura ajustada.
● Si al llamar la instrucción "Cambiar nivel de protección" existe una conexión legitimada, la
llamada de la instrucción no tendrá ningún efecto en esta conexión.

Si se ha configurado el nivel de protección "2" o "3" para la CPU, la llamada de la instrucción
"Cambiar nivel de protección" no tiene efecto alguno.
El efecto del nivel de protección "2" o "3" una vez ejecutada la instrucción "Cambiar nivel de
protección" puede consultarse en la lista parcial SZL con la ID de SZL W#16#0232 y el índice
W#16#0004.
Nota
La instrucción "Cambiar nivel de protección" permite ajustar un nivel de protección más bajo
que aquel ajustado con "Configurar hardware" de STEP 7. Supongamos que se ha configurado
el nivel de protección 3 y a continuación se llama la instrucción "Cambiar nivel de protección"
con el parámetro MODE = 12. Esto bloqueará la legitimación de la contraseña. Si la instrucción
se llama nuevamente con el parámetro MODE = 0 o 1, el nivel de protección 3 se mantiene y
será posible desactivar la protección de lectura y escritura introduciendo la contraseña válida.

Programación del PLC
Manual de programación y manejo, 11/2019

5761

Instrucciones
4.2 Instrucciones

Efectos de las transiciones de estado operativo en el nivel de protección
La tabla siguiente muestra qué efectos tienen las transiciones de estado operativo en el nivel
de protección ajustado con la instrucción "Cambiar nivel de protección".
Acción

Efectos en el nivel de protección

● Selector de modo en STOP

El nivel de protección se pone a "1". Se permiten
todas las funciones de PG.

● Conexión (POWER ON) sin respaldo
● Borrado total mediante el selector de modo
● Cambios de configuración y/o del programa en
el estado operativo STOP de la CPU S7-400

El sistema operativo pone el nivel de protección a
"1". Se permiten todas las funciones de PG.

● Arranque en frío
● Rearranque (en caliente)

En caso necesario, llamando la instrucción "Cam‐
biar nivel de protección" en el programa es posible
ajustar el nivel de protección en "2" o "3".

Conexión (POWER ON) respaldada

No cambia

Transición de estado operativo RUN/ARRANQUE/ No cambia
PARADA -> STOP (debida a la llamada de la ins‐
trucción "Finalizar programa" (STP), a errores del
programa sin OB de error asociado o a una acción
del usuario).
S7-400: Rearranque por acción del usuario o au‐
tomáticamente tras conexión (POWER ON)

No cambia

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

WORD

I, Q, M, D, L o
constante

Nivel de protección
Valores posibles:
● W#16#0000: Ajuste del
nivel de protección "1"
● W#16#0001: Ajuste del
nivel de protección "2"
con legitimación de la
contraseña
● W#16#000C: Ajuste del
nivel de protección "3" sin
legitimación de la
contraseña
En el parámetro MODE tam‐
bién se pueden indicar cons‐
tantes.

RET_VAL

5762

Output

INT

I, Q, M, D, L

Si ocurre un error durante la
ejecución, se emite una infor‐
mación de error.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

La petición se ha ejecutado sin errores.

8090

Valor no admisible en el parámetro MODE.

80C3

En este momento los recursos necesarios están ocupados.

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

CiR: Controlar proceso CiR
Descripción
La instrucción "Controlar proceso CiR" permite influir en el proceso CiR en el programa de
usuario como se indica a continuación:
● Bloquear el proceso CiR. En este caso, se rechazará siempre la carga de una configuración
modificada desde la programadora en la CPU. El bloqueo se aplica hasta que se
desbloquee con la instrucción "Controlar proceso CiR".
● Bloqueo condicional del proceso CiR estableciendo un límite superior en el parámetro
FRZ_TIME para el tiempo de sincronización CiR. En este caso, sólo se permitirá cargar una
configuración modificada desde la programadora en la CPU si el tiempo de sincronización
CiR calculado en la CPU no excede el límite superior definido.
● Desbloquear el proceso CiR. El límite superior del tiempo de sincronización CiR se
establece en el valor predeterminado de 1000 ms.
● Determinar si el proceso CiR está o no habilitado. Si el proceso CiR está habilitado o lo está
condicionadamente, el límite superior actual del tiempo de sincronización CiR se indica en
el parámetro A_FT de la instrucción.
Nota
Durante el tiempo de sincronización CiR, las salidas están congeladas y las entradas no se
evalúan.

Programación del PLC
Manual de programación y manejo, 11/2019

5763

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

BYTE

I, Q, M, D, L o
constante

ID de la petición
Los valores admisibles del
parámetro MODE son:
● 0: Función de información
● 1: Habilitar proceso CiR
● 2: Bloquear proceso CiR
● 3: Bloquear proceso CiR
de forma condicionada.
El límite superior del
tiempo de sincronización
CiR se define en
FRZ_TIME.

FRZ_TIME

Input

TIME

I, Q, M, D, L o
constante

Límite superior del tiempo de
sincronización CiR en milise‐
gundos.
Rango de valores admisible:
60 ... 2500 ms (valor prede‐
terminado: 1000 ms)
El parámetro FRZ_TIME sólo
es relevante cuando el pará‐
metro MODE se establece
en el valor "3".

RET_VAL

Output

INT

I, Q, M, D, L

Información de error
Si el parámetro MODE está a
"0", el parámetro RET_VAL
indica si el proceso CiR está
habilitado o no.

A_FT

Output

TIME

I, Q, M, D, L

Límite superior válido actual‐
mente del tiempo de sincro‐
nización CiR

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

La petición se ha ejecutado sin errores.
Este código de error sólo se puede emitir si el parámetro MODE está puesto al valor 1, 2
ó 3.

0001

El proceso CiR está habilitado.
Este código de error sólo se puede emitir si el parámetro MODE está puesto al valor "0".

5764

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de
error*
(W#16#...)

Explicación

0002

El proceso CiR está bloqueado.
Este código de error sólo se puede emitir si el parámetro MODE está puesto al valor "0".

0003

El proceso CiR está bloqueado de forma condicionada.

8001

La CPU no está lista para un proceso CiR. Se está utilizando una CPU H en el sistema H
(modo "Individual") o una CPU estándar en modo multiprocesador.

8002

El valor del parámetro MODE no es admisible.

8003

El valor del parámetro FRZ_TIME no es admisible.

8xyy

Encontrará más información de error en "Consulte también".

Este código de error sólo se puede emitir si el parámetro MODE está puesto al valor "0".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Ejemplo
La instrucción "Controlar proceso CiR" permite programar p. ej. que no se lance ningún
proceso CiR en periodos en los que se requiera la capacidad máxima de la CPU para el
procesamiento.
Para ello, debe llamarse la instrucción "Controlar proceso CiR" en el programa antes de
comenzar el periodo con una mayor actividad de procesos y ejecutarla con el valor "2"
(Bloquear proceso CiR) en el parámetro MODE. Con ello se bloquea el proceso CiR.
Para volver a habilitar el proceso CiR tras finalizar el periodo de actividad aumentada del
proceso, la instrucción "Controlar proceso CiR" debe llamarse de nuevo y ejecutarse con el
valor "1" en el parámetro MODE. De manera alternativa también puede establecer el
parámetro MODE en el valor "3" y bloquear así el proceso CiR.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

Programación del PLC
Manual de programación y manejo, 11/2019

5765

Instrucciones
4.2 Instrucciones

Operaciones lógicas con palabras
NOT: Invertir
Descripción
La instrucción "Invertir" permite invertir el estado lógico de los bits del operando. Al ejecutar la
instrucción, el valor del operando se combina con una operación lógica O-exclusiva utilizando
una plantilla hexadecimal (W#16#FFFF para números de 16 bits o DW#16#FFFF FFFF para
números de 32 bits). Esto invierte el estado lógico de los distintos bits y lo devuelve como
resultado.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando>

Input

Secuencias de
bits, enteros

I, Q, M, D, L, P o
constante

Valor de entrada

<Resultado>

Output

Secuencias de
bits, enteros

I, Q, M, D, L, P

Complemento a 1 del valor
del operando

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"TagOut_Value" := NOT("TagIn_Value")

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

TagIn_Value

W#16#000F

TagOut_Value

W#16#FFF0

La instrucción invierte el estado lógico de los distintos bits del operando "TagIn_Value" y
escribe el resultado en el operando "TagOut_Value".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

5766

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

DECO: Descodificar
Descripción
La instrucción "Descodificar" activa un bit predeterminado por el valor de entrada en el valor de
salida.
La instrucción "Descodificar" lee el valor de la entrada IN y activa el bit del parámetro OUT cuya
posición de bit equivale al valor leído. Los demás bits del valor de salida se rellenan con ceros.
Si el valor de la entrada IN es mayor que 31, se ejecuta una instrucción modulo 32.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

WORD, INT

I, Q, M, D, L, P o
constante

Posición del bit que se activa
en el valor de salida.

OUT

Output

DWORD

I, Q, M, D, L, P

Valor de salida

Encontrará más información sobre los tipos de datos válidos en "Consulte también".
En la lista desplegable "???" puede seleccionar el tipo de datos de la instrucción.

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL DECO INT_DWORD
(IN := "Tag_Input"
OUT => "Tag_Output"
)

La figura siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
ಱ7DJB,QSXWಯ




ಱ7DJB2XWSXWಯ

 



 

La instrucción lee el número de bit "3" del valor del operando "Tag_Input" de la entrada y activa
el tercer bit del valor del operando "Tag_Output" de la salida.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Programación del PLC
Manual de programación y manejo, 11/2019

5767

Instrucciones
4.2 Instrucciones

ENCO: Codificar
Descripción
La instrucción "Codificar" permite leer el número del bit menos significativo que está activado
en el valor de entrada y depositarlo en la salida OUT.
La instrucción "Codificar" selecciona el bit menos significativo del valor de la entrada IN y
escribe su número de bit en la variable de la salida OUT. Si la entrada IN devuelve el valor
DW#16#00000001 o DW#16#00000000, se deposita el valor "0" en el parámetro OUT.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

DWORD

I, Q, M, D, L, P o
constante

Valor de entrada

OUT

Output

INT

I, Q, M, D, L, P

Valor de salida

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL ENCO DWORD
(IN := "Tag_Input"
OUT => "Tag_Output"
)

La figura siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:


 



ಯ7DJB,QSXWಯ  
ಯ7DJB2XWSXWಯ 

La instrucción selecciona el bit menos significativo que está activado en la entrada "TagInput"
y escribe el bit "3" en la variable de la salida "Tag_Output".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

5768

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

SEL: Seleccionar
Descripción
La instrucción "Seleccionar" permite seleccionar, en función de un interruptor (entrada G), una
de las entradas IN0 o IN1 y copiar su contenido en la salida OUT. Si la entrada G tiene el estado
lógico "0", se copia el valor de la entrada IN0. Si la entrada G tiene el estado lógico "1", se copia
el valor de la entrada IN1 en la salida OUT.
Para poder procesar la instrucción, las variables de todos los parámetros deben ser del mismo
tipo de datos.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

G

Input

BOOL

I, Q, M, D, L, T, C

IN0

Input

I, Q, M, D, L, P
Secuencias de
bits, enteros, nú‐
meros en coma flo‐
tante, temporiza‐
dores, CHAR,
TOD, DATE

Primer valor de entrada

IN1

Input

I, Q, M, D, L, P
Secuencias de
bits, enteros, nú‐
meros en coma flo‐
tante, temporiza‐
dores, CHAR,
TOD, DATE

Segundo valor de entrada

OUT

Output

I, Q, M, D, L, P
Secuencias de
bits, enteros, nú‐
meros en coma flo‐
tante, temporiza‐
dores, CHAR,
TOD, DATE

Resultado

Interruptor

En la lista desplegable "???" puede seleccionar el tipo de datos de la instrucción.
Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL SEL INT
(G := "Tag_Input_G"
IN0 := "Tag_Input0"
IN1 := "Tag_Input1"
OUT => "Tag_Output"
)

Programación del PLC
Manual de programación y manejo, 11/2019

5769

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Parámetro

Operando

Valor

G

Tag_Input_G

0

1

IN0

Tag_Input0

W#16#0000

W#16#4C

IN1

Tag_Input1

W#16#FFFF

W#16#5E

OUT

Tag_Output

W#16#0000

W#16#5E

Dependiendo del estado lógico de la entrada "Tag_Input_G", se selecciona el valor de la
entrada "Tag_Input0" o "Tag_Input1" y se copia en la salida "Tag_Output".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Desplazamiento y rotación
SHR: Desplazar a la derecha
Descripción
Con la instrucción "Desplazar a la derecha", el contenido del operando 1 se mueve bit a bit
hacia la derecha. El operando 2 determina el número de posiciones de bit que debe
desplazarse el valor indicado.
Cuando el valor del operando 2 es "0", se copia en valor del operando 1 en el resultado.
Si el valor del operando 2 es mayor que el número de posiciones de bit disponibles, el valor del
operando 1 se desplaza hacia la derecha las posiciones de bit disponibles.
En los valores sin signo, se rellenan con ceros las posiciones de bits que quedan libres en el
área izquierda del operando 1 al realizar el desplazamiento. Si el valor indicado lleva signo, las
posiciones libres se ocupan con el estado lógico del bit de signo.
La figura siguiente muestra cómo el contenido del operando 1 del tipo de datos INT se
desplaza cuatro posiciones de bit hacia la derecha:

5770

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones


2SHUDQGR















2SHUDQGR %LW
GHVLJQR

5HVXOWDGR








































G¯JLWRV

























(VWRVFXDWUR
ELWVVHSLHUGHQ

/DVSRVLFLRQHVGHELWOLEHUDGDV
VHUHOOHQDQFRQHOHVWDGROµJLFR
GHOELWGHVLJQR

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operan‐
do1>

Input

Secuencias de
bits, enteros

I, Q, M, D, L, P o
constante

Valor que se desplaza

<Operan‐
do2>

Input

BYTE, WORD, INT I, Q, M, D, L, P o
constante

Número de posiciones de bit
que se desplaza el valor

<Resultado>

Output

Secuencias de
bits, enteros

Resultado de la instrucción

I, Q, M, D, L

En la lista desplegable "???" puede seleccionar el tipo de datos de la instrucción.
Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := SHR_INT("Tag_InValue","Tag_Number")

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

0011 1111 1010 1111

Tag_Number

3

Tag_OutValue

0000 0111 1111 0101

Programación del PLC
Manual de programación y manejo, 11/2019

5771

Instrucciones
4.2 Instrucciones
El contenido del operando "Tag_InValue" se desplaza tres posiciones de bit hacia la derecha
y se indica como resultado en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

SHL: Desplazar a la izquierda
Descripción
Con la instrucción "Desplazar a la izquierda", el contenido del operando 1 se mueve bit a bit
hacia la izquierda. El operando 2 determina el número de posiciones de bit que debe
desplazarse el valor indicado.
Cuando el valor del operando 2 es "0", se copia en valor del operando 1 en el resultado.
Si el valor del operando 2 es mayor que el número de posiciones de bit disponibles, el valor del
operando 1 se desplaza hacia la izquierda las posiciones de bit disponibles.
Las posiciones de bit que quedan libres en el área derecha del operando 1 al realizar el
desplazamiento se rellenan con ceros.
La figura siguiente muestra cómo el contenido del operando 1 del tipo de datos WORD se
desplaza seis posiciones de bit hacia la izquierda:


2SHUDQG







2SHUDQGR

5HVXOWDGR




























G¯JLWRV

     

(VWRVVHLV
ELWVVHSLHUGHQ

5772





































/DVSRVLFLRQHV
GHELWOLEHUDGDVVH
UHOOHQDQFRQFHURV

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operan‐
do1>

Input

Secuencias de
bits, enteros

I, Q, M, D, L, P o
constante

Valor que se desplaza

<Operan‐
do2>

Input

BYTE, WORD, INT I, Q, M, D, L, P o
constante

Número de posiciones de bit
que se desplaza el valor

<Resultado>

Output

Secuencias de
bits, enteros

Resultado de la instrucción

I, Q, M, D, L

En la lista desplegable "???" puede seleccionar el tipo de datos de la instrucción.
Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := SHL_WORD("Tag_InValue","Tag_Number")

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

0011 1111 1010 1111

Tag_Number

4

Tag_OutValue

1111 1010 1111 0000

El contenido del operando "Tag_InValue" se desplaza cuatro posiciones de bit hacia la
izquierda y se indica como resultado en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

ROR: Rotar a la derecha
Descripción
Con la instrucción "Rotar a la derecha", el contenido del operando 1 se rota bit a bit hacia la
derecha. El operando 2 determina el número de posiciones de bit que debe rotarse el valor
indicado.
Cuando el valor del operando 2 es "0", se copia en valor del operando 1 en el resultado.

Programación del PLC
Manual de programación y manejo, 11/2019

5773

Instrucciones
4.2 Instrucciones
Si el valor del operando 2 es mayor que el número de posiciones de bit disponibles, el valor del
operando 1 se rota el número indicado de posiciones de bit.
Los bits que quedan libres al realizar la rotación se rellenan con los bits desplazados hacia
fuera.
La figura siguiente muestra cómo el contenido de un operando del tipo de datos DWORD rota
tres posiciones hacia la derecha:


2SHUDQGR

 



       

2SHUDQGR

G¯JLWRV

5HVXOWDGR

       



(OHVWDGROµJLFRGHORVWUHV
ELWVGHVSOD]DGRVVHLQWURGXFHHQODV
SRVLFLRQHVTXHKDQTXHGDGROLEUHV

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operan‐
do1>

Input

BYTE, WORD,
DWORD, DINT

I, Q, M, D, L, P o
constante

Valor que se rota

<Operan‐
do2>

Input

BYTE, WORD, INT I, Q, M, D, L, P o
constante

Número de posiciones de bit
que rota el valor

<Resultado>

Output

BYTE, WORD,
DWORD, DINT

Resultado de la instrucción

I, Q, M, D, L

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := ROR("Tag_InValue", "Tag_Number")

5774

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

1010 1010 0000 1111 0000 1111 0101 0101

Tag_Number

5

Tag_OutValue

1010 1101 0101 0000 0111 1000 0111 1010

El contenido del operando "Tag_InValue" se rota cinco posiciones de bit hacia la derecha y se
indica como resultado en el operando "Tag_OutValue".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

ROL: Rotar a la izquierda
Descripción
Con la instrucción "Rotar a la izquierda", el contenido del operando 1 se rota bit a bit hacia la
izquierda. El operando 2 determina el número de posiciones de bit que debe rotarse el valor
indicado.
Cuando el valor del operando 2 es "0", se copia en valor del operando 1 en el resultado.
Si el valor del operando 2 es mayor que el número de posiciones de bit disponibles, el valor del
operando 1 se rota el número indicado de posiciones de bit.
Los bits que quedan libres al realizar la rotación se rellenan con los bits desplazados hacia
fuera.
La figura siguiente muestra cómo el contenido de un operando del tipo de datos DWORD rota
tres posiciones hacia la izquierda:

Programación del PLC
Manual de programación y manejo, 11/2019

5775

Instrucciones
4.2 Instrucciones


2SHUDQGR

 

       

2SHUDQGR

5HVXOWDGR



G¯JLWRV



       
(OHVWDGROµJLFRGHORVWUHV
ELWVGHVSOD]DGRVVHLQWURGXFHHQODV
SRVLFLRQHVTXHKDQTXHGDGROLEUHV

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operan‐
do1>

Input

BYTE, WORD,
DWORD, DINT

I, Q, M, D, L, P o
constante

Valor que se rota

<Operan‐
do2>

Input

BYTE, WORD, INT I, Q, M, D, L, P o
constante

Número de posiciones de bit
que rota el valor

<Resultado>

Output

BYTE, WORD,
DWORD, DINT

Resultado de la instrucción

I, Q, M, D, L

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
"Tag_OutValue" := ROL("Tag_InValue","Tag_Number")

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Operando

Valor

Tag_InValue

1111 0000 1010 1010 0000 1111 0000 1111

Tag_Number

5

Tag_OutValue

0001 0101 0100 0001 1110 0001 1111 1110

El contenido del operando "Tag_InValue" se rota cinco posiciones de bit hacia la izquierda y se
indica como resultado en el operando "Tag_OutValue".

5776

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Otras instrucciones
SET: Activar área por bits
Descripción
La instrucción "Activar área por bits" establece el estado lógico de los bits en "1" en un área
indicada. El punto inicial del área se define mediante el puntero del parámetro S_BIT. Si el
puntero señala al área de memoria de la periferia externa (P), no se ejecuta la instrucción. El
número de bits que deben activarse en el área indicada se determina en el parámetro N de la
instrucción. Si el parámetro N tiene el valor "0", la llamada de la instrucción no tendrá efecto
alguno.
La instrucción se ejecuta sólo si el bit MCR está a "1". Si el bit MCR tiene el estado lógico "0",
no se modifican los bits en el área indicada.
Nota
Parámetro N
En el parámetro N también es posible interconectar un elemento de un bloque de datos.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

S_BIT

Input

POINTER

I, Q, M, D

Apunta al primer bit del área
cuyos bits se activan
En el direccionamiento indi‐
recto por registro interárea,
el puntero debe indicarse en
formato de palabra doble.

N

Input

INT

I, Q, M, D, L, P o
constante

Número de bits que deben
activarse

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Programación del PLC
Manual de programación y manejo, 11/2019

5777

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL SET
(S_BIT := P#M0.0
N := 10
)

La instrucción activa 10 bits en el área de M0.0 a M1.2.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

SETP: Activar mapa de bits en el área de periferia
Descripción
La instrucción "Activar mapa de bits en el área de periferia" permite poner los bits de un área
de periferia al estado lógico "1". Paralelamente a los bits de periferia, también se activan los
bits correspondientes en la memoria imagen de proceso de las salidas.
Los parámetros N y SA sirven para definir el mapa de bits que debe activarse. Los bits del
mapa deben encontrarse en aquella parte del área de periferia que tiene asignada una
memoria imagen de proceso.
Si no se ha conectado periferia para una parte del mapa de bits seleccionado, la instrucción
intentará activar el mapa de bits completo. En este caso se devuelve una información de error
en el parámetro RET_VAL.
El área de periferia se activa por bytes. Si el mapa de bits definido a través de los parámetros
N y SA no empieza ni termina en un límite de byte, la llamada de la instrucción tendrá el efecto
siguiente:
● Los bits contenidos en el primer o último byte que debe transferirse y que no pertenecen al
mapa de bits definido, obtienen el valor del bit correspondiente en la memoria imagen de
proceso de las salidas.
ADVERTENCIA
Comportamiento no intencionado
El ajuste de los bits al valor del bit correspondiente en la memoria imagen de proceso de
las salidas puede ocasionar p. ej. el arranque accidental de motores o la desconexión de
sistemas de refrigeración.
● Los bits que pertenecen al mapa de bits definido se ponen al estado lógico "1".
La instrucción "Activar mapa de bits en el área de periferia" debe llamarse en un área MCR.

5778

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La llamada de la instrucción "Activar mapa de bits en el área de periferia" no tiene efecto alguno
si se cumple una de las condiciones siguientes:
● El parámetro N devuelve el valor "0"
● El bit MCR tiene el estado lógico "1".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

N

Input

INT

I, Q, M, D, L o
constante

Número de bits que deben
activarse.

RET_VAL

Output

INT

I, Q, M, D, L

Información de error

SA

Output

POINTER

P

Puntero hacia el primer bit
que debe activarse

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL SETP
(N := 8
RET_VAL => "Tag_Error"
SA => P#10.0
)

La instrucción activa 8 bits en el área de periferia conforme a las salidas Q10.0 a Q10.7.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

5779

Instrucciones
4.2 Instrucciones
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

SETI: Activar área por bytes
Descripción
La instrucción "Activar área por bytes" establece en "1" el estado lógico de los bits en un área
indicada de bytes. El punto inicial del área se define en el parámetro S_BYTE. El tamaño del
área se define indicando el número de bits que deben activarse en el parámetro N.
Nota
El valor del parámetro N debe ser un múltiplo de 8 (p. ej. 8, 16, 24, etc.).
El puntero indicado en el parámetro S_BYTE debe señalar al área de memoria de la periferia
externa (P). Puesto que al área de memoria "P" se accede en formato de byte, palabra y
palabra doble, el puntero del parámetro S_BYTE debe señalar a un operando equivalente a un
valor límite de byte; por tanto, el número de bit del puntero debe ser "0".
Nota
El estado lógico de los bits correspondientes en la memoria imagen de proceso de las salidas
se pone a "0".
La llamada de la instrucción "Activar área por bytes" no tiene efecto alguno si se cumple una
de las condiciones siguientes:
● El puntero del parámetro S_BYTE no señala al área de memoria de la periferia externa.
● El puntero del parámetro S_BYTE señala a un operando que no equivale a ningún valor
límite de byte.
● El valor del parámetro N no es un múltiplo de 8.
● El bit MCR tiene el estado lógico "0".

5780

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

S_BYTE

Input

POINTER

P o constante

Señala al primer byte del
área cuyos bits se activan.
En el direccionamiento indi‐
recto por registro interárea,
el puntero debe indicarse en
formato de palabra doble.

N

Input

INT

I, Q, M, D, L, P o
constante

Tamaño del área que debe
activarse
El área se indica mediante el
número de bits como múltiplo
de 8 (p. ej. 8, 16, 24, etc.).

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL SETI
(S_BYTE := P#2.0
N := 16
)

La instrucción activa 2 bytes (16 bits) en el área de P2.0 a P3.7.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

RESET: Desactivar área por bits
Descripción
La instrucción "Desactivar área por bits" establece el estado lógico de los bits en "0" en un área
indicada. El punto inicial del área se define mediante el puntero del parámetro S_BIT. Si el
puntero señala al área de memoria de la periferia externa, no se ejecuta la instrucción. El
número de bits que deben desactivarse en el área indicada se determina en el parámetro N.
Si el parámetro N tiene el valor "0", la llamada de la instrucción no tendrá efecto alguno.
La instrucción se ejecuta sólo si el bit MCR está a "1". Si el bit MCR tiene el estado lógico "0",
no se modifican los bits en el área indicada.

Programación del PLC
Manual de programación y manejo, 11/2019

5781

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

S_BIT

Input

POINTER

I, Q, M, D

Señala al primer bit del área
cuyos bits se desactivan.
En el direccionamiento indi‐
recto por registro interárea,
el puntero debe indicarse en
formato de palabra doble.

N

Input

INT

I, Q, M, D, L, P o
constante

Número de bits que deben
desactivarse

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL RESET
(S_BIT := P#M0.0
N := 10
)

La instrucción desactiva 10 bits en el área de M0.0 a M1.2.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

RESETP: Desactivar mapa de bits en el área de periferia
Descripción
La instrucción "Desactivar mapa de bits en el área de periferia" permite poner los bits de un
área de periferia al estado lógico "0". Simultáneamente con los bits de periferia se desactivan
también los bits correspondientes en la memoria imagen de proceso de las salidas.
Los parámetros N y SA de la instrucción sirven para definir el mapa de bits que debe
desactivarse. Los bits del mapa deben encontrarse en aquella parte del área de periferia que
tiene asignada una memoria imagen de proceso.
Si no hay periferia enchufada para una parte del mapa de bits seleccionado, la instrucción
intentará desactivar el mapa de bits completo. En este caso se devuelve una información de
error en el parámetro RET_VAL.

5782

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El área de periferia se inicializa por bytes. Si el mapa de bits definido a través de los parámetros
N y SA no empieza ni termina en un límite de byte, la llamada de la instrucción tendrá el efecto
siguiente:
● Los bits contenidos en el primer o último byte que debe transferirse y que no pertenecen al
mapa de bits definido, obtienen el valor del bit correspondiente en la memoria imagen de
proceso de las salidas.
ADVERTENCIA
Comportamiento no intencionado
El ajuste de los bits al valor del bit correspondiente en la memoria imagen de proceso de
las salidas puede ocasionar p. ej. el arranque accidental de motores o la desconexión de
sistemas de refrigeración.
● Los bits que pertenecen al mapa de bits definido se restablecen al estado lógico "0".
La instrucción "Desactivar mapa de bits en el área de periferia" debe llamarse en un área MCR.
La llamada de la instrucción "Desactivar mapa de bits en el área de periferia" no tiene efecto
alguno si se cumple una de las condiciones siguientes:
● El parámetro N devuelve el valor "0"
● El bit MCR tiene el estado lógico "1".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

N

Input

INT

I, Q, M, D, L o
constante

Número de bits que deben
desactivarse

RET_VAL

Output

INT

I, Q, M, D, L

Información de error

SA

Output

POINTER

P

Puntero al primer bit que de‐
be desactivarse

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Programación del PLC
Manual de programación y manejo, 11/2019

5783

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL RESETP
(N := 8
RET_VAL => "Tag_Error"
SA => P#10.0
)

La instrucción desactiva 8 bits en el área de periferia conforme a las salidas Q10.0 a Q10.7.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)
Cambiar formatos de visualización en el estado del programa (Página 8529)
Principios básicos de GRAPH (Página 8191)

RESETI: Desactivar área por bytes
Descripción
La instrucción "Desactivar área por bytes" restablece el estado lógico de los bits a "0" en un
área de bytes indicada. El punto inicial del área se define mediante el puntero del parámetro
S_BYTE. El tamaño del área se define indicando el número de bits que deben desactivarse en
el parámetro N de la instrucción.
Nota
El valor del parámetro N debe ser un múltiplo de 8 (p. ej. 8, 16, 24, etc.).
El puntero indicado en el parámetro S_BYTE debe señalar al área de memoria de la periferia
externa. Puesto que al área de memoria "P" se accede en formato de byte, palabra y palabra
doble, el puntero del parámetro S_BYTE debe señalar a un operando equivalente a un valor
límite de byte; por tanto, el número de bit del puntero debe ser "0".
Nota
El estado lógico de los bits correspondientes en la memoria imagen de proceso de las salidas
se pone a "0".

5784

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La llamada de la instrucción "Desactivar área por bytes" no tiene efecto alguno si se cumple
una de las condiciones siguientes:
● El puntero del parámetro S_BYTE no señala al área de memoria de la periferia externa.
● El puntero del parámetro S_BYTE señala a un operando que no equivale a ningún valor
límite de byte.
● El valor del parámetro N no es un múltiplo de 8.
● El bit MCR tiene el estado lógico "0".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

S_BYTE

Input

POINTER

P o constante

Señala al primer byte del
área cuyos bits se desacti‐
van.
En el direccionamiento indi‐
recto por registro interárea,
el puntero debe indicarse en
formato de palabra doble.

N

Input

INT

I, Q, M, D, L, P o
constante

Tamaño del área cuyos bits
se desactivan.
El área se indica mediante el
número de bits como múltiplo
de 8 (p. ej. 8, 16, 24, etc.).

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL RESETI
(S_BYTE := P#2.0
N := 16
)

La instrucción desactiva 2 bytes (16 bits) en el área de P2.0 a P3.7.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Programación del PLC
Manual de programación y manejo, 11/2019

5785

Instrucciones
4.2 Instrucciones

REPL_VAL: Introducir valor sustitutivo
Descripción
La instrucción "Introducir valor sustitutivo" permite introducir un valor sustitutivo en el
acumulador 1 (ACU 1) desde un bloque de organización de error síncrono.
Nota
La instrucción "Introducir valor sustitutivo" sólo se puede llamar desde bloques de organización
de error síncrono (OB 121, OB 122).
La instrucción "Introducir valor sustitutivo" se utiliza si ya no es posible leer ningún valor de un
módulo. Tras cada acceso a dicho módulo se inicia el OB 122. Llamando la instrucción
"Introducir valor sustitutivo" es posible cargar un valor sustitutivo en el acumulador 1. La
ejecución del programa se prosigue entonces con este valor sustitutivo. La información
necesaria para seleccionar el valor sustitutivo puede consultarse en las variables locales del
OB 122.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

VAL

Input

DWORD

I, Q, M, D, L o
constante

Valor sustitutivo

RET_VAL

Output

INT

I, Q, M, D, L

Información de error

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Parámetro RET_VAL
La tabla siguiente muestra el significado de los valores del parámetro RET_VAL:
Código de Descripción
error*
(W#16#....)
0000

Ningún error

8080

La instrucción no se ha llamado desde un OB de error síncrono.

8xyy

Encontrará más información de error en "Consulte también".

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

5786

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

DRUM: Materializar circuito secuencial sucesivo
Descripción
La instrucción "Materializar circuito secuencial sucesivo" ocupa los bits de salida programados
(OUT1 a OUT16) y la palabra de salida (OUT_WORD) con los valores programados del
parámetro OUT_VAL del paso respectivo. El paso en cuestión debe cumplir las condiciones de
la máscara de habilitación programada en el parámetro S_MASK mientras la instrucción
permanece en dicho paso. La instrucción pasa al paso siguiente cuando el evento de éste es
verdadero y una vez transcurrido el tiempo programado para el paso actual, o bien cuando el
valor del parámetro JOG cambia de "0" a "1". La instrucción se desactiva cuando el estado
lógico del parámetro RESET cambia a "1". Con ello, el paso actual se iguala al paso
predeterminado (DSP).
El tiempo de permanencia en un paso se calcula multiplicando la base de tiempo
predeterminada (DTBP) por el valor de contaje predeterminado (S_PRESET) para cada paso.
Al comienzo de un nuevo paso, este valor calculado se carga en el parámetro DCC, que
contiene el tiempo restante para el paso actual. Por ejemplo, si el valor del parámetro DTBP es
"2" y el valor predeterminado para el primer paso es "100" (100 ms), el parámetro DCC
devolverá el valor "200" (200 ms).
Un paso puede programarse con un valor de tiempo, con un evento o con ambos. Los pasos
programados con un bit de evento y el valor de tiempo "0" pasan al siguiente paso en cuanto
el estado lógico del bit de evento es "1". Los pasos programados solo con un valor de tiempo
empiezan a contar el tiempo inmediatamente. Los pasos programados con un bit de evento y
un valor de tiempo mayor que "0" empiezan a contar el tiempo en cuanto el estado lógico del
bit de evento es "1". Los bits de evento se inicializan con el estado lógico "1".
Si el circuito secuencial sucesivo se encuentra en el último paso programado (LST_STEP) y ha
transcurrido el tiempo para dicho paso, el estado lógico del parámetro Q se pone a "1". De lo
contrario, se pone a "0". Si está activado el parámetro Q, la instrucción permanece en el paso
hasta la desactivación.
En la máscara configurable (S_MASK) es posible seleccionar los distintos bits de la palabra de
salida (OUT_WORD) y activar o desactivar los bits de salida (OUT1 a OUT16) mediante los
valores de salida (OUT_VAL). Si un bit de la máscara configurable tiene el estado lógico "1",
el valor OUT_VAL activa o desactiva el bit correspondiente. Si el estado lógico de un bit de la
máscara configurable es "0", no cambia el bit respectivo. Todos los bits de la máscara
configurable de todos los 16 pasos se inicializan con el estado lógico "1".
El bit de salida del parámetro OUT1 equivale al bit menos significativo de la palabra de salida
(OUT_WORD). El bit de salida del parámetro OUT16 equivale al bit más significativo de la
palabra de salida (OUT_WORD).
Al insertar la instrucción en el programa se abre automáticamente el cuadro de diálogo
"Opciones de llamada". El bloque de datos creado se encuentra en la carpeta "Recursos del

Programación del PLC
Manual de programación y manejo, 11/2019

5787

Instrucciones
4.2 Instrucciones
programa" del árbol del proyecto, en "Bloques de programa > Bloques de sistema". Encontrará
más información al respecto en "Consulte también".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RESET

Input

BOOL

I, Q, M, D, L

El estado lógico "1" indica
una condición de desactiva‐
ción.

JOG

Input

BOOL

I, Q, M, D, L

Si el estado lógico cambia de
"0" a "1", la instrucción pasa
al siguiente paso.

DRUM_EN

Input

BOOL

I, Q, M, D, L

El estado lógico "1" permite
que el circuito secuencial su‐
cesivo siga contando según
el evento y los criterios de
tiempo.

LST_STEP

Input

BYTE

I, Q, M, D, L o
constante

Número del último paso pro‐
gramado.

EVENT(i),

Input

BOOL

I, Q, M, D, L

OUT(j),

Bit de evento (i);
El estado lógico inicial es "1".

1 ≤ i ≤ 16
Output

BOOL

I, Q, M, D, L

Bit de salida (j)

Q

Output

BOOL

I, Q, M, D, L

El estado lógico "1" indica
que ha transcurrido el tiempo
del último paso.

OUT_WORD

Output

WORD

I, Q, M, D, L, P

Dirección de palabra en la
que el circuito secuencial su‐
cesivo escribe los valores de
salida.

ERR_CODE

Output

WORD

I, Q, M, D, L, P

Información de error

JOG_HIS

Static

BOOL

I, Q, M, D, L

Bit de evolución del paráme‐
tro JOG

EOD

Static

BOOL

I, Q, M, D, L

El estado lógico "1" indica
que ha transcurrido el tiempo
del último paso.

DSP

Static

BYTE

I, Q, M, D, L, P

Paso predeterminado del cir‐
cuito secuencial sucesivo

DSC

Static

BYTE

I, Q, M, D, L, P

Paso actual del circuito se‐
cuencial sucesivo

DCC

Static

DWORD

I, Q, M, D, L, P

Paso actual del circuito se‐
cuencial sucesivo

DTBP

Static

WORD

I, Q, M, D, L, P

Base de tiempo predetermi‐
nada del circuito secuencial
sucesivo

PrevTime

Static

TIME

I, Q, M, D, L o
constante

Hora de sistema anterior

1 ≤ j ≤ 16

5788

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

S_PRESET

Static

ARRAY[1..16] of
WORD

I, Q, M, D, L

Valor de contaje predetermi‐
nado para cada paso [1 a 16];
1 ciclo de reloj = 1 ms.

OUT_VAL

Static

ARRAY[1..16,
0..15] of BOOL

I, Q, M, D, L

Valores de salida para cada
etapa [1 a 16, 0 a 15].

S_MASK

Static

ARRAY[1..16,
0..15] of BOOL

I, Q, M, D, L

Máscara configurable para
cada etapa [1 a 16, 0 a 15].
Los estados lógicos iniciales
son "1".

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Parámetro ERR_CODE
La tabla siguiente muestra el significado de los valores del parámetro ERR_CODE:
ERR_CO‐
DE*

Explicación

W#16#000
0

Ningún error

W#16#000
B

El valor del parámetro LST_STEP es menor que 1 o mayor que 16.

W#16#000
C

El valor del parámetro DSC es menor que 1 o mayor que el valor del parámetro
LST_STEP.

W#16#000
D

El valor del parámetro DSP es menor que 1 o mayor que el valor de LST_STEP.

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Ejemplo
En el ejemplo siguiente, la instrucción pasa del paso 1 al paso 2. Los bits de salida (OUT1 a
OUT16) y la palabra de salida (OUT_WORD) se activan según la máscara configurada para el
paso 2 y los valores del parámetro OUT_VAL.
Nota
Los parámetros estáticos pueden inicializarse en el bloque de datos.

GRAPH
CALL DRUM, "DRUM_DB"
(RESET := "Tag_Reset"
JOG := "Tag_Input_Jog"
DRUM_EN := "Tag_Input_Drum_EN"
LST_STEP := "Tag_Number_LastStep"
EVENTn := "MyTag_Event_n"

Programación del PLC
Manual de programación y manejo, 11/2019

5789

Instrucciones
4.2 Instrucciones
GRAPH
OUTn => "MyTag_Output_n"
Q => "Tag_Output_Q"
OUT_WORD => "Tag_OutputWord"
ERR_CODE => "Tag_ErrorCode"
)

Las tablas siguientes muestran el funcionamiento de la instrucción con valores concretos.

Antes de la ejecución
En este ejemplo se utilizan los siguientes valores para asignar valores a los parámetros de
entrada:
Parámetro

Operando

Dirección

Valor

RESET

Tag_Reset

M0.0

FALSE

JOG

Tag_Input_JOG

M0.1

FALSE

DRUM_EN

Tag_Input_Drum_EN

M0.2

TRUE

LST_STEP

Tag_Number_LastStep

MB1

B#16#08

EVENT2

MyTag_Event_2

M20.0

FALSE

EVENT4

MyTag_Event_4

M20.1

FALSE

EVENT6

MyTag_Event_6

M20.2

FALSE

EVENT8

MyTag_Event_8

M20.3

FALSE

EVENT10

MyTag_Event_10

M20.4

FALSE

EVENT12

MyTag_Event_12

M20.5

FALSE

EVENT14

MyTag_Event_14

M20.6

FALSE

EVENT16

MyTag_Event_16

M20.7

FALSE

En el bloque de datos de instancia "DRUM_DB" de la instrucción se guardan los siguientes
valores:

5790

Parámetro

Dirección

Valor

JOG_HIS

DBX12.0

FALSE

EOD

DBX12.1

FALSE

DSP

DBB13

W#16#0001

DSC

DBB14

W#16#0001

DCC

DBD16

DW#16#0000000A

DTBP

DBW20

W#16#0001

S_PRESET[1]

DBW26

W#16#0064

S_PRESET[2]

DBW28

W#16#00C8

OUT_VAL[1,0]

DBX58.0

TRUE

OUT_VAL[1,1]

DBX58.1

TRUE

OUT_VAL[1,2]

DBX58.2

TRUE

OUT_VAL[1,3]

DBX58.3

TRUE

OUT_VAL[1,4]

DBX58.4

TRUE

OUT_VAL[1,5]

DBX58.5

TRUE

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Dirección

Valor

OUT_VAL[1,6]

DBX58.6

TRUE

OUT_VAL[1,7]

DBX58.7

TRUE

OUT_VAL[1,8]

DBX59.0

TRUE

OUT_VAL[1,9]

DBX59.1

TRUE

OUT_VAL[1,10]

DBX59.2

TRUE

OUT_VAL[1,11]

DBX59.3

TRUE

OUT_VAL[1,12]

DBX59.4

TRUE

OUT_VAL[1,13]

DBX59.5

TRUE

OUT_VAL[1,14]

DBX59.6

TRUE

OUT_VAL[1,15]

DBX59.7

TRUE

OUT_VAL[2,0]

DBX60.0

FALSE

OUT_VAL[2,1]

DBX60.1

FALSE

OUT_VAL[2,2]

DBX60.2

FALSE

OUT_VAL[2,3]

DBX60.3

FALSE

OUT_VAL[2,4]

DBX60.4

FALSE

OUT_VAL[2,5]

DBX60.5

FALSE

OUT_VAL[2,6]

DBX60.6

FALSE

OUT_VAL[2,7]

DBX60.7

FALSE

OUT_VAL[2,8]

DBX61.0

FALSE

OUT_VAL[2,9]

DBX61.1

FALSE

OUT_VAL[2,10]

DBX61.2

FALSE

OUT_VAL[2,11]

DBX61.3

FALSE

OUT_VAL[2,12]

DBX61.4

FALSE

OUT_VAL[2,13]

DBX61.5

FALSE

OUT_VAL[2,14]

DBX61.6

FALSE

OUT_VAL[2,15]

DBX61.7

FALSE

S_MASK[2,0]

DBX92.0

FALSE

S_MASK[2,1]

DBX92.1

TRUE

S_MASK[2,2]

DBX92.2

TRUE

S_MASK[2,3]

DBX92.3

TRUE

S_MASK[2,4]

DBX92.4

TRUE

S_MASK[2,5]

DBX92.5

FALSE

S_MASK[2,6]

DBX92.6

TRUE

S_MASK[2,7]

DBX92.7

TRUE

S_MASK[2,8]

DBX93.0

FALSE

S_MASK[2,9]

DBX93.1

FALSE

S_MASK[2,10]

DBX93.2

TRUE

S_MASK[2,11]

DBX93.3

TRUE

S_MASK[2,12]

DBX93.4

TRUE

S_MASK[2,13]

DBX93.5

TRUE

S_MASK[2,14]

DBX93.6

FALSE

S_MASK[2,15]

DBX93.7

TRUE

Programación del PLC
Manual de programación y manejo, 11/2019

5791

Instrucciones
4.2 Instrucciones
Los parámetros de salida tienen los valores siguientes antes de ejecutarse la instrucción:
Parámetro

Operando

Dirección

Valor

Q

Tag_Output_Q

M6.0

FALSE

OUTWORD

Tag_OutputWord

MW8

W#16#FFFF

OUT1

MyTag_Output_1

M4.0

TRUE

OUT2

MyTag_Output_2

M4.1

TRUE

OUT3

MyTag_Output_3

M4.2

TRUE

OUT4

MyTag_Output_4

M4.3

TRUE

OUT5

MyTag_Output_5

M4.4

TRUE

OUT6

MyTag_Output_6

M4.5

TRUE

OUT7

MyTag_Output_7

M4.6

TRUE

OUT8

MyTag_Output_8

M4.7

TRUE

OUT9

MyTag_Output_9

M5.0

TRUE

OUT10

MyTag_Output_10

M5.1

TRUE

OUT11

MyTag_Output_11

M5.2

TRUE

OUT12

MyTag_Output_12

M5.3

TRUE

OUT13

MyTag_Output_13

M5.4

TRUE

OUT14

MyTag_Output_14

M5.5

TRUE

OUT15

MyTag_Output_15

M5.6

TRUE

OUT16

MyTag_Output_16

M5.7

TRUE

Después de la ejecución
Una vez ejecutada la instrucción, los valores siguientes se escriben en los parámetros de
salida:

5792

Parámetro

Operando

Dirección

Valor

OUT1

MyTag_Output_1

M4.0

TRUE

OUT2

MyTag_Output_2

M4.1

FALSE

OUT3

MyTag_Output_3

M4.2

FALSE

OUT4

MyTag_Output_4

M4.3

FALSE

OUT5

MyTag_Output_5

M4.4

FALSE

OUT6

MyTag_Output_6

M4.5

TRUE

OUT7

MyTag_Output_7

M4.6

FALSE

OUT8

MyTag_Output_8

M4.7

FALSE

OUT9

MyTag_Output_9

M5.0

TRUE

OUT10

MyTag_Output_10

M5.1

TRUE

OUT11

MyTag_Output_11

M5.2

FALSE

OUT12

MyTag_Output_12

M5.3

FALSE

OUT13

MyTag_Output_13

M5.4

FALSE

OUT14

MyTag_Output_14

M5.5

FALSE

OUT15

MyTag_Output_15

M5.6

TRUE

OUT16

MyTag_Output_16

M5.7

FALSE

Q

Tag_Output_Q

M6.0

FALSE

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Operando

Dirección

Valor

OUTWORD

Tag_OutputWord

MW8

W#16#4321

ERR_CODE

Tag_ErrorCode

MW10

W#16#0000

En el bloque de datos de instancia "DRUM_DB" de la instrucción se guardan los siguientes
valores:
Parámetro

Dirección

Valor

JOG_HIS

DBX12.0

FALSE

EOD

DBX12.1

FALSE

DSC

DBB14

W#16#0002

DCC

DBD16

DW#16#000000C8

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

DRUM_X: Materializar circuito secuencial sucesivo
Descripción
La instrucción "Materializar circuito secuencial sucesivo" permite materializar un circuito
secuencial sucesivo con 16 pasos como máximo. El número del primer paso se define con el
parámetro DSP. El número del último paso se predetermina con el parámetro LST_STEP.
En cada paso se escriben todos los 16 bits de salida OUT0 a OUT15 y el parámetro de salida
OUT_WORD (que contiene los bits de salida). A un bit de salida se asigna bien sea el bit
correspondiente del campo predefinido OUT_VAL, o bien el bit de salida del paso anterior. El
valor que se asigne dependerá de la ocupación de los bits de máscara en el parámetro
S_MASK.
Nota
El ajuste predeterminado de los bits de máscara es 0. Para modificar el ajuste actual de uno
o varios bits de máscara, realice el cambio en el bloque de datos de instancia.
La instrucción "Materializar circuito secuencial sucesivo" pasa al siguiente paso cuando se
produce un flanco ascendente en el parámetro JOG. Si la instrucción ya se encuentra en el
último paso y se produce un flanco ascendente en el parámetro JOG, se activan las variables
Q y EOD. En este caso, el parámetro DCC se pone al valor 0. La instrucción permanece en el
último paso hasta que el parámetro RESET se pone al valor "1".
Además, también se puede permitir la transición al paso siguiente en función del tiempo. Para
ello se debe poner al valor "1" el parámetro DRUM_EN. La transición al paso siguiente tiene
lugar si está activado el bit de evento (EVENTi) correspondiente al paso actual y si ha
transcurrido el tiempo predeterminado para el paso actual. El tiempo necesario para un paso

Programación del PLC
Manual de programación y manejo, 11/2019

5793

Instrucciones
4.2 Instrucciones
resulta de la multiplicación de la base de tiempo (DTBP) por el factor de tiempo válido para el
paso actual (S_PRESET).
Nota
El tiempo de ejecución restante en el paso actual (DCC) se reduce únicamente si está activado
el bit de evento correspondiente (EVENTi).
Al insertar la instrucción en el programa se abre automáticamente el cuadro de diálogo
"Opciones de llamada". El bloque de datos creado se encuentra en la carpeta "Recursos del
programa" del árbol del proyecto, en "Bloques de programa > Bloques de sistema". Encontrará
más información al respecto en "Consulte también".
Si, al llamar la instrucción, el parámetro RESET tiene el valor "1", el circuito secuencial
sucesivo pasará al paso cuyo número se ha asignado al parámetro DSP.
Un paso puede programarse con un valor de tiempo, con un evento o con ambos. Los pasos
programados con un bit de evento y el valor de tiempo "0" pasan al siguiente paso en cuanto
el estado lógico del bit de evento es "1". Los pasos programados solo con un valor de tiempo
empiezan a contar el tiempo inmediatamente. Los pasos programados con un bit de evento y
un valor de tiempo mayor que "0" empiezan a contar el tiempo en cuanto el estado lógico del
bit de evento es "1".
El circuito secuencial sucesivo también se puede conmutar en progresión en todo momento a
través del valor del parámetro JOG.
En la primera llamada de la instrucción, el parámetro RESET se debe poner a 1.
Si el circuito secuencial se encuentra en el último paso y ha transcurrido el tiempo de ejecución
predefinido para este paso, se activan los parámetros Q y EOD. La instrucción permanece en
el último paso hasta que el parámetro RESET adopte el valor "1".
Esta instrucción se ejecuta solo en los estados operativos ARRANQUE y RUN.
El sistema operativo inicializa la instrucción "Materializar circuito secuencial sucesivo" cuando
se efectúa un arranque en frío. La instrucción no se inicializa en caso de un rearranque
completo (en caliente). Si la instrucción "Materializar circuito secuencial sucesivo" debe
inicializarse tras un rearranque completo (en caliente), es preciso llamarla en el OB 100 con el
valor "1" en el parámetro RESET.

5794

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RESET

Input

BOOL

I, Q, M, D, L

El estado lógico "1" desactiva
el circuito secuencial. En la
primera llamada de la instruc‐
ción, el parámetro RESET se
debe poner a "1".

JOG

Input

BOOL

I, Q, M, D, L

Un flanco de señal ascenden‐
te (con respecto a la última
llamada) provoca la transi‐
ción al paso siguiente, siem‐
pre que el circuito secuencial
no se encuentre aún en el úl‐
timo paso. La transición tiene
lugar independientemente
del valor asignado al paráme‐
tro DRUM_EN.

DRUM_EN

Input

BOOL

I, Q, M, D, L

Parámetro de control que de‐
termina si se puede realizar
una transición al paso si‐
guiente en función del tiem‐
po. Si el valor es "1", es posi‐
ble una transición en función
del tiempo.

LST_STEP

Input

BYTE

I, Q, M, D, L o
constante

Número del último paso

EVENTi,

Los valores admisibles son 1
a 16.

Input

BOOL

I, Q, M, D, L

Bit de evento n.º i (pertenece
al paso i)

Output

BOOL

I, Q, M, D, L

Bit de salida n.º j (idéntico al
bit n.º j de OUT_WORD)

Q

Output

BOOL

I, Q, M, D, L

Parámetro de estado que in‐
dica si ha transcurrido el tiem‐
po predefinido por el usuario
para la ejecución del último
paso.

OUT_WORD

Output

WORD

I, Q, M, D, L, P

Bits de salida resumidos en
una variable

ERR_CODE

Output

WORD

I, Q, M, D, L, P

Información de error

JOG_HIS

Static

BOOL

I, Q, M, D, L

Irrelevante para el usuario
(parámetro de entrada JOG
de la llamada anterior)

EOD

Static

BOOL

I, Q, M, D, L

Idéntico al parámetro de sali‐
da Q

DSP

Static

BYTE

I, Q, M, D, L, P o
constante

Número del primer paso

I, Q, M, D, L, P o
constante

Número del paso actual

1 ≤ i ≤ 16
OUTj,
0 ≤ j ≤ 15

DSC

Static

Programación del PLC
Manual de programación y manejo, 11/2019

BYTE

Los valores admisibles son 1
a 16.

5795

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DCC

Static

DWORD

I, Q, M, D, L, P

Tiempo de ejecución restan‐
te del paso actual, indicado
en milisegundos (ms) (rele‐
vante solo si DRUM_EN = 1 y
el bit de evento correspon‐
diente = 1)

DTBP

Static

WORD

I, Q, M, D, L, P o
constante

Base de tiempo en milisegun‐
dos (ms) válida para todos
los pasos

PREV_TIME

Static

DWORD

I, Q, M, D, L o
constante

(Irrelevante para el usuario:
hora de sistema de la llama‐
da anterior)

S_PRESET

Static

ARRAY of WORD

I, Q, M, D, L o
constante

Campo unidimensional con
los factores de tiempo para
cada paso.
Selección recomendada de
índices: [1 a 16].
En este caso, S_PRESET [x]
contiene el factor de tiempo
del paso x.

OUT_VAL

Static

ARRAY of BOOL

I, Q, M, D, L

Campo bidimensional con
los valores que deben emitir‐
se en cada paso, a no ser
que se hayan inhibido vía
S_MASK.
Selección recomendada de
índices: [1 a 16, 0 a 15]. En
este caso, OUT_VAL [x, y]
contiene el valor asignado al
bit de salida OUTy en el paso
x.

S_MASK

Static

ARRAY of BOOL

I, Q, M, D, L

Campo bidimensional con
los bits de máscara para ca‐
da paso.
Selección recomendada de
índices: [1 a 16, 0 a 15]. En
este caso, S_MASK [x, y]
contiene el bit de máscara
para el valor "y"-ésimo que
debe emitirse en el paso x.
Significado de los bits de
máscara:
● 0: el valor
correspondiente del paso
anterior se asigna al
respectivo bit de salida.
● 1: el valor
correspondiente de
OUT_VAL se asigna al
respectivo bit de salida.

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

5796

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro ERR_CODE
La tabla siguiente muestra el significado de los valores del parámetro ERR_CODE:
ERR_CO‐
DE*
(W#16#...)

Explicación

0000

Ningún error

8081

Valor no admisible en el parámetro LST_STEP

8082

Valor no admisible en DSC

8083

Valor no admisible en DSP

8084

El producto DCC = DTBP * S_PRESET[DSC] excede el valor 2**31-1 (aprox. 24,86 días).

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Ejemplo
En el ejemplo siguiente, la instrucción pasa del paso 1 al paso 2. Los bits de salida (OUT0 a
OUT15) y la palabra de salida (OUT_WORD) se activan según la máscara configurada para el
paso 2 y los valores del parámetro OUT_VAL.
Nota
Los parámetros estáticos pueden inicializarse en el bloque de datos.

GRAPH
CALL DRUM_X, "DRUM_X_DB"
(RESET := "Tag_Reset"
JOG := "Tag_Input_Jog"
DRUM_EN := "Tag_Input_Drum_EN"
LST_STEP := "Tag_Number_LastStep"
EVENTn := "MyTag_Event_n"
OUTn => "MyTag_Output_n"
Q => "Tag_Output_Q"
OUT_WORD => "Tag_OutputWord"
ERR_CODE => "Tag_ErrorCode"
)

Las tablas siguientes muestran el funcionamiento de la instrucción con valores concretos.

Programación del PLC
Manual de programación y manejo, 11/2019

5797

Instrucciones
4.2 Instrucciones

Antes de la ejecución
En este ejemplo se utilizan los siguientes valores para asignar valores a los parámetros de
entrada:
Parámetro

Operando

Dirección

Valor

RESET

Tag_Reset

M0.0

FALSE

JOG

Tag_Input_JOG

M0.1

FALSE

DRUM_EN

Tag_Input_Drum_EN

M0.2

TRUE

LST_STEP

Tag_Number_LastStep

MB1

B#16#08

EVENT2

MyTag_Event_2

M20.0

FALSE

EVENT4

MyTag_Event_4

M20.1

FALSE

EVENT6

MyTag_Event_6

M20.2

FALSE

EVENT8

MyTag_Event_8

M20.3

FALSE

EVENT10

MyTag_Event_10

M20.4

FALSE

EVENT12

MyTag_Event_12

M20.5

FALSE

EVENT14

MyTag_Event_14

M20.6

FALSE

EVENT16

MyTag_Event_16

M20.7

FALSE

En el bloque de datos de instancia "DRUM_X_DB" de la instrucción se guardan los siguientes
valores:
Parámetro

5798

Dirección

Valor

JOG_HIS

DBX12.0

FALSE

EOD

DBX12.1

FALSE

DSP

DBB13

W#16#0001

DSC

DBB14

W#16#0001

DCC

DBD16

DW#16#0000000A

DTBP

DBW20

W#16#0001

S_PRESET[1]

DBW26

W#16#0064

S_PRESET[2]

DBW28

W#16#00C8

OUT_VAL[1,0]

DBX58.0

TRUE

OUT_VAL[1,1]

DBX58.1

TRUE

OUT_VAL[1,2]

DBX58.2

TRUE

OUT_VAL[1,3]

DBX58.3

TRUE

OUT_VAL[1,4]

DBX58.4

TRUE

OUT_VAL[1,5]

DBX58.5

TRUE

OUT_VAL[1,6]

DBX58.6

TRUE

OUT_VAL[1,7]

DBX58.7

TRUE

OUT_VAL[1,8]

DBX59.0

TRUE

OUT_VAL[1,9]

DBX59.1

TRUE

OUT_VAL[1,10]

DBX59.2

TRUE

OUT_VAL[1,11]

DBX59.3

TRUE

OUT_VAL[1,12]

DBX59.4

TRUE

OUT_VAL[1,13]

DBX59.5

TRUE

OUT_VAL[1,14]

DBX59.6

TRUE

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Dirección

Valor

OUT_VAL[1,15]

DBX59.7

TRUE

OUT_VAL[2,0]

DBX60.0

FALSE

OUT_VAL[2,1]

DBX60.1

FALSE

OUT_VAL[2,2]

DBX60.2

FALSE

OUT_VAL[2,3]

DBX60.3

FALSE

OUT_VAL[2,4]

DBX60.4

FALSE

OUT_VAL[2,5]

DBX60.5

FALSE

OUT_VAL[2,6]

DBX60.6

FALSE

OUT_VAL[2,7]

DBX60.7

FALSE

OUT_VAL[2,8]

DBX61.0

FALSE

OUT_VAL[2,9]

DBX61.1

FALSE

OUT_VAL[2,10]

DBX61.2

FALSE

OUT_VAL[2,11]

DBX61.3

FALSE

OUT_VAL[2,12]

DBX61.4

FALSE

OUT_VAL[2,13]

DBX61.5

FALSE

OUT_VAL[2,14]

DBX61.6

FALSE

OUT_VAL[2,15]

DBX61.7

FALSE

S_MASK[2,0]

DBX92.0

FALSE

S_MASK[2,1]

DBX92.1

TRUE

S_MASK[2,2]

DBX92.2

TRUE

S_MASK[2,3]

DBX92.3

TRUE

S_MASK[2,4]

DBX92.4

TRUE

S_MASK[2,5]

DBX92.5

FALSE

S_MASK[2,6]

DBX92.6

TRUE

S_MASK[2,7]

DBX92.7

TRUE

S_MASK[2,8]

DBX93.0

FALSE

S_MASK[2,9]

DBX93.1

FALSE

S_MASK[2,10]

DBX93.2

TRUE

S_MASK[2,11]

DBX93.3

TRUE

S_MASK[2,12]

DBX93.4

TRUE

S_MASK[2,13]

DBX93.5

TRUE

S_MASK[2,14]

DBX93.6

FALSE

S_MASK[2,15]

DBX93.7

TRUE

Los parámetros de salida tienen los valores siguientes antes de ejecutarse la instrucción:
Parámetro

Operando

Dirección

Valor

Q

Tag_Output_Q

M6.0

FALSE

OUTWORD

Tag_OutputWord

MW8

W#16#FFFF

OUT0

MyTag_Output_0

M4.0

TRUE

OUT1

MyTag_Output_1

M4.1

TRUE

OUT2

MyTag_Output_2

M4.2

TRUE

OUT3

MyTag_Output_3

M4.3

TRUE

Programación del PLC
Manual de programación y manejo, 11/2019

5799

Instrucciones
4.2 Instrucciones
Parámetro

Operando

Dirección

Valor

OUT4

MyTag_Output_4

M4.4

TRUE

OUT5

MyTag_Output_5

M4.5

TRUE

OUT6

MyTag_Output_6

M4.6

TRUE

OUT7

MyTag_Output_7

M4.7

TRUE

OUT8

MyTag_Output_8

M5.0

TRUE

OUT9

MyTag_Output_9

M5.1

TRUE

OUT10

MyTag_Output_10

M5.2

TRUE

OUT11

MyTag_Output_11

M5.3

TRUE

OUT12

MyTag_Output_12

M5.4

TRUE

OUT13

MyTag_Output_13

M5.5

TRUE

OUT14

MyTag_Output_14

M5.6

TRUE

OUT15

MyTag_Output_15

M5.7

TRUE

Después de la ejecución
Una vez ejecutada la instrucción, los valores siguientes se escriben en los parámetros de
salida:

5800

Parámetro

Operando

Dirección

Valor

OUT0

MyTag_Output_0

M4.0

TRUE

OUT1

MyTag_Output_1

M4.1

FALSE

OUT2

MyTag_Output_2

M4.2

FALSE

OUT3

MyTag_Output_3

M4.3

FALSE

OUT4

MyTag_Output_4

M4.4

FALSE

OUT5

MyTag_Output_5

M4.5

TRUE

OUT6

MyTag_Output_6

M4.6

FALSE

OUT7

MyTag_Output_7

M4.7

FALSE

OUT8

MyTag_Output_8

M5.0

TRUE

OUT9

MyTag_Output_9

M5.1

TRUE

OUT10

MyTag_Output_10

M5.2

FALSE

OUT11

MyTag_Output_11

M5.3

FALSE

OUT12

MyTag_Output_12

M5.4

FALSE

OUT13

MyTag_Output_13

M5.5

FALSE

OUT14

MyTag_Output_14

M5.6

TRUE

OUT15

MyTag_Output_15

M5.7

FALSE

Q

Tag_Output_Q

M6.0

FALSE

OUTWORD

Tag_OutputWord

MW8

W#16#4321

ERR_CODE

Tag_ErrorCode

MW10

W#16#0000

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
En el bloque de datos de instancia "DRUM_X_DB" de la instrucción se guardan los siguientes
valores:
Parámetro

Dirección

Valor

JOG_HIS

DBX12.0

FALSE

EOD

DBX12.1

FALSE

DSC

DBB14

W#16#0002

DCC

DBD16

DW#16#000000C8

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

DCAT: Alarma de tiempo para control discreto
Descripción
La instrucción "Alarma de tiempo para control discreto" acumula el tiempo desde el instante en
el que el parámetro CMD da la orden de abrir o cerrar. El tiempo se acumula hasta excederse
el tiempo predeterminado (PT) o hasta recibir la notificación de que el dispositivo se ha cerrado
o abierto dentro del tiempo prescrito (O_FB o C_FB). Si se excede el tiempo predeterminado
antes de recibirse la notificación de que se ha abierto o cerrado el dispositivo, se activa la
alarma correspondiente. Si el estado lógico de la entrada de la orden cambia antes del tiempo
predeterminado, se reinicia el tiempo.
Al insertar la instrucción en el programa se abre automáticamente el cuadro de diálogo
"Opciones de llamada". El bloque de datos creado se encuentra en la carpeta "Recursos del
programa" del árbol del proyecto, en "Bloques de programa > Bloques de sistema". Encontrará
más información al respecto en "Consulte también".
La instrucción "Alarma de tiempo para control discreto" tiene las reacciones siguientes en las
condiciones de entrada:
● Si el estado lógico del parámetro CMD cambia de "0" a "1", esto tiene los efectos siguientes
en los estados lógicos de los parámetros Q, CMD_HIS, ET, OA y CA:
– Los parámetros Q y CMD_HIS se ponen a "1".
– Los parámetros ET, OA y CA se ponen a "0".
● Si el estado lógico del parámetro CMD cambia de "1" a "0", los parámetros Q, ET, OA, CA
y CMD_HIS se ponen a "0".
● Si los parámetros CMD y CMD_HIS tienen el estado lógico "1" y el parámetro O_FB se pone
a "0", la diferencia de tiempo (ms) desde la última ejecución de la instrucción se suma al
valor del parámetro ET. Si el valor del parámetro ET excede el del parámetro PT, el estado
lógico del parámetro OA se pone a "1". Si el valor del parámetro ET no excede el del
parámetro PT, el estado lógico del parámetro OA se pone a "0". El valor del parámetro
CMD_HIS se pone al del parámetro CMD.

Programación del PLC
Manual de programación y manejo, 11/2019

5801

Instrucciones
4.2 Instrucciones
● Si los estados lógicos de los parámetros CMD, CMD_HIS y O_FB están a "1" y el parámetro
C_FB devuelve el valor "0", el estado lógico del parámetro OA se pone a "0". El valor del
parámetro ET se pone al del parámetro PT. Si el estado lógico del parámetro O_FB cambia
a "0", se activa la alarma en la siguiente ejecución de la instrucción. El valor del parámetro
CMD_HIS se pone al del parámetro CMD.
● Si los parámetros CMD, CMD_HIS y C_FB devuelven "0", la diferencia de tiempo (ms)
desde la última ejecución de la instrucción se suma al valor del parámetro ET. Si el valor del
parámetro ET excede el del parámetro PT, el estado lógico del parámetro CA se pone a "1".
Si no se excede el valor del parámetro PT, el parámetro CA devuelve el estado lógico "0".
El valor del parámetro CMD_HIS se pone al del parámetro CMD.
● Si los parámetros CMD, CMD_HIS y O_FB devuelven el estado lógico "0" y el parámetro
C_FB está a "1", el parámetro CA se pone a "0". El valor del parámetro ET se pone al del
parámetro PT. Si el estado lógico del parámetro C_FB cambia a "0", se activa la alarma en
la siguiente ejecución de la instrucción. El valor del parámetro CMD_HIS se pone al del
parámetro CMD.
● Si los parámetros O_FB y C_FB devuelven simultáneamente el estado lógico "1", los
estados lógicos de ambas salidas de alarma se ponen a "1".
La instrucción "Alarma de tiempo para control discreto" no devuelve información de error.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

CMD

Input

BOOL

I, Q, M, D, L

El estado lógico "0" da la or‐
den de "Cerrar".
El estado lógico "1" da la or‐
den de "Abrir".

O_FB

Input

BOOL

I, Q, M, D, L

Entrada de realimentación al
abrir

C_FB

Input

BOOL

I, Q, M, D, L

Entrada de realimentación al
cerrar

Q

Output

BOOL

I, Q, M, D, L

Indica el estado del paráme‐
tro CMD

OA

Output

BOOL

I, Q, M, D, L

Salida de alarma al abrir

CA

Output

BOOL

I, Q, M, D, L

Salida de alarma al cerrar

ET

Static

DINT

I, Q, M, D, L

Tiempo actual transcurrido;
un ciclo de reloj = 1 ms

PT

Static

DINT

I, Q, M, D, L

Valor de tiempo predetermi‐
nado; un ciclo de reloj = 1 ms

PREV_TIME

Static

DWORD

I, Q, M, D, L

Hora de sistema anterior

CMD_HIS

Static

BOOL

I, Q, M, D, L

Bit de evolución de CMD

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

5802

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo
En el ejemplo siguiente, el parámetro CMD cambia de "0" a "1". Una vez ejecutada la
instrucción, el parámetro Q se pone a "1" y las dos salidas de alarma OA y CA se ponen a "0".
El parámetro CMD_HIS del bloque de datos de instancia se pone a "1" y el parámetro ET se
pone a "0".
Nota
Los parámetros estáticos pueden inicializarse en el bloque de datos.

GRAPH
CALL DCAT, "DCAT_DB"
(CMD := "Tag_Input_CMD"
O_FB := "Tag_Input_O_FB"
C_FB := "Tag_Input_C_FB"
Q => "Tag_Output_Q"
OA => "Tag_Output_OA"
CA => "Tag_Output_CA"
)

Las tablas siguientes muestran el funcionamiento de la instrucción con valores concretos.
Antes de la ejecución
En este ejemplo se utilizan los siguientes valores para los parámetros de entrada y salida:
Parámetro

Operando

Valor

CMD

Tag_Input_CMD

TRUE

O_FB

Tag_Input_O_FB

FALSE

C_FB

Tag_Input_C_FB

FALSE

Q

Tag_Output_Q

FALSE

OA

Tag_Output_OA

FALSE

CA

Tag_Output_CA

FALSE

En el bloque de datos de instancia "DCAT_DB" de la instrucción se guardan los siguientes
valores:
Parámetro

Dirección

Valor

ET

DBD4

L#12

PT

DBD8

L#222

CMD_HIS

DBX16.0

FALSE

Después de la ejecución

Programación del PLC
Manual de programación y manejo, 11/2019

5803

Instrucciones
4.2 Instrucciones
Una vez ejecutada la instrucción, los valores siguientes se escriben en los parámetros de
salida:
Parámetro

Operando

Valor

Q

Tag_Output_Q

TRUE

OA

Tag_Output_OA

FALSE

CA

Tag_Output_CA

FALSE

En el bloque de datos de instancia "DCAT_DB" de la instrucción se guardan los siguientes
valores:
Parámetro

Dirección

Valor

ET

DBD4

L#0

CMD_HIS

DBX16.0

TRUE

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

MCAT: Alarma de tiempo para control del motor
Descripción
La instrucción "Alarma de tiempo para control del motor" acumula el tiempo desde el instante
en el que se activa una de las entradas de comando (abrir o cerrar). El tiempo se acumula hasta
que se excede el tiempo predeterminado o hasta que la entrada de realimentación
correspondiente indica que el dispositivo ha ejecutado la operación solicitada dentro del
tiempo prescrito. Si se excede el tiempo predeterminado antes de recibir respuesta, se dispara
la alarma correspondiente.
Al insertar la instrucción en el programa se abre automáticamente el cuadro de diálogo
"Opciones de llamada". El bloque de datos creado se encuentra en la carpeta "Recursos del
programa" del árbol del proyecto, en "Bloques de programa > Bloques de sistema". Encontrará
más información al respecto en "Consulte también".

Ejecución de la instrucción "Alarma de tiempo para control del motor"
La tabla siguiente muestra las reacciones de la instrucción "Alarma de tiempo para control del
motor" a las distintas condiciones de entrada:
Parámetros de entrada

Parámetros de salida

ET

O_H
IS

C_H
IS

O_C
MD

C_C
MD

S_C
MD

O_F
B

C_F
B

OO

CO

OA

CA

ET

O_H
IS

C_HI Q
S

Estado

X

1

1

X

X

X

X

X

0

0

1

1

PT

0

0

0

Alarma

X

X

X

X

X

X

1

1

0

0

1

1

PT

0

0

0

Alarma

5804

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetros de entrada

Parámetros de salida

X

X

X

X

X

1

X

X

0

0

0

0

X

0

0

1

Stop

X

X

X

1

1

X

X

X

0

0

0

0

X

0

0

1

Stop

X

0

X

1

0

0

X

X

1

0

0

0

0

1

0

1

Empezar a
abrir

<PT

1

0

X

0

0

0

X

1

0

0

0

INC

1

0

1

Abrir

X

1

0

X

0

0

1

0

0

0

0

0

PT

1

0

1

Abierto

>=
PT

1

0

X

0

0

0

X

0

0

1

0

PT

1

0

0

Abrir alarma

X

X

0

0

1

0

X

X

0

1

0

0

0

0

1

1

Empezar a
cerrar

< PT 0

1

0

X

0

X

0

0

1

0

0

INC

0

1

1

Cerrar

X

0

1

0

X

0

0

1

0

0

0

0

PT

0

1

1

Cerrado

>=
PT

0

1

0

X

0

X

0

0

0

0

1

PT

0

1

0

Cerrar alar‐
ma

X

0

0

0

0

0

X

X

0

0

0

0

X

0

0

1

Parado

Leyenda:
INC

Sumar a ET la diferencia de tiempo (en ms) desde la última ejecución del FB

PT

PT se pone al mismo valor que ET

X

No aplicable

< PT

ET < PT

>= PT

ET >= PT

Si los parámetros de entrada O_HIS y C_HIS tienen el estado lógico "1", se ponen inmediatamente al estado lógico "0". En
este caso se aplica la última fila de la tabla mencionada más arriba (X). Puesto que por este motivo no es posible comprobar
si los parámetros de entrada O_HIS y C_HIS tienen el estado lógico "1", en este caso se asigna el siguiente valor a los
parámetros de salida:
OO = FALSE
CO = FALSE
OA = FALSE
CA = FALSE
ET = PT
Q = TRUE

La instrucción "Alarma de tiempo para control del motor" no devuelve información de error.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

O_CMD

Input

BOOL

I, Q, M, D, L

Entrada de la orden "Abrir"

C_CMD

Input

BOOL

I, Q, M, D, L

Entrada de la orden "Cerrar"

S_CMD

Input

BOOL

I, Q, M, D, L

Entrada de la orden "Parar"

O_FB

Input

BOOL

I, Q, M, D, L

Entrada de realimentación al
abrir

C_FB

Input

BOOL

I, Q, M, D, L

Entrada de realimentación al
cerrar

Programación del PLC
Manual de programación y manejo, 11/2019

5805

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OO

Output

BOOL

I, Q, M, D, L

Salida "Abrir"

CO

Output

BOOL

I, Q, M, D, L

Salida "Cerrar"

OA

Output

BOOL

I, Q, M, D, L

Salida de alarma al abrir

CA

Output

BOOL

I, Q, M, D, L

Salida de alarma al cerrar

Q

Output

BOOL

I, Q, M, D, L

El estado lógico "0" indica
una condición de error.

ET

Static

DINT

I, Q, M, D, L

Tiempo actual transcurrido;
un ciclo de reloj = 1 ms

PT

Static

DINT

I, Q, M, D, L

Valor de tiempo predetermi‐
nado; un ciclo de reloj = 1 ms

PREV_TIME

Static

DWORD

I, Q, M, D, L

Hora de sistema anterior

O_HIS

Static

BOOL

I, Q, M, D, L

Bit de evolución "Abrir"

C_HIS

Static

BOOL

I, Q, M, D, L

Bit de evolución "Cerrar"

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
Nota
Los parámetros estáticos pueden inicializarse en el bloque de datos.

GRAPH
CALL MCAT, "MCAT_DB"
(O_CMD := "Tag_Input_O_CMD"
C_CMD := "Tag_Input_C_CMD"
S_CMD := "Tag_Input_S_CMD"
O_FB := "Tag_Input_O_FB"
C_FB := "Tag_Input_C_FB"
OO => "Tag_OutputOpen"
CO => "Tag_OutputClosed"
OA => "Tag_Output_OA"
CA => "Tag_Output_CA"
Q => "Tag_Output_Q"
)

Las tablas siguientes muestran el funcionamiento de la instrucción con valores concretos.
Antes de la ejecución

5806

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
En este ejemplo se utilizan los siguientes valores para los parámetros de entrada y salida:
Parámetro

Operando

Valor

O_CMD

Tag_Input_O_CMD

TRUE

C_CMD

Tag_Input_C_CMD

FALSE

S_CMD

Tag_Input_S_CMD

FALSE

O_FB

Tag_Input_O_FB

FALSE

C_FB

Tag_Input_C_FB

FALSE

OO

Tag_OutputOpen

FALSE

CO

Tag_OutputClosed

FALSE

OA

Tag_Output_OA

FALSE

CA

Tag_Output_CA

FALSE

Q

Tag_Output_Q

FALSE

En el bloque de datos de instancia "MCAT_DB" de la instrucción se guardan los siguientes
valores:
Parámetro

Dirección

Valor

ET

DBD4

L#2

PT

DBD8

L#22

O_HIS

DBX16.0

TRUE

C_HIS

DBX16.1

FALSE

Después de la ejecución
Una vez ejecutada la instrucción, los valores siguientes se escriben en los parámetros de
salida:
Parámetro

Operando

Valor

OO

Tag_OutputOpen

TRUE

CO

Tag_OutputClosed

FALSE

OA

Tag_Output_OA

FALSE

CA

Tag_Output_CA

FALSE

Q

Tag_Output_Q

TRUE

En el bloque de datos de instancia "MCAT_DB" de la instrucción se guardan los siguientes
valores:
Parámetro

Dirección

Valor

ET

DBD4

L#0

O_HIS

DBX16.0

TRUE

CMD_HIS

DBX16.1

FALSE

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Programación del PLC
Manual de programación y manejo, 11/2019

5807

Instrucciones
4.2 Instrucciones

IMC: Comparar bits de entrada con bits de una máscara
Descripción
La instrucción "Comparar bits de entrada con bits de una máscara" compara el estado lógico
de hasta 16 bits de entrada programados (IN_BIT0 a IN_BIT15) con el bit correspondiente de
una máscara. Es posible programar como máximo 16 pasos con máscaras. El valor del
parámetro IN_BIT0 se compara con el valor de la máscara CMP_VAL[x,0], siendo "x" el
número del paso. El número del paso de la máscara utilizada para la comparación se define en
el parámetro CMP_STEP. De esta misma manera se comparan todos los valores
programados. Los bits de entrada no programados o los bits no programados de la máscara
tienen el estado lógico predeterminado FALSE.
Si se encuentra una coincidencia al realizar la comparación, el estado lógico del parámetro
OUT se pone a "1". De lo contrario, el parámetro OUT se pone a "0".
Si el valor del parámetro CMP_STEP es mayor que 15, no se ejecuta la instrucción. En el
parámetro ERR_CODE se emite un mensaje de error.
Al insertar la instrucción en el programa se abre automáticamente el cuadro de diálogo
"Opciones de llamada". El bloque de datos creado se encuentra en la carpeta "Recursos del
programa" del árbol del proyecto, en "Bloques de programa > Bloques de sistema". Encontrará
más información al respecto en "Consulte también".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:

5808

Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

IN_BIT0

Input

BOOL

I, Q, M, D, L

El bit de entrada 0 se compara
con el bit 0 de la máscara.

IN_BIT1

Input

BOOL

I, Q, M, D, L

El bit de entrada 1 se compara
con el bit 1 de la máscara.

IN_BIT2

Input

BOOL

I, Q, M, D, L

El bit de entrada 2 se compara
con el bit 2 de la máscara.

IN_BIT3

Input

BOOL

I, Q, M, D, L

El bit de entrada 3 se compara
con el bit 3 de la máscara.

IN_BIT4

Input

BOOL

I, Q, M, D, L

El bit de entrada 4 se compara
con el bit 4 de la máscara.

IN_BIT5

Input

BOOL

I, Q, M, D, L

El bit de entrada 5 se compara
con el bit 5 de la máscara.

IN_BIT6

Input

BOOL

I, Q, M, D, L

El bit de entrada 6 se compara
con el bit 6 de la máscara.

IN_BIT7

Input

BOOL

I, Q, M, D, L

El bit de entrada 7 se compara
con el bit 7 de la máscara.

IN_BIT8

Input

BOOL

I, Q, M, D, L

El bit de entrada 8 se compara
con el bit 8 de la máscara.

IN_BIT9

Input

BOOL

I, Q, M, D, L

El bit de entrada 9 se compara
con el bit 9 de la máscara.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

IN_BIT10

Input

BOOL

I, Q, M, D, L

El bit de entrada 10 se compa‐
ra con el bit 10 de la máscara.

IN_BIT11

Input

BOOL

I, Q, M, D, L

El bit de entrada 11 se compa‐
ra con el bit 11 de la máscara.

IN_BIT12

Input

BOOL

I, Q, M, D, L

El bit de entrada 12 se compa‐
ra con el bit 12 de la máscara.

IN_BIT13

Input

BOOL

I, Q, M, D, L

El bit de entrada 13 se compa‐
ra con el bit 13 de la máscara.

IN_BIT14

Input

BOOL

I, Q, M, D, L

El bit de entrada 14 se compa‐
ra con el bit 14 de la máscara.

IN_BIT15

Input

BOOL

I, Q, M, D, L

El bit de entrada 15 se compa‐
ra con el bit 15 de la máscara.

CMP_STEP

Input

BYTE

I, Q, M, D, L, P o
constante

Número de paso de la másca‐
ra con la que se compara.

OUT

Output

BOOL

I, Q, M, D, L

El estado lógico "1" indica que
se ha encontrado una coinci‐
dencia.
El estado lógico "0" indica que
no se ha encontrado ninguna
coincidencia.

ERR_CODE

Output

WORD

I, Q, M, D, L, P

Información de error

CMP_VAL

Static

ARRAY OF
BOOL

I, Q, M, D, L

Máscaras de comparación [0
a 15, 0 a 15]: El primer número
del índice es el número de la
etapa y, el segundo, el núme‐
ro de bit de la máscara.

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Parámetro ERR_CODE
La tabla siguiente muestra el significado de los valores del parámetro ERR_CODE:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

000A

El valor del parámetro CMP_STEP es mayor que 15.

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Programación del PLC
Manual de programación y manejo, 11/2019

5809

Instrucciones
4.2 Instrucciones

SMC: Barrido de matriz
Descripción
La instrucción "Barrido de matriz" compara el estado lógico de hasta 16 bits de entrada
programados (IN_BIT0 a IN_BIT15) con los bits correspondientes de las máscaras de
comparación de cada paso. La ejecución empieza por el paso 1 y continúa hasta el último paso
programado (LAST) o hasta que se encuentre una correspondencia. El bit de entrada del
parámetro IN_BIT0 se compara con el valor de la máscara CMP_VAL[x,0], siendo "x" el
número de paso. De esta misma manera se comparan todos los valores programados. Si se
encuentra una correspondencia, el estado lógico del parámetro OUT se pone a "1" y el número
de paso se escribe con la máscara correspondiente en el parámetro OUT_STEP. Los bits de
entrada no programados o los bits no programados de la máscara tienen el estado lógico
predeterminado FALSE. Si varios pasos tienen una máscara equivalente, se indica solo la
primera correspondencia encontrada en el parámetro OUT_STEP. Si no se encuentra ninguna
correspondencia, el estado lógico del parámetro OUT se pone a "0". En este caso, el valor del
parámetro OUT_STEP excede en "1" el valor del parámetro LAST.
Al insertar la instrucción en el programa se abre automáticamente el cuadro de diálogo
"Opciones de llamada". El bloque de datos creado se encuentra en la carpeta "Recursos del
programa" del árbol del proyecto, en "Bloques de programa > Bloques de sistema". Encontrará
más información al respecto en "Consulte también".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:

5810

Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

IN_BIT0

Input

BOOL

I, Q, M, D, L

El bit de entrada 0 se compara
con el bit 0 de la máscara.

IN_BIT1

Input

BOOL

I, Q, M, D, L

El bit de entrada 1 se compara
con el bit 1 de la máscara.

IN_BIT2

Input

BOOL

I, Q, M, D, L

El bit de entrada 2 se compara
con el bit 2 de la máscara.

IN_BIT3

Input

BOOL

I, Q, M, D, L

El bit de entrada 3 se compara
con el bit 3 de la máscara.

IN_BIT4

Input

BOOL

I, Q, M, D, L

El bit de entrada 4 se compara
con el bit 4 de la máscara.

IN_BIT5

Input

BOOL

I, Q, M, D, L

El bit de entrada 5 se compara
con el bit 5 de la máscara.

IN_BIT6

Input

BOOL

I, Q, M, D, L

El bit de entrada 6 se compara
con el bit 6 de la máscara.

IN_BIT7

Input

BOOL

I, Q, M, D, L

El bit de entrada 7 se compara
con el bit 7 de la máscara.

IN_BIT8

Input

BOOL

I, Q, M, D, L

El bit de entrada 8 se compara
con el bit 8 de la máscara.

IN_BIT9

Input

BOOL

I, Q, M, D, L

El bit de entrada 9 se compara
con el bit 9 de la máscara.

IN_BIT10

Input

BOOL

I, Q, M, D, L

El bit de entrada 10 se compa‐
ra con el bit 10 de la máscara.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

IN_BIT11

Input

BOOL

I, Q, M, D, L

El bit de entrada 11 se compa‐
ra con el bit 11 de la máscara.

IN_BIT12

Input

BOOL

I, Q, M, D, L

El bit de entrada 12 se compa‐
ra con el bit 12 de la máscara.

IN_BIT13

Input

BOOL

I, Q, M, D, L

El bit de entrada 13 se compa‐
ra con el bit 13 de la máscara.

IN_BIT14

Input

BOOL

I, Q, M, D, L

El bit de entrada 14 se compa‐
ra con el bit 14 de la máscara.

IN_BIT15

Input

BOOL

I, Q, M, D, L

El bit de entrada 15 se compa‐
ra con el bit 15 de la máscara.

OUT

Output

BOOL

I, Q, M, D, L

El estado lógico "1" indica que
se ha encontrado una corres‐
pondencia.
El estado lógico "0" indica que
no se ha encontrado ninguna
correspondencia.

ERR_CODE

Output

WORD

I, Q, M, D, L, P

Información de error

OUT_STEP

Output

BYTE

I, Q, M, D, L, P

Contiene el número de paso
con la máscara correspon‐
diente o el número de paso
que excede en "1" el valor del
parámetro LAST, si no se ha
encontrado ninguna corres‐
pondencia.

LAST

Static

BYTE

I, Q, M, D, L, P

Indica el número del último pa‐
so en que se tiene que buscar
una máscara correspondiente.

CMP_VAL

Static

ARRAY of
WORD

I, Q, M, D, L

Máscaras de comparación [0
a 15, 0 a 15]: El primer número
del índice es el número de la
etapa y, el segundo, el núme‐
ro de bit de la máscara.

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Parámetro ERR_CODE
La tabla siguiente muestra el significado de los valores del parámetro ERR_CODE:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

000E

El valor del parámetro LAST es mayor que 15.

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Programación del PLC
Manual de programación y manejo, 11/2019

5811

Instrucciones
4.2 Instrucciones

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

LEAD_LAG: Algoritmo Lead y Lag
Descripción
La instrucción "Algoritmo Lead y Lag" procesa señales con una variable analógica. El valor de
la ganancia del parámetro GAIN debe ser mayor que cero. El resultado de la instrucción
"Algoritmo Lead y Lag" se calcula con la siguiente ecuación:
287

/*B7,0(
/'B7,0(6$03/(B7
/'B7,0(
,1*$,1
35(9B287*$,1
/*B7,0(6$03/(B7
/*B7,0(6$03/(B7
/*B7,0(6$03/(B7

35(9B,1

La instrucción "Algoritmo Lead y Lag" sólo devuelve resultados relevantes cuando se ejecuta
en ciclos de programa fijos. Deben indicarse las mismas unidades en los parámetros
LD_TIME, LG_TIME y SAMPLE_T. Si LG_TIME > 4 + SAMPLE_T, la instrucción se aproxima
a la siguiente función:
OUT = GAIN * ((1 + LD_TIME * s) / (1 + LG_TIME * s)) * IN
Si el valor del parámetro GAIN es menor o igual a cero, no se realiza el cálculo y el parámetro
ERR_CODE devuelve una información de error.
La instrucción "Algoritmo Lead y Lag" puede utilizarse junto con bucles para la compensación
en el control anticipativo. La instrucción comprende dos operaciones. La operación "Lead"
desplaza la fase de la salida OUT, anticipándose la salida a la entrada. En cambio, la operación
"Lag" desplaza la salida, de manera que la salida sigue a la entrada. Puesto que la operación
"Lag" equivale a una integración, puede utilizarse para suprimir perturbaciones o como filtro
pasa bajo. La operación "Lead" equivale a una acción diferencial, por lo que puede utilizarse
como un filtro de paso alto. La combinación de ambas operaciones (Lead y Lag) hace que la
fase de salida siga a la entrada a bajas frecuencias y se le anticipe a altas frecuencias. Por este
motivo, la instrucción "Algoritmo Lead y Lag" puede utilizarse como si fuera un filtro de paso de
banda.
Al insertar la instrucción en el programa se abre automáticamente el cuadro de diálogo
"Opciones de llamada". El bloque de datos creado se encuentra en la carpeta "Recursos del
programa" del árbol del proyecto, en "Bloques de programa > Bloques de sistema". Encontrará
más información al respecto en "Consulte también".

5812

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

REAL

I, Q, M, D, L, P o
constante

Valor de entrada del tiempo
de muestreo actual (tiempo
de ciclo) que se procesa.

SAMPLE_T

Input

INT

I, Q, M, D, L, P o
constante

Tiempo de muestreo

OUT

Output

REAL

I, Q, M, D, L, P

Resultado de la instrucción

ERR_CODE

Output

WORD

I, Q, M, D, L, P

Información de error

LD_TIME

Static

REAL

I, Q, M, D, L, P o
constante

Tiempo de anticipación en la
misma unidad que el tiempo
de muestreo

LG_TIME

Static

REAL

I, Q, M, D, L, P o
constante

Tiempo de seguimiento en la
misma unidad que el tiempo
de muestreo.

GAIN

Static

REAL

I, Q, M, D, L, P o
constante

Ganancia en % / % (relación
del cambio en la salida con
respecto al cambio en la en‐
trada como estado constan‐
te).

PREV_IN

Static

REAL

I, Q, M, D, L, P o
constante

Entrada anterior

PREV_OUT

Static

REAL

I, Q, M, D, L, P o
constante

Salida anterior

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Parámetro ERR_CODE
La tabla siguiente muestra el significado de los valores del parámetro ERR_CODE:
Código de
error*
(W#16#...)

Explicación

0000

Ningún error

0009

El valor del parámetro GAIN es menor o igual a cero.

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
Nota
Los parámetros estáticos pueden inicializarse en el bloque de datos.

Programación del PLC
Manual de programación y manejo, 11/2019

5813

Instrucciones
4.2 Instrucciones

GRAPH
CALL LEAD_LAG, "LEAD_LAG_DB"
(IN := "Tag_Input"
SAMPLE_T := "Tag_Input_SAMPLE_T"
OUT => "Tag_Output_Result"
ERR_CODE => "Tag_ErrorCode"
)

Las tablas siguientes muestran el funcionamiento de la instrucción con valores concretos.
Antes de la ejecución
En este ejemplo se utilizan los siguientes valores para los parámetros de entrada:
Parámetro

Operando

Valor

IN

Tag_Input

2.0

SAMPLE_T

Tag_Input_SAMPLE_T

10

En el bloque de datos de instancia "LEAD_LAG_DB" de la instrucción se guardan los
siguientes valores:
Parámetro

Dirección

Valor

LD_TIME

DBD12

2.0

LG_TIME

DBD16

2.0

GAIN

DBD20

1.0

PREV_IN

DBD24

6.0

PREV_OUT

DBD28

6.0

Después de la ejecución
Una vez ejecutada la instrucción, los valores siguientes se escriben en los parámetros de
salida:
Parámetro

Operando

Valor

OUT

Tag_Output_Result

2.0

En el bloque de datos de instancia "LEAD_LAD_DB" de la instrucción se guardan los
siguientes valores:
Parámetro

Operando

Valor

PREV_IN

DBD24

2.0

PREV_OUT

DBD28

2.0

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

5814

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

TONR_X: Acumulador de tiempo
Descripción
La instrucción "Acumulador de tiempo" acumula valores de tiempo dentro de un periodo
definido con ayuda de la entrada PV. La instrucción se ejecuta cuando el estado lógico de la
entrada de arranque TMR_EN cambia de "0" a "1". Simultáneamente, el temporizador cuenta
el tiempo programado en la entrada PV. Mientras se ejecuta la instrucción, añade el valor de
tiempo de la entrada DELTA_T al valor de tiempo de InOut ET.
Además, deben cumplirse las siguientes condiciones:
● La entrada de arranque TMR_EN devuelve el estado lógico "1".
● El valor de tiempo de InOut ET es menor que el valor de tiempo del parámetro PV.
● La entrada RESET devuelve el estado lógico "0".
La instrucción se interrumpe cuando el estado lógico de la entrada de arranque TMR_EN
cambia de "1" a "0". En cuanto el estado lógico cambia de nuevo a "1", la instrucción sigue
ejecutándose.
La instrucción finaliza cuando el valor de tiempo de InOut ET alcanza el valor de tiempo de la
entrada PV. Entonces, la salida Q devuelve el estado lógico "1".
Mientras la salida Q devuelva el estado lógico "1", el valor de tiempo de InOut ET no se
modificará. El valor de tiempo y la salida Q vuelven a ponerse a "0" solo cuando la entrada
RESET se pone al estado lógico "1".
Puesto que la instrucción "Acumulador de tiempo" utiliza el tiempo de ciclo (DELTA_T) del
último ciclo del bloque de organización (OB), la instrucción solo puede llamarse en bloques de
organización cíclicos.
Nota
El tiempo de ciclo del bloque de organización debe desplazarse desde la información de
arranque a la variable global del parámetro DELTA_T.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

TMR_EN (Ti‐
mer Enable)

Input

BOOL

I, Q, M, D, L

RESET

Input

BOOL

I, Q, M, D, L

Entrada de reset

PV (Preset
Value)

Input

DINT

I, Q, M, D, L, P o
constante

Tiempo máximo de lectura
del tiempo

DELTA_T

Input

INT

I, Q, M, D, L o
constante

Tiempo de ciclo del bloque
de organización del ciclo an‐
terior

Entrada de arranque
Arranca la instrucción y la
temporización predetermina‐
da en la entrada PV

Programación del PLC
Manual de programación y manejo, 11/2019

5815

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

Q

Output

BOOL

I, Q, M, D, L

Salida que se establece al al‐
canzar el valor de tiempo pre‐
determinado

ET (Elapsed
Time)

InOut

DINT

I, Q, M, D, L

Valor de tiempo acumulado
(Valor de tiempo transcurrido
actualmente + valor de tiem‐
po de la entrada DELTA_T)

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Cronograma de impulsos
La figura siguiente muestra el cronograma de impulsos de la instrucción "Acumulador de
tiempo":
705B(1

5(6(7

4

39

(7

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL TONR_X
(TMR_EN := "Tag_Start"
RESET := "Tag_Reset"
PV := 10
DELTA_T := 2

5816

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
GRAPH
Q => "Tag_Output"
ET := "Tag_Elapsed_Time"
)

En cada cambio del estado lógico de "0" a "1" en la entrada TMR_EN, el tiempo de ciclo "2" de
la entrada DELTA_T se añade al valor de tiempo actual de InOut ET, hasta que se alcanza el
valor de tiempo máximo "10" de la entrada PV.

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

WSR: Guardar datos en el registro de desplazamiento
Descripción
La instrucción "Guardar datos en el registro de desplazamiento" permite escribir datos en un
registro de desplazamiento desde el origen indicado. Todo elemento del registro se desplaza
a la siguiente dirección. Los datos contenidos en la última dirección del registro de
desplazamiento se pierden tras la operación de desplazamiento.
Cada vez que la instrucción se ejecuta con el valor "0" en el parámetro RESET, se leen datos
nuevos del origen (S_DATA) y se desplazan a la dirección inicial (START) del registro de
desplazamiento. El parámetro LENGTH indica el número de elementos que deben
desplazarse. El tipo de datos de los elementos se define en el parámetro E_TYPE. Si se indica
un tipo de datos no admisible en el parámetro E_TYPE, no se procesa la instrucción.
Si el parámetro RESET está a "1" al ejecutarse la instrucción, se borra el registro. El parámetro
Q se pone al estado lógico "1" si el registro de desplazamiento está ocupado con ceros o si se
borra.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RESET

Input

BOOL

I, Q, M, D, L

Entrada de reset

S_DATA

Input

POINTER

I, Q, M, D

Apunta al elemento de origen
que se desplaza a la direc‐
ción inicial (START).
En el direccionamiento indi‐
recto por registro interárea,
el puntero debe indicarse en
formato de palabra doble.

Programación del PLC
Manual de programación y manejo, 11/2019

5817

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

START

Input

POINTER

I, Q, M, D

Apunta a la dirección inicial
del registro.
En el direccionamiento indi‐
recto por registro interárea,
el puntero debe indicarse en
formato de palabra doble.

LEN

Input

WORD

I, Q, M, D, L, P

Número de elementos que
deben desplazarse.

E_TYPE

Input

BYTE

I, Q, M, D, L, P

Indica el tipo de datos de los
elementos que deben despla‐
zarse. Los siguientes tipos
de datos son admisibles:
● W#16#04 = WORD
● B#16#05 = INT
● B#16#06 = DWORD
● B#16#07 = DINT
● B#16#08 = REAL

Q

Output

BOOL

Q, M, D, L,

Indica "0" si el parámetro RE‐
SET está activado (1) o si to‐
dos los elementos que deben
desplazarse tienen el valor
"0".

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
En el ejemplo siguiente se desplazan cuatro elementos del tipo de datos WORD a partir de la
dirección indicada en el parámetro START. Una vez desplazado el primer elemento del
registro a la siguiente dirección, la primera dirección se ocupará con los datos a los que señala
el puntero en el parámetro S_DATA. El valor del último elemento del registro se pierde
entonces.
GRAPH
CALL WSR
(RESET := "Tag_Input_Reset"
S_DATA := "Tag_Input_DataSource"
START := "Tag_Input_StartAddress"
LEN := "Tag_Input_Length"
E_TYPE := "Tag_Input_ElementType"
Q => "Tag_Output_Q"
)

Las tablas siguientes muestran el funcionamiento de la instrucción con valores concretos.
Antes de la ejecución

5818

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
En este ejemplo se utilizan los siguientes valores para los parámetros de entrada y salida:
Parámetro

Operando

Valor

RESET

Tag_Input_Reset

0

S_DATA

Tag_Input_DataSource

P#DB2.DBX6.0
DW0 = W#16#1111
DW2 = W#16#2222
DW4 = W#16#3333
DW6 = W#16#4444

START

Tag_Input_StartAddress

P#DB1.DBX0.0

LEN

Tag_Input_Length

W#16#04

E_TYPE

Tag_Input_ElementType

B#16#04

Q

Tag_Output_Q

1

DW6 = W#16#1234

Después de la ejecución
Una vez ejecutada la instrucción, los valores siguientes se escriben en los parámetros de
salida:
Parámetro

Operando

Valor

RESET

Tag_Input_Reset

0

S_DATA

Tag_Input_DataSource

P#DB2.DBX6.0
DW0 = W#16#1234
DW2 = W#16#1111
DW4 = W#16#2222
DW6 = W#16#3333

START

Tag_Input_StartAddress

P#DB1.DBX0.0
DW6 = W#16#1234

LEN

Tag_Input_Length

W#16#04

E_TYPE

Tag_Input_ElementType

B#16#04

Q

Tag_Output_Q

1

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Programación del PLC
Manual de programación y manejo, 11/2019

5819

Instrucciones
4.2 Instrucciones

SHRB: Desplazar bit al registro de desplazamiento
Descripción
La instrucción "Desplazar bit al registro de desplazamiento" permite escribir un bit en un
registro de desplazamiento desde el origen indicado (DATA). Cada vez que la instrucción se
ejecuta con el valor "0" en el parámetro RESET, se leen datos nuevos del origen y se
desplazan a la dirección inicial (S_BIT) del registro de desplazamiento. Los restantes bits se
desplazan una posición. El bit de la última dirección (S_BIT + N) se pierde tras el
desplazamiento. Si el parámetro RESET está a "1" mientras se ejecuta la instrucción, las
direcciones del registro de desplazamiento se ponen a "0" y no se desplazan.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DATA

Input

BOOL

I, Q, M, D, L

Bit de origen

RESET

Input

BOOL

I, Q, M, D, L

Entrada de reset

S_BIT

Input

POINTER

I, Q, M, D

Apunta al primer bit del regis‐
tro de desplazamiento.
En el direccionamiento indi‐
recto por registro interárea,
el puntero debe indicarse en
formato de palabra doble.

N

Input

WORD

I, Q, M, D, L, P

Número de bits que deben
desplazarse.

Ejemplo
En el ejemplo siguiente, el parámetro N se pone al valor 14 ("E" en notación hexadecimal), con
lo que 14 bits se desplazan a partir de la dirección indicada en el parámetro S_BIT. Una vez
desplazados los bits, la primera dirección se ocupa con los datos del origen del parámetro
DATA. El último valor de bit se pierde.
GRAPH
CALL SHRB
(DATA := "Tag_Input_Data"
RESET := "Tag_Input_Reset"
S_BIT := "Tag_Input_BitSource"
N := "Tag_Input_Number"
)

Las tablas siguientes muestran el funcionamiento de la instrucción con valores concretos.

5820

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Antes de la ejecución
En este ejemplo se utilizan los siguientes valores para los parámetros de entrada y salida:
Parámetro

Operando

Valor

RESET

Tag_Input_Reset

0

DATA

Tag_Input_Data

0

S_BIT

Tag_Input_BitSource

P#DB1.DBX1.4

N

Tag_Input_Number

B#16#0E

Antes de ejecutarse la instrucción, los siguientes estados lógicos están almacenados en los 14
bits del registro:


























6B%,7







































Después de la ejecución
Una vez ejecutada la instrucción, los siguientes estados lógicos se almacenan en los 14 bits
del registro:


























6B%,7







































Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

Programación del PLC
Manual de programación y manejo, 11/2019

5821

Instrucciones
4.2 Instrucciones

SEG: Generar patrón de bits para el display de 7 segmentos
Descripción
La instrucción "Generar patrón de bits para el display de 7 segmentos" permite convertir cada
una de las cuatro cifras hexadecimales de la palabra de origen indicada (IN) en un patrón de
bits equivalente para un display de 7 segmentos. El resultado de la instrucción se devuelve en
la palabra doble del parámetro OUT.
Entre las cifras hexadecimales y la ocupación de los 7 segmentos (a, b, c, d, e, f, g) existe la
siguiente relación:
Cifra de en‐
trada

Ocupación de los
segmentos

Display

(binaria)

‑gfedcba

0000

00111111

0

0001

00000110

1

0010

01011011

2

0011

01001111

3

0100

01100110

4

0101

01101101

5

0110

01111101

6

0111

00000111

7

1000

01111111

8

1001

01100111

9

1010

01110111

A

1011

01111100

B

1100

00111001

C

1101

01011110

D

1110

01111001

E

1111

01110001

F

Display de siete segmentos

(hexadecimal)
D
I

E
J

H

F
G

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

WORD

I, Q, M, D, L, P o
constante

Palabra de origen con cuatro
cifras hexadecimales

OUT

Output

DWORD

I, Q, M, D, L, P

Patrón de bits para el display
de 7 segmentos

Encontrará más información sobre los tipos de datos válidos en "Consulte también".

5822

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL SEG
(IN := "Tag_Input"
OUT => "Tag_Output"
)

La tabla siguiente muestra el funcionamiento de la instrucción con valores de operandos
concretos:
Parámetro

Operando

Valor

Hexadecimal

Binario

IN

Tag_Input

W#16#1234

0001 0010 0011 0100

OUT

Tag_Output

DW#16065B4F66

000 00110 0101 1011 0100
1111 0110 0110
Visualización: 1234

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

BCDCPL: Generar complemento a diez
Descripción
La instrucción "Generar complemento a diez" crea el complemento a diez de un número BCD
de siete dígitos que se indica en el parámetro IN. La instrucción realiza el cálculo con la
siguiente fórmula matemática:
10000000 (como BCD)
– Valor BCD de 7 dígitos
---------------------------------------Complemento a diez (como BCD)

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

DWORD

I, Q, M, D, L, P o
constante

Número BCD de 7 dígitos

ERR_CODE

Output

DWORD

I, Q, M, D, L, P

Resultado de la instrucción

Programación del PLC
Manual de programación y manejo, 11/2019

5823

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Consulte también".

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL BCDCPL
(IN := "Tag_Input"
ERR_CODE => "Tag_Output"
)

La tabla siguiente muestra el funcionamiento de la instrucción con valores concretos:
Parámetro

Operando

Valor*

IN

Tag_Input

DW#16#01234567

ERR_CODE

Tag_Output

DW#16#08765433

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de la palabra de estado (Página 184)
Principios básicos de GRAPH (Página 8191)

BITSUM: Contar número de bits activados
Descripción
La instrucción "Contar número de bits activados" cuenta el número de bits de un operando que
están puestos al estado lógico "1". El operando cuyos bits se cuentan se especifica en el
parámetro IN. El resultado de la instrucción se devuelve en el parámetro RET_VAL.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción:

5824

Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

DWORD

I, Q, M, D, L, P o
constante

Operando cuyos bits activa‐
dos se cuentan

RET_VAL

Output

INT

I, Q, M, D, L, P

Número de bits activados

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo
El siguiente ejemplo muestra el funcionamiento de la instrucción:
GRAPH
CALL BITSUM
(IN := "Tag_Input"
RET_VAL => "Tag_Output"
)

La tabla siguiente muestra el funcionamiento de la instrucción con valores concretos:
Parámetro

Operando

Valor*

IN

Tag_Input

DW#16#12345678

RET_VAL

Tag_Output

W#16#000D (13 bits)

*En el editor de programas, los códigos de error se pueden representar como valores enteros o hexa‐
decimales. Encontrará más información sobre el cambio de los formatos de visualización en "Consulte
también".

Consulte también
Vista general de los tipos de datos válidos (Página 241)
Principios básicos de GRAPH (Página 8191)

Instrucciones KOP en GRAPH
Instrucciones KOP generales en GRAPH
Descripción
Para la programación en GRAPH se dispone de diferentes instrucciones KOP.
La tabla siguiente ofrece una vista general de las instrucciones y su disponibilidad:
Instrucciones KOP

Instrucción
permanente

Transición/
Supervisión/
Interlock

General
Insertar segmento

x

Cuadro vacío

x

x

Abrir rama

x

x

Cerrar rama

x

x

---| |---: Contacto normalmente abierto (Página 4817)

x

x

---| |---: Contacto normalmente cerrado (Página 4818)

x

x

--| NOT |--: Invertir RLO (Página 4819)

x

x

---( )---: Asignación (Página 4820)

x

Operaciones lógicas con bits

Programación del PLC
Manual de programación y manejo, 11/2019

5825

Instrucciones
4.2 Instrucciones
Instrucciones KOP

Instrucción
permanente

---( R )---: Desactivar salida (Página 4821)

x

---( S )---: Activar salida (Página 4822)

x

SR: Flipflop de activación/desactivación (Página 4823)

x

RS: Flipflop de desactivación/activación (Página 4824)

x

--|P|--: Consultar flanco de señal ascendente de un operando (Página 4825)

x

--|N|--: Consultar flanco de señal descendente de un operando (Página 4827)

x

P_TRIG: Consultar flanco de señal ascendente del RLO (Página 4828)

x

N_TRIG: Consultar flanco de señal descendente del RLO (Página 4829)

x

Transición/
Supervisión/
Interlock

Temporizadores
Temporizadores CEI
TP: Impulso (Página 4831)

x

TON: Retardo al conectar (Página 4833)

x

TOF: Retardo al desconectar (Página 4835)

x

Temporizadores SIMATIC
S_PULSE: Parametrizar y arrancar temporizador como impulso (Página 4837)

x

S_PEXT: Parametrizar y arrancar temporizador como impulso prolongado (Página 4840)

x

S_ODT: Parametrizar y arrancar temporizador como retardo a la conexión (Página 4843)

x

S_ODTS: Parametrizar y arrancar temporizador como retardo a la conexión con memoria
(Página 4846)

x

S_OFFDT: Parametrizar y arrancar temporizador como retardo a la desconexión (Pági‐
na 4848)

x

Contadores
Contadores CEI
CTU: Contador ascendente (Página 4861)

x

CTD: Contador descendente (Página 4863)

x

CTUD: Contador ascendente - descendente (Página 4865)

x

Contadores SIMATIC
S_CU : Parametrizar e incrementar contador (Página 4868)

x

S_CD : Parametrizar y decrementar contador (Página 4870)

x

S_CUD : Parametrizar e incrementar/decrementar contador (Página 4872)

x

Comparación
CMP ==: Igual (Página 4877)

x

x

CMP <>: Diferente (Página 4878)

x

x

CMP >=: Mayor o igual (Página 4880)

x

x

CMP <=: Menor o igual (Página 4881)

x

x

CMP >: Mayor (Página 4882)

x

x

CMP <: Menor (Página 4883)

x

x

CMP>T: Superior al tiempo de activación de la etapa (Página 5828)

x

CMP>U: Superior al tiempo de activación ininterrumpido de la etapa (Página 5829)

x

Funciones matemáticas
ADD: Sumar (Página 4885)

x

SUB: Restar (Página 4886)

x

5826

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Instrucciones KOP

Instrucción
permanente

MUL: Multiplicar (Página 4887)

x

DIV: Dividir (Página 4889)

x

MOD: Obtener resto de división (Página 4890)

x

NEG: Generar complemento a dos (Página 4891)

x

ABS: Calcular valor absoluto (Página 4892)

x

MIN: Determinar mínimo (Página 4893)

x

MAX: Determinar máximo (Página 4895)

x

LIMIT: Ajustar valor límite (Página 4897)

x

SQR: Calcular cuadrado (Página 4899)

x

SQRT: Calcular raíz cuadrada (Página 4900)

x

LN: Calcular logaritmo natural (Página 4901)

x

EXP: Calcular valor exponencial (Página 4902)

x

SIN: Calcular valor de seno (Página 4904)

x

COS: Calcular valor de coseno (Página 4905)

x

TAN: Calcular valor de tangente (Página 4906)

x

ASIN: Calcular valor de arcoseno (Página 4907)

x

ACOS: Calcular valor de arcocoseno (Página 4909)

x

ATAN: Calcular valor de arcotangente (Página 5597)

x

Transición/
Supervisión/
Interlock

Transferencia
MOVE: Copiar valor (Página 4912)

x

BLKMOV: Copiar área (Página 4914)

x

UBLKMOV: Copiar área sin interrupciones (Página 4917)

x

FILL: Rellenar área (Página 4920)

x

Conversión
CONVERT: Convertir valor (Página 4924)

x

ROUND: Redondear número (Página 4925)

x

CEIL: Redondear número en coma flotante al siguiente entero superior (Página 4926)

x

FLOOR: Redondear número en coma flotante al siguiente entero inferior (Página 4928)

x

TRUNC: Truncar a entero (Página 4929)

x

SCALE: Escalar (Página 4930)

x

UNSCALE: Desescalar (Página 4933)

x

Control del programa
Control en runtime
RE_TRIGR: Reiniciar tiempo de vigilancia del ciclo (Página 4942)

x

STP: Finalizar programa (Página 4942)

x

WAIT: Programar retardo (Página 4943)

x

PROTECT: Cambiar nivel de protección (Página 4944)

x

COMPRESS: Comprimir memoria CPU (S7-400) (Página 4940)

x

CiR: Controlar proceso CiR (S7-400) (Página 4946)

x

Operaciones lógicas con palabras
AND: Operación lógica Y (Página 4948)

Programación del PLC
Manual de programación y manejo, 11/2019

x

5827

Instrucciones
4.2 Instrucciones
Instrucciones KOP

Instrucción
permanente

OR: Operación lógica O (Página 4950)

x

XOR: Operación lógica O-exclusiva (Página 4951)

x

INV: Complemento a 1 (Página 4953)

x

DECO: Descodificar (Página 4954)

x

ENCO: Codificar (Página 4955)

x

SEL: Seleccionar (Página 4956)

x

Transición/
Supervisión/
Interlock

Desplazamiento y rotación
SHR: Desplazar a la derecha (Página 4958)

x

SHL: Desplazar a la izquierda (Página 4960)

x

ROR: Rotar a la derecha (Página 4962)

x

ROL: Rotar a la izquierda (Página 4963)

x

Otras instrucciones
SET: Activar área por bits (Página 4979)

x

SETP: Activar mapa de bits en el área de periferia (S7-400) (Página 4980)

x

SETI: Activar área por bytes (Página 4983)

x

RESET: Desactivar área por bits (Página 4985)

x

RESETP: Desactivar mapa de bits en el área de periferia (S7-400) (Página 4986)

x

RESETI: Desactivar área por bytes (Página 4988)

x

REPL_VAL: Introducir valor sustitutivo (Página 4990)

x

DRUM: Materializar circuito secuencial sucesivo (Página 4991)

x

DRUM_X: Materializar circuito secuencial sucesivo (Página 4997)

x

DCAT: Alarma de tiempo para control discreto (Página 5005)

x

MCAT: Alarma de tiempo para control del motor (Página 5009)

x

IMC: Comparar los bits de entrada con los bits de la máscara (Página 5012)

x

SMC: Barrido de matriz (Página 5015)

x

LEAD_LAG: Algoritmo Lead y Lag (Página 5017)

x

TONR_X: Acumulador de tiempo (Página 5021)

x

WSR: Guardar datos en el registro de desplazamiento (Página 5023)

x

SHRB: Desplazar bit al registro de desplazamiento (Página 5026)

x

SEG: Generar patrón de bits para el display de 7 segmentos (Página 5028)

x

BCDCPL: Generar complemento a diez (Página 5030)

x

BITSUM: Contar número de bits activados (Página 5032)

x

CMP>T: Superior al tiempo de activación de la etapa
Descripción
Con la instrucción "Superior al tiempo de activación de la etapa" se vigila la duración total de
una etapa en condiciones de supervisión. De esta manera se registra el tiempo de los posibles
eventos o errores.

5828

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
En la condición programada se compara el tiempo de activación en curso o el último de una
etapa (operando1) con un tiempo definido (operando2) en milisegundos. Si se cumple la
condición de la comparación, la instrucción devuelve el resultado lógico (RLO) "1". Si la
condición de la comparación no se cumple, la instrucción devuelve el RLO "0".

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "Superior al tiempo de activación
de la etapa":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando1>

Input

Enteros

I, Q, M, D, L o cons‐ Tiempo de activa‐
tante
ción actual o último
de la etapa

<Operando2>

Input

DINT, TIME,
S5TIME

I, Q, M, D, L o cons‐ Tiempo con el que
tante
se compara

Ejemplo
El siguiente ejemplo muestra la instrucción en el segmento:
67(37
!
7,0(
706

Mientras el tiempo de activación de #STEP1.T esté por debajo de 100 ms, el RLO será "0". En
cuanto el tiempo de activación sobrepasa 100 ms, el RLO cambia a "1".

CMP>U: Superior al tiempo de activación ininterrumpido de la etapa
Descripción
Con la instrucción "Superior al tiempo de activación ininterrumpido de la etapa", se vigila la
duración de una etapa, sin tener en cuenta las posibles averías, en condiciones de supervisión.
No se registra el tiempo de posibles eventos o fallos sino que se supervisa la duración de la
mera etapa.
En la condición programada se compara todo el tiempo de activación de la etapa (operando1)
con un tiempo definido (operando2) en milisegundos. Si se cumple la condición de la
comparación, la instrucción devuelve el resultado lógico (RLO) "1". Si la condición de la
comparación no se cumple, la instrucción devuelve el RLO "0".

Programación del PLC
Manual de programación y manejo, 11/2019

5829

Instrucciones
4.2 Instrucciones

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "Superior al tiempo de activación
ininterrumpido de la etapa":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando1>

Input

Enteros

I, Q, M, D, L o cons‐ Tiempo de activa‐
tante
ción actual o último
de la etapa sin con‐
tar averías

<Operando2>

Input

DINT, TIME,
S5TIME

I, Q, M, D, L o cons‐ Tiempo con el que
tante
se compara

Ejemplo
El siguiente ejemplo muestra la instrucción en el segmento:
67(38
!
7,0(
706

Mientras el tiempo de activación de #STEP1.U, sin tener en cuenta las posibles averías, esté
por debajo de 100 ms, el RLO será igual a "0". En cuanto el tiempo de activación sobrepasa
100 ms, el RLO cambia a "1".

Instrucciones FUP en GRAPH
Instrucciones FUP generales en GRAPH
Descripción
Para la programación en GRAPH se dispone de diferentes instrucciones FUP.
La tabla siguiente ofrece una vista general de las instrucciones y su disponibilidad:
Instrucción FUP

Operación
permanente

Transición/ Su‐
pervisión/ Inter‐
lock

General
Nuevo segmento: Insertar segmento

x

Cuadro vacío

x

x

Derivación: Abrir rama

x

x

-|: Insertar entrada (Página 5037)

x

x

-o|: Invertir RLO (Página 5038)

x

x

&: Operación lógica Y (Página 5033)

x

x

>=1: Operación lógica O (Página 5034)

x

x

Operaciones lógicas con bits

5830

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Instrucción FUP

Operación
permanente

x: Operación lógica O-exclusiva (Página 5035)

x

= : Asignación (Página 5039)

x

-(R): Desactivar salida (Página 5040)

x

-(S): Activar salida (Página 5041)

x

SR: Flipflop de activación/desactivación (Página 5042)

x

RS: Flipflop de desactivación/activación (Página 5043)

x

-|P|-: Consultar flanco de señal ascendente de un operando (Página 5044)

x

-|N|-: Consultar flanco de señal descendente de un operando (Página 5046)

x

P_TRIG: Consultar flanco de señal ascendente del RLO (Página 5047)

x

N_TRIG: Consultar flanco de señal descendente del RLO (Página 5048)

x

Transición/ Su‐
pervisión/ Inter‐
lock

Temporizadores
Temporizadores CEI
TP: Impulso (Página 5050)

x

TON: Retardo al conectar (Página 5052)

x

TOF: Retardo al desconectar (Página 5054)

x

Temporizadores SIMATIC
S_PULSE: Parametrizar y arrancar temporizador como impulso (Página 5056)

x

S_PEXT: Parametrizar y arrancar temporizador como impulso prolongado (Página 5059) x
S_ODT: Parametrizar y arrancar temporizador como retardo a la conexión (Página 5062)

x

S_ODTS: Parametrizar y arrancar temporizador como retardo a la conexión con memoria
(Página 5065)

x

S_OFFDT: Parametrizar y arrancar temporizador como retardo a la desconexión (Pági‐
na 5067)

x

Contadores
Contadores CEI
CTU: Contador ascendente (Página 5080)

x

CTD: Contador descendente (Página 5082)

x

CTUD: Contador ascendente - descendente (Página 5084)

x

Contadores SIMATIC
S_CU : Parametrizar e incrementar contador (Página 5087)

x

S_CD : Parametrizar y decrementar contador (Página 5089)

x

S_CUD : Parametrizar e incrementar/decrementar contador (Página 5090)

x

Comparación
CMP ==: Igual (Página 5096)

x

x

CMP <>: Diferente (Página 5097)

x

x

CMP >=: Mayor o igual (Página 5099)

x

x

CMP <=: Menor o igual (Página 5100)

x

x

CMP >: Mayor (Página 5101)

x

x

CMP <: Menor (Página 5102)

x

x

CMP>T: Superior al tiempo de activación de la etapa (Página 5834)

x

CMP>U: Superior al tiempo de activación ininterrumpido de la etapa (Página 5834)

x

Funciones matemáticas

Programación del PLC
Manual de programación y manejo, 11/2019

5831

Instrucciones
4.2 Instrucciones
Instrucción FUP

Operación
permanente

ADD: Sumar (Página 5103)

x

SUB: Restar (Página 5104)

x

MUL: Multiplicar (Página 5106)

x

DIV: Dividir (Página 5107)

x

MOD: Obtener resto de división (Página 5108)

x

NEG: Generar complemento a dos (Página 5109)

x

ABS: Calcular valor absoluto (Página 5111)

x

MIN: Determinar mínimo (Página 5112)

x

MAX: Determinar máximo (Página 5114)

x

LIMIT: Ajustar valor límite (Página 5116)

x

SQR: Calcular cuadrado (Página 5118)

x

SQRT: Calcular raíz cuadrada (Página 5119)

x

LN: Calcular logaritmo natural (Página 5120)

x

EXP: Calcular valor exponencial (Página 5122)

x

SIN: Calcular valor de seno (Página 5123)

x

COS: Calcular valor de coseno (Página 5124)

x

TAN: Calcular valor de tangente (Página 5126)

x

ASIN: Calcular valor de arcoseno (Página 5127)

x

ACOS: Calcular valor de arcocoseno (Página 5129)

x

ATAN: Calcular valor de arcotangente (Página 5130)

x

Transición/ Su‐
pervisión/ Inter‐
lock

Transferencia
MOVE: Copiar valor (Página 5132)

x

BLKMOV: Copiar área (Página 5134)

x

UBLKMOV: Copiar área sin interrupciones (Página 5137)

x

FILL: Rellenar área (Página 5140)

x

Conversión
CONVERT: Convertir valor (Página 5144)

x

ROUND: Redondear número (Página 5145)

x

CEIL: Redondear número en coma flotante al siguiente entero superior (Página 5146)

x

FLOOR: Redondear número en coma flotante al siguiente entero inferior (Página 5148)

x

TRUNC: Truncar a entero (Página 5149)

x

SCALE: Escalar (Página 5150)

x

UNSCALE: Desescalar (Página 5152)

x

Control del programa
Control en runtime
RE_TRIGR: Reiniciar tiempo de vigilancia del ciclo (Página 5162)

x

STP: Finalizar programa (Página 5162)

x

PROTECT: Cambiar nivel de protección (Página 5164)

x

WAIT: Programar retardo (Página 5163)

x

COMPRESS: Comprimir memoria CPU (S7-400) (Página 5160)

x

CiR: Controlar proceso CiR (S7-400) (Página 5167)

x

5832

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Instrucción FUP

Operación
permanente

Transición/ Su‐
pervisión/ Inter‐
lock

Operaciones lógicas con palabras
AND: Operación lógica Y (Página 5169)

x

OR: Operación lógica O (Página 5171)

x

XOR: Operación lógica O-exclusiva (Página 5172)

x

INV: Complemento a 1 (Página 5174)

x

DECO: Descodificar (Página 5175)

x

ENCO: Codificar (Página 5176)

x

SEL: Seleccionar (Página 5178)

x

Desplazamiento y rotación
SHR: Desplazar a la derecha (Página 5179)

x

SHL: Desplazar a la izquierda (Página 5181)

x

ROR: Rotar a la derecha (Página 5183)

x

ROL: Rotar a la izquierda (Página 5185)

x

Otras instrucciones
SET: Activar área por bits (Página 5199)

x

SETP: Activar mapa de bits en el área de periferia (S7-400) (Página 5200)

x

SETI: Activar área por bytes (Página 5203)

x

RESET: Desactivar área por bits (Página 5205)

x

RESETP: Desactivar mapa de bits en el área de periferia (S7-400) (Página 5206)

x

RESETI: Desactivar área por bytes (Página 5208)

x

REPL_VAL: Introducir valor sustitutivo (Página 5210)

x

DRUM: Materializar circuito secuencial sucesivo (Página 5211)

x

DRUM_X: Materializar circuito secuencial sucesivo (Página 5217)

x

DCAT: Alarma de tiempo para control discreto (Página 5225)

x

MCAT: Alarma de tiempo para control del motor (Página 5228)

x

IMC: Comparar los bits de entrada con los bits de la máscara (Página 5232)

x

SMC: Barrido de matriz (Página 5235)

x

LEAD_LAG: Algoritmo Lead y Lag (Página 5237)

x

TONR_X: Acumulador de tiempo (Página 5240)

x

WSR: Guardar datos en el registro de desplazamiento (Página 5243)

x

SHRB: Desplazar bit al registro de desplazamiento (Página 5245)

x

SEG: Generar patrón de bits para el display de 7 segmentos (Página 5250)

x

BCDCPL: Generar complemento a diez (Página 5251)

x

BITSUM: Contar número de bits activados (Página 5253)

x

Consulte también
JMP: Saltar si RLO = 1 (Página 5155)
JMPN: Saltar si RLO = 0 (Página 5156)
LABEL: Etiqueta (Página 5157)

Programación del PLC
Manual de programación y manejo, 11/2019

5833

Instrucciones
4.2 Instrucciones

CMP>T: Superior al tiempo de activación de la etapa
Descripción
Con la instrucción "Superior al tiempo de activación de la etapa" se vigila la duración total de
una etapa en condiciones de supervisión. De esta manera se registra el tiempo de los posibles
eventos o errores.
En la condición programada se compara el tiempo de activación en curso o el último de una
etapa (operando1) con un tiempo definido (operando2) en milisegundos. Si se cumple la
condición de la comparación, la instrucción devuelve el resultado lógico (RLO) "1". Si la
condición de la comparación no se cumple, la instrucción devuelve el RLO "0".

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "Superior al tiempo de activación
de la etapa":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando1>

Input

Enteros

I, Q, M, D, L o cons‐ Tiempo de activa‐
tante
ción actual o último
de la etapa

<Operando2>

Input

DINT, TIME,
S5TIME

I, Q, M, D, L o cons‐ Tiempo con el que
tante
se compara

Ejemplo
El siguiente ejemplo muestra la instrucción en el segmento:
!
7LPH
67(37
706

,1
,1

Mientras el tiempo de activación de #STEP1.T esté por debajo de 100 ms, el RLO será "0". En
cuanto el tiempo de activación sobrepasa 100 ms, el RLO cambia a "1".

CMP>U: Superior al tiempo de activación ininterrumpido de la etapa
Descripción
Con la instrucción "Superior al tiempo de activación ininterrumpido de la etapa", se vigila la
duración de una etapa, sin tener en cuenta las posibles averías, en condiciones de supervisión.
No se registra el tiempo de posibles eventos o fallos sino que se supervisa la duración de la
mera etapa.
En la condición programada se compara todo el tiempo de activación de una etapa
(operando1) con un tiempo definido (operando2) en milisegundos. Si se cumple la condición
de la comparación, la instrucción devuelve el resultado lógico (RLO) "1". Si la condición de la
comparación no se cumple, la instrucción devuelve el RLO "0".

5834

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "Superior al tiempo de activación
ininterrumpido de la etapa":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

<Operando1>

Input

Enteros

I, Q, M, D, L o cons‐ Tiempo de activa‐
tante
ción actual o último
de la etapa sin con‐
tar averías

<Operando2>

Input

DINT, TIME,
S5TIME

I, Q, M, D, L o cons‐ Tiempo con el que
tante
se compara

Ejemplo
El siguiente ejemplo muestra la instrucción en el segmento:
!
7LPH
67(38
706

,1
,1

Mientras el tiempo de activación de #STEP1.U, sin tener en cuenta las posibles averías, esté
por debajo de 100 ms, el RLO será igual a "0". En cuanto el tiempo de activación sobrepasa
100 ms, el RLO cambia a "1".

4.2.3

Instrucciones avanzadas

4.2.3.1

Fecha y hora

T_COMP: Comparar variables de tiempo
Descripción
Esta instrucción compara el contenido de dos variables del tipo de datos DT y devuelve el
resultado de la comparación como valor de retorno en el parámetro OUT. El parámetro OUT
se pone a "1" una vez que se ha cumplido la condición de comparación utilizada.
Existen las siguientes posibilidades de comparación:
Símbolo

Descripción

EQ

El valor de retorno tiene el estado lógico "1" si los momentos son idénticos en el parámetro IN1 y en el
parámetro IN2.

NE

El valor de retorno tiene el estado lógico "1" si los momentos no son idénticos en el parámetro IN1 y en el
parámetro IN2.

GE

El valor de retorno tiene el estado lógico "1" si el momento del parámetro IN1 es mayor (más reciente) o igual
al del parámetro IN2 .

Programación del PLC
Manual de programación y manejo, 11/2019

5835

Instrucciones
4.2 Instrucciones
Símbolo

Descripción

LE

El valor de retorno tiene el estado lógico "1" si el momento del parámetro IN1 es menor (más antiguo) o igual
al del parámetro IN2.

GT

El valor de retorno tiene el estado lógico "1" si el momento del parámetro IN1 es mayor (más reciente) que
el del parámetro IN2.

LT

El valor de retorno tiene el estado lógico "1" si el momento del parámetro IN1 es menor (más antiguo) que
el del parámetro IN2 .

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "T_COMP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

DT

D, L

Valor que se va a comparar

IN2

Input

DT

D, L

Valor que se va a comparar

OUT

Output

BOOL

I, Q, M, D, L

Valor de retorno

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

T_CONV: Convertir y extraer tiempos
Descripción
La instrucción "T_CONV" convierte los tipos de datos DT (DATE_AND_TIME), S5TIME y TIME
en los tipos de datos DATE, INT, TOD (TIME_OF_DAY), TIME o S5TIME.

Parámetros
El tipo de conversión se define seleccionando los tipos de datos en los cuadros de instrucción
de la entrada y la salida de la instrucción. El resultado de la conversión puede consultarse en
el parámetro OUT.
La tabla siguiente muestra los parámetros de la instrucción "T_CONV":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

DT, S5TIME, TI‐
ME

I, Q, M, D, L

Valor que se va a convertir. El formato
de datos de la variable del parámetro IN
debe coincidir con el tipo de datos selec‐
cionado en el cuadro de instrucción.

OUT

Return

DATE, INT,
TOD, TIME,
S5TIME

I, Q, M, D, L

Resultado de la conversión. El formato
de datos de la variable del parámetro
OUT debe coincidir con el tipo de datos
seleccionado en el cuadro de instruc‐
ción.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

5836

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplos
Tabla 4-256 Conversión del formato de datos TIME al formato S5TIME
Parámetro

Declaración

Tipo de datos

Descripción

IN

Output

TIME

Variable de entrada en el formato de datos TIME.

OUT

Input

S5TIME

La función convierte el formato de datos TIME al formato S5TIME.
Al convertir se efectúa un redondeo. Si el parámetro de entrada es
mayor que el formato representable de S5TIME (mayor que TI‐
ME#02:46:30.000), se devuelve como resultado S5TIME#999.3 y el
resultado binario BR se ajusta a "0".

Tabla 4-257 Extracción del día de la semana desde el formato DATE_AND_TIME
Parámetro

Declaración

Tipo de datos

Descripción

IN

Output

DT

Variable de entrada en el formato de datos DATE_AND_TIME.

OUT

Input

INT

La función extrae el día de la semana desde el formato DA‐
TE_AND_TIME (DT). El día de la semana se devuelve en el formato
de datos INTEGER:
1: Domingo
2: Lunes
3: Martes
4: Miércoles
5: Jueves
6: Viernes
7: Sábado

T_ADD: Sumar tiempos
Descripción
Con la instrucción "T_ADD" se suma a un momento (formato DT) una duración (formato TIME)
y se devuelve como resultado un nuevo momento (formato DT).
El momento DT del parámetro IN1 debe encontrarse en el rango entre
DT#1990-01-01-00:00:00.000 y DT#2089-12-31-23:59:59.999. Esta instrucción no efectúa
ninguna comprobación de entrada. Si el resultado de la suma no se encuentra dentro del rango
indicado arriba, se limita el resultado al valor correspondiente y el resultado binario BR se
ajusta a "0".

Programación del PLC
Manual de programación y manejo, 11/2019

5837

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "T_ADD":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

DT

D, L

Fecha y hora en el formato DT (DA‐
TE_AND_TIME).

IN2

Input

TIME

I, Q, M, D, L o constante

Duración que se debe sumar en el
formato TIME.

OUT

Return

DT

D, L

Resultado de la suma en el formato
DT (DATE_AND_TIME).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

T_SUB: Restar tiempos
Descripción
Con la instrucción "T_SUB" se resta de un momento (formato DT) una duración (formato TIME)
y se devuelve como resultado un nuevo momento (formato DT).
El momento DT del parámetro IN1 debe encontrarse en el rango entre
DT#1990-01-01-00:00:00.000 y DT#2089-12-31-23:59:59.999. Esta instrucción no efectúa
ninguna comprobación de entrada. Si el resultado de la resta no se encuentra dentro del rango
indicado arriba, se limita el resultado al valor correspondiente y el resultado binario BR se
ajusta a "0".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "T_SUB":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

DT

D, L

Fecha y hora en el formato DT (DA‐
TE_AND_TIME).

IN2

Input

TIME

I, Q, M, D, L o constante Duración que se debe restar en el formato
TIME.

OUT

Return

DT

D, L

Resultado de la resta en el formato DT
(DATE_AND_TIME).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

5838

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

T_DIFF: Diferencia de tiempo
Descripción
Con la instrucción "T_DIFF" se calcula la diferencia entre dos tiempos restando dos tiempos
con el formato DT. El tiempo de la entrada IN2 se resta del tiempo de la entrada IN1. El
resultado de la resta se devuelve en la salida OUT en el formato TIME :
● Si el primer tiempo de la entrada es IN1 mayor (más reciente) que el segundo tiempo en la
entrada IN2, el resultado en la salida OUT es positivo.
● Si el primer tiempo de la entrada es IN1 menor (más antiguo) que el segundo punto en la
entrada IN2, el resultado en la salida OUT es negativo.
Si el resultado de la resta se encuentra fuera del rango numérico de TIME, se limita el resultado
al valor correspondiente y el resultado binario BR se ajusta a "0".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "T_DIFF":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

DT

D, L

Minuendo

IN2

Input

DT

D, L

Sustraendo

OUT

Return

TIME

I, Q, M, D, L

Diferencia en el formato TIME.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

T_COMBINE: Combinar tiempos
Descripción
La instrucción "T_COMBINE" combina los formatos de datos DATE y TIME_OF_DAY (TOD) y
los convierte al formato DATE_AND_TIME (DT). La instrucción no notifica errores.
● El valor de entrada DATE debe encontrarse entre DATE#1990-01-01 y DATE#2089-12-31
(no se comprueba).
● En el valor de entrada IN2 se utiliza el tipo de datos TIME_OF_DAY .
● En el valor de salida OUT se devuelve el formato de datos DATE_AND_TIME.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "T_COMBINE":
odParameter

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

DATE

D, L o constante

Variable de entrada en el formato DATE

IN2

Input

TOD

D, L o constante

Variable de entrada en el formato TOD

OUT

Return

DT

D, L

Valor de retorno en el formato DT

Programación del PLC
Manual de programación y manejo, 11/2019

5839

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Funciones de reloj
WR_SYS_T: Ajustar la hora
Descripción
Al llamar "WR_SYS_T" se ajusta la hora y la fecha del reloj de la CPU. A partir de ese momento,
el reloj avanza desde la hora y fecha ajustadas. La información de fecha y hora se introduce
en el formato de datos DT en la entrada IN de la instrucción. Para convertir los formatos DATE
y TOD al formato de datos requerido DT se puede utilizar la instrucción "T_COMBINE
(Página 5839)".
Si el reloj es un reloj maestro, al llamar la función, la CPU inicia adicionalmente la
sincronización de la hora. Los intervalos de sincronización se definen en la configuración. La
información de zona horaria local u horario de verano no se puede transferir con la instrucción
"WR_SYS_T".
En la salida RET_VAL se puede consultar si se han producido errores durante la ejecución de
la instrucción.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "WR_SYS_T":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

DT

D, L

Fecha y hora

RET_VAL

Return

INT

I, Q, M, D, L

Estado de la instrucción

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error
(W#16#....)

Descripción

0000

Ningún error

8080

Error en la fecha

8081

Año no válido

8082

Mes no válido

8083

Día no válido

8084

Indicación de horas no válida

8085

Indicación de minutos no válida

8086

Indicación de segundos no válida

5840

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de error
(W#16#....)

Descripción

8087

Indicación de nanosegundos no válida

80B0

Fallo del reloj en tiempo real

Ejemplo
La fecha y la hora deben introducirse con el tipo de datos DT . Ejemplo del 15 de enero de 2010,
10:30 h y 30 s: DT#2010-01-15-10:30:30. La hora solo se puede introducir con granularidad de
segundos. El día de la semana se calcula a partir de la fecha usando la instrucción
"WR_SYS_T".

Consulte también
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

RD_SYS_T: Leer la hora
Descripción
La instrucción "RD_SYS_T" permite leer la fecha y hora actuales del reloj de la CPU. Los datos
leídos se devuelven en formato DT en la salida OUT de la instrucción. El valor emitido no
contiene indicaciones respecto a la zona horaria local ni al horario de verano. En la salida
RET_VAL se puede consultar si se han producido errores durante la ejecución de la
instrucción.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RD_SYS_T":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecu‐
ción de la instrucción, el valor de respues‐
ta contendrá un código de error.

OUT

Output

DT

D,L

Fecha y hora de la CPU

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error
(W#16#....)

Descripción

0000

Sin error

8222

El resultado se encuentra fuera del rango de valores admisible.

8223

El resultado no puede guardarse en el tipo de datos especificado.

Programación del PLC
Manual de programación y manejo, 11/2019

5841

Instrucciones
4.2 Instrucciones

Consulte también
Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

TIME_TCK: Leer hora del sistema
Descripción
Con la instrucción "TIME_TCK" se lee la hora del sistema de la CPU. La hora del sistema es
un contador de tiempo que contabiliza desde 0 a un máximo de 2147483647 ms. En caso de
desbordamiento de la hora del sistema, se reinicia el recuento desde "0". El incremento de
tiempo y la exactitud de la hora del sistema es de 1 ms. El único factor que influye en la hora
del sistema son los estados operativos de la CPU. La hora del sistema se puede usar, por
ejemplo, para medir la duración de procesos obteniendo la diferencia entre los resultados de
dos llamadas de "TIME_TCK". Esta instrucción no ofrece información de error.
La tabla siguiente resume los cambios que experimenta la hora del sistema en función de los
estados operativos de la CPU.
Estado operativo

La hora del sistema ...

Arranque

... se actualiza de modo permanente.

RUN
STOP

... se detiene y mantiene el valor actual.

Rearranque (no con S7-300)

... continúa avanzando a partir del valor que se guardó al pasar
al estado STOP.

Rearranque completo (en caliente)

... se borra y vuelve a empezar desde "0".

Arranque en frío

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "TIME_TCK":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RET_VAL

Return

TIME

I, Q, M, D, L

El parámetro RET_VAL contiene la
hora del sistema leída, en el rango de
0 a 231 -1 ms.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

5842

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

SET_CLKS: Ajustar la hora e inicializar el estado del reloj
Descripción
Con la instrucción "SET_CLKS" se ajusta la hora de la CPU y se inicializa el estado del reloj.
Nota
Active "SET_CLKS" solo si en su CPU no se sincroniza la hora. De lo contrario, en cada
sincronización se adoptará el estado del reloj maestro. Al hacerlo, el valor predefinido con
"SET_CLKS" se sobrescribe.
Nota
El estado actual de hora de la CPU se puede averiguar leyendo la ID de SZL W#16#0132 Index
W#16#0008 (Página 6148) con la instrucción "RDSYSST (Página 6116)".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SET_CLKS":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

BYTE

I, Q, M, D, L o constante Modo de operación:
● B#16#01: Ajustar la hora
● B#16#02: Inicializar el estado del reloj
● B#16#03: Ajustar la hora e inicializar el
estado del reloj

PDT

Input

DT

D, L

CORR

Input

INT

I, Q, M, D, L o constante Valor de corrección (en incrementos de 0,5
h)
Valores posibles: de –24 a +26

Hora predefinida

SUMMER

Input

BOOL

I, Q, M, D, L

Identificación del horario de verano/invier‐
no:
● 0 = Horario de invierno
● 1 = Horario de verano

ANN_1

Input

BOOL

I, Q, M, D, L

Hora de aviso:
1: A la próxima hora en punto se cambiará
de horario de verano a horario de invierno
o viceversa.

RET_VAL

Return

INT

I, Q, M, D, L

Código de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

5843

Instrucciones
4.2 Instrucciones

Parámetro MODE
Con el parámetro MODE puede definirse si se desea cambiar solo la hora, solo el estado de
la hora o ambos valores. Esto se explica en la siguiente tabla:
MODE

Significado

B#16#01

Ajustar la hora
Esta llamada equivale a la llamada de la instrucción "SET_CLK".
Los parámetros de entrada CORR, SUMMER y ANN_1 no se evalúan.

B#16#02

Inicializar el estado del reloj
El parámetro de entrada PDT no se evalúa. A partir de los restantes parámetros de entrada se forman los
siguientes elementos del estado del reloj:
● Valor de corrección, incluido el signo
● Hora de aviso
● Indicador del horario de verano/invierno
La resolución de hora se ajusta de modo que coincida con la resolución hora de la CPU. El bit de pérdida
de sincronización del estado del reloj adquiere el valor FALSE.
La hora no se modifica.

B#16#03

Ajustar la hora e inicializar el estado del reloj

Parámetro RET_VAL
Código de error
(W#16#...)

Explicación

0000

Ningún error

8080

MODE fuera del rango de valores admisible

8081

CORR fuera del rango de valores admisible
(solo para MODE = B#16#02 o para MODE = B#16#03)

8082

PDT fuera del rango de valores admisible: Fecha y/u hora no admisibles

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

SNC_RTCB: Sincronizar relojes esclavos
Definición: Sincronizar relojes esclavos
Se entiende por sincronización de relojes esclavos la transferencia de la fecha y la hora desde
el reloj maestro de un segmento de bus (p. ej. bus K de S7-400, MPI, bus de fondo de S7) a
todos los relojes esclavos de ese mismo segmento de bus.

Descripción
Para garantizar que la hora coincida en todos los módulos de la red, el programa de sistema
sincroniza los relojes esclavos a intervalos regulares parametrizables.
Es posible realizar una sincronización, independientemente del intervalo de sincronización
parametrizado, llamando la instrucción "SNC_RTCB". En este punto, para todos los relojes

5844

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
esclavos presentes en un segmento de bus, la fecha y la hora se transfieren del reloj maestro
al reloj esclavo.
El requisito para una sincronización correcta es que "SNC_RTCB" se ejecute en una CPU cuyo
reloj en tiempo real haya sido parametrizado como reloj maestro para al menos un segmento
de bus.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SNC_RTCB":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la eje‐
cución de la instrucción, el valor de res‐
puesta contendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No se ha producido ningún error durante la sincronización.

0001

El reloj presente no ha sido parametrizado como reloj maestro para ningún segmento de bus.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

5845

Instrucciones
4.2 Instrucciones

Librerías estándar adicionales
Manejo del contador de horas de funcionamiento
Contador de horas de funcionamiento
Introducción
Las CPUs disponen de un número específico de contadores de horas de funcionamiento (ver
datos técnicos de las CPUs).
● Si la CPU está provista de contadores de horas de funcionamiento de 16 bits, se pueden
usar las instrucciones "SET_RTM (Página 5849)", "CTRL_RTM (Página 5849)" y
"READ_RTM (Página 5850)" para inicializar, arrancar, parar y leer los contadores.
● Si la CPU está provista de contadores de horas de funcionamiento de 32 bits, se pueden
usar las instrucciones "RTM (Página 5847)" para inicializar, arrancar, parar y leer los
contadores.
Nota
Las instrucciones "SET_RTM (Página 5849)", "CTRL_RTM (Página 5849)" y "READ_RTM
(Página 5850)" también se pueden utilizar con los contadores de horas de funcionamiento
de 32 bits. Sin embargo, en ese caso los contadores de horas de funcionamiento se
comportan como si fueran de 16 bits (rango de valores de 0 a 32767 horas).
Consulte también: Registro del extracto de lista parcial con la ID de SZL W#16#0132 Índice
W#16#000B (Página 6150).

Aplicación
Los contadores de horas de funcionamiento pueden utilizarse para las aplicaciones más
diversas:
● Calcular el tiempo de funcionamiento de la CPU
● Calcular el tiempo de funcionamiento de recursos controlados.

Propiedades del contador de horas de funcionamiento
Al arrancarse, el contador de horas de funcionamiento siempre empieza a contar a partir del
último valor registrado. Si se desea usar otro valor inicial, debe especificarse explícitamente
("SET_RTM (Página 5849)" o "RTM (Página 5847)" con MODE=4). Cuando la CPU pasa al
estado STOP o el usuario para el contador de horas de funcionamiento, la CPU "toma nota" del
valor actual del contador. Al efectuar un rearranque completo (en caliente) o un arranque en
frío de la CPU, es necesario volver a arrancar el contador de horas de funcionamiento
("CTRL_RTM (Página 5849)" o "RTM (Página 5847)" con MODE=1).
Después de actualizar el sistema operativo, o después de restablecer los valores de fábrica de
la CPU, los contadores de horas de funcionamiento se inicializan al valor "0".

5846

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Rango de valores
● CPU con contador de horas de funcionamiento de 16 bits: de 0 a 32 767 horas
● CPU con contador de horas de funcionamiento de 32 bits: de 0 a (2 elevado a 31) -1 hora
= 2 147 483 647 horas

RTM: Contador de horas de funcionamiento
Descripción
Con la instrucción "RTM" se puede inicializar, arrancar, parar y leer un contador de horas de
funcionamiento de 32 bits de la CPU.
Si se desea leer todos los contadores de horas de funcionamiento de 32 bits de la CPU, debe
usarse la instrucción "RDSYSST (Página 6116)" con los parámetros SZL_ID=W#16#0132 y:
● INDEX=W#16#000B (para los contadores de horas de funcionamiento de 0 a 7) o bien
● INDEX=W#16#000C (para los contadores de horas de funcionamiento de 8 a 15).
Consulte también: Registro del extracto de lista parcial con la ID de SZL W#16#0132 Índice
W#16#000B (Página 6150).

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RTM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

NR

Input

BYTE

I, Q, M, D, L o constan‐ Número del contador de horas de funciona‐
te
miento
La numeración empieza por 0.
Para conocer el número de contadores de
horas de funcionamiento de su CPU, consul‐
te los Datos técnicos.

MODE

Input

BYTE

I, Q, M, D, L o constan‐ ID de la petición:
te
● 0: Leer (tras ello, el estado se registra en
CQ y el valor actual en CV). Si el contador
de horas de funcionamiento cuenta
durante más de (2 elevado a 31) - 1
horas, se detiene en el último valor
representable y devuelve el mensaje de
error "Desbordamiento".
● 1: Arrancar (con el último valor registrado)
● 2: Parar
● 4: Inicializar (al valor especificado en PV)
● 5: Inicializar (al valor especificado en PV)
y arrancar
● 6: Inicializar (al valor especificado en PV)
y parar

Programación del PLC
Manual de programación y manejo, 11/2019

5847

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

PV

Input

DINT

I, Q, M, D, L o constan‐ Nuevo valor para el contador de horas de
te
funcionamiento

Descripción

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución
de la instrucción, el valor de respuesta con‐
tendrá un código de error.

CQ

Output

BOOL

I, Q, M, D, L

Estado del contador de horas de funciona‐
miento (1: en marcha)

CV

Output

DINT

I, Q, M, D, L

Valor actual del contador de horas de funcio‐
namiento

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Compatibilidad con programas desarrollados para una CPU con contadores de horas de
funcionamiento de 16 bits
Las instrucciones "SET_RTM (Página 5849)", "CTRL_RTM (Página 5849)" y "READ_RTM
(Página 5850)" también se pueden utilizar con los contadores de horas de funcionamiento de
32 bits. Sin embargo, en ese caso los contadores de horas de funcionamiento de 32 bits se
comportan como si fueran de 16 bits (rango de valores de 0 a 32767 horas).
En el extracto de lista parcial con la ID SZL-ID W#16#0132 y el índice W#16#0008 , los
contadores de horas de funcionamiento de 32 bits de 0 a 7 aparecen como contadores de
horas de funcionamiento de 16 bits. Esto permite seguir utilizando los programas que han sido
desarrollados para una CPU con contadores de horas de funcionamiento de 16 bits, y que usan
el extracto de lista parcial con la ID SZL-ID W#16#0132 y el índice W#16#0008 .

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

Ningún error

8080

Número erróneo del contador de horas de funcionamiento

8081

Se ha transmitido un valor negativo al parámetro PV.

8082

Desbordamiento del contador de horas de funcionamiento

8091

El parámetro de entrada MODE contiene un valor no permitido.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

5848

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

SET_RTM: Inicializar contador de horas de funcionamiento
Descripción
Esta instrucción permite ajustar un contador de horas de funcionamiento de la CPU a un valor
predefinido. Se puede configurar un número de contadores de horas de funcionamiento
específico para la CPU.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SET_RTM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

NR

Input

BYTE

I, Q, M, D, L o constante La entrada NR contiene el número del con‐
tador de horas de funcionamiento que se
desea ajustar.
La numeración empieza por "0".
Para conocer el número de contadores de
horas de funcionamiento de su CPU, con‐
sulte los Datos técnicos.

PV

Input

INT

I, Q, M, D, L o constante La entrada PV contiene el ajuste para el
contador de horas de funcionamiento.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución
de la instrucción, el valor de respuesta con‐
tendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error
(W#16#...)

Explicación

0000

Sin error

8080

Número erróneo del contador de horas de funcionamiento

8081

Se ha transmitido un valor negativo al parámetro PV.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

CTRL_RTM: Arrancar/parar el contador de horas de funcionamiento
Descripción
Esta instrucción permite arrancar o parar un contador de horas de funcionamiento.

Programación del PLC
Manual de programación y manejo, 11/2019

5849

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "CTRL_RTM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

NR

Input

BYTE

I, Q, M, D, L o constante La entrada NR contiene el número del
contador de horas de funcionamiento
que se desea arrancar o parar.
La numeración empieza por "0".
Para conocer el número de contadores
de horas de funcionamiento de su
CPU, consulte los Datos técnicos.

S

Input

BOOL

I, Q, M, D, L

La entrada S arranca o para el contador
de horas de funcionamiento.
● Para parar el contador de horas de
funcionamiento debe ajustarse el
estado lógico a "0".
● Para arrancar el contador de horas
de funcionamiento debe ajustarse
el estado lógico a "1".

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la eje‐
cución de la instrucción, el valor de res‐
puesta contendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

Ningún error

8080

Número erróneo del contador de horas de funcionamiento

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

READ_RTM: Leer contador de horas de funcionamiento
Descripción
Esta instrucción permite leer un contador de horas de funcionamiento. La instrucción devuelve
como datos de salida el número actual de horas de funcionamiento y el estado del contador,
es decir, "parado" o "contando".
Si el contador de horas de funcionamiento trabaja durante más de 32767 horas, se parará al
llegar a 32767 y enviará el aviso de error "Desbordamiento".

5850

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "READ_RTM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

NR

Input

BYTE

I, Q, M, D, L, P o cons‐
tante

La entrada NR contiene el número del
contador de horas de funcionamiento
que se desea arrancar o parar.
La numeración empieza por "0".
Para conocer el número de contadores
de horas de funcionamiento de su
CPU, consulte los Datos técnicos.

RET_VAL

Return

INT

I, Q, M, D, L, P

Si se produce un error durante la eje‐
cución de la instrucción, el valor de res‐
puesta contendrá un código de error.

CQ

Output

BOOL

I, Q, M, D, L

La salida CQ indica si el contador de
horas de funcionamiento está en mar‐
cha o detenido. El estado lógico "0" in‐
dica que el contador de horas de fun‐
cionamiento está parado. El estado ló‐
gico "1" indica que el contador de horas
de funcionamiento está en marcha.

CV

Output

INT

I, Q, M, D, L, P

La salida CV indica el valor actual del
contador de horas de funcionamiento.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

Sin errores

8080

Número erróneo del contador de horas de funcionamiento

8081

Desbordamiento del contador de horas de funcionamiento

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Hora local
LOC_TIME: Calcular hora local
Descripción
Esta instrucción lee la hora y el estado de la hora de la CPU, y calcula a partir de ellos la hora
local. Solo funciona con CPU S7-400. Esta instrucción puede llamarse en OBs de cualquier
clase de prioridad.

Programación del PLC
Manual de programación y manejo, 11/2019

5851

Instrucciones
4.2 Instrucciones

Funcionamiento
"LOC_TIME" utiliza internamente la instrucción "RDSYSST (Página 6116)" para leer la hora
del módulo, el valor de corrección con signo y el identificador de horario de verano del estado
actual de la hora de la CPU. Si se produce un error de "RDSYSST (Página 6116)", se finaliza
el bloque. Las indicaciones de error se envían a RET_VAL .
El valor de corrección es el número de medias horas entre la hora base y la hora local. Además
se identifica como horario de verano o de invierno.
Si la CPU no posee un estado de hora válido, "LOC_TIME" se finaliza con un error.
Una vez leído correctamente el estado de la hora, la diferencia horaria obtenida a partir del
valor de corrección se suma a la hora del módulo y se devuelve en la salida LT .
La salida SUMMER obtiene el valor del bit de horario de verano/invierno a partir del estado de
la hora.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "LOC_TIME":
Parámetro

Declaración

Tipo de datos

Descripción

RET_VAL

Return

INT

Código de error

LT

Output

DATE_AND_TIME

Hora local (Local Time)

SUMMER

Output

BOOL

Identificador de horario de verano
● 0: Invierno
● 1: Verano

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros RET_VAL, LT y SUMMER
La tabla siguiente muestra los valores de salida y los errores de "LOC_TIME":
RET_VAL

LT

SUMMER

Descripción

0

Hora local

TRUE/FALSE

Instrucción ejecutada sin errores

1

Hora local

TRUE/FALSE

Sin errores, pero con salto de fecha

8xyy

DT#90-01-01-0:0:0

FALSE

Códigos de error generales de "RDSYSST (Pági‐
na 6116)"

8091

DT#90-01-01-0:0:0

FALSE

Estado de la hora no presente

BT_LT: Calcular hora local a partir de la hora patrón
Descripción
Esta instrucción calcula la hora local a partir de una hora patrón establecida en la entrada.
La hora patrón introducida en la entrada BT se convierte a la hora local con ayuda de los datos
almacenados en un bloque de datos (DB) y se devuelve en la salida LT .

5852

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El bloque de datos (DB) contiene el número de unidades de 30 minutos en las que se
diferencian la hora patrón y la hora local, así como la diferencia entre el horario de verano y el
de invierno, igualmente en unidades de 30 minutos.
Si al efectuar el cálculo se produce un desbordamiento de fecha, esto se señaliza mediante un
valor de retorno especial.
La instrucción "BT_LT" puede llamarse en OBs de cualquier clase de prioridad.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "BT_LT":
Parámetro

Declaración

Tipo de datos

Descripción

BT

Input

DATE_AND_TIME

Hora patrón

WS_DAT

Input

BLOCK_DB

Información sobre la zona horaria y sobre la alternancia
entre horario de verano y de invierno (DB de reglas);
En el parámetro WS_DAT debe usarse un puntero a un
bloque de datos del tipo "WS_RULES (Página 5867)".

RET_VAL

Return

INT

Código de error

LT

Output

DATE_AND_TIME

Hora local

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Nota
Los parámetros del tipo de datos BLOCK_DB solo se pueden reenviar a llamadas FB y no a
llamadas FC.

Parámetros RET_VAL y LT
La tabla siguiente muestra los valores de salida de "BT_LT":
RET_VAL

LT

Descripción

0

Hora local

Instrucción ejecutada sin errores

1

Hora local

Sin errores, pero con salto de fecha

8082

DT#90-01-01-0:0:0

Datos no válidos en el bloque de datos de reglas

LT_BT: Calcular hora patrón a partir de la hora local
Descripción
La instrucción calcula la hora patrón a partir de la hora local establecida en la entrada.
La hora local introducida en la entrada LT se convierte a la hora patrón con ayuda de los datos
almacenados en un bloque de datos (DB) y se devuelve en la salida BT.

Programación del PLC
Manual de programación y manejo, 11/2019

5853

Instrucciones
4.2 Instrucciones
El bloque de datos (DB) contiene el número de unidades de 30 minutos en las que se
diferencian la hora patrón y la hora local, así como la diferencia entre el horario de verano y el
de invierno, igualmente en unidades de 30 minutos. Si al efectuar el cálculo se produce un
desbordamiento de fecha, esto se señaliza mediante un valor de retorno especial.
Peculiaridades del cambio entre horario de verano e invierno:
● Al pasar del horario de invierno al de verano, se adelanta en una hora la hora local. Esto
significa que la hora situada entre ambos horarios no se contabiliza.
Para acceder a un instante LT situado dentro de esa hora omitida, la instrucción "LT_BT"
"piensa" en términos de horario de verano. Esto se notifica con el valor de devolución 4 ó
5.
● Al pasar del horario de verano al de invierno, se atrasa en una hora la hora local. Esto
significa que hay una hora que se contabiliza dos veces ("doble hora"). (En CE(S)T se
utiliza en ese caso la denominación 2A y 2B).
En consecuencia, no es posible ubicar de manera unívoca con referencia a la hora patrón
un momento LT situado dentro de esa hora.
"LT_BT" recibe como parámetro de entrada un LT y debe decidir, antes de la conversión a
BT, si el valor se encuentra dentro del verano o el invierno. Si LT se encuentra dentro de la
doble hora, LT se interpreta como horario de invierno. Esto se notifica con el valor de
devolución 2 ó 3.
La instrucción "LT_BT" puede llamarse en OBs de cualquier clase de prioridad.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "LT_BT":
Parámetro

Declaración

Tipo de datos

Descripción

LT

Input

DATE_AND_TIME

Hora local

WS_DAT

Input

BLOCK_DB

Información sobre la zona horaria y sobre la alternancia entre
horario de verano y de invierno (DB de reglas);
En el parámetro WS_DAT debe usarse un puntero a un bloque
de datos del tipo "WS_RULES (Página 5867)".

RET_VAL

Return

INT

Código de error

BT

Output

DATE_AND_TIME

Hora patrón

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Los parámetros del tipo de datos BLOCK_DB solo se pueden reenviar a llamadas FB y no a
llamadas FC.

5854

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros RET_VAL y BT
La tabla siguiente muestra los valores de salida de "LT_BT":
RET_VAL

BT

Descripción

0

Hora patrón

Instrucción ejecutada sin errores

1

Hora patrón

Sin errores, pero con salto de fecha

2

Hora patrón

La LT de la entrada se encuentra dentro de la "doble hora".

3

Hora patrón

Como 2, y salto de fecha adicional

4

Hora patrón

La LT de la entrada se encuentra dentro de la "hora prohibida".

5

Hora patrón

Como 4, y salto de fecha adicional

8082

DT#90-01-01-0:0:0

Datos no válidos en el bloque de datos de reglas

S_LTINT: Alarma horaria hora local
Descripción
Esta instrucción ajusta la alarma horaria deseada en el momento especificado. Dicho
momento se especifica en hora local.
La hora local introducida en la entrada LT se convierte a la hora patrón con ayuda de la regla
almacenada en un bloque de datos (DB).
El bloque de datos (DB) contiene el número de unidades de 30 minutos en las que se
diferencian la hora patrón y la hora local, así como la diferencia entre el horario de verano y el
de invierno, igualmente en unidades de 30 minutos. Con la hora patrón calculada se
parametriza y activa el OB de alarma horaria. Si al efectuar el cálculo se produce un
desbordamiento de fecha, esto se señaliza mediante un valor de retorno especial.
Peculiaridades del cambio entre horario de verano e invierno:
● Al pasar del horario de invierno al de verano, se adelanta en una hora la hora local. Esto
significa que la hora situada entre ambos horarios no se contabiliza.
Para acceder a un instante LT dentro de esa hora omitida, la instrucción "S_LTINT" calcula
en términos de horario de verano. Esto se notifica con el valor de devolución (RET_VAL) 4
ó 5.
● Al pasar del horario de verano al de invierno, se atrasa en una hora la hora local. Esto
significa que hay una hora que se contabiliza dos veces ("doble hora"). (En CE(S)T se
utiliza en ese caso la denominación 2A y 2B).
En consecuencia, no es posible ubicar de manera unívoca con referencia a la hora patrón
un momento LT situado dentro de esa hora. "S_LTINT" recibe como parámetro de entrada
un LT y debe decidir, antes de la conversión a BT, si el valor se encuentra dentro del verano
o el invierno. Si LT se encuentra dentro de la doble hora, LT se interpreta como horario de
invierno. Esto se notifica con el valor de devolución (RET_VAL) 2 ó 3.
La instrucción "S_LTINT" puede llamarse en OBs de cualquier clase de prioridad.

Programación del PLC
Manual de programación y manejo, 11/2019

5855

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "S_LTINT":
Parámetro

Declaración

Tipo de datos

Descripción

OB_NR

Input

INT

Número del OB que se debe iniciar (adm. 10 – 17)

SDT

Input

DATE_AND_TIME

Hora de inicio y hora en horario local

PERIOD

Input

WORD

Período transcurrido desde el punto de salida SDT:

Consulte también: "SET_TINT (Página 6040)"
● W#16#0000 = Una vez
● W#16#0201 = Una vez por minuto
● W#16#0401 = Una vez por hora
● W#16#1001 = Una vez al día
● W#16#1201 = Una vez por semana
● W#16#1401 = Una vez al mes
● W#16#1801 = Una vez al año
● W#16#2001 = A final de mes
WS_DAT

Input

BLOCK_DB

Información sobre la zona horaria y sobre la alternancia entre
horario de verano y de invierno (DB de reglas);
En el parámetro WS_DAT debe usarse un puntero a un bloque
de datos del tipo "WS_RULES (Página 5867)".

RET_VAL

Return

INT

Código de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Los parámetros del tipo de datos BLOCK_DB solo se pueden reenviar a llamadas FB y no a
llamadas FC.

Parámetro RET_VAL

5856

RET_VAL

Descripción

0

Instrucción ejecutada sin errores

1

Sin errores, pero con salto de fecha

2

La LT de la entrada se encontraba dentro de la "doble hora".

3

Como 2, y salto de fecha adicional

4

La LT de la entrada se encuentra dentro de la "hora prohibida".

5

Como 4, y salto de fecha adicional

8082

Datos no válidos en el bloque de datos de reglas

8090

Parámetro erróneo OB_NR

8091

Parámetro erróneo SDT

8092

Parámetro erróneo PERIOD

80A1

El momento inicial ajustado se encuentra en el pasado.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
RET_VAL

Descripción

80A2

El OB no está cargado

80A3

El OB no se puede iniciar

SET_SW: Ajustar horario de invierno/verano sin estado de reloj
Descripción
Esta instrucción permite alternar entre el horario de verano y el de invierno en las CPUs que
no disponen de estado de la hora. Para este fin, la instrucción "SET_SW" modifica el ajuste de
la hora de la CPU de acuerdo con el momento actual y las reglas de alternancia fijadas en el
DB de reglas.
"SET_SW" se llama en el bloque de organización OB1 y en un OB de alarma horaria una sola
vez con la misma instancia. En el OB de alarma horaria no se interconectan los parámetros de
la instrucción "SET_SW". En la entrada WS_DAT se especifica el bloque de datos (DB) que
contiene las reglas para el inicio y el fin del horario de verano.
La figura siguiente muestra el cronograma en el que se basa el funcionamiento de "SET_SW":
$³RDQWHULRU!

$³RDFWXDO

6

6[

:[

K!





,19,(512

12

!$³RVLJXLHQWH

:

K!





9(5$12

6

12



,19,(512

6

12

6HJPHQWRGH
WLHPSR
7HPSRUL]DGRU
$YLVR

Se definen cuatro tiempos de cambio (VP, V, IP, I). Su posición exacta se deriva de las reglas
almacenadas en el DB de reglas. Las horas de aviso señalizan el cambio de horario una hora
antes de que se produzca.
Con flanco positivo en la entrada REQ se inicializa y activa el cambio de horario de verano/
invierno. La alternancia definida mantiene su validez mientras se cumpla REQ = 1.
Para el cambio de horario, "SET_SW" parametriza y activa el OB de alarma horaria indicado
con el momento de cambio más cercano en el modo "único". Tras ello, este OB de alarma
horaria asume el control. Cuando llega el momento, modifica la hora de la CPU conforme al
momento de ejecución actual y se parametriza/activa de nuevo a sí mismo usando en cada
caso el próximo momento de cambio.

Programación del PLC
Manual de programación y manejo, 11/2019

5857

Instrucciones
4.2 Instrucciones
Si la hora actual se encuentra en el apartado (3), el OB de alarma horaria se parametriza con
la hora de inicio IP (aviso de horario de invierno).
Con flanco negativo en la entrada REQ se desactiva el cambio de horario de verano/invierno.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SET_SW":
Parámetros

Declaración

Tipo de datos

Descripción

REQ

Input

BOOL

Control del cambio

WS_DAT

Input

BLOCK_DB

Información sobre la zona horaria y sobre la alternancia entre hora‐
rio de verano y de invierno (DB de reglas);
En el parámetro WS_DAT debe usarse un puntero a un bloque de
datos del tipo "WS_RULES (Página 5867)".

OB_NR

Input

INT

Número de la alarma horaria que se debe utilizar

STATUS

Output

INT

Código de error

ISSUMMER

Output

BOOL

1 = Horario de verano

ANN_1

Output

BOOL

1 = Aviso de cambio

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Los parámetros del tipo de datos BLOCK_DB solo se pueden reenviar a llamadas FB y no a
llamadas FC.

Parámetro STATUS
STATUS

Significado

0

Ningún error

8xyy

Códigos de error generales de "RDSYSST (Página 6116)"

8082

Datos no válidos en WS_DAT

8083

El número de mes para el cambio al horario de invierno es mayor que el número de mes para el cambio
al horario de verano, y la hora de aviso de invierno es anterior al verano, o
el número de mes para el cambio al horario de invierno es menor que el número de mes para el cambio
al horario de verano, y la hora de aviso de verano es anterior al invierno.

8090

OB_NR no admisible. (Solo se admiten las alarmas horarias: OB10 – OB17, según cada CPU)

80A2

OB_NR no admisible: El OB no está cargado en la CPU

80A3

No se puede iniciar el OB. Consulte también: "QRY_TINT (Página 6043)"

Campo de aplicación
"SET_SW" puede usarse en las CPUs que no disponen de estado de la hora. Las CPUs con
estado de la hora utilizan "SET_SW_S (Página 5859)".

5858

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

OBs invocantes
"SET_SW" debe llamarse con la misma instancia en los siguientes bloques de organización
(OBs):
● OB1 (programa cíclico):
"SET_SW" evalúa la entrada REQ. Con flanco ascendente en REQ ajusta el momento
inicial de la alarma horaria indicada, en función del momento actual, a la más cercana de
las 4 horas de cambio posibles, y activa la alarma horaria con el identificador 'único'. La
alarma horaria se dispara cuando se alcanza dicho momento.
● OB1x (alarma horaria):
El OB1x se ha activado al alcanzarse un momento de cambio de hora. "SET_SW" ajusta la
hora de la CPU en función de la hora actual (horario de verano), se parametriza al próximo
momento de cambio de hora y lo activa. En el apartado (5) se ajusta al aviso de horario de
verano (SA) del año siguiente.
"SET_SW" no debe instanciarse varias veces.
Las siguientes instrucciones permiten consultar, parametrizar, activar y borrar la alarma
horaria: "QRY_TINT (Página 6043)", "SET_TINT (Página 6040)", "ACT_TINT (Página 6042)",
"CAN_TINT (Página 6041)"

Nota
El cambio de hora de la CPU sin medidas adicionales, p. ej. a través de la programadora, con
"SET_SW" (REQ = 1) activo, solo se autoriza si la nueva hora ajustada no está situada más allá
de uno de los momentos de cambio de hora.
Si al ajustar el reloj se salta uno de los momentos de cambio de hora, antes del ajuste debe
desactivarse la alternancia entre horario de verano e invierno con REQ = 0 y, una vez realizada
la modificación, volver a activarse con REQ = 1.
Por supuesto, al ajustar el reloj de la CPU en verano debe tenerse en cuenta también la hora
del horario de verano.

SET_SW_S: Ajustar horario de verano/invierno sin estado de reloj
Descripción
Esta instrucción permite alternar entre el horario de verano y el de invierno en las CPUs que
disponen de estado de la hora. Para este fin, la instrucción "SET_SW_S" modifica el estado de
la hora de acuerdo con el momento actual y las reglas de alternancia fijadas en el DB de reglas.
"SET_SW_S" se llama en el OB1 y en un OB de alarma horaria una sola vez con la misma
instancia. En el OB de alarma horaria no se interconectan los parámetros de la instrucción
"SET_SW_S". En la entrada WS_DAT se especifica el bloque de datos (DB) que contiene las
reglas para el inicio y el fin del horario de verano.
La figura siguiente muestra el cronograma en el que se basa el funcionamiento de
"SET_SW_S":

Programación del PLC
Manual de programación y manejo, 11/2019

5859

Instrucciones
4.2 Instrucciones

$³RDQWHULRU!

$³RDFWXDO

6

6[

!$³RVLJXLHQWH

:[

K!





,19,(512

12

:

K!





9(5$12

6

12



,19,(512

6

12

6HJPHQWRGH
WLHPSR
7HPSRUL]DGRU
$YLVR

Se definen cuatro tiempos de cambio (VP, V, IP, I). Su posición exacta se deriva de las reglas
almacenadas en el DB de reglas. Las horas de aviso señalizan el cambio de horario 1 hora
antes de que se produzca
Con flanco positivo en la entrada REQ se inicializa y activa el cambio de horario de verano/
invierno. La alternancia definida mantiene su validez mientras se cumpla REQ = 1.
Para el cambio de horario, "SET_SW_S" parametriza y activa el OB de alarma horaria indicado
con el momento de cambio más cercano en el modo "único". Tras ello, este OB de alarma
horaria asume el control. Cuando llega el momento, modifica la hora de la CPU conforme al
momento de ejecución actual y se parametriza/activa de nuevo a sí mismo usando en cada
caso el próximo momento de cambio.
Ejemplo: Si la hora actual se encuentra en el rango (3), el OB de alarma horaria se parametriza
con la hora de inicio WA (aviso de horario de invierno).
Con flanco negativo en la entrada REQ se desactiva el cambio de horario de verano/invierno.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SET_SW_S":
Parámetro

Declaración

Tipo de datos

Descripción

REQ

Input

BOOL

Control del cambio

WS_DAT

Input

BLOCK_DB

Información sobre la zona horaria y sobre la alternancia entre
horario de verano y de invierno (DB de reglas);
En el parámetro WS_DAT debe usarse un puntero a un bloque de
datos del tipo "WS_RULES (Página 5867)".

OB_NR

Input

INT

Número de la alarma horaria que se debe utilizar

STATUS

Output

INT

Código de error

ISSUMMER

Output

BOOL

Es verano

ANN_1

Output

BOOL

Aviso de cambio

5860

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Los parámetros del tipo de datos BLOCK_DB solo se pueden reenviar a llamadas FB y no a
llamadas FC.

Parámetro STATUS
STATUS

Significado

0

Ningún error

8xyy

Códigos de error generales de "RDSYSST (Página 6116)"

8082

Datos no válidos en WS_DAT

8083

El número de mes para el cambio al horario de invierno es mayor que el número de mes para el cambio
al horario de verano, y la hora de aviso de invierno es anterior al verano, o
el número de mes para el cambio al horario de invierno es menor que el número de mes para el cambio
al horario de verano, y la hora de aviso de verano es anterior al invierno.

8090

OB_NR no admisible. (Solo se admiten las alarmas horarias: OB10 – OB17, según cada CPU)

8091

Estado de la hora no válido ("status_valid" en el estado de la hora tenía el valor FALSE)

80A2

OB_NR no admisible: El OB no está cargado en la CPU

80A3

No se puede iniciar el OB. (ver "QRY_TINT (Página 6043)")

Campo de aplicación
"SET_SW_S" puede usarse en las CPUs que disponen de estado de la hora.

OBs invocantes
"SET_SW_S" debe llamarse con la misma instancia en los siguientes bloques de organización
(OBs):
● OB1 (programa cíclico):
"SET_SW_S" evalúa la entrada REQ. Con flanco ascendente en REQ ajusta el momento
inicial de la alarma horaria indicada, en función del momento actual, a la más cercana de
las 4 horas de cambio posibles, y activa la alarma horaria con el identificador 'único'. Así, la
alarma horaria se dispara cuando se alcanza dicho momento.
● OB1x (alarma horaria):
El OB1x se ha activado al alcanzarse un momento de cambio de hora. "SET_SW_S" ajusta
la hora y el estado de hora de la CPU en función de la hora actual, se parametriza al próximo
momento de cambio de hora y lo activa. En el rango (5) se ajusta al aviso de horario de
verano del año siguiente.
"SET_SW_S" no debe instanciarse varias veces.
Las siguientes instrucciones permiten consultar, parametrizar, activar y borrar la alarma
horaria: "QRY_TINT (Página 6043)", "SET_TINT (Página 6040)", "ACT_TINT (Página 6042)",
"CAN_TINT (Página 6041)"

Programación del PLC
Manual de programación y manejo, 11/2019

5861

Instrucciones
4.2 Instrucciones

Nota
El cambio de hora de la CPU sin medidas adicionales, p. ej. a través de la programadora, con
"SET_SW_S" (REQ = 1) activo, solo se autoriza si la nueva hora ajustada no está situada más
allá de uno de los momentos de cambio de hora.
Si al ajustar el reloj se salta uno de los momentos de cambio de hora, antes del ajuste debe
desactivarse la alternancia entre horario de verano e invierno con REQ = 0 y, una vez realizada
la modificación, volver a activarse con REQ = 1 .
Al ajustar el reloj de la CPU y el estado de la hora es necesario activar el identificador de horario
de verano o el identificador de hora de aviso, dependiendo de si se desea ajustar el horario de
verano o el horario de invierno.

TIMESTMP: Transferir avisos con sello de tiempo
Descripción
Esta instrucción transfiere avisos con sello de tiempo de un IM153-2 a su DB de instancia. Éste
suministra los datos para el posterior procesamiento a cargo del programa de usuario.
● IM153-2
IM153-2 detecta los cambios de las señales binarias, les asigna un sello de tiempo y guarda
esta información en registros con un máximo de 20 avisos. En el caso de determinados
eventos, emite avisos especiales. Cuando un registro está listo para ser recogido, IM153-2
dispara una alarma de proceso.
● Llamada en el OB de alarma de proceso
"TIMESTMP" lee la información de arranque del OB de alarma de proceso y guarda la
información relativa al sello de tiempo para su posterior procesamiento en un búfer circular.
"TIMESTMP" puede almacenar los datos de 17 alarmas de proceso como máximo.
● Llamada en el OB cíclico:
En el procesamiento cíclico, "TIMESTMP" lee el registro que se debe recoger con ayuda de
la instrucción "RD_REC (Página 5922)" (Leer registro) y lo guarda en el búfer de avisos
MESSAGE. Si deben recogerse varios registros, se lee primero el más antiguo. Si el bit
TIMECONV está activado en la entrada, "TIMESTMP" convierte todos los sellos de tiempo
del formato ISP al formato DATE_AND_TIME (DT).
Si el parámetro BUFRDY = TRUE está activado, el programa de usuario puede continuar
procesando los avisos del búfer de avisos y transferirlos p. ej. a un receptor (equipo de
manejo y visualización, impresora). El número de mensajes existentes se visualiza en el
parámetro MSG_QTY. Después del procesamiento, el programa de usuario debe
desactivar el parámetro BUFRDY con objeto de liberar el búfer de avisos para otros avisos.
El parámetro BUFNOTREAD muestra el número de alarmas de proceso recibidas para las
que "TIMESTMP" no ha leído aún registros del IM153-2 . Con BUFNOTREAD = 15 , todos
los registros del IM153-2 están llenos. Entonces el IM153-2 no detecta otros cambios de
señal. Cualquier otro registro que se genere en caso de un cambio de señal binaria por el
IM 153-2 se pierde. El parámetro MSGLOST (pérdida de avisos) se pone a "1".

5862

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "TIMESTMP":
Parámetros

Declaración

Tipo de datos

Descripción

LADDR

Input

INT

Dirección lógica (dirección de diagnóstico) del IM153-2

LADDR2

Input

INT

Dirección lógica (dirección de diagnóstico) del slot 2 del
IM153-2

TIMECONV

Input

BOOL

1=convertir el sello de tiempo ISP al formato S7-DT

MSG_QTY

Output

INT

Número de avisos válidos en el búfer de avisos

BUFNOTREAD

Output

INT

Número de registros del IM153-2con alarmas pero no leí‐
dos todavía

READERR

Output

BOOL

1=Error al leer el IM153-2

READSTATUS

Output

INT

Valor de retorno de la instrucción "RD_REC (Página 5922)"

BUFRDY

InOut

BOOL

1=Búfer de avisos listo

MSGLOST

InOut

BOOL

1=Avisos perdidos

MESSAGE

Static

ARRAY[1..20] OF
STRUCT

Búfer de avisos para un máximo de 20 avisos del IM153-2

SLOT_NO

./.

BYTE

Número de slot/2=Aviso especial

CH_NO

./.

BYTE

Número de canal/ID del aviso especial

SIGNAL

./.

BYTE

Estado lógico/característica del aviso especial

TIME1

./.

DWORD

Segundos a partir de 1900,0 (ISP)/año, mes, día, hora (DT)

TIME2

./.

DWORD

Fracciones de segundo (ISP)/minuto, segundo, milisegun‐
do, día de la semana (DT)

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

5863

Instrucciones
4.2 Instrucciones

Configuración hardware
La instrucción "TIMESTMP" puede utilizarse solo en configuraciones que soporten la
transmisión de la hora y el sellado de tiempo de señales binarias. A saber:
● CPUs
– CPU 4xx con CP443-5 para la transmisión de telegramas horarios (a partir de
6GK7443-5DX02-0XE0), o
– CPU 4xx con transmisión de telegramas horarios (p. ej. CPU416-2 DP a partir de la
versión de firmware 3.0)
● Periferia descentralizada
– Módulo de interfaz IM153-2 apto para redundancia con sellado de tiempo (a partir de
6ES7153-2AA02 versión de firmware V1.2.3 (versión 10))
O bien:
IM153-2 FO apto para redundancia con interfaz FO integrada (a partir de
6ES7153-2AB01 a partir de la versión de firmware V1.2.3 (versión 9))
– Entrada digital SM321 (6ES7321-7BH00-0AB0) con aislamiento galvánico 16 DI, 24 V
DC, alarma de proceso, diagnóstico
O bien:
Entrada digital SM321 (6ES7321-7TH00-0AB0) con aislamiento galvánico 16 DI, 24 V
DC, NAMUR, con funciones de control de procesos
El sello de tiempo sólo se debe utilizar para señales binarias seleccionadas e
importantes para la aplicación. Debido a la carga del PROFIBUS-DP y del IM153-2, se
recomienda repartir estas señales, en caso necesario, entre varios IM153-2 o entre
varias estaciones.

5864

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Configuración de software
● OBs invocantes
"TIMESTMP" debe llamarse con la misma instancia en los siguientes bloques de
organización (OBs), teniendo en cuenta que solo es posible transferir y recibir valores de
los parámetros en el programa cíclico:
– OB1 (programa cíclico) o, como alternativa, un OB de alarma cíclica (OB30 a OB38)
– OB86 (fallo del rack)
– OB100 (arranque)
Si se utilizan otros OBs de arranque (OB 101, OB 102), "TIMESTMP" debe llamarse
también en ellos.
– OB40 o, si es posible seleccionarlo en la configuración de hardware, también otro OB de
alarma de proceso (OB41 a OB47)
● Direccionamiento
– Utilice para cada IM153-2 una instancia independiente de "TIMESTMP". Introduzca en
la entrada LADDR la dirección lógica ajustada en la configuración hardware (dirección
de diagnóstico) del IM153-2.
– Si el maestro DP se utiliza en el modo de operación "Compatible con S7", introduzca en
la entrada LADDR2 el mismo valor que para LADDR. Si se utiliza el modo de operación
"DPV1", introduzca en LADDR2 la dirección de diagnóstico del slot 2 del IM153-2.
– Si las direcciones se modifican durante el funcionamiento, "TIMESTMP" borra los datos
de alarma de proceso almacenados hasta entonces.

Tratamiento de errores
Si al leer un registro "TIMESTMP" ha detectado errores no eliminables, "TIMESTMP" ajusta el
parámetro READERR a TRUE. Para el análisis posterior se dispone del valor de retorno de la
instrucción WR_USMSG en el parámetro READSTATUS . Dado que "TIMESTMP" lee también
otro registro en el ciclo siguiente, READERR y READSTATUS solo son válidos para un ciclo.
Por ello debe incluirse en el programa de usuario la correspondiente evaluación.
Si se leen registros mientras el maestro DP está fuera de servicio, "TIMESTMP" emite el aviso
READERR = TRUE y READSTATUS =80B2h ("El slot configurado no está ocupado.")

Comportamiento de arranque IM153-2
En el arranque/rearranque/arranque en frío, IM153-2 vuelve a emitir las alarmas de proceso
para los registros que antes del arranque estaban ocupados pero todavía no se han recogido.
IM153-2 registra los siguientes avisos en el primer registro libre:
● Aviso especial "Inicio datos de arranque"
● Cambios de señal ocurridos inmediatamente antes de un STOP de la CPU ("entrante" o
"saliente" según el flanco parametrizado)
● Estado lógico actual de las señales binarias que deben obtener un sello de tiempo
("entrante" o "saliente" según el flanco parametrizado)
● Aviso especial "Fin datos de arranque"

Programación del PLC
Manual de programación y manejo, 11/2019

5865

Instrucciones
4.2 Instrucciones

Comportamiento de arranque de TIMESTMP
Si "TIMESTMP" se llama en un OB de arranque (OB100, OB101, OB102), "TIMESTMP" borra
todos los datos de alarmas de proceso almacenados y restablece BUFRDY . Si se detectan
registros con alarmas pero todavía no leídos, "TIMESTMP" ajusta MSGLOST (pérdida de
aviso) a TRUE. El programa de usuario debe volver a restablecer MSGLOST .

Comportamiento de "TIMESTMP" en el OB86 (fallo de módulo)
Si se llama "TIMESTMP" en el OB86 y el evento procede del correspondiente IM153-2,
"TIMESTMP" reacciona igual que en el arranque. Esto es lo que sucede p. ej. en caso de fallo
y recuperación del IM153-2 y recuperación del maestro DP.

Redundancia
En los sistemas H con dos IM153-2, existe redundancia en cuanto al sellado de tiempo en los
siguientes casos:
● La comunicación entre los dos IM153-2 se efectúa mediante bus K.
● La sincronización de los IM153-2 activos y pasivos ha finalizado correctamente.
Durante una conmutación entre IM153-2 activos y pasivos, se ha interrumpido el sellado de
tiempo. Con el aviso especial "Conmutación con redundancia inicio/fin" se muestra el período
de interrupción.
Normalmente, el IM153-2 activo notifica al pasivo el estado actual de la periferia. Si esta
comunicación no funciona, se emite el aviso especial "Pérdida de información de redundancia
entrante". En cuanto se puede recuperar la comunicación entre los IM153-2 activo y pasivo, se
emite el aviso especial "Pérdida de información de redundancia saliente". No es posible
compensar a posteriori la pérdida, es decir: al pasar el IM153-2 al estado de fallo, se produce
una pérdida de aviso.

Estructura del búfer de avisos
El búfer de avisos contiene un registro del IM153-2. La interpretación del sello de tiempo
depende del ajuste del parámetro TIMECONV .

Formatos de tiempo de "TIMESTMP"
Si la entrada es TIMECONV = TRUE , todos los sellos de tiempo se guardan en el tipo de datos
DATE_AND_TIME (formato BCD):
La tabla siguiente muestra el formato del tipo de datos DATE_AND_TIME:
Bytes

Contenido

Área

0

Año

90 … 89

1

Mes

01 ... 12

Corresponde a 1990 ... 2089

5866

2

Día

01 ... 31

3

Hora

00 ... 23

4

Minuto

00 ... 59

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Bytes

Contenido

Área

5

Segundo

00 ... 59

6

2 MSD (most significant decade) de ms

00 ... 99

7 (4 MSB)

LSD (least significant decade) de ms

0 ... 9

7 (4 LSB)

Día de la semana

1 ... 7 (1 = domingo)

Si la entrada es TIMECONV = FALSE , todos los sellos de tiempo se guardan en el formato ISP
(2 palabras dobles):
La tabla siguiente muestra la distribución de los bytes:
Bytes

Contenido

Área

0…3

Segundos a partir de 1.1.1900 0:00:00,000 h

Corresponde a
1.1.1900 ... 6.2.2036

4…7

Fracciones de segundo en múltiplos de 1/232 s

0 … <1

La conversión horaria es válida dentro del rango de fechas comunes a los formatos horarios,
es decir, desde el 1-1-1990 hasta el 6-2-2036 (inclusive).

WS_RULES: DB de regla para convertir la hora base en hora local
Bloque de datos del tipo "WS_RULES"
Un bloque de datos del tipo "WS_RULES" tiene la siguiente estructura:
Nombre

Tipo de datos

Valor inicial

Descripción

// Conversión hora base<->Hora local y "Ajustar alarma según hora local"
B2L

Struct
S

INT

2

// Diferencia hora base->hora local [30 m] en invierno, admisible -24 ...
+24.

T

INT

2

// Diferencia horario invierno y verano [30 m], admisible: 2

// Regla para: Horario invierno -> Horario verano. Valor predeterminado: Último domingo de marzo, 2:00 h
W2S

Struct

// en HORARIO INVIERNO

M

BYTE

B#16#3

// Mes del cambio

W

BYTE

B#16#9

// n aparición del día de la semana (1=primera, 2=segunda,..,9=última)

D

BYTE

B#16#1

// Día de la semana (domingo = 1)

H

BYTE

B#16#2

// Hora

// Regla para: Horario verano -> Horario invierno. Valor predeterminado: Último domingo de octubre, 3:00 h
S2W

// en HORARIO VERANO
M

BYTE

B#16#10

// Mes del cambio

W

BYTE

B#16#9

// n aparición del día de la semana (9 = última)

D

BYTE

B#16#1

// Día de la semana (domingo = 1)

H

BYTE

B#16#3

// Hora

Programación del PLC
Manual de programación y manejo, 11/2019

5867

Instrucciones
4.2 Instrucciones

Nota
Crear bloque de datos del tipo "WS_RULES"
Un bloque de datos del tipo "WS_RULES" se crea seleccionando como tipo "WS_RULES" al
crear un DB nuevo.
Nota
Todos los parámetros que tienen el formato BYTE se interpretan como valores BCD (decimal
en código binario). Para el horario de invierno debe indicarse W2S y para el de verano S2W.
En la UE está prescrita desde el año 2002 la fijación de los momentos de cambio entre horario
de verano e invierno mediante una regla.

4.2.3.2

String + Char

S_COMP: Comparar cadenas de caracteres
Descripción
Esta instrucción compara los contenidos de dos variables en el formato STRING y devuelve el
resultado de la comparación como valor de retorno. Las variables que se deben comparar se
interconectan en las entradas IN1 y IN2 . A los parámetros de entrada solo pueden
asignárseles variables definidas como simbólicas.
Seleccione la condición de comparación mediante el cuadro de instrucción. Si se cumple la
condición de comparación (p. ej. mayor o igual), el estado lógico del parámetro de salida OUT
se ajusta a "1".
Pueden usarse las siguientes condiciones de comparación:
Símbolo

Descripción

EQ

El valor de retorno tiene el estado lógico "1" si la cadena de caracteres del parámetro IN1 es igual que la del
parámetro IN2 .

NE

El valor de retorno tiene el estado lógico "1" si la cadena de caracteres del parámetro IN1 es distinta a la del
parámetro IN2 .

GT (1)

El valor de retorno tiene el estado lógico "1" si la cadena de caracteres del parámetro IN1 es mayor que la del
parámetro IN2 .

LT (1)

El valor de retorno tiene el estado lógico "1" si la cadena de caracteres del parámetro IN1 es menor que la del
parámetro IN2 .

GE (1)

El valor de retorno tiene el estado lógico "1" si la cadena de caracteres del parámetro IN1 es mayor o igual que
la del parámetro IN2 .

LE (1)

El valor de retorno tiene el estado lógico "1" si la cadena de caracteres del parámetro IN1 es menor o igual que
la del parámetro IN2 .

Los caracteres se comparan empezando por la izquierda según su codificación ASCII (p. ej. 'a' es mayor que 'A'). El primer
carácter diferente es el decisivo para el resultado de la comparación. Si la parte izquierda de la cadena de caracteres más
larga es idéntica a la cadena de caracteres más corta, la cadena de caracteres más larga se considera mayor.
(1)

5868

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "S_COMP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

STRING*

D, L

Variable de entrada en el formato
STRING

IN2

Input

STRING*

D, L

Variable de entrada en el formato
STRING

OUT

Output

BOOL

I, Q, M, D, L

Resultado de la comparación

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

S_CONV: Convertir cadena de caracteres
Descripción
Esta instrucción permite convertir el valor de la entrada IN al formato de datos indicado en la
salida OUT. Mediante esta instrucción se convierten cadenas de caracteres en números
enteros o en coma flotante, así como números enteros o en coma flotante en cadenas de
caracteres.
Nota
Conversiones explícitas en SCL
Encontrará más información y particularidades específicas de SCL para las conversiones
explícitas aquí:
● Conversiones explícitas (Página 590)

Programación del PLC
Manual de programación y manejo, 11/2019

5869

Instrucciones
4.2 Instrucciones

Convertir una cadena de caracteres en números enteros o en coma flotante
Son posibles las siguientes conversiones de cadena de caracteres en números enteros o en
coma flotante:
● Convertir una cadena de caracteres en una variable en el formato INT. El primer carácter
de la cadena de caracteres puede ser un signo o una cifra, mientras que el resto deben ser
necesariamente cifras. Si la longitud de la cadena de caracteres es igual a cero o mayor que
6, o la cadena contiene caracteres no autorizados, la conversión no se realiza y el bit BR se
ajusta a "0". Si el resultado de la conversión se encuentra fuera del rango numérico INT, se
limita el resultado al valor correspondiente y el resultado binario BR se ajusta a "0".
● Convertir una cadena de caracteres en una variable en el formato DINT. El primer carácter
de la cadena de caracteres puede ser un signo o una cifra, mientras que el resto deben ser
necesariamente cifras. Si la longitud de la cadena de caracteres es igual a cero o mayor que
11, o la cadena contiene caracteres no autorizados, la conversión no se realiza y el bit BR
se ajusta a "0". Si el resultado de la conversión se encuentra fuera del rango numérico
DINT, se limita el resultado al valor correspondiente y el resultado binario BR se ajusta a "0".
● Convertir una cadena de caracteres en una variable en el formato REAL. La cadena de
caracteres debe tener el siguiente formato: ±v.nnnnnnnE±xx
– ± = signo
– v = 1 posición antes de la coma
– n = 7 posiciones después de la coma
– x = 2 posiciones de exponente
Si la longitud de la cadena de caracteres es menor que 14, o la cadena de caracteres tiene
un formato distinto al indicado arriba, la conversión no se realiza y el bit BR se ajusta a "0".
Si el resultado de la conversión se encuentra fuera del rango numérico REAL, se limita el
resultado al valor correspondiente y el resultado binario BR se ajusta a "0".

5870

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Convertir un número entero o en coma flotante en una cadena de caracteres
Son posibles las siguientes conversiones de números enteros o en coma flotante en cadenas
de caracteres:
● Convertir una variable en el formato INT en una cadena de caracteres. La cadena de
caracteres se representa precedida de signo. Si la variable indicada en el parámetro de
retorno es demasiado corta, la conversión no se realiza y el bit BR se ajusta a "0". Al
parámetro de salida solo puede asignársele una variable definida como simbólica.
● Convertir una variable en el formato DINT en una cadena de caracteres. La cadena de
caracteres se representa precedida de signo. Si la variable indicada en el parámetro de
retorno es demasiado corta, la conversión no se realiza y el bit BR se ajusta a "0". Al
parámetro de salida solo puede asignársele una variable definida como simbólica.
● Convertir una variable en el formato REAL en una cadena de caracteres. La cadena de
caracteres se representa con 14 posiciones: ±v.nnnnnnnE±xx
– ± = signo
– v = 1 posición antes de la coma
– n = 7 posiciones después de la coma
– x = 2 posiciones de exponente
Si la variable indicada en el parámetro de retorno es demasiado corta o el parámetro IN no
contiene un número en coma flotante válido, la conversión no se realiza y el bit BR se ajusta
a "0". Al parámetro de salida solo puede asignársele una variable definida como simbólica.

Parámetros
Las tablas siguientes muestran los parámetros de la instrucción "S_CONV":
Tabla 4-258 Parámetros para convertir una cadena de caracteres en números enteros o en coma flotante
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

STRING*

D, L

Valor que se va a convertir

OUT

Output

INT, DINT, REAL

I, Q, M, D, L

Resultado de la conversión.

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Tabla 4-259 Parámetros para convertir un número entero o en coma flotante en una cadena de caracteres
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

INT, DINT, REAL

I, Q, M, D, L o constante Valor que se va a convertir

OUT

Output

STRING*

D, L

Resultado de la conversión

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

5871

Instrucciones
4.2 Instrucciones

ATH: Convertir cadena de caracteres ASCII en número hexadecimal
Descripción
Esta instrucción permite convertir la cadena de caracteres ASCII indicada en la entrada IN en
un número hexadecimal. El resultado de la conversión se deposita en la dirección especificada
en el parámetro OUT .
● El número de caracteres ASCII que se deben convertir se define con el parámetro N.
● Como máximo se pueden convertir 65 535 caracteres ASCII válidos.
● Solo pueden interpretarse las cifras de 0 a 9 y las letras mayúsculas de A a F. Todos los
demás caracteres se convierten en ceros.
Dado que un carácter ASCII requiere 8 bits y un número hexadecimal solo 4, la palabra de
salida es la mitad de larga que la palabra de entrada. Después de la conversión, los caracteres
ASCII se ordenan a la salida en el mismo orden en el que se han leído. Si se trata de un número
impar de caracteres ASCII, el número hexadecimal correspondiente al semibyte a la derecha
del último número hexadecimal convertido se rellena con ceros.
Cuando se detecta un carácter ASCII no válido, se convierte como "0" y en el parámetro
RET_VAL se deposita un mensaje de error.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ATH":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

POINTER

D, L

Puntero a la dirección inicial de una cadena
de caracteres ASCII

N

Input

WORD

I, Q, M, D, L, P o cons‐
tante

Número de caracteres ASCII que se deben
convertir

RET_VAL

Output

WORD

I, Q, M, D, L, P

Estado de la instrucción

OUT

Output

POINTER

I, Q, M, D, L

Puntero a la dirección del resultado

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Descripción

(W#16#....)

5872

0000

Ningún error

0007

Carácter no válido

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo
Con estado lógico de la entrada I 0.0 = "1" (activado), se ejecuta la instrucción. El parámetro
de entrada N = 5 indica que se deben convertir cinco caracteres ASCII. Los caracteres ASCII
se guardan en el bloque de datos 1, que empieza en la dirección indicada por el puntero IN:
DB1.DBX10.0. La cadena de caracteres se devuelve en la dirección indicada por el puntero
OUT: Inicio en DB2.DBX0.0 (bloque de datos 2). Al tratarse en este caso de un número impar
de caracteres ASCII, la última cifra hexadecimal contiene solo ceros en el semibyte derecho,
lo que da lugar al valor hexadecimal 0xC0.
Si la instrucción se ha ejecutado sin errores, RET_VAL se ajusta al valor W#16#0000.
La tabla siguiente muestra ejemplos de conversión de cadenas de caracteres ASCII en
números hexadecimales.
IN

N

OUT

Estado BR

'0123'

4

16#0123

1

'123AFx1a23'

10

16#123AF01023

0

Tabla 4-260 La tabla siguiente muestra los caracteres ASCII y los correspondientes valores
hexadecimales.
Caracteres ASCII

Valor hexadecimal codificado en ASCII

Número hexadecimal

"0"

30

0

"1"

31

1

"2"

32

2

"3"

33

3

"4"

34

4

"5"

35

5

"6"

36

6

"7"

37

7

"8"

38

8

"9"

39

9

"A"

41

A

"B"

42

B

"C"

43

C

D

44

D

E

45

E

F

46

F

HTA: Convertir número hexadecimal en cadena de caracteres ASCII
Descripción
Esta instrucción permite convertir el número hexadecimal indicado en la entrada IN en una
cadena de caracteres ASCII. El resultado de la conversión se deposita en la dirección
especificada en el parámetro OUT .

Programación del PLC
Manual de programación y manejo, 11/2019

5873

Instrucciones
4.2 Instrucciones
El número de bytes hexadecimales que se deben convertir se define con el parámetro N. Dado
que un carácter ASCII requiere 8 bits y un número hexadecimal solo 4, el valor de salida es el
doble de largo que el valor de entrada. Cada semibyte del número hexadecimal se convierte
en un carácter manteniendo el orden original.
En la cadena de caracteres ASCII pueden escribirse como máximo 65635 caracteres. El
resultado de la conversión se representa con las cifras de 0 a 9 y las letras mayúsculas de A
a F.
La instrucción no detecta condiciones de error.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "HTA":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

POINTER*

I, Q, M, D

Dirección inicial de la cifra hexadecimal

N

Input

WORD

I, Q, M, D, L, P o cons‐
tante

Número de bytes hexadecimales que se
deben convertir

OUT

Output

POINTER*

D, L

Dirección en la que se guarda el resulta‐
do.

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Ejemplo
Con estado lógico de la entrada I 0.0 = "1" (activado), se ejecuta la instrucción. El parámetro
de entrada N = 3 indica que se deben convertir tres caracteres hexadecimales. Los bytes
hexadecimales se guardan en el bloque de datos 1, que empieza en la dirección indicada por
el puntero IN : DB1.DBX10.0. La cadena de caracteres se devuelve en la dirección indicada por
el puntero OUT : inicio en DB2.DBX0.0 (bloque de datos 2).
La tabla siguiente muestra ejemplos de conversión de números hexadecimales en cadenas de
caracteres ASCII:
IN

N

OUT

Estado BR

W#16#0123

2

'0123'

1

16#123AF01023

4

'123AF010'

0

La tabla siguiente muestra los caracteres ASCII y los correspondientes valores hexadecimales:
Número hexadecimal

5874

Valor hexadecimal codificado en ASCII

Caracteres ASCII

0

30

"0"

1

31

"1"

2

32

"2"

3

33

"3"

4

34

"4"

5

35

"5"

6

36

"6"

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Número hexadecimal

Valor hexadecimal codificado en ASCII

Caracteres ASCII

7

37

"7"

8

38

"8"

9

39

"9"

A

41

"A"

B

42

"B"

C

43

"C"

D

44

"D"

E

45

"E"

F

46

"F"

Otras instrucciones
LEN: Determinar la longitud de una cadena de caracteres
Descripción
Esta instrucción devuelve la longitud de una cadena de caracteres (número de caracteres
válidos) como valor de retorno.
Una variable STRING contiene dos longitudes:
● La longitud máxima (se especifica entre corchetes en la definición de la variable)
● La longitud actual (número de caracteres válidos en el momento actual)
La longitud actual es menor o igual a la longitud máxima. El número de bytes ocupados por una
cadena de caracteres excede en 2 la longitud máxima. Una cadena vacía ('') tiene la longitud
cero. La longitud máxima es de 254. La instrucción no notifica ningún error.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "LEN":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

STRING*

D, L* *

Variable de entrada en el formato STRING;
al parámetro de entrada solo puede asignár‐
sele una variable definida como simbólica.

OUT

Return

INT

I, Q, M, D, L

Número actual de caracteres

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).
** En SCL: también es posible utilizar constantes.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

5875

Instrucciones
4.2 Instrucciones

CONCAT: Concatenar
Descripción
Esta instrucción agrupa dos variables STRING en una sola cadena de caracteres. Si la cadena
de caracteres resultante es más larga que la variable definida en el parámetro de salida, se
limita la cadena resultante a la longitud máxima ajustada y el bit BR se ajusta a "0".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "CONCAT": A los parámetros solo
pueden asignárseles variables definidas como simbólicas.
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

STRING*

D, L

Variable de entrada en el formato
STRING

IN2

Input

STRING*

D, L

Variable de entrada en el formato
STRING

OUT

Return

STRING*

D, L

Cadena concatenada

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

LEFT: Leer los caracteres izquierdos de una cadena
Descripción
Esta instrucción devuelve los primeros L caracteres de una cadena de caracteres.
● Si L es mayor que la longitud actual de la variable STRING, se devuelve el valor de entrada.
● Si L = 0 y si el valor de entrada es una cadena vacía, se devuelve una cadena vacía.
● Si L es negativo, se devuelve una cadena vacía y el bit BR se ajusta a "0".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "LEFT". Al parámetro IN y al valor
de retorno RET_VAL solo pueden asignárseles variables definidas como simbólicas.
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

STRING*

D, L

Variable de entrada en el formato
STRING

L

Input

INT

I, Q, M, D, L o constante

Longitud de la cadena de caracte‐
res izquierda

5876

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OUT

Return

STRING*

D, L

Variable de salida en el formato
STRING

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

RIGHT: Leer los caracteres derechos de una cadena
Descripción
Esta instrucción devuelve los últimos L caracteres de una cadena de caracteres.
● Si L es mayor que la longitud actual de la variable STRING, se devuelve el valor de entrada.
● Si L es negativo, se devuelve una cadena vacía y el resultado binario BR se ajusta a "0".
● Si L = 0 y si el valor de entrada es una cadena vacía, se devuelve una cadena vacía.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RIGHT". Al parámetro IN y al valor
de retorno RET_VAL solo pueden asignárseles variables definidas como simbólicas.
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

STRING*

D, L

Variable de entrada en el formato
STRING

L

Input

INT

I, Q, M, D, L o constante Longitud de la cadena de caracteres
derecha

OUT

Return

STRING*

D, L

Variable de salida en el formato
STRING

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

5877

Instrucciones
4.2 Instrucciones

MID: Leer los caracteres centrales de una cadena
Descripción
Esta instrucción devuelve la parte central de una cadena de caracteres (L caracteres a partir
del carácter P incluido).
● Si la suma de L y (P-1) supera la longitud actual de la variable STRING, se devuelve una
cadena de caracteres a partir del carácter P hasta el final del valor de entrada.
● En todos los demás casos (si P se encuentra fuera de la longitud actual, P y/o L es igual a
cero o negativo), se devuelve una cadena vacía y el bit BR se ajusta a "0".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "MID". Al parámetro IN y al valor
de retorno RET_VAL solo pueden asignárseles variables definidas como simbólicas.
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

STRING*

D, L

Variable de entrada en el formato
STRING

L

Input

INT

I, Q, M, D, L o constante Longitud de la cadena de caracteres cen‐
tral

P

Input

INT

I, Q, M, D, L o constante Posición del primer carácter

OUT

Return

STRING*

D, L

Variable de salida en el formato STRING

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

DELETE: Borrar caracteres de una cadena
Descripción
Esta instrucción borra en una cadena de caracteres L caracteres a partir del carácter P
incluido).
● Si L y/o P es igual a cero o P es mayor que la longitud actual de la cadena de caracteres de
entrada, se devuelve la cadena de caracteres de entrada.
● Si la suma de L y P es mayor que la cadena de caracteres de entrada, se borra hasta el final
de la cadena de caracteres.
● Si L y/o P son negativos, se devuelve una cadena vacía y el bit BR se ajusta a "0".

5878

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DELETE". Al parámetro de
entrada IN y al parámetro de salida RET_VAL solo pueden asignárseles variables definidas
como simbólicas.
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN

Input

STRING*

D, L

Variable STRING en la que se efec‐
túa el borrado

L

Input

INT

I, Q, M, D, L o constante Número de caracteres que se van a
borrar

P

Input

INT

I, Q, M, D, L o constante Posición del primer carácter que se
va a borrar

OUT

Return

STRING*

D, L

Cadena de caracteres resultante

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

INSERT: Insertar caracteres en una cadena
Descripción
Esta instrucción inserta la cadena de caracteres del parámetro IN2 en la cadena de caracteres
del parámetro IN1 después del carácter P .
● Si P es igual a cero, la segunda cadena de caracteres se inserta antes de la primera.
● Si P es mayor que la longitud actual de la primera cadena de caracteres, la segunda cadena
de caracteres se inserta después de la primera.
● Si P es negativo, se devuelve una cadena vacía y el bit BR se ajusta a "0".
El bit BR también se ajusta a "0" si la cadena de caracteres resultante es más larga que la
variable especificada en el parámetro de salida; en este caso, la cadena de caracteres
resultante se limita a la longitud máxima ajustada.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "INSERT". A los parámetros de
entrada IN1 y IN2 y al parámetro de salida solo pueden asignárseles variables definidas como
simbólicas.
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

STRING*

D, L

Variable STRING en la que se efectúa
la inserción

IN2

Input

STRING*

D, L

Variable STRING que se va a insertar

P

Input

INT

I, Q, M, D, L o constante Posición de inserción

Programación del PLC
Manual de programación y manejo, 11/2019

5879

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OUT

Return

STRING*

D, L

Cadena de caracteres resultante

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

REPLACE: Reemplazar caracteres de una cadena
Descripción
Esta instrucción sustituye L caracteres de la primera cadena de caracteres (IN1) a partir del
carácter P (incluido) por la totalidad de la segunda cadena de caracteres (IN2).
● Si L es igual a cero y P distinto de cero, se devuelve la primera cadena de caracteres.
● Si L es igual a cero y P igual a cero, se coloca la segunda cadena de caracteres delante de
la primera.
● Si L es distinto de cero y P igual a cero o uno, se sustituyen los caracteres a partir del primer
carácter.
● Si P está fuera de la primera cadena de caracteres, la segunda cadena de caracteres se
coloca después de la primera.
● Si L y/o P son negativos, se devuelve una cadena vacía y el bit BR se ajusta a "0". El bit BR
también se ajusta a "0" si la cadena de caracteres resultante es más larga que la variable
especificada en el parámetro de salida; en este caso, la cadena de caracteres resultante se
limita a la longitud máxima ajustada.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "REPLACE". A los parámetros de
entrada IN1 y IN2 y al parámetro de salida solo pueden asignárseles variables definidas como
simbólicas.
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

STRING*

D, L

Variable STRING en la que se efec‐
túa la sustitución

IN2

Input

STRING*

D, L

Variable STRING que se va a reem‐
plazar

L

Input

INT

I, Q, M, D, L o constante Número de caracteres que se van a
reemplazar

P

Input

INT

I, Q, M, D, L o constante Posición del primer carácter reem‐
plazado

OUT

Return

STRING*

D, L

Cadena de caracteres resultante

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

5880

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

FIND: Buscar caracteres en una cadena
Descripción
Esta instrucción devuelve la posición de la segunda cadena de caracteres (IN2) dentro de la
primera cadena de caracteres (IN1). La búsqueda se inicia por la izquierda. Se notifica la
primera aparición de la cadena de caracteres.
Si la segunda cadena de caracteres no existe dentro de la primera, se devuelve cero. La
instrucción no notifica errores.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "FIND". A los parámetros de
entrada IN1 y IN2 solo pueden asignárseles variables definidas como simbólicas.
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN1

Input

STRING*

D, L

Variable STRING en la que se efectúa
la búsqueda

IN2

Input

STRING*

D, L

Variable STRING que se va a buscar

OUT

Return

INT

I, Q, M, D, L

Posición de la cadena de caracteres
encontrada

* Defina la longitud máxima de la cadena de caracteres si en la declaración de la interfaz se utiliza el tipo de datos STRING
para una variable temporal (encontrará más información en la descripción del tipo de datos).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

4.2.3.3

Memoria imagen de proceso

UPDAT_PI: Actualizar memoria imagen de proceso de las entradas
Descripción
Esta instrucción permite actualizar la memoria imagen de proceso del OB 1 (=memoria imagen
parcial de proceso 0) de las entradas o una memoria imagen parcial de proceso de las entradas
definida mediante configuración.
Si se ha configurado como método de notificación para la actualización de la memoria imagen
de proceso por el sistema la notificación repetida de todos los errores de acceso a la periferia,
la actualización de la memoria imagen de proceso seleccionada se lleva a cabo de modo
continuo.

Programación del PLC
Manual de programación y manejo, 11/2019

5881

Instrucciones
4.2 Instrucciones
De lo contrario, dicha actualización solo se efectúa cuando la memoria imagen parcial de
proceso seleccionada no es actualizada por el sistema, es decir,
● si no se ha asignado esa memoria imagen parcial de proceso a ningún OB de alarma,
o
● si se ha seleccionado la memoria imagen parcial de proceso 0 y se ha desactivado (en la
configuración) la actualización de la memoria imagen parcial de proceso del OB 1.
Nota
Las direcciones lógicas que se han asignado en la configuración a una memoria imagen
parcial de proceso de las entradas, no pertenecen ya a la memoria imagen de proceso del
OB 1 de las entradas.
Una memoria imagen parcial de proceso que se actualiza con "UPDAT_PI" no debe
actualizarse al mismo tiempo con la instrucción "SYNC_PI (Página 5884)".
Si se ha asignado a un OB de alarma la actualización por el sistema de la memoria imagen de
proceso del OB 1 de las entradas y de la memoria imagen parcial de proceso de las entradas,
la actualización se realiza independientemente de las llamadas de "UPDAT_PI".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "UPDAT_PI":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PART

Input

BYTE

I, Q, M, D, L o constante Número de la memoria imagen parcial de
proceso de las entradas que se debe actua‐
lizar. Rango máximo de valores (el rango
depende de la CPU):
De 0 a 15 (0 significa memoria imagen de
proceso del OB 1, n para 1 < n < 15 significa
memoria imagen parcial de proceso n).

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

FLADDR

Output

WORD

I, Q, M, D, L

Dirección del primer byte que provoca erro‐
res, en caso de que se haya producido un
error de acceso

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8090

Valor no válido en el parámetro PART

8091

La memoria imagen parcial de proceso especificada todavía no está definida o no se encuentra dentro del
área de memoria imagen de proceso admisible de la CPU.

5882

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
8092

La memoria imagen parcial de proceso es actualizada por el sistema con un OB, y el usuario no ha
configurado para ello la notificación repetida de todos los errores de acceso a la periferia. No se ha
realizado ninguna actualización con "UPDAT_PI".

80A0

Se ha detectado un error de acceso al acceder a la periferia.

8xyy

Información de error general, ver Evaluación de errores con el parámetro de salida RET_VAL (Pági‐
na 174)

Nota
Si se utiliza esta instrucción para memorias imagen parcial de proceso de esclavos DP
normalizados para los que se hayan definido áreas de coherencia de más de 32 bytes, también
son posibles los códigos de error de la instrucción "DPRD_DAT (Página 5929)".

UPDAT_PO: Actualizar memoria imagen de proceso de las salidas
Descripción
Esta instrucción permite transferir a los módulos de salida los estados lógicos de la memoria
imagen de proceso del OB 1 (=memoria imagen parcial de proceso 0) de las salidas o de una
memoria imagen parcial de proceso de las salidas definida mediante configuración.
Si se ha definido un área de coherencia para la memoria imagen parcial de proceso
seleccionada, los datos en cuestión se transfieren de modo coherente al módulo de periferia
correspondiente.
Nota
Las direcciones lógicas que se han asignado mediante configuración a una memoria imagen
parcial de proceso de las salidas, no pertenecen ya a la memoria imagen de proceso del OB 1
de las salidas.
Las salidas que se actualizan con "UPDAT_PO" no deben actualizarse al mismo tiempo con la
instrucción "SYNC_PO (Página 5886)".
Si se ha asignado a un OB de alarma la transferencia a los módulos de salida de la memoria
imagen de proceso del OB 1 de las salidas y de la memoria imagen parcial de proceso de las
salidas, el sistema realiza la transferencia independientemente de las llamadas de
"UPDAT_PO".

Programación del PLC
Manual de programación y manejo, 11/2019

5883

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "UPDAT_PO":
Parámetro

Declaración

Tipo de datos Área de memoria

PART

Input

BYTE

Descripción

I, Q, M, D, L o constante Número de la memoria imagen parcial de pro‐
ceso de las salidas que se debe transferir.
Rango máximo de valores (el rango depende
de la CPU): de 0 a 15.
(0 significa memoria imagen de proceso del
OB 1, n para 1 < n < 15 significa memoria ima‐
gen parcial de proceso n).

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

FLADDR

Output

WORD

I, Q, M, D, L

Dirección del primer byte que provoca errores,
en caso de que se haya producido un error de
acceso

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8090

Valor no válido en el parámetro PART

8091

La memoria imagen parcial de proceso especificada todavía no está definida o no se encuentra dentro del
área de memoria imagen de proceso admisible de la CPU.

80A0

Se ha detectado un error de acceso al acceder a la periferia.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Nota
Si se utiliza esta instrucción para memorias imagen parcial de proceso de esclavos DP
normalizados para los que se hayan definido áreas de coherencia de más de 32 bytes, también
son posibles los códigos de error de la instrucción "DPWR_DAT (Página 5932)".

SYNC_PI: Sincronizar memoria imagen de proceso de las entradas
Descripción
La instrucción "SYNC_PI" permite actualizar de modo isócrono una memoria imagen parcial de
proceso de las entradas. Con esta instrucción, un programa de usuario vinculado a un ciclo DP
o a un ciclo de emisión PN puede actualizar los datos de entrada registrados de modo isócrono
y coherente en una memoria imagen parcial de proceso de las entradas.

5884

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Llamada
"SYNC_PI" puede interrumpirse, y solo puede llamarse en los OBs 61, 62, 63 y 64.
Nota
La llamada de la instrucción "SYNC_PI" en los OBs 61 a 64 solo está autorizada si en la
configuración hardware se ha asignado la memoria imagen parcial de proceso en cuestión al
OB correspondiente.
Una memoria imagen parcial de proceso que se actualiza con "SYNC_PI" no puede
actualizarse al mismo tiempo con la instrucción "UPDAT_PI (Página 5881)".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SYNC_PI":
Parámetro

Declaración

Tipo de da‐ Área de memo‐ Rango de valo‐
tos
ria
res

Descripción

PART

Input

BYTE

I, Q, M, D, L o
constante

de 1 a 30

Número de la memoria imagen parcial de
proceso de las entradas que se debe ac‐
tualizar en modo isócrono.

RET_VAL

Return

INT

I, Q, M, D, L

-

Información de error

FLADDR

Output

WORD

I, Q, M, D, L

-

Dirección del primer byte que provoca erro‐
res, en caso de que se haya producido un
error de acceso.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Clase de evento
código de error

Explicación

W#16#0001

Advertencia de coherencia. La actualización de la memoria imagen parcial de proceso se ha repartido
entre dos ciclos DP o PN. Sin embargo, los datos pertenecientes a un esclavo o un dispositivo IO se han
transferido de modo coherente.

W#16#8090

Valor no admisible en el parámetro PART, o bien la actualización de la memoria imagen parcial de
proceso de las entradas indicada no está permitida en este OB. No se ha actualizado la memoria
imagen parcial de proceso de las entradas.

W#16#8091

La memoria imagen parcial de proceso especificada todavía no está definida o no se encuentra dentro
del área de memoria imagen de proceso admisible de la CPU. No se ha actualizado la memoria imagen
parcial de proceso de las entradas.

W#16#80A0

Durante la actualización se ha detectado un error de acceso. Las entradas afectadas se han ajustado
a "0".

W#16#80A1

El momento de actualización es posterior a la ventana de acceso admisible. No se ha actualizado la
memoria imagen parcial de proceso de las entradas.
El ciclo DP o PN es demasiado corto y no garantiza suficiente tiempo para procesar la instrucción. Por
ello deben incrementarse los tiempos TDP (también conocidos como T_DC), Ti y To.

Programación del PLC
Manual de programación y manejo, 11/2019

5885

Instrucciones
4.2 Instrucciones
Clase de evento
código de error

Explicación

W#16#80A2

Error de acceso con advertencia de coherencia
Durante la actualización de la memoria imagen parcial de proceso de las entradas se ha detectado un
error de acceso con advertencia de coherencia simultánea.
● Los datos de las entradas erróneas no han sido leídos todavía por la periferia. En la memoria imagen
parcial de proceso de las entradas las entradas afectadas se ponen a cero.
● La actualización de los datos de entrada no afectados por el error de acceso se ha distribuido entre
dos ciclos DP o PN.

W#16#80C1

El momento de actualización es anterior a la ventana de acceso admisible. No se ha actualizado la
memoria imagen parcial de proceso de las entradas.

W#16#8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Nota
Si se utiliza la instrucción "SYNC_PI" para memorias imagen parcial de proceso de esclavos
DP normalizados para los que se hayan definido áreas de coherencia de más de 32 bytes,
también son posibles los códigos de error de la instrucción "DPRD_DAT (Página 5929)".

SYNC_PO: Sincronizar memoria imagen de proceso de las salidas
Descripción
La instrucción "SYNC_PO" permite actualizar de modo isócrono una memoria imagen parcial
de proceso de las salidas. Con esta instrucción, un programa de usuario vinculado a un ciclo
DP o a un ciclo de emisión PN puede transferir a la periferia de modo isócrono y coherente los
datos de salida calculados de una memoria imagen parcial de proceso de las salidas.

Llamada
"SYNC_PO" puede interrumpirse, y solo puede llamarse en los OBs 61, 62, 63 y 64.
Nota
La llamada de la instrucción "SYNC_PO" en los OBs 61 a 64 solo está autorizada si en la
configuración hardware se ha asignado la memoria imagen parcial de proceso en cuestión al
OB correspondiente.
Una memoria imagen parcial de proceso que se actualiza con "SYNC_PO" no puede
actualizarse al mismo tiempo con la instrucción "UPDAT_PO (Página 5883)".

5886

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SYNC_PO":
Parámetro

Declaración

Tipo de da‐
tos

Área de memo‐ Rango de valo‐
ria
res

Descripción

PART

Input

BYTE

I, Q, M, D, L o
constante

de 1 a 30

Número de la memoria imagen parcial de
proceso de las salidas que se debe ac‐
tualizar en modo isócrono.

RET_VAL

Return

INT

I, Q, M, D, L

-

Si se produce un error durante la ejecu‐
ción de la instrucción, el valor de respues‐
ta contendrá un código de error.

FLADDR

Output

WORD

I, Q, M, D, L

-

Dirección del primer byte que provoca
errores.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Clase de evento
código de error

Explicación

W#16#0001

Advertencia de coherencia. La actualización de la memoria imagen parcial de proceso se ha repartido
entre dos ciclos DP o PN. Sin embargo, los datos pertenecientes a un esclavo o un dispositivo IO se han
transferido de modo coherente.

W#16#8090

Valor no admisible en el parámetro PART, o bien la actualización de la memoria imagen parcial de
proceso de las salidas indicada no está permitida en este OB. No se han transferido las salidas a la
periferia. La memoria imagen parcial de proceso de las salidas no se modifica.

W#16#8091

La memoria imagen parcial de proceso especificada todavía no está definida o no se encuentra dentro
del área de memoria imagen de proceso admisible de la CPU. No se han transferido las salidas a la
periferia. La memoria imagen parcial de proceso de las salidas no se modifica.

W#16#80A0

Durante la actualización de la memoria imagen parcial de proceso de las salidas se ha detectado un
error de acceso. No se han transferido las salidas erróneas a la periferia. En la memoria imagen parcial
de proceso de las salidas, éstas no sufren modificación alguna.

W#16#80A1

Error de acceso con advertencia de coherencia
Durante la actualización de la memoria imagen parcial de proceso de las salidas se ha detectado un
error de acceso con advertencia de coherencia simultánea.
● No se han transferido los datos de las salidas erróneas a la periferia. En la memoria imagen parcial
de proceso de las salidas, las salidas afectadas no sufren modificación alguna.
● La actualización de los datos de salida no afectados por el error de acceso se ha distribuido entre
dos ciclos DP o PN.

W#16#80A2

El momento de actualización es posterior a la ventana de acceso admisible. No se han transferido las
salidas a la periferia. La memoria imagen parcial de proceso de las salidas no se modifica.

W#16#80C1

El momento de actualización es anterior a la ventana de acceso admisible. No se han transferido las
salidas a la periferia. La memoria imagen parcial de proceso de las salidas no se modifica.

W#16#8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

5887

Instrucciones
4.2 Instrucciones

Nota
Si se utiliza la instrucción "SYNC_PO" para memorias imagen parcial de proceso de esclavos
DP normalizados para los que se hayan definido áreas de coherencia de más de 32 bytes,
también son posibles los códigos de error de la instrucción "DPWR_DAT (Página 5932)".

4.2.3.4

Periferia descentralizada

RDREC: Leer registro
Descripción
Esta instrucción permite leer el registro con número INDEX del componente direccionado con
ID . Puede tratarse de un módulo central o de un componente descentralizado (PROFIBUS DP
o PROFINET IO).
Con MLEN se indica el máximo de bytes que se deben leer. Por ello debe escogerse un área
de destino RECORD con una longitud de por lo menos MLEN bytes.
El valor TRUE del parámetro de salida VALID indica que el registro se ha transferido
correctamente al área de destino RECORD . En ese caso, el parámetro de salida LEN contiene
la longitud en bytes de los datos leídos.
Si se ha producido un error durante la transferencia del registro, se señaliza mediante el
parámetro de salida ERROR . En ese caso, el parámetro de salida STATUS contiene la
información de error.
Nota
Si un esclavo DPV1 está configurado mediante archivo GSD (a partir de la rev. 3 de GSD) y la
interfaz DP del maestro DP está ajustada como "Compatible con S7", los módulos de E/S no
pueden leer en el programa de usuario los registros con "RDREC". En este caso, el maestro
DP direcciona un slot incorrecto (slot configurado + 3).
Solución: Conmutar la interfaz del maestro DP a "DPV1".
Nota
La interfaz de la instrucción "RDREC" es idéntica a la del FB "RDREC" definido en la norma
PROFIBUS and PROFINET Guideline Communication Function Blocks on PROFIBUS DP and
PROFINET IO.

Funcionamiento
"RDREC" es una instrucción asíncrona, de modo que su ejecución se extiende a lo largo de
varias llamadas. Para iniciar la transferencia del registro, debe llamarse RDREC con REQ = 1.

5888

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Mediante el parámetro de salida BUSY y los dos bytes centrales del parámetro de salida
STATUS , se muestra el estado de la petición. Los dos bytes centrales de STATUS
corresponden al parámetro de salida RET_VAL de las instrucciones asíncronas.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).
La transferencia del registro se puede dar por finalizada cuando el parámetro de salida BUSY
ha adoptado el valor FALSE .
Mientras se esté transfiriendo el registro no deberá modificarse el área de destino,
concretamente ni su longitud ni su contenido.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RDREC":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: realizar la transferencia del juego
de datos

ID

Input

DWORD

I, Q, M, D, L o constan‐ Dirección lógica del esclavo DP o compo‐
te
nente PROFINET IO (módulo)
● En un módulo de salida debe activarse
el bit 15 (ejemplo de la dirección 5:
ID:=DW#16#8005).
● Con un módulo mixto debe indicarse la
dirección más baja de las dos.

INDEX

Input

INT

I, Q, M, D, L o constan‐ Número del juego de datos
te

MLEN

Input

INT

I, Q, M, D, L o constan‐ Longitud máxima en bytes de la informa‐
te
ción de registro que se debe leer

VALID

Output

BOOL

I, Q, M, D, L

El nuevo registro se ha recibido y es válido

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La lectura todavía no ha finali‐
zado.

ERROR

Output

BOOL

I, Q, M, D, L

ERROR = 1: se ha producido un error du‐
rante la lectura.

STATUS

Output

DWORD

I, Q, M, D, L

Estado del bloque o información de error
Para la interpretación del parámetro STA‐
TUS , ver el parámetro STATUS (Pági‐
na 5901).

Programación del PLC
Manual de programación y manejo, 11/2019

5889

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

LEN

Output

INT

I, Q, M, D, L

Longitud de la información del registro leída

RECORD

InOut

ANY

I, Q, M, D, L

Área de destino para el registro leído
Nota: Tenga en cuenta que en las CPU
S7-300, el parámetro RECORD siempre
requiere que se especifiquen por completo
los parámetros de DB (ej.:
P#DB13.DBX0.0 byte 100). En las CPU
S7-300 no está permitido omitir un número
de DB explícito; de lo contrario se genera
un mensaje de error en el programa de
usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Si se utiliza la instrucción para leer un registro con PROFINET IO, los valores negativos de los
parámetros INDEX, MLEN y LEN se interpretan como número entero de 16 bits sin signo.

WRREC: Escribir registro
Descripción
Esta instrucción permite transferir el registro RECORD al componente direccionado con ID.
Puede tratarse de un módulo central o de un componente descentralizado (PROFIBUS DP o
PROFINET IO).
Con LEN (oculto) se indica la longitud en bytes del registro que se debe transferir. Por ello debe
escogerse un área de origen RECORD con una longitud de por lo menos LEN bytes.
El valor TRUE del parámetro de salida DONE indica que el registro se ha transferido
correctamente.
Si se ha producido un error durante la transferencia del registro, se señaliza mediante el
parámetro de salida ERROR . En ese caso, el parámetro de salida STATUS contiene la
información de error.
Nota
Si un esclavo DPV1 está configurado mediante archivo GSD (a partir de la rev. 3 de GSD) y la
interfaz DP del maestro DP está ajustada como "Compatible con S7", no se pueden escribir en
el programa de usuario registros con "WRREC" en los módulos de E/S. En este caso, el
maestro DP direcciona un slot incorrecto (slot configurado + 3).
Solución: Conmutar la interfaz del maestro DP a "DPV1".

5890

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nota
La interfaz de la instrucción "WRREC" es idéntica a la del FB "WRREC" definido en la norma
PROFIBUS and PROFINET Guideline Communication Function Blocks on PROFIBUS DP and
PROFINET IO.

Funcionamiento
"WRREC" es una instrucción asíncrona, de modo que su ejecución se extiende a lo largo de
varias llamadas. Para iniciar la transferencia del registro, debe llamarse "WRREC" con
REQ = 1.
Mediante el parámetro de salida BUSY y los dos bytes centrales del parámetro de salida
STATUS , se muestra el estado de la petición. Los dos bytes centrales de STATUS
corresponden al parámetro de salida RET_VAL de las instrucciones asíncronas.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).
Asegúrese de asignar siempre el mismo valor al parámetro actual de RECORD en todas las
llamadas de "WRREC" pertenecientes a una misma petición. Lo mismo se aplica a los
parámetros actuales de LEN.
La transferencia del registro se puede dar por finalizada cuando el parámetro de salida BUSY
ha adoptado el valor FALSE .

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "WRREC":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: realizar la transferencia del jue‐
go de datos

ID

Input

DWORD

I, Q, M, D, L o constante Dirección lógica del esclavo DP o compo‐
nente PROFINET IO (módulo)
Para un módulo de salida, debe activarse
el bit 15 (ejemplo para la dirección 5:
ID:=DW#16#8005).
En un módulo mixto debe indicarse la me‐
nor de las dos direcciones.

INDEX

Input

INT

I, Q, M, D, L o constante Número del juego de datos

LEN

Input

INT

I, Q, M, D, L o constante (oculto)
Longitud máxima en bytes del juego de
datos que se debe transferir

DONE

Output

BOOL

I, Q, M, D, L

Se ha transferido el juego de datos

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La escritura todavía no ha fi‐
nalizado.

ERROR

Output

BOOL

I, Q, M, D, L

ERROR = 1: Se ha producido un error du‐
rante la escritura.

Programación del PLC
Manual de programación y manejo, 11/2019

5891

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

STATUS

Output

DWORD

I, Q, M, D, L

Estado del bloque o información de error
Para la interpretación del parámetro STA‐
TUS , ver el parámetro STATUS (Pági‐
na 5901).

RECORD

InOut

ANY

I, Q, M, D, L

Juego de datos
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro RECORD siempre
requiere que se especifiquen por comple‐
to los parámetros de DB (ej.:
P#DB13.DBX0.0 byte 100). En las CPU
S7-300 no está permitido omitir un núme‐
ro de DB explícito; de lo contrario se ge‐
nera un mensaje de error en el programa
de usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Si se utiliza la instrucción para escribir un registro con PROFINET IO, los valores negativos de
los parámetros INDEX y LEN se interpretan como número entero de 16 bits sin signo.

GETIO: Leer memoria imagen de proceso
Descripción
Con esta instrucción se leen de modo coherente todas las entradas de un esclavo DP
normalizado o un dispositivo PROFINET IO. Para ello, esta instrucción llama la instrucción
"DPRD_DAT (Página 5929)". Si no se ha producido ningún error durante la transferencia de
datos, los datos leídos se registran en el área de destino delimitada mediante INPUTS .
El área de destino debe tener la misma longitud que se haya configurado para el componente
seleccionado.
En un esclavo DP normalizado con estructura modular o con varias IDs de DP, la llamada de
"GETIO" solo permite acceder cada vez a los datos de un solo componente o ID de DP en la
dirección configurada.

5892

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "GETIO":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

ID

Input

DWORD

I, Q, M, D, L o constante ● low word: Dirección lógica del esclavo
DP o componente PROFINET IO
(módulo)

STATUS

Output

DWORD

I, Q, M, D, L

Contiene la información de error de
"DPRD_DAT (Página 5929)" en la forma
DW#16#40xxxx00

LEN

Output

INT

I, Q, M, D, L

Número de datos leídos, en bytes

INPUTS

InOut

ANY

I, Q, M, D

Área de destino para los datos leídos. Debe
tener la misma longitud que se haya confi‐
gurado para el esclavo DP o componente
PROFINET-IO seleccionado. Solo se admi‐
te el tipo de datos BYTE .

● high word: Irrelevante

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro STATUS
Consulte también: DPRD_DAT: Leer datos coherentes de un esclavo DP normalizado
(Página 5929).

SETIO: Transferir memoria imagen de proceso
Descripción
Con la instrucción "SETIO" se transfieren de modo coherente los datos del área de origen
delimitada por OUTPUTS al esclavo DP normalizado o dispositivo PROFINET IO y, en su
caso, a la memoria imagen de proceso (concretamente si se ha configurado el área de
direcciones en cuestión del esclavo DP normalizado como área de coherencia en una memoria
imagen de proceso). "Para ello, SETIO llama la instrucción DPWR_DAT (Página 5932)".
El área de origen debe tener la misma longitud que se haya configurado para el componente
seleccionado.
En un esclavo DP normalizado con estructura modular o con varias IDs de DP, la llamada de
"SETIO" permite acceder a los datos de un solo componente o ID de DP.

Programación del PLC
Manual de programación y manejo, 11/2019

5893

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SETIO":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

● low word: Dirección lógica del esclavo
DP o componente PROFINET IO
(módulo)

LEN

Input

INT

I, Q, M, D, L

Irrelevante

STATUS

Output

DWORD

I, Q, M, D, L

Contiene la información de error de
"DPWR_DAT (Página 5932)" en la forma
DW#16#40xxxx00

OUTPUTS

InOut

ANY

I, Q, M, D

Área de origen para los datos que se de‐
ben escribir. Debe tener la misma longi‐
tud que se haya configurado para el es‐
clavo DP o componente PROFINET-IO
seleccionado. Solo se admite el tipo de
datos BYTE.

● high word: Irrelevante

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro STATUS
Consulte también: DPWR_DAT: Escribir datos coherentes de un esclavo DP normalizado
(Página 5932).

GETIO_PART: Leer área de memoria imagen de proceso
Descripción
Con la instrucción "GETIO_PART" se lee de modo coherente una parte del área de la memoria
imagen de proceso perteneciente a un esclavo DP normalizado o a un dispositivo PROFINET
IO. "Para ello, GETIO_PART llama la instrucción "UBLKMOV".
Nota
Al OB en el que se llame "GETIO_PART" debe asignársele una memoria imagen parcial de
proceso de las entradas. Además, antes de la llamada de "GETIO_PART" es necesario incluir
el correspondiente esclavo DP normalizado o dispositivo PROFINET IO en esa memoria
imagen parcial de proceso de las entradas. Si la CPU no es capaz de trabajar con memorias
imagen parcial de proceso o se desea llamar "GETIO_PART" en el OB 1, antes de la llamada
de "GETIO_PART" debe incluirse el correspondiente esclavo DP normalizado o dispositivo
PROFINET IO en la memoria imagen de proceso de las entradas.

5894

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Con los parámetros OFFSET y LEN se define la porción que se debe leer del área de la
memoria imagen de proceso del componente direccionado mediante ID.
● Si no se ha producido ningún error durante la transferencia de datos, ERROR adquiere el
valor FALSE, y los datos leídos se registran en el área de destino delimitada mediante
INPUTS.
● Si se ha producido algún error durante la transferencia de datos, ERROR adquiere el valor
TRUE, y STATUS recibe la información de error de "UBLKMOV".
● Si el área de destino (parámetro INPUTS) es menor que LEN, se transfieren todos los bytes
que INPUTS pueda contener. ERROR adquiere el valor FALSE. Si el área de destino es
mayor que LEN, se escriben los primeros LEN bytes del área de destino. ERROR adquiere
el valor FALSE.
Nota
"GETIO_PART" no comprueba en la memoria imagen de proceso de las entradas los
límites entre los datos que pertenecen a los distintos componentes PROFIBUS-DP o
PROFINET-IO. Por eso el usuario debe asegurarse de que el área de memoria imagen de
proceso definida mediante OFFSET y LEN pertenezca a un componente. La lectura de
varios componentes al mismo tiempo puede no ser compatible con sistemas futuros y
dificultar la migrabilidad a sistemas de otros fabricantes.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "GETIO_PART":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

ID

Input

DWORD

I, Q, M, D, L o constan‐ ● low word: Dirección lógica del esclavo
te
DP o componente PROFINET IO
(módulo)

OFFSET

Input

INT

I, Q, M, D, L o constan‐ Número del primer byte que se debe leer
te
en la memoria imagen de proceso del
componente (valor más pequeño posible:
0)

LEN

Input

INT

I, Q, M, D o constante

Número de caracteres que se van a leer

STATUS

Output

DWORD

I, Q, M, D, L

Contiene la información de error de
"UBLKMOV" en la forma
DW#16#40xxxx00, si ERROR = TRUE.

● high word: Irrelevante

Programación del PLC
Manual de programación y manejo, 11/2019

5895

Instrucciones
4.2 Instrucciones
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

ERROR

Output

BOOL

I, Q, M, D, L

Visualización de error:
ERROR = TRUE, en caso de que se pro‐
duzca un error al llamar "UBLKMOV".

INPUTS

InOut

ANY

I, Q, M, D

Área de destino para los datos leídos:
● Si el área de destino es menor que
LEN, se transfieren todos los bytes
que INPUTS pueda contener.
ERROR adquiere el valor FALSE.
● Si el área de destino es mayor que
LEN, se escriben los primeros LEN
bytes del área de destino. ERROR
adquiere el valor FALSE.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros STATUS y ERROR
Véase la instrucción "UBLKMOV".

SETIO_PART: Transferir área de memoria imagen de proceso
Descripción
Con la instrucción "SETIO_PART" se transfieren de modo coherente los datos del área de
origen delimitada por OUTPUTS a una parte del área de memoria imagen de proceso
perteneciente a un esclavo DP normalizado o a un dispositivo PROFINET IO. "Para ello,
SETIO_PART llama la instrucción "UBLKMOV".
Nota
Debe asignarse una memoria imagen parcial de proceso de las salidas al OB en el que se
llama "SETIO_PART". Además, antes de la llamada de "SETIO_PART" es necesario incluir el
correspondiente esclavo DP normalizado o dispositivo PROFINET IO en esa memoria imagen
parcial de proceso de las entradas. Si la CPU no es capaz de trabajar con memorias imagen
parcial de proceso o se desea llamar "SETIO_PART" en el OB 1, antes de la llamada a
"SETIO_PART" debe incluirse el correspondiente esclavo DP normalizado o dispositivo
PROFINET IO en la memoria imagen de proceso de las salidas.

5896

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Con los parámetros OFFSET y LEN se define la porción que se debe escribir del área de la
memoria imagen de proceso del componente direccionado mediante ID.
● Si no se ha producido ningún error durante la transferencia de datos, ERROR adquiere el
valor FALSE.
● Si se ha producido algún error durante la transferencia de datos, ERROR adquiere el valor
TRUE, y STATUS recibe la información de error de "UBLKMOV".
● Si el área de origen (parámetro OUTPUTS) es menor que LEN, se transfieren todos los
bytes que OUTPUTS contiene. ERROR adquiere el valor FALSE. Si el área de origen es
mayor que LEN, se transfieren los primerosLEN bytes de OUTPUTS. ERROR adquiere el
valor FALSE.
Nota
"SETIO_PART" no comprueba en la memoria imagen de proceso de las salidas los límites
entre los datos que pertenecen a los distintos componentes PROFIBUS-DP o PROFINETIO. Por eso el usuario debe asegurarse de que el área de memoria imagen de proceso
definida mediante OFFSET y LEN pertenezca a un componente. La escritura de varios
componentes al mismo tiempo puede no ser compatible con sistemas futuros y dificultar la
migrabilidad a sistemas de otros fabricantes.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SETIO_PART":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

ID

Input

DWORD

I, Q, M, D, L o constante ● low word: Dirección lógica del esclavo
DP o componente PROFINET IO
(módulo)

OFFSET

Input

INT

I, Q, M, D, L o constante Número del primer byte que se debe escribir
en la memoria imagen de proceso del com‐
ponente (valor más pequeño posible: 0)

LEN

Input

INT

I, Q, M, D, L o constante Número de caracteres que se van a escribir

STATUS

Output

DWORD

I, Q, M, D, L

● high word: Irrelevante

Programación del PLC
Manual de programación y manejo, 11/2019

Contiene la información de error de "UBLK‐
MOV" en la forma DW#16#40xxxx00, si
ERROR = TRUE.

5897

Instrucciones
4.2 Instrucciones
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

ERROR

Output

BOOL

I, Q, M, D, L

Visualización de error:
ERROR = TRUE, en caso de que se pro‐
duzca un error al llamar UBLKMOV.

OUTPUTS

InOut

ANY

I, Q, M, D

Área de origen para los datos que se deben
escribir:
● Si el área de origen es menor que LEN,
se transfieren todos los bytes que
OUTPUTS contiene. ERROR adquiere
el valor FALSE.
● Si el área de origen es mayor que LEN,
se transfieren los primerosLEN bytes de
OUTPUTS. ERROR adquiere el valor
FALSE.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros STATUS y ERROR
Véase la instrucción "UBLKMOV".

RALRM: Recibir alarma
Descripción de RALRM
Descripción
La instrucción recibe una alarma, junto con la información correspondiente, desde un módulo
de periferia (configuración centralizada) o desde un componente de un esclavo DP o un
dispositivo PROFINET IO, y proporciona dicha información a través de sus parámetros de
salida.
Los parámetros de salida ofrecen tanto la información de arranque del OB llamado como
información procedente del origen de la alarma.
Esta instrucción debe llamarse solo dentro del OB de alarma que el sistema operativo de la
CPU ha iniciado debido a la alarma procedente de la periferia que se debe investigar.
Nota
Si se llama la instrucción en un OB cuyo evento de arranque no es una alarma procedente de
la periferia, la instrucción ofrecerá al usuario menos información en sus salidas.
Si llama la instrucción en distintos OBS, asegúrese de utilizar distintos DBs de instancia. Si se
van a evaluar los datos resultantes de una llamada de "RALRM" fuera del OB de alarma
correspondiente, es necesario incluso utilizar un DB de instancia independiente por cada
evento de arranque de OB.

5898

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nota
La interfaz de la instrucción "RALRM" es idéntica a la del FB "RALRM" definido en la norma
PROFIBUS and PROFINET Guideline Communication Function Blocks on PROFIBUS DP and
PROFINET IO.

Llamada de "RALRM"
Esta instrucción se puede llamar en tres modos de operación (MODE) distintos, que se
describen en la tabla siguiente.
MODE

RALRM ...

0

... muestra el componente causante de la alarma en el parámetro de salida ID, y en el
parámetro de salida NEW escribe TRUE.

1

... escribe en todos los parámetros de salida, sea cual sea el componente causante de la
alarma.

2

... comprueba si el componente especificado en el parámetro de entrada F_ID es el cau‐
sante de la alarma.
● En caso negativo, NEW adquiere el valor FALSE.
● En caso afirmativo, NEW adquiere el valor TRUE, y se escriben todos los demás
parámetros de salida.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RALRM":
Parámetros

Declaración

Tipo de datos

Área de memoria

MODE

Input

INT

I, Q, M, D, L o constante Modo de operación

F_ID

Input

DWORD

I, Q, M, D, L o constante Dirección lógica inicial del componente (mó‐
dulo) del que se deben recibir alarmas

MLEN

Input

INT

I, Q, M, D, L o constante Longitud máxima en bytes de la información
de alarmas que se desea recibir

NEW

Output

BOOL

I, Q, M, D, L

Se ha recibido una nueva alarma.

STATUS (Pági‐
na 5901)

Output

DWORD

I, Q, M, D, L

Código de error de la instrucción o del maes‐
tro DP

ID

Output

DWORD

I, Q, M, D, L

Dirección lógica inicial del componente (mó‐
dulo) del que se ha recibido una alarma
El bit 15 contiene la identificación de E/S: 0
si es una dirección de entrada y 1 si es de
salida.

LEN

Output

INT

I, Q, M, D, L

Longitud de la información de alarma recibi‐
da

Programación del PLC
Manual de programación y manejo, 11/2019

Descripción

5899

Instrucciones
4.2 Instrucciones
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

TINFO (Pági‐
na 5905)

InOut

ANY

I, Q, M, D, L

(task information)
Área de destino para la información de
arranque del OB y la información adminis‐
trativa
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro TINFO siempre re‐
quiere que se especifiquen por completo los
parámetros de DB (ej.: P#DB13.DBX0.0
byte 100). En las CPU S7-300 no está per‐
mitido omitir un número de DB explícito; de
lo contrario se genera un mensaje de error
en el programa de usuario.

AINFO (Pági‐
na 5908)

InOut

ANY

I, Q, M, D, L

(alarm information)
Área de destino para información de enca‐
bezado e información adicional de alarma
Para AINFO debe reservarse una longitud
de por lo menos MLEN bytes.
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro AINFO siempre re‐
quiere que se especifiquen por completo los
parámetros de DB (ej.: P#DB13.DBX0.0
byte 100). En las CPU S7-300 no está per‐
mitido omitir un número de DB explícito; de
lo contrario se genera un mensaje de error
en el programa de usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Si se escoge un área de destino TINFO o AINFO demasiado corta, la instrucción no puede
registrar toda la información.
Consulte también: Área de destino TINFO y AINFO (Página 5916).

5900

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro STATUS
Estructura del parámetro STATUS
El parámetro de salida STATUS contiene información de error. Si se interpreta como
ARRAY[1...4] OF BYTE , la información de error presenta la siguiente estructura:
Elemento de cam‐ Nombre
po

Significado

STATUS[1]

● B#16#00, si no hay ningún error

Function_Num

● ID de función de DPV1-PDU: En caso de error se
devuelve B#16#80 (al leer juego de datos: B#16#DE, al
escribir juego de datos: B#16#DF). Si no se utiliza ningún
elemento de protocolo DPV1: B#16#C0.
STATUS[2]

Error_Decode

Ubicación de la identificación de error

STATUS[3]

Error_Code_1

Identificación de error

STATUS[4]

Error_Code_2

Extensión específica del fabricante de la identificación de
error

Elemento de campo STATUS[2]
STATUS[2] puede adoptar los siguientes valores:
Error_Decode
(B#16#...)

Origen

Significado

00 a 7F

CPU

Ningún error ni advertencia

80

DPV1

Error según IEC 61158-6

81 a 8F

CPU

B#16#8x indica un error en el x parámetro de llamada de la ins‐
trucción.

FE, FF

DP Profile

Error específico de perfil

Elemento de campo STATUS[3]
STATUS[3] puede adoptar los siguientes valores:
Error_Decode
(B#16#...)

Error_Code_1
(B#16#...)

00

00

70

00

reserved, re‐
ject

Primera llamada; no hay ninguna transferencia
de juego de datos activa

01

reserved, re‐
ject

Primera llamada; transferencia de juego de da‐
tos iniciada

02

reserved, re‐
ject

Llamada intermedia; transferencia del juego de
datos ya iniciada

90

reserved,
pass

Dirección lógica inicial no válida

80

Programación del PLC
Manual de programación y manejo, 11/2019

Explicación
según DPV1

Significado
Ningún error ni advertencia

5901

Instrucciones
4.2 Instrucciones
Error_Decode
(B#16#...)

5902

Error_Code_1
(B#16#...)

Explicación
según DPV1

Significado

92

reserved,
pass

Tipo no admisible en puntero ANY

93

reserved,
pass

El componente DP direccionado mediante ID o
F_ID no está configurado.

95

Error al leer la información adicional de alarma
(con periferia central o con periferia descentrali‐
zada a través de interfaz DP externa, este error
se emite como "Error de grupo".)
Nota: Al acoplar y sincronizar puede suceder que
la información adicional de alarma no esté dis‐
ponible temporalmente.

96

La CPU maestra ha pasado a STOP. En ese mo‐
mento se estaba procesando un OB. La instruc‐
ción "RALRM (Página 5898)" no puede devolver
la información de arranque del OB, la informa‐
ción administrativa, la información de encabeza‐
do ni la información adicional de alarma.
La información de arranque del OB se puede leer
con la instrucción "RD_SINFO (Página 6114)".
Además, para los OBs 4x, 55, 56, 57, 82 y 83 es
posible leer en modo asincrónico con la instruc‐
ción "DPNRM_DG (Página 5956)" el telegrama
de diagnóstico actual del esclavo DP en cuestión
(información de dirección extraída de la informa‐
ción de arranque del OB).

A0

read error

Respuesta negativa al leer el módulo

A1

write error

Respuesta negativa al escribir en el módulo

A2

module failure Error de protocolo DP con Layer 2 (p. ej. fallo de
esclavo o fallos de bus)

A3

reserved,
pass

Error general de comunicación o dispositivo IO /
esclavo DP no accesible

A4

reserved,
pass

Fallo de comunicación en el bus K

A5

reserved,
pass

–

A7

reserved,
pass

El esclavo DP o el módulo está ocupado en otra
tarea (error temporal)

A8

version con‐
flict

El esclavo DP o el módulo notifica versiones no
concordantes

A9

feature not
supported

Función no soportada por el esclavo DP o el mó‐
dulo

AA a AF

user specific

El esclavo DP o el módulo notifica un error espe‐
cífico de fabricante en su aplicación. Consulte la
documentación del fabricante del esclavo DP o el
módulo.

B0

invalid index

El módulo no conoce el juego de datos
No se admiten números de juego de datos ≥ 256

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Error_Decode
(B#16#...)

Error_Code_1
(B#16#...)

Explicación
según DPV1

Significado

B1

write length
error

La indicación de longitud en el parámetro RE‐
CORD es errónea;
● Con "RALRM (Página 5898)": Error de
longitud en AINFO,
● Con "RDREC (Página 5888)" y "WRREC
(Página 5890)": Error de longitud en MLEN

B2

invalid slot

● El slot configurado no está ocupado.
● Para PROFINET IO y PROFIBUS DP:
Dispositivo IO / esclavo DP no accesible

B3

type conflict

El tipo de módulo real no coincide con el tipo de
módulo configurado

B4

invalid area

El esclavo DP o el módulo notifica un acceso a un
área no autorizada.

B5

state conflict

El esclavo DP o el módulo no está listo

B6

access denied El esclavo DP o el módulo deniega el acceso

B7

invalid range

El esclavo DP o el módulo notifica un área no
autorizada en un parámetro o un valor

B8

invalid para‐
meter

El esclavo DP o el módulo notifica un parámetro
no autorizado

B9

invalid type

El esclavo DP o el módulo notifica un tipo no au‐
torizado
● Con "RDREC (Página 5888)": Búfer
demasiado pequeño (no es posible leer
porciones)
● Con "WRREC (Página 5890)": Búfer
demasiado pequeño (no es posible escribir
porciones)

BA a BF

user specific

El esclavo DP o el módulo notifica un error espe‐
cífico de fabricante en el acceso. Consulte la do‐
cumentación del fabricante del esclavo DP o el
módulo.
Nota sobre el valor B#16#BA: con PROFINET en
el sistema H se aplica lo siguiente: si se rechaza
una orden de juego de datos con el valor de re‐
torno W#16#80BA, debe repetirse la orden.

C0

read constrain Con "WRREC (Página 5890)": Los datos solo
conflict
pueden escribirse en el estado STOP de la CPU.
Nota: En consecuencia, el programa de usuario
no puede escribir. Solo es posible escribir datos
online con la PG/el PC.
Con "RDREC (Página 5888)": El juego de datos
está cargado en el módulo, pero todavía no exis‐
ten datos o los datos solo pueden leerse en el
estado STOP de la CPU. Nota: Si los datos solo
pueden leerse en el estado STOP de la CPU, el
programa de usuario no puede evaluarlos. En tal
caso solo es posible leer los datos online con la
PG/el PC.

Programación del PLC
Manual de programación y manejo, 11/2019

5903

Instrucciones
4.2 Instrucciones
Error_Decode
(B#16#...)

Error_Code_1
(B#16#...)

Explicación
según DPV1

Significado

C1

write cons‐
train conflict

Los datos de la orden de escritura efectuada an‐
teriormente en el módulo para el mismo juego de
datos no han sido procesados todavía por el mó‐
dulo.

C2

resource busy En este momento el módulo está procesando el
máximo posible de peticiones para una CPU.

C3

resource una‐
vailable

C4

En este momento los recursos necesarios están
ocupados.
Error temporal interno. No se ha podido ejecutar
la orden.
Repita la orden. Si este error se produce a me‐
nudo, compruebe si hay fuentes de perturbación
en la instalación.

C5

El esclavo DP o el módulo no está disponible.

C6

Transferencia del juego de datos cancelada de‐
bido a una interrupción de la clase de prioridad

C7

Interrupción de la orden debido a rearranque
completo (en caliente) o arranque en frío del
maestro DP

C8 bis CF

El esclavo DP o el módulo notifica a sus recursos
un error específico de fabricante. Consulte la do‐
cumentación del fabricante del esclavo DP o el
módulo.

Dx
8x (x = 1, ... 9, A,
B, C, D, E, F)

00 a FF

user specific

Específico de esclavo DP. Ver descripción del
esclavo DP.
Error en el parámetro de llamada y (y = 1, ...15)
● Error_Code_1 = 00: Modo de operación no
admisible
● Para todos los demás valores de
Error_Code_1, consulte también: Evaluación
de errores con el parámetro de salida
RET_VAL (Página 174)

FE, FF

00 bis FF

Error específico de perfil

Elemento de campo STATUS[4]
STATUS[4] es transferido por el maestro DP a la CPU y a la instrucción en caso de error de
DPV1. Sin error de DPV1, el valor se ajusta a 0 con las siguientes excepciones para las
instrucciones "RDREC (Página 5888)" y "WRREC (Página 5890)":
● STATUS[4] contiene la longitud del área de destino extraída de RECORD, en caso de que
LEN > longitud del área de destino extraída de RECORD
● STATUS[4]=LEN, si la longitud real del juego de datos < LEN < longitud del área de destino
extraída de RECORD
● STATUS[4]=0, si se debiera ajustar STATUS[4] > 255
Con PROFINET IO STATUS[4] contiene el valor 0.

5904

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro TINFO
Estructura de datos del área de destino TINFO
Byte

Significado

de 0 a 19

Información de arranque del OB en el que se ha llamado actualmente "RALRM"

20 y 21

Dirección y descripción exacta: ver abajo

de 22 a 31

Información administrativa y descripción exacta: ver abajo

Estructura de la dirección (bytes 20 y 21)
La dirección contiene:
● En caso de configuración centralizada, el número de rack (0-31).
%LW

     

























1¼PHURGHUDFN



● En caso de estructura descentralizada con PROFIBUS DP
– La ID del sistema maestro DP (1-32)
– El número de estación (0-127).
%LW

     



















1¼PHURGHHVWDFLµQ

,'GHOVLVWHPDPDHVWUR'3

● En caso de estructura descentralizada con PROFINET IO
– Las dos últimas posiciones de la ID del sistema PROFINET IO (0-15); para obtener la ID
del sistema PROFINET IO completa, sume 100 (decimal)
– El número de estación (0-2047).
%LW

     



Programación del PLC
Manual de programación y manejo, 11/2019

,'GHVLVWHPD,2





















1¼PHURGHHVWDFLµQ

5905

Instrucciones
4.2 Instrucciones

Estructura de la información administrativa, bytes 20 a 25
Número
Tipo de
de byte pa‐ datos
ra TINFO

Significado

20

Centrali‐
zado:

0

Descen‐
tralizado:

PROFIBUS DP: La ID del sistema maestro DP (valores posibles: de 1 a 32)

BYTE

PROFINET IO: ver arriba
21

BYTE

Centrali‐
zado:

Número de rack (valores posibles: de 0 a 31)

Descen‐
tralizado:

Número de la estación DP (valores posibles: de 0 a 127)
PROFINET IO: ver arriba

22

BYTE

Centrali‐
zado:

● 0: Registro 0 o registro 1

Descen‐
tralizado:

bits de 0 a 3:

Tipo de
esclavo

0000:
0001:
0010:
0011:
0100 – 0111:
1000:
a partir de 1001:

● bits de 4 a 7:

23

BYTE

Centrali‐
zado:

● 0

Descen‐
tralizado:

● bits de 0 a 3:

● bits de 4 a 7:

5906

Tipo de
perfil

Tipo de informa‐
ción de alarma

Versión de la es‐
tructura

DP (estructura registro 0)
DPS7 (estructura registro 0 o re‐
gistro 1)
DPS7 V1 (estructura registro 0 o
registro 1)
DPV1 (estructura según estándar
PROFIBUS DP)
reservado
PROFINET IO (estructura según
estándar PROFINET IO)
reservado
Reservado

0000:

Transparente, como siempre
con PROFINET IO
(la alarma procede de un mó‐
dulo descentralizado configura‐
do)

0001:

Representante
(alarma de un esclavo no
DPV1/un dispositivo no IO o de
un slot no configurado)

0010:

Generada
(alarma generada en la CPU)

a partir de
0011:

Reservado

0000:

Inicial

a partir de
0001:

Reservado

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Número
Tipo de
de byte pa‐ datos
ra TINFO

Significado

24

Centrali‐
zado:

● 0

Descen‐
tralizado:

Flags de la interfaz de maestro PROFIBUS DP/interfaz de controlador PROFINET IO

25

BYTE

BYTE

Bit 0 = 0:

Alarma procedente de una interfaz integrada (PROFINET IO o
PROFIBUS DP)

Bit 0 = 1:

Alarma procedente de una interfaz externa (PROFINET IO o
PROFIBUS DP)

Bits de 1 a 7:

Reservado

Centrali‐
zado:

● 0

Descen‐
tralizado:

Flags de la interfaz de esclavo PROFIBUS DP
EXT_DIAG_FLAG del telegrama de diagnóstico, o 0 si este bit no
está presente en la alarma.

● Bit 0:

El bit es 1 si el esclavo DP tiene un fallo.
● Bits de 1 a 7:

Reservado

Flags de la interfaz del controlador PROFINET IO
ARDiagnosisstate o 0, si no hay información en la alarma.

● Bit 0:

El bit es 1 si el dispositivo IO tiene un fallo.
● Bits de 1 a 7:

Reservado

Estructura de la información administrativa de los bytes 26 a 27 con PROFIBUS y con configuración
centralizada
Número de byte
para TINFO

Tipo de da‐
tos

Significado

26 y 27

WORD

Centralizado:

WORD

Descentraliza‐ Número de identificación de PROFIBUS como identi‐
do:
ficación unívoca del esclavo PROFIBUS DP

28 y 29

WORD

0

(Pueden omitirse los bytes 28 y 29)

30 y 31

WORD

0

(Pueden omitirse los bytes 30 y 31)

Programación del PLC
Manual de programación y manejo, 11/2019

0

5907

Instrucciones
4.2 Instrucciones

Estructura de la información administrativa, bytes 26 a 31 con PROFINET IO
Número de byte
para TINFO

Tipo de da‐
tos

Significado

26 y 27

WORD

Descentraliza‐ Número de identificación del dispositivo PROFINET
do:
IO como identificación unívoca del dispositivo

28 y 29

WORD

Descentraliza‐ Identificación de fabricante
do:

30 y 31

WORD

Descentraliza‐ Número de identificación de la instancia
do:

Parámetro AINFO
Estructura de datos del área de destino AINFO con alarmas de PROFIBUS DP o periferia centralizada
Encontrará los datos para PROFINET IO más abajo.
Byte

Significado

de 0 a 3

Información de encabezado y descripción exacta: ver abajo

de 4 a 199

Información adicional de alarma: Datos sobre la alarma en cuestión:
Centralizado:

ARRAY[0] a ARRAY[195]

Descentralizado: ARRAY[0] a ARRAY[59]

Estructura de la información de encabezado con alarmas de PROFIBUS DP o periferia centralizada
Byte

Tipo de da‐ Significado
tos

0

BYTE

Longitud en bytes de la información de alarma recibida
Centralizado: de 4 a 224
Descentrali‐
zado:

1

BYTE

Centralizado: Reservado
Descentrali‐
zado:

2

5908

BYTE

de 4 a 63

Identificador del tipo de alarma
1:
2:
3:
4:
5:
6:
31

Alarma de diagnóstico
Alarma de proceso
Alarma de extracción
Alarma de inserción
Alarma de estado
Alarma de actualización
Fallo de un aparato de ampliación, un siste‐
ma maestro DP o una estación DP

de 32 a 126:

Alarma específica de fabricante

Número de slot del componente causante de la alarma

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Byte

Tipo de da‐ Significado
tos

3

BYTE

Centralizado: Reservado
Descentrali‐
zado:

Specifier
Bits 0 y 1:

0: No hay más información;
1: Evento entrante, slot con fallo
2: Evento saliente, slot ya sin fallo
3: Evento entrante, slot sigue con fallo

Bit 2:

Add_Ack

Bits de 3 a 7:

Número de secuencia

Estructura de datos del área de destino AINFO con alarmas de PROFINET IO
Byte

Significado

de 0 a 25

Información de encabezado y descripción exacta: ver abajo

de 26 a 1431 Información adicional de alarma: Datos de diagnóstico normalizados sobre la alarma en
cuestión:
ARRAY[0] a ARRAY[1405]
Nota: La información adicional de alarma también puede omitirse.

Estructura de la información de encabezado con alarmas de PROFINET IO
Byte

Tipo de datos

Significado

0y1

WORD

● Bits de 0 a 7: Tipo de bloque

2y3

WORD

Longitud del bloque

4y5

WORD

Versión:

● Bits de 8 a 15: Reservado

● Bits de 0 a 7: low byte
● Bits de 8 a 15: high byte

Programación del PLC
Manual de programación y manejo, 11/2019

5909

Instrucciones
4.2 Instrucciones
Byte

Tipo de datos

Significado

6y7

WORD

Identificador del tipo de alarma:
● 1: Alarma de diagnóstico (entrante)
● 2: Alarma de proceso
● 3: Alarma de extracción
● 4: Alarma de inserción
● 5: Alarma de estado
● 6: Alarma de actualización
● 7: Alarma de redundancia
● 8: Controlado por el Supervisor (Controlled_by_Supervisor)
● 9: Habilitado por el Supervisor (Released_by_Supervisor)
● 10: No se ha insertado el módulo configurado
● 11: Retorno del submódulo
● 12: Alarma de diagnóstico (saliente)
● 13: Aviso de conexión para comunicación directa
● 14: Aviso de cambio de vecindario
● 15: Aviso de sincronización de ciclo (desde el bus)
● 16: Aviso de sincronización de ciclo (desde el dispositivo)
● 17: Aviso de componente de red
● 18: Aviso de sincronización de reloj (desde el bus)
● de 19 a 31: Reservado
● de 32 a 127: Alarma específica de fabricante
● de 128 a 65535: Reservado

5910

de 8 a 11

DWORD

API (Application Process Identifier)

de 12 a 13

WORD

Número de slot del componente que dispara la alarma (rango de valores
de 0 a 65535)

de 14 a 15

WORD

Número de slot de submódulo del componente que dispara la alarma
(rango de valores de 0 a 65535)

de 16 a 19

DWORD

Identificación de módulo; información unívoca del origen de la alarma

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Byte

Tipo de datos

Significado

de 20 a 23

DWORD

Identificación de submódulo; información unívoca del origen de la alarma

de 24 a 25

WORD

Alarm Specifier:
● Bits de 0 a 10: Número de secuencia (rango de valores de 0 a 2047)
● Bit 11: Diagnóstico de canal:
0: No hay ningún diagnóstico de canal
1: Hay diagnóstico de canal
● Bit 12: Estado de diagnóstico específico de fabricante:
0: No hay ninguna información de estado específica de fabricante
1: Hay información de estado específica de fabricante
● Bit 13: Estado del diagnóstico en el submódulo:
0: No hay información de estado, se han eliminado todos los errores
1: Hay por lo menos un diagnóstico de canal y/o una información de
estado
● Bit 14: Reservado
● Bit 15: Application Relationship Diagnosis State:
–

0: Ninguno de los módulos configurados dentro de esta AR
notifica un diagnóstico

–

1: Por lo menos uno de los módulos configurados dentro de esta
AR notifica un diagnóstico

Estructura de la información adicional de alarma con alarmas de PROFINET IO
La información adicional de alarma con PROFINET IO depende del especificador de formato.
Puede estar compuesta por varios bloques de datos con el mismo o distinto especificador de
formato. Son posibles los siguientes especificadores de formato:
● W#16#0000 a W#16#7FFF: Diagnóstico específico de fabricante
Byte

Tipo de da‐ Significado
tos

de 0 a 1

WORD

Identificación de formato para la estructura de los datos que siguen como
información adicional de alarma:

de 2 a n

BYTE

Ver manual del fabricante.

W#16#0000 a W#16#7FFF: Diagnóstico específico de fabricante

● W#16#8000: Diagnóstico de canal
El diagnóstico de canal se emite en bloques de 6 bytes cada uno. La información adicional
de alarma (sin especificador de formato) se emite solo para los canales que presentan
fallos.

Programación del PLC
Manual de programación y manejo, 11/2019

5911

Instrucciones
4.2 Instrucciones

Byte

Tipo de da‐ Significado
tos

de 0 a 1

WORD

Identificación de formato para la estructura de los datos que siguen como
información adicional de alarma:
W#16#8000: Diagnóstico de canal

de 2 a 3

WORD

Número de canal del componente que dispara la alarma (rango de valores de
0 a 65535):
● W#16#0000 a W#16#7FFF: Número de canal del submódulo/módulo
● W#16#8000: es el representante para todo el submódulo
● W#16#8001 a W#16#FFFF: Reservado

4

BYTE

Bits de 0 a 2: Reservado
Bits de 3 a 4: Tipo de error:
● 0: Reservado
● 1: Error entrante
● 2: Error saliente
● 3: Error saliente, hay más errores
Bits de 5 a 7: Tipo de canal:
● 0: Reservado
● 1: Canal de entrada
● 2: Canal de salida
● 3: Canal de entrada/salida

5912

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Byte

Tipo de da‐ Significado
tos

5

BYTE

Formato de datos:
● B#16#00: Formato de datos libre
● B#16#01: Bit
● B#16#02: 2 bits
● B#16#03: 4 bits
● B#16#04: Byte
● B#16#05: Palabra
● B#16#06: Palabra doble
● B#16#07: 2 palabras dobles
● B#16#08 a B#16#FF: Reservado

de 6 a 7

WORD

Tipo de error:
● W#16#0000: reservado
● W#16#0001: Cortocircuito
● W#16#0002: Subtensión
● W#16#0003: Sobretensión
● W#16#0004: Sobrecarga
● W#16#0005: Sobretemperatura
● W#16#0006: Rotura de hilo
● W#16#0007: Rebase del límite superior
● W#16#0008: Rebase del límite inferior
● W#16#0009: Error
● W#16#000A a W#16#000F: Reservado
● W#16#0010 a W#16#001F: Específico de fabricante
● W#16#0020 a W#16#00FF: Reservado
● W#16#0100 a W#16#7FFF: Específico de fabricante
● W#16#8000: Hay diagnóstico de dispositivo
● W#16#8001 a W#16#FFFF: Reservado
No todos los canales soportan todos los tipos de error. Encontrará más deta‐
lles en la descripción de los datos de diagnóstico del dispositivo correspon‐
diente.

Nota
La parte de "Número de canal" a "Tipo de error" puede aparecer entre 0 y n veces.

W#16#8001
W#16#8001: MULTIPLE (se transfieren distintos tipos de información de diagnóstico)

Programación del PLC
Manual de programación y manejo, 11/2019

5913

Instrucciones
4.2 Instrucciones
En este caso, la información adicional de alarma se transfiere en estructura de bloque con
longitud variable.
Byte

Tipo de da‐ Significado
tos

de 0 a 1

WORD

Especificador de formato para la estructura de los datos que siguen como
información adicional de alarma:
W#16#8001: Diagnóstico específico de fabricante y/o diagnóstico de canal

de 2 a 3

WORD

Tipo de bloque

de 4 a 5

WORD

Longitud del bloque

6

BYTE

Versión: high byte

7

BYTE

Versión: low byte

de 8 a 11 DWORD

API (solo si el low byte de la versión = 1)

de 12 a
13

WORD

Número de slot

de 14 a
15

WORD

Número de subslot

de 16 a
17

WORD

Número de canal

de 18 a
19

WORD

Propiedades de canal

de 20 a
21

WORD

Identificación de formato:
● W#16#0000 a W#16#7FFF: Diagnóstico específico de fabricante
● W#16#8000: Diagnóstico de canal
● W#16#8002: Diagnóstico avanzado de canal
● W#16#8003: Diagnóstico avanzado de canal graduado
● W#16#8004 a W#16#80FF: Reservado

de 22 a n BYTE

Datos en función del especificador de formato

Nota
La parte a partir de "Tipo de bloque" puede aparecer entre 1 y n veces.

W#16#8002
W#16#8002: Diagnóstico avanzado de canal

5914

Byte

Significado

de 0 a 1

Identificación de formato W#16#8002

de 2 a 3

Número de canal

de 4 a 5

Propiedades de canal

de 6 a 7

Tipo de error

de 8 a 9

Valor adicional de error

de 10 a 13

Información adicional de error

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

W#16#8003
W#16#8003: Diagnóstico avanzado de canal graduado
Byte

Significado

de 0 a 1

Identificación de formato W#16#8003

de 2 a 3

Número de canal

de 4 a 5

Propiedades de canal

de 6 a 7

Tipo de error

de 8 a 9

Valor de error adicional

de 10 a 13

Información adicional de error

de 14 a 17

Qualified Channel Qualifier

W#16#8100
W#16#8100: Información de mantenimiento
Byte

Significado

de 0 a 1

Identificación de formato W#16#8100

de 2 a 3

Tipo de bloque

de 4 a 5

Longitud del bloque

de 6 a 7

Versión del bloque

de 8 a 9

Reservado

de 10 a 13

Estado de mantenimiento

Nota
Encontrará información más detallada sobre la estructura de la información adicional de
alarma en el Manual de programación SIMATIC PROFINET IO De PROFIBUS DP a
PROFINET IO y en la versión más reciente de la norma IEC 61158-6-10-1.

Programación del PLC
Manual de programación y manejo, 11/2019

5915

Instrucciones
4.2 Instrucciones

Área de destino TINFO y AINFO
Área de destino TINFO y AINFO
En función del OB en el que se llame la instrucción "RALRM", se escribe solo parcialmente en
las áreas de destino TINFO y AINFO. La tabla siguiente describe la información que se registra
en cada caso.
Tipo de alarma

OB

TINFO
Información
de estado de
OB

TINFO
Información ad‐
ministrativa

AINFO
Información
de encabeza‐
do

AINFO
Información de alarma adicional

Alarma de proceso

4x

Sí

Sí

Sí

Centralizado:

No

Descentraliza‐ Igual que la proporcio‐
do:
nada por el esclavo
PROFIBUS DP/dispo‐
sitivo PROFINET IO
Alarma de estado

55

Sí

Sí

Sí

Sí

Sí

Alarma de actualiza‐
ción

56

Sí

Sí

Sí

Sí

Sí

Alarma específica de
fabricante

57

Sí

Sí

Sí

Sí

Sí

Error de redundancia
de la periferia

70

Sí

Sí

No

No

No

Alarma de diagnóstico 82

Sí

Sí

Sí

Centralizado:

Registro 1

Descentraliza‐ Igual que la proporcio‐
do:
nada por el esclavo
PROFIBUS DP/dispo‐
sitivo PROFINET IO
Alarma
de extracción/inser‐
ción

83

Sí

Sí

Sí

Centralizado:

No

Alarma de extracción
especial:

83

Sí

Sí

Sí

Solo PROFINET IO

83

Sí

Sí

Sí

Solo PROFINET IO

Se ha insertado un mó‐ 83
dulo no configurado

Sí

Sí

Sí

Solo PROFINET IO

Fallo de rack/
fallo de estación

Sí

Sí

No

No

Sí

No

No

No

Descentraliza‐ Igual que la proporcio‐
do:
nada por el esclavo
PROFIBUS DP/dispo‐
sitivo PROFINET IO

Controlada por el su‐
pervisor
Alarma de inserción
especial:
Habilitada por el super‐
visor

86

... Todos los demás OBs

5916

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

D_ACT_DP: Activar / desactivar esclavos DP
Descripción
La instrucción "D_ACT_DP" permite desactivar y volver a activar de forma selectiva esclavos
DP o dispositivos PROFINET IO configurados. Además es posible averiguar, para cada
esclavo DP o dispositivo PROFINET IO utilizado, si el componente en cuestión está activado
o desactivado en un determinado momento.
Si se desactiva con esta instrucción una gateway del tipo IE/PB Link PN IO, se desactivarán
también todos los esclavos PROFIBUS DP conectados a ella. Estas desactivaciones se
notifican.
Esta instrucción no se puede usar en aparatos de campo PROFIBUS PA que estén
conectados mediante DP/PA Link a un sistema maestro DP.
Nota
Mientras estén activas una o varias peticiones "D_ACT_DP", no es posible cargar de la
programadora a la CPU ninguna configuración modificada (en el marco de CiR).
Durante la carga de una configuración modificada de la programadora a la CPU durante el
funcionamiento (CiR), la CPU rechaza la activación de las peticiones "D_ACT_DP".
Para procesar una petición de desactivación o activación se requieren varios pasos por el
punto de control de ciclo. Por ello no es posible esperar la finalización de una petición de este
tipo dentro de un bucle programado.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "D_ACT_DP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control disparado por nivel
REQ=1:
Realizar activación o desactivación

MODE

Input

BYTE

I, Q, M, D, L o cons‐
tante

Identificador de petición
Valores posibles:
● 0: Conocer si el
componente llamado está activado
o desactivado
● 1: Activar esclavo DP o dispositivo
PROFINET IO
● 2: Desactivar esclavo DP o dispositivo
PROFINET IO
● 3: Activar esclavo DP o dispositivo
PROFINET IO y llamar el OB 86 una vez
cambiado el estado de activación
● 4: Desactivar esclavo DP o dispositivo
PROFINET IO y llamar el OB 86 una vez
cambiado el estado de activación

Programación del PLC
Manual de programación y manejo, 11/2019

5917

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Cualquier dirección lógica del esclavo DP o el
dispositivo PROFINET IO. Si se trata de una
dirección de salida, debe estar activado el bit
más significativo.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
un código de error.

BUSY

Output

BOOL

I, Q, M, D, L

Identificación de componente activo:
● BUSY=1: la petición todavía está activa.
● BUSY=0: la petición ha finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

La petición se ha ejecutado sin errores.

0001

El esclavo DP o dispositivo PROFINET IO está activado (este código de error solo es posible con MO‐
DE = 0.)

0002

El esclavo DP o dispositivo PROFINET IO está desactivado (este código de error solo es posible con
MODE = 0.)

7000

Primera llamada con REQ= 0. La petición definida mediante LADDR no está activa; BUSY tiene el valor
"0".

7001

Primera llamada con REQ= 1. Se ha lanzado la petición definida mediante LADDR; BUSY tiene el valor
"1".

7002

Llamada intermedia (REQ irrelevante). La petición activada todavía está procesándose; BUSY tiene el
valor "1".

8090

● No se ha configurado un módulo con la dirección especificada en LADDR.
● Se está utilizando la CPU como esclavo I y se ha indicado en LADDR una dirección de este esclavo
I.

8092

El proceso de desactivación en curso de un esclavo DP o un dispositivo PROFINET IO (MODE=2) no se
puede interrumpir activándolo (MODE=1). Active el componente en otro momento.

8093

No hay ningún esclavo DP o dispositivo PROFINET IO asignado a la dirección indicada en LADDR (no hay
configuración), o el parámetro MODE es desconocido.

8094

Se ha intentado activar un dispositivo que podría ser interlocutor de un puerto de cambio de herramienta.
Sin embargo, en este momento hay otro dispositivo activado en ese puerto de cambio de herramienta. El
dispositivo activado permanece activado.

80A1

No se ha podido parametrizar el componente llamado. (Este código de error solo es posible con MO‐
DE = 1.)
Nota:
Esta información de error devuelve "D_ACT_DP" solo si este componente vuelve a fallar durante la pa‐
rametrización del esclavo o dispositivo activado. Si solo ha fallado la parametrización de un único módulo,
"D_ACT_DP" devuelve la información de error W#16#0000.

5918

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
80A2

El esclavo DP llamado no responde (esta información de error no existe para dispositivos PROFINET IO.
En PROFINET no existe vigilancia de tiempo para este proceso.).

80A3

El maestro DP o controlador PROFINET IO afectado no soporta esta función.

80A4

La CPU no soporta esta función para maestros DP o controladores PROFINET IO externos.

80A6

Error de slot en el esclavo DP o dispositivo PROFINET IO; no se puede acceder a todos los datos útiles
(este código de error solo es posible con MODE=1.)
Nota:
"D_ACT_DP" devuelve esta información de error solo si el componente vuelve a fallar después de la
parametrización del componente activado y antes del final de "D_ACT_DP". Si solo hay un módulo no
disponible, "D_ACT_DP" devuelve la información de error W#16#0000.

80C1

"D_ACT_DP" se ha iniciado y se continúa con otra dirección lógica (este código de error es posible con
MODE=1 y MODE=2).

80C3

● Error temporal de recursos: En este momento la CPU está procesando el máximo posible de
peticiones de activación/desactivación. (Este código de error solo es posible con MODE = 1 y
MODE = 2.)
● La CPU está recibiendo una configuración modificada. Debido a ello, en este momento no es posible
desactivar ni activar esclavos DP o dispositivos PROFINET IO.

80C5

DP: Las peticiones todavía no recogidas por el usuario se descartan en el rearranque.

80C6

PROFINET: Las peticiones todavía no recogidas por el usuario se descartan en el rearranque.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Campo de aplicación
Si en una de las CPU se configuran esclavos DP o dispositivos PROFINET IO que no existen
realmente o que actualmente no se necesitan, la CPU accederá de todos modos con
regularidad a dichos esclavos DP o dispositivos PROFINET IO. Una vez desactivados dichos
componentes, la CPU no vuelve a acceder a ellos. Con PROFIBUS DP, esto permite obtener
el ciclo de bus DP más rápido posible, y evita además la aparición de los correspondientes
eventos de error.

Ejemplos
En la fabricación de máquinas en serie, el fabricante dispone de una gran cantidad de opciones
de máquina. Sin embargo, cada máquina suministrada contiene una combinación única de
opciones seleccionadas.
Todas las opciones de máquina posibles son configuradas por el fabricante como esclavos DP
o dispositivos PROFINET IO, a fin de poder crear y llevar un programa de usuario común para
todas las opciones posibles. Con "D_ACT_DP" es posible desactivar en el arranque de la
máquina todos los esclavos DP o dispositivos PROFINET IO que no estén presentes en la
configuración real.
Algo similar sucede en el caso de las máquinas herramienta, que ofrecen una amplia gama de
herramientas pero solo utilizan unas pocas en cada momento concreto. En estos casos, las
herramientas se configuran como esclavos DP o dispositivos PROFINET IO. Con ayuda de
"D_ACT_DP", el programa de usuario activa las herramientas requeridas en cada momento y
desactiva las que no se van a utilizar hasta más adelante.

Programación del PLC
Manual de programación y manejo, 11/2019

5919

Instrucciones
4.2 Instrucciones

Funcionamiento
"D_ACT_DP" es una instrucción asíncrona, de modo que la ejecución se extiende a lo largo de
varias llamadas. Para iniciar la petición, debe llamarse "D_ACT_DP" con REQ=1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY .
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).

Identificación de una petición
Si se ha lanzado una petición de desactivación o activación y se vuelve a llamar "D_ACT_DP"
antes de que finalice, el comportamiento posterior de la instrucción depende esencialmente de
si la nueva llamada corresponde a la misma petición. Si el parámetro de entrada LADDR
coincide, la llamada se considera una llamada consecutiva.

Desactivar esclavos DP o dispositivos PROFINET IO
Si se desactiva un esclavo DP o un dispositivo PROFINET IO con "D_ACT_DP", sus salidas de
proceso se ajustan a los valores sustitutivos configurados, o a 0 (estado seguro). A partir de
entonces, el correspondiente maestro DP o controlador PROFINET IO no volverá a llamar ese
componente. Los esclavos DP o dispositivos PROFINET IO desactivados no se identifican
como averiados o ausentes en los LEDs de error del maestro DP o controlador PROFINET IO
ni de la CPU.
La memoria imagen de proceso de las entradas de los esclavos DP o dispositivos PROFINET
IO desactivados se actualiza con 0, es decir, se actúa como si se tratase de esclavos DP o
dispositivos PROFINET IO averiados.
Si en el programa se accede mediante acceso directo a los datos útiles de un esclavo DP o
dispositivo PROFINET IO desactivado anteriormente, se llama el OB de error de acceso a la
periferia (OB 122) y se guarda en el búfer de diagnóstico el correspondiente evento de
arranque. Si mediante una instrucción (p. ej. "RD_REC (Página 5922)") se accede a un esclavo
DP o dispositivo PROFINET IO desactivado, se recibe en RET_VAL la misma información de
error que con un esclavo DP o dispositivo PROFINET IO no disponible.
La desactivación de un esclavo DP o un dispositivo PROFINET IO no ocasiona el arranque del
OB de error de ejecución del programa (OB 85), aunque las entradas y salidas de éste
pertenezcan a la memoria imagen de proceso que debe actualizarse por el sistema. Tampoco
se realiza una entrada en el búfer de diagnóstico.
Para que la desactivación de un esclavo DP o dispositivo PROFINET IO dé lugar al arranque
del OB de fallo del rack (OB 86) y a un registro en el búfer de diagnóstico, debe ajustarse el
parámetro MODE :
● MODE = 2: no se arranca el OB 86 ni se realiza una entrada en el búfer de diagnóstico
● MODE = 4: se arranca el OB 86 y se realiza una entrada en el búfer de diagnóstico
Si una estación DP o PNIO falla después de haberla desactivado con "D_ACT_DP", el sistema
operativo no reconoce el fallo. En consecuencia, no se arranca el OB 86 ni se realiza un
registro en el búfer de diagnóstico.
Para PROFIBUS DP se aplica lo siguiente: Si se desea desactivar un esclavo DP que participa
como emisor en la comunicación directa, se recomienda desactivar en primer lugar los

5920

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
receptores que comparten los datos que el emisor envía a su maestro DP. Una vez hecho esto
ya se puede desactivar el emisor.

Activar esclavos DP o dispositivos PROFINET IO
Si se vuelve a activar un esclavo DP o dispositivo PROFINET IO con "D_ACT_DP", este
componente es configurado y parametrizado por el correspondiente maestro DP o controlador
PROFINET IO (igual que cuando se recupera una estación DP o PROFINET IO tras un fallo).
La activación ha finalizado cuando el componente está ya en disposición de transferir datos
útiles.
La activación de un esclavo DP o un dispositivo PROFINET IO no ocasiona el arranque del OB
de error de ejecución del programa (OB 85), aunque las entradas y salidas de éste
pertenezcan a la memoria imagen de proceso que debe actualizarse por el sistema. Tampoco
se realiza una entrada en el búfer de diagnóstico.
Para que la desactivación de un esclavo DP o dispositivo PROFINET IO dé lugar al arranque
del OB de fallo del rack (OB 86) y a un registro en el búfer de diagnóstico, debe ajustarse el
parámetro MODE :
● MODE = 1: no se arranca el OB 86 ni se realiza una entrada en el búfer de diagnóstico
● MODE = 3: se arranca el OB 86 y se realiza una entrada en el búfer de diagnóstico
Si se intenta activar con "D_ACT_DP" un esclavo DP desactivado que ha sido desconectado
físicamente del bus DP, la instrucción envía al cabo de aproximadamente un minuto el código
de error W#16#80A2, y el esclavo DP permanece desactivado. Si en un momento posterior el
esclavo vuelve a estar conectado con el bus DP, es necesario activarlo de nuevo mediante
"D_ACT_DP".
Si se intenta activar un dispositivo PROFINET IO que está desconectado físicamente del bus
PN, "D_ACT_DP" permanece activa. A diferencia de lo que sucede con los esclavos DP, no se
produce una cancelación automática una vez transcurrido un tiempo determinado. La petición
en curso debe interrumpirse manualmente.
Nota
La activación de un esclavo DP o un dispositivo PROFINET IO puede tomar un tiempo
considerable. Para cancelar una petición de activación en curso, debe iniciarse "D_ACT_DP"
con el mismo valor para LADDR y MODE = 2. Debe repetirse la llamada de "D_ACT_DP" con
MODE = 2 tantas veces como sea necesario hasta que se señalice, mediante RET_VAL = 0,
que se ha cancelado la petición de activación.
Si se desea activar esclavos DP que participan en la comunicación directa, se recomienda
activar primero los emisores y luego los receptores (oyentes).

Programación del PLC
Manual de programación y manejo, 11/2019

5921

Instrucciones
4.2 Instrucciones

Arranque de la CPU
El sistema operativo de la CPU muestra distintos comportamientos en los distintos tipos de
arranque en relación con los esclavos DP o dispositivos PROFINET IO:
● En los tipos de arranque "arranque en frío" y "rearranque completo (en caliente)", los
esclavos o dispositivos desactivados se activan de nuevo automáticamente.
– En el S7-400: La activación de los esclavos DP o dispositivos PROFINET IO puede
requerir algún tiempo. La CPU arranca a pesar ello, y se producen errores de acceso a
la periferia hasta finalizar la activación. La reacción de la CPU depende de la
parametrización (llamada del OB 85 en caso de errores de acceso a la periferia) y del
programa del OB 85. No es posible suprimir estos errores de acceso a la periferia.
– En el S7-300: La activación de los esclavos DP o dispositivos PROFINET IO puede
requerir algún tiempo. En este caso, la CPU espera hasta que los esclavos DP o
dispositivos PROFINET IO hayan sido activados. El tiempo de espera máximo para la
activación de los esclavos DP o dispositivos PROFINET IO es de aprox. 1 minuto.
Dentro de ese tiempo no se producen errores de acceso a la periferia.
● En el tipo de arranque "Rearranque", el estado de activación de los esclavos o dispositivos
no se modifica: Los esclavos o dispositivos activados siguen activados, y los esclavos o
dispositivos desactivados siguen desactivados.
Después del arranque, la CPU intenta entrar en contacto cíclicamente con todos los esclavos
o dispositivos configurados y no desactivados, que no están presentes o no son accesibles.
Nota
No se soporta la llamada de "D_ACT_DP" en los OBs de arranque.

Otras instrucciones
RD_REC: Leer registro de periferia
Descripción
Esta instrucción permite leer el registro con número RECNUM del componente que se ha
direccionado. Para iniciar la lectura, debe ajustarse a "1" el parámetro de entrada REQ . Si la
operación de lectura se ha podido ejecutar de inmediato, la instrucción devuelve en el
parámetro de salida BUSY el valor "0". Si BUSY tiene el valor "1", la operación de lectura
todavía no ha finalizado.

5922

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813). Una vez efectuada correctamente la transferencia
de datos, el registro leído se guarda en el área de destino delimitada mediante RECORD .
Nota
Si se lee un registro con número mayor que 1 desde una FM o un CP adquiridos antes de
febrero de 1997 (en lo sucesivo denominados "módulos antiguos"), "RD_REC" se comporta de
un modo diferente que con un módulo nuevo. Este caso especial se describe en la sección
"Uso de FMs y CPs S7-300 antiguos con n.º de registro > 1" (ver abajo).
Si un esclavo DPV1 está configurado mediante archivo GSD (a partir de la rev. 3 de GSD) y la
interfaz DP del maestro DP está ajustada como "Compatible con S7", los módulos de E/S no
pueden leer en el programa de usuario los registros con "RD_REC". En este caso, el maestro
DP direcciona un slot incorrecto (slot configurado + 3).
Solución: Conmutar la interfaz del maestro DP a "DPV1".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RD_REC":
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: solicitud de lectura

IOID

Input

BYTE

I, Q, M, D, L o cons‐
tante

Identificador del área de direcciones:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse la
identificación de área de la dirección más baja. Si
se trata de las mismas direcciones, debe indicar‐
se B#16#54.

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección lógica del módulo. Con un módulo mix‐
to debe indicarse la dirección más baja de las
dos.

RECNUM

Input

BYTE

I, Q, M, D, L o cons‐
tante

Número de registro (valores admisibles: de 0 a
240)

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá un
código de error. Adicionalmente: Longitud en
bytes del registro realmente transferido (valores
posibles: de +1 a +240), si el área de destino es
mayor que el registro transferido y no se ha pro‐
ducido ningún error durante la transferencia.

Programación del PLC
Manual de programación y manejo, 11/2019

5923

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La lectura todavía no ha finalizado.

RECORD

Output

ANY

I, Q, M, D, L

Área de destino para el registro leído. En caso de
procesamiento asíncrono de "RD_REC", debe
comprobarse que los parámetros actuales de
RECORD presenten la misma información de
longitud en todas las llamadas. Solo se admite el
tipo de datos BYTE .
Nota: Tenga en cuenta que en las CPUs S7-300,
el parámetro RECORD siempre requiere que se
especifiquen por completo los parámetros de DB
(ej.: P#DB13.DBX0.0 byte 100). En las CPUs
S7-300 no está permitido omitir un número de DB
explícito; de lo contrario se genera un aviso de
error en el programa de usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RECORD
Nota
Para asegurarse de que siempre se lea el registro completo, debe seleccionarse un área de
destino con una longitud de 241 bytes. Si la transferencia de datos se realiza sin errores, la
longitud real del registro se puede leer en RET_VAL .

Uso de FMs y CPs S7-300 antiguos con n.º de registro > 1
Si se desea leer un registro con número mayor que 1 con la instrucción "RD_REC" desde una
FM S7-300 antigua o un CP S7-300 antiguo, debe tenerse en cuenta lo siguiente:
● Si el área de destino es mayor que la longitud real del registro deseado, no se registran
datos en RECORD . En RET_VAL se escribe W#16#80B1.
● Si el área de destino es menor que la longitud real del registro deseado, la CPU leerá tantos
bytes desde el principio del registro como se indique en la longitud especificada en
RECORD y los registrará en RECORD . En RET_VAL se escribe un "0".
● Si la indicación de longitud de RECORD es igual a la longitud real del registro deseado, la
CPU lee el registro en cuestión y lo guarda en RECORD ; RET_VAL se ajusta a "0".

5924

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
● Si se ha producido un error durante la ejecución de la función, el valor de respuesta
contendrá un código de error.
● Si no se ha producido ningún error durante la transferencia, RET_VAL adquiere el valor
– 0 si se ha llenado el área de destino completa con datos del registro seleccionado
(aunque el registro esté incompleto).
– la longitud en bytes del registro realmente transferido (valores posibles: de +1 a +240),
si el área de destino es mayor que el registro transferido.
Nota
Si se produce el error general W#16#8745, esto significa solo que durante la operación
de escritura no ha sido posible acceder a por lo menos un byte. El registro se ha leído
correctamente desde el módulo y escrito correctamente en el área de memoria de E/S.
Dentro de la información de error "verdadera" (códigos de error W#16#8xyz) de la tabla
siguiente, debe distinguirse entre dos casos:
● Errores temporales (códigos de error de W#16#80A2 a 80A4, 80Cx):
En este tipo de errores es posible que el error se elimine sin intervención del usuario, es
decir, puede bastar con llamar de nuevo la instrucción (varias veces si es necesario).
Ejemplo de error temporal: En este momento los recursos necesarios están ocupados
(W#16#80C3).
● Errores permanentes (códigos de error W#16#809x, 80A0, 80A1, 80Bx):
Los errores de este tipo no se pueden eliminar sin intervención del usuario. Solo tiene
sentido volver a llamar la instrucción una vez que se haya eliminado el error. Ejemplo de
error permanente: Indicación de longitud errónea en RECORD (W#16#80B1).
Nota
Si se transfieren con "WR_REC (Página 5927)" registros a un esclavo DPV1 o se leen
registros RD_REC desde un esclavo DPV1 que funciona en modo DPV1, el maestro DP
evalúa de la siguiente manera la información de error recibida desde el esclavo:
Si la información de error se encuentra en las áreas de W#16#8000 a W#16#80FF o de
W#16#F000 a W#16#FFFF, el maestro DP reenvía la información de error a la instrucción.
Si se encuentra fuera de estas áreas, reenvía a la instrucción el valor W#16#80A2 y
suspende el esclavo.
Encontrará la descripción de la información de error procedente de los esclavos DPV1 en
STATUS[3] Parámetro STATUS (Página 5901).

Parámetros RET_VAL para WR_REC y RD_REC
Código de error
(W#16#...)

Explicación

Restricción

0000

Sin error

-

7000

Primera llamada con REQ=0: No hay ninguna transferencia de datos
activa; BUSY tiene el valor 0.

-

7001

Primera llamada con REQ=1: Transferencia de datos lanzada; BUSY
tiene el valor 1.

Periferia descentralizada

Programación del PLC
Manual de programación y manejo, 11/2019

5925

Instrucciones
4.2 Instrucciones
Código de error
(W#16#...)

Explicación

Restricción

7002

Llamada intermedia (REQ irrelevante): Transferencia de datos ya
activa; BUSY tiene el valor 1.

Periferia descentralizada

8090

La dirección base lógica indicada no es válida: No existe ninguna
asignación en el SDB1/SDB2x, o no se trata de una dirección base.

-

8092

En la referencia ANY se ha indicado un tipo distinto a BYTE.

Solo con S7-400

8093

Esta instrucción no es válida para el módulo seleccionado con
LADDR y IOID . (Se soportan los módulos S7-300 con S7-300, mó‐
dulos S7-400 con S7-400, módulos S7-DP con S7-300 y S7-400.)

-

80A0

Acuse negativo al leer el módulo: Módulo extraído durante la opera‐ Solo con "RD_REC"
ción de lectura o módulo defectuoso

80A1

Acuse negativo al escribir en el módulo: Módulo extraído durante la
operación de escritura o módulo defectuoso

Solo con "WR_REC (Pági‐
na 5927)"

80A2

● Error de protocolo DP con Layer 2 (p. ej. fallo de esclavo o fallos
de bus)

Periferia descentralizada

● Con ET200S no es posible leer registros en el modo DPV0.
80A3

Error de protocolo de DP con User-Interface/User

Periferia descentralizada

80A4

Fallo de comunicación en el bus K

El error se produce entre la CPU y
una interfaz DP externa

80B0

● La instrucción no es posible para el tipo de módulo

-

● El módulo no conoce este registro.
● El número de registro 241 no es admisible.
● Con "WR_REC (Página 5927)" no se permiten los registros 0 ni 1.
80B1

La indicación de longitud en el parámetro RECORD es errónea.

● Con "WR_REC
(Página 5927)": Longitud
errónea
● Con "RD_REC" (posible solo si
se usan FMs S7-300 antiguas
o CPs S7-300
antiguos):Indicación > longitud
registro
● Con DPNRM_DG: Indicación <
longitud de registro

80B2

El slot configurado no está ocupado.

-

80B3

El tipo de módulo real no coincide con el tipo de módulo configurado
en el SDB1

-

80B7

El esclavo DP o el módulo notifica un área no autorizada en un pa‐
rámetro o un valor.

Solo con "RD_REC"

5926

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de error
(W#16#...)

Explicación

Restricción

80C0

Con "WR_REC (Página 5927)": Los datos solo pueden escribirse en
el estado STOP de la CPU. Nota: En consecuencia, el programa de
usuario no puede escribir. Solo es posible escribir datos online con la
PG/el PC.

Con "WR_REC (Página 5927)",
"RD_REC" o "DPNRM_DG (Pági‐
na 5956)"

Con "RD_REC": El registro está cargado en el módulo, pero todavía
no existen datos o los datos solo pueden leerse en el estado STOP de
la CPU. Nota: Si los datos solo pueden leerse en el estado STOP de
la CPU, el programa de usuario no puede evaluarlos. En tal caso solo
es posible leer los datos online con la PG/el PC.
Con "DPNRM_DG (Página 5956)": No hay datos de diagnóstico.
80C1

Los datos de la petición de escritura efectuada anteriormente en el
módulo para el mismo registro no han sido procesados todavía por el
módulo.

-

80C2

En este momento el módulo está procesando el máximo posible de
peticiones para una CPU.

-

80C3

En este momento los recursos necesarios (memoria, etc.) están ocu‐ pados.

80C4

Error temporal interno. No se ha podido ejecutar la petición.

-

Repita la petición. Si este error se produce a menudo, compruebe
posibles fallos de origen eléctrico en la configuración.
80C5

La periferia descentralizada no está disponible.

Periferia descentralizada

80C6

La transferencia de registros se ha cancelado por una interrupción de
la clase de prioridad (rearranque o segundo plano)

Periferia descentralizada

8xyy

Información de error general

-

Consulte también: Evaluación de errores con el parámetro de salida
RET_VAL (Página 174)

WR_REC: Escribir registro en periferia
Descripción
La instrucción "WR_REC" permite transferir el registro RECORD al módulo direccionado.
Para iniciar la escritura, debe ajustarse a "1" el parámetro de entrada REQ. Si la operación de
escritura se ha podido ejecutar de inmediato, la instrucción devuelve en el parámetro de salida
BUSY el valor "0". Si BUSY tiene el valor "1", la operación de escritura todavía no ha finalizado.
Nota
Si un esclavo DPV1 está configurado mediante archivo GSD (a partir de la rev. 3 de GSD) y la
interfaz DP del maestro DP está ajustada como "Compatible con S7", no se pueden escribir en
el programa de usuario registros con "WR_REC" en los módulos de E/S. En este caso, el
maestro DP direcciona un slot incorrecto (slot configurado + 3).
Solución: Conmutar la interfaz del maestro DP a "DPV1".

Programación del PLC
Manual de programación y manejo, 11/2019

5927

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "WR_REC":
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: solicitud de escritura

IOID

Input

BYTE

I, Q, M, D, L o cons‐
tante

Identificador del área de direcciones:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse la
identificación de área de la dirección más baja. Si
se trata de las mismas direcciones, debe indicar‐
se B#16#54.

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección lógica del módulo. Con un módulo mix‐
to debe indicarse la dirección más baja de las
dos.

RECNUM

Input

BYTE

I, Q, M, D, L o cons‐
tante

Número de registro (valores admisibles: de 2 a
240)

RECORD

Input

ANY

I, Q, M, D, L

Registro. Solo se admite el tipo de datos BYTE.
Nota: Tenga en cuenta que en las CPUs S7-300,
el parámetro RECORD siempre requiere que se
especifiquen por completo los parámetros de DB
(ej.: P#DB13.DBX0.0 byte 100). En las CPUs
S7-300 no está permitido omitir un número de DB
explícito; de lo contrario se genera un aviso de
error en el programa de usuario.

RET_VAL

Output

Return

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá un
código de error.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY= 1: La escritura todavía no ha finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RECORD
Los datos que se deben transferir se leen del parámetro RECORD en la primera llamada. Si la
transferencia del registro dura más que una llamada, en las llamadas consecutivas de la
instrucción (para la misma petición), el contenido del parámetro RECORD ya no es relevante.

Parámetro RET_VAL
Consulte también: RD_REC: Leer registro de periferia (Página 5922)
Nota
Si aparece el error general W#16#8544, esto solo significa que estaba bloqueado el acceso a
por lo menos un byte del área de memoria de E/S que contiene el registro. Se ha proseguido
la transferencia de datos.

5928

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

DPRD_DAT: Leer datos coherentes de un esclavo DP normalizado
Descripción
Con la instrucción "DPRD_DAT" se leen datos coherentes de un esclavo DP normalizado o un
dispositivo PROFINET IO, teniendo en cuenta lo siguiente en cuanto a la longitud máxima:
● La longitud máxima puede consultarse en la documentación de la CPU.
● Si no se ha producido ningún error durante la transferencia de datos, los datos leídos se
registran en el área de destino delimitada mediante RECORD.
El área de destino debe tener la misma longitud que se haya configurado para el módulo
seleccionado. En un esclavo DP normalizado con estructura modular o con varias IDs de DP,
la llamada a "DPRD_DAT" solo permite acceder cada vez a los datos de un solo módulo o ID
de DP en la dirección configurada.
Nota
Una CPU de las series S7-300/400 permite hasta 64 bytes de datos coherentes. Para las áreas
de datos coherentes cuyo tamaño supere los 4 bytes es necesario utilizar la instrucción
"DPRD_DAT". En caso de necesidad, esta instrucción también se puede utilizar para un área
de datos a partir de 1 byte. Si se produce un error de acceso, se notifica el código de error
W#16#8090.
Nota
CPU S7-400 a partir de la versión de firmware V6.0
En las CPU S7-400 a partir de la versión de firmware V6.0 la llamada de DPRD_DAT se acepta
básicamente para todas las direcciones. Es decir, que bajo su propia responsabilidad puede
acceder con DPRD_DAT a direcciones para las que no ha configurado ninguna coherencia
general.

Programación del PLC
Manual de programación y manejo, 11/2019

5929

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DPRD_DAT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección inicial configurada del área I del
módulo del que hay que leer.
Nota: La dirección se debe indicar en formato
hexadecimal; P. ej. la dirección inicial 100 sig‐
nifica: LADDR:=W#16#64.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
un código de error.

RECORD

Output

ANY

I, Q, M, D, L

Área de destino para los datos útiles leídos.
Debe tener la misma longitud que la configu‐
rada para el módulo seleccionado. Solo se
admite el tipo de datos BYTE.
Nota: Tenga en cuenta que en las CPU
S7-300, el parámetro RECORD siempre re‐
quiere que se especifiquen por completo los
parámetros de DB (ej.: P#DB13.DBX0.0 byte
100). En las CPU S7-300 no está permitido
omitir un número de DB explícito; de lo con‐
trario se genera un aviso de error en el pro‐
grama de usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Nota
Si accede a esclavos DPV1, el maestro DP puede transferir la información de error de dichos
esclavos a la instrucción. Encontrará una descripción de esta información de error en
STATUS[3] Parámetro STATUS (Página 5901).

Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8090

● No hay ningún módulo configurado para la dirección base lógica especificada.
● No se ha tenido en cuenta la limitación de longitud de los datos coherentes. (En las CPU S7-400 solo
hasta la versión de firmware V5.3 inclusive; a partir de la versión de firmware V6.0 esta causa
desaparece.)
● En el parámetro LADDR no se ha indicado la dirección de inicio en formato hexadecimal.

8092

En la referencia ANY se ha indicado un tipo distinto a BYTE.

8093

Para la dirección lógica indicada en LADDR no existe ningún módulo DP o dispositivo PROFINET IO del
que se puedan leer datos de modo coherente.

5930

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
80A0

Se ha detectado un error de acceso al acceder a la periferia

80B0

● En las CPU S7-300 (todas las versiones de firmware) y CPU S7-400 hasta la versión de firmware V5.3
inclusive: Fallo de esclavo en interfaz DP externa
● En las CPU S7-400 a partir de la versión de firmware V6.0: Fallo de esclavo o error de acceso a datos
incoherentes en la interconexión DP externa (el CP notifica a la CPU que se ha producido un error.)

80B1

La longitud del área de destino especificada es distinta a la longitud de datos útiles configurada.

80B2

Fallo del sistema con interfaz DP externa

80B3

Fallo del sistema con interfaz DP externa

80C0

Los datos todavía no se han leído del módulo

80C2

Fallo del sistema con interfaz DP externa

80Fx

Fallo del sistema con interfaz DP externa

87xy

Fallo del sistema con interfaz DP externa

808x

Fallo del sistema con interfaz DP externa

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Campo de aplicación
"DPRD_DAT" es necesaria porque con los comandos de carga que acceden a la periferia o a
la memoria imagen de proceso de las entradas sólo se puede leer un máximo de cuatro bytes
de forma coherente.
Nota
Para leer datos coherentes también puede usarse, en caso necesario, la memoria imagen de
proceso de las entradas.
● Para saber si la CPU S7-300 permite esta función, consulte la documentación
correspondiente.
● Todas las CPU S7-400 permiten esta función.
PRECAUCIÓN
Acceso a la periferia
Al utilizar "DPRD_DAT", evite acceder a áreas de la periferia que tengan asignadas memorias
imagen parcial de proceso vinculadas a OB6x (alarmas de sincronismo).

Coherencia de datos
Consulte también: Sección Coherencia de datos (Página 6831).

Programación del PLC
Manual de programación y manejo, 11/2019

5931

Instrucciones
4.2 Instrucciones

DPWR_DAT: Escribir datos coherentes de un esclavo DP normalizado
Descripción
Con esta instrucción se transfieren de modo coherente los datos de "RECORD " al esclavo DP
normalizado o dispositivo PROFINET IO y, en su caso, a la memoria imagen de proceso
(concretamente si se ha configurado el área de direcciones en cuestión del esclavo DP
normalizado como área de coherencia en una memoria imagen de proceso).
Para la longitud máxima de los datos que se deben transferir, se aplica lo siguiente: La longitud
máxima puede consultarse en la documentación de la CPU. La transferencia de datos se
realiza de forma sincrónica, es decir, con la finalización de la instrucción ha finalizado el
proceso de escritura.
El área de origen debe tener la misma longitud que se haya configurado para el módulo
seleccionado. Con un esclavo DP normalizado con estructura modular solo es posible acceder
a un módulo del esclavo DP.
Nota
Una CPU de las series S7-1200/1500 soporta hasta 64 bytes de datos coherentes. Para las
áreas de datos coherentes cuyo tamaño supere los 4 bytes es necesario escribir los datos en
un módulo o un dispositivo utilizando la instrucción "DPWR_DAT". En caso de necesidad, esta
instrucción también se puede utilizar para un área de datos a partir de 1 byte. Si se produce un
error de acceso, se notifica el código de error W#16#8090.
Nota
CPU S7-400 a partir de la versión de firmware V6.0
En las CPU S7-400 a partir de la versión de firmware V6.0 la llamada de DPWR_DAT se acepta
básicamente para todas las direcciones. Es decir, que bajo su propia responsabilidad puede
acceder con DPWR_DAT a direcciones para las que no ha configurado ninguna coherencia
general.

5932

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DPWR_DAT":
Parámetro

Declaración

Tipo de datos Área de memoria

LADDR

Input

WORD

Descripción

I, Q, M, D, L o constante Dirección inicial configurada del área MIPS del
módulo en el que hay que escribir.
Nota: La dirección se debe indicar en formato
hexadecimal; P. ej. la dirección inicial 100 sig‐
nifica: LADDR:=W#16#64.

RECORD

Input

ANY

I, Q, M, D, L

Área de origen para los datos útiles que se
deben escribir. Debe tener la misma longitud
que la configurada para el módulo selecciona‐
do. Solo se admite el tipo de datos BYTE .
Nota: Tenga en cuenta que en las CPU
S7-300, el parámetro RECORD siempre re‐
quiere que se especifiquen por completo los
parámetros de DB (ej.: P#DB13.DBX0.0 byte
100). En las CPU S7-300 no está permitido
omitir un número de DB explícito; de lo contra‐
rio se genera un mensaje de error en el pro‐
grama de usuario.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Nota
Si accede a esclavos DPV1, el maestro DP puede transferir la información de error de dichos
esclavos a la instrucción. Encontrará una descripción de esta información de error en
STATUS[3] Parámetro STATUS (Página 5901).

Código de error
(W#16#...)

Explicación

0000

No ha ocurrido ningún error.

808x

Fallo del sistema con interfaz DP externa

8090

● No hay ningún módulo configurado para la dirección base lógica especificada.
● No se ha tenido en cuenta la limitación de longitud de los datos coherentes. (En las CPU S7-400 solo
hasta la versión de firmware V5.3 inclusive; a partir de la versión de firmware V6.0 esta causa
desaparece.)
● En el parámetro LADDR no se ha indicado la dirección de inicio en formato hexadecimal.

8092

En la referencia ANY se ha indicado un tipo distinto a BYTE.

8093

Para la dirección lógica indicada en LADDR no existe ningún módulo DP ni dispositivo PROFINET IO en
el que se puedan escribir datos de modo coherente.

Programación del PLC
Manual de programación y manejo, 11/2019

5933

Instrucciones
4.2 Instrucciones
Código de error
(W#16#...)

Explicación

80A1

Se ha detectado un error de acceso al acceder a la periferia

80B0

● En las CPU S7-300 (todas las versiones de firmware) y CPU S7-400 hasta la versión de firmware V5.3
inclusive: Fallo de esclavo en interfaz DP externa
● En las CPU S7-400 a partir de la versión de firmware V6.0: Fallo de esclavo o error de acceso a datos
incoherentes en la interconexión DP externa (el CP notifica a la CPU que se ha producido un error.)

80B1

La longitud del área de origen especificada es distinta a la longitud de datos útiles configurada.

80B2

Fallo del sistema con interfaz DP externa

80B3

Fallo del sistema con interfaz DP externa

80C1

Los datos de la orden de escritura efectuada anteriormente en el módulo no han sido procesados todavía
por el módulo.

80C2

Fallo del sistema con interfaz DP externa

80Fx

Fallo del sistema con interfaz DP externa

85xy

Fallo del sistema con interfaz DP externa

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Campo de aplicación
"DPWR_DAT" es necesario porque con los comandos de transferencia que acceden a la
periferia o a la memoria imagen de proceso de las salidas solo se pueden escribir como
máximo cuatro bytes coherentes.
Nota
Para escribir datos coherentes también puede usarse, en caso necesario, la memoria imagen
de proceso de las salidas.
Para saber si la CPU S7-300 permite esta función, consulte la documentación correspondiente.
● Todas las CPU S7-400 permiten esta función.
● Para escribir datos coherentes, no deben utilizarse al mismo tiempo ambas posibilidades:
Utilice o bien "DPWR_DAT" o bien la escritura a través de la memoria imagen de proceso
de las salidas.
PRECAUCIÓN
Acceso a la periferia
Al utilizar "DPWR_DAT", evite acceder a áreas de la periferia que tengan asignadas
memorias imagen parcial de proceso vinculadas a OB6x (alarmas de sincronismo).

Coherencia de datos
Consulte también: Coherencia de datos (Página 6831).

5934

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

iDevice / iSlave
RCVREC: Recibir registro
Descripción
Un I-Device puede recibir un registro desde un controlador superior. La recepción se efectúa
en el programa de aplicación con la instrucción "RCVREC" (receive record).
La instrucción tiene los siguientes modos de operación:
● Comprobar si el I-Device ha recibido una solicitud para la recepción de un registro.
● Preparar un registro en los parámetros de salida.
● Enviar una respuesta al controlador superior.
Para establecer cuál de estos modos de operación debe ejecutar la instrucción, se usa el
parámetro de entrada MODE (ver abajo).
El I-Device debe encontrarse en el estado operativo RUN o en el estado operativo
ARRANQUE.
Con MLEN se indica el máximo de bytes que se deben recibir. Por ello debe escogerse un área
de destino RECORDcon una longitud de por lo menos MLENbytes.
Cuando se ha recibido un registro (MODE=1 o MODE=2), en el parámetro de salida NEW se
indica que el registro se ha guardado en RECORD. Asegúrese de que RECORD tenga una
longitud suficiente. El parámetro de salida LEN contiene la longitud real en bytes del registro
recibido.
Para la respuesta positiva al controlador superior, se deben ajustar CODE1 y CODE2 a cero.
Si se desea rechazar el registro recibido, debe enviarse con CODE1 el Error Code 1 y con
CODE2 el Error Code 2 de la respuesta negativa al controlador superior.
Nota
Si el I-Device ha recibido una solicitud de recepción de un registro, es necesario haber
reconocido la emisión de dicha solicitud dentro de un período determinado. Una vez
reconocida la solicitud, debe haberse enviado al controlador superior una respuesta dentro del
mismo período. De lo contrario, se produce en el I-Device un error de timeout, a consecuencia
del cual el sistema operativo del I-Device envía una respuesta negativa al controlador superior.
Para conocer dicho período, consulte los datos técnicos de la CPU.
Cuando se produce un error, el parámetro de salida STATUS contiene la información de error.

Programación del PLC
Manual de programación y manejo, 11/2019

5935

Instrucciones
4.2 Instrucciones

Modos de operación
El modo de operación de la instrucción "RCVREC" se define mediante el parámetro de entrada
MODE. Esto se explica en la siguiente tabla:
MODE
0

Significado
Comprobar si existe una solicitud para la recepción de un registro.
Si en el I-Device existe un registro procedente del controlador superior, la instrucción escribirá solo en los pará‐
metros de salida NEW, SLOT, INDEX y LEN. Si se llama la instrucción varias veces consecutivas con MODE=0,
los parámetros de salida se refieren siempre a la misma solicitud.

1

Recibir un registro para cualquier subslot del I-Device
Si en el I-Device existe un registro procedente del controlador superior para cualquier subslot del I-Device, la
instrucción escribe solo en los parámetros de salida y transfiere el registro al parámetro RECORD.

2

Recibir un registro para un determinado subslot del I-Device
Si en el I-Device existe un registro procedente del controlador superior para un determinado subslot del I-Device,
la instrucción escribe solo en los parámetros de salida y transfiere el registro al parámetro RECORD.

3

Enviar respuesta positiva al controlador superior
La instrucción comprueba la solicitud de recepción de registro procedente del controlador superior, acepta el
registro existente y envía un acuse positivo al controlador superior.

4

Enviar respuesta negativa al controlador superior
La instrucción comprueba la solicitud de recepción de registro procedente del controlador superior, rechaza el
registro existente y envía un acuse negativo al controlador superior. El motivo del rechazo puede indicarse en los
parámetros de entrada CODE1 y CODE2.

Nota
Una vez llegado el registro (NEW=1), debe llamarse "RCVREC" dos veces más para
garantizar que se procese por completo. Al hacerlo debe mantenerse el siguiente orden:
● Primera llamada con MODE=1 o MODE=2
● Segunda llamada con MODE=3 o MODE=4

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RCVREC":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

INT

I, Q, M, D, L o cons‐
tante

Modo de operación

F_ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Subslot en el área de trasferencia del I-Device
para el registro que se debe recibir (relevante
solo para MODE=2). El high word debe ajus‐
tarse siempre a cero.

MLEN

Input

INT

I, Q, M, D, L o cons‐
tante

Longitud máxima en bytes del registro que se
debe transferir.

CODE1

Input

BYTE

I, Q, M, D, L o cons‐
tante

Cero (para MODE=3) o Error Code 1 (para
MODE=4)

CODE2

Input

BYTE

I, Q, M, D, L o cons‐
tante

Cero (para MODE=3) o Error Code 2 (para
MODE=4)

5936

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

NEW

Output

BOOL

I, Q, M, D, L

● MODE=0: Se ha recibido un registro nuevo
● MODE=1 ó 2: El registro se ha transferido
en RECORD

STATUS

Output

DWORD

I, Q, M, D, L

Información de error

SLOT

Output

INT

I, Q, M, D, L

Idéntico a F_ID

SUBSLOT

Output

INT

I, Q, M, D, L

Idéntico a F_ID

INDEX

Output

INT

I, Q, M, D, L

Número del registro recibido

LEN

Output

INT

I, Q, M, D, L

Longitud del registro recibido

RECORD

InOut

ANY

I, Q, M, D, L

Área de destino para el registro recibido.
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro RECORD siempre re‐
quiere que se especifiquen por completo los
parámetros de DB (ej.: P#DB13.DBX0.0 Byte
100). En las CPUs S7-300 no está permitido
omitir un número de DB explícito; de lo contra‐
rio se genera un aviso de error en el programa
de usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro STATUS
Para la interpretación del parámetro STATUS, véase el capítulo: Parámetro STATUS
(Página 5901)

PRVREC: Proveer registro
Descripción
Un I-Device puede recibir desde un controlador superior la solicitud de preparar un registro. La
preparación se efectúa en el programa de usuario con la instrucción "PRVREC" (provide
record).
La instrucción tiene los siguientes modos de operación:
● Comprobar si el I-Device ha recibido una solicitud para la preparación de un registro.
● Transferencia del registro solicitado al controlador superior.
● Enviar una respuesta al controlador superior.
Para establecer cuál de estos modos de operación debe ejecutar la instrucción, se usa el
parámetro de entrada MODE (ver abajo).
El I-Device debe encontrarse en el estado operativo RUN o en el estado operativo
ARRANQUE.
Con LEN se indica el máximo de bytes que debe tener el registro que se desea enviar. Por ello
debe escogerse un área de destino RECORDcon una longitud de por lo menos LENbytes.

Programación del PLC
Manual de programación y manejo, 11/2019

5937

Instrucciones
4.2 Instrucciones
Cuando existe una solicitud de preparación de un registro (MODE=0), el parámetro de salida
NEW se ajusta a TRUE.
Si se acepta la solicitud de preparación de registro, para la respuesta positiva al controlador
superior debe escribirse en RECORD el registro solicitado, así como ajustar CODE1 y CODE2
a cero. Si se desea rechazar una solicitud de preparación de registro, debe enviarse con
CODE1 el Error Code 1 y con CODE2 el Error Code 2 de la respuesta negativa al controlador
superior.
Nota
Si el I-Device ha recibido una solicitud de preparación de un registro, es necesario haber
reconocido la emisión de dicha solicitud dentro de un período determinado. Una vez
reconocida la solicitud, debe haberse enviado al controlador superior una respuesta dentro del
mismo período. De lo contrario, se produce en el I-Device un error de timeout, a consecuencia
del cual el sistema operativo del I-Device envía una respuesta negativa al controlador superior.
Para conocer dicho período, consulte los datos técnicos de la CPU.
Cuando se produce un error, el parámetro de salida STATUS contiene la información de error.

Modos de operación
El modo de operación de la instrucción "PRVREC" se define mediante el parámetro de entrada
MODE. Esto se explica en la siguiente tabla:
MODE

Significado

0

Comprobar si existe una solicitud de preparación de un registro.
Si en el I-Device existe una solicitud de preparación de registro procedente del controlador superior, la instrucción
escribirá solo en los parámetros de salida NEW, SLOT, INDEX y RLEN. Si se llama la instrucción varias veces
consecutivas con MODE=0, los parámetros de salida se refieren siempre a la misma solicitud.

1

Recibir una solicitud de preparación de registro para cualquier subslot del I-Device
Si en el I-Device existe una solicitud de ese tipo procedente del controlador superior para cualquier subslot del
I-Device, la instrucción escribe solo en los parámetros de salida.

2

Recibir una solicitud de preparación de registro para un determinado subslot del I-Device
Si en el I-Device existe una solicitud de ese tipo procedente del controlador superior para un determinado subslot
del I-Device, la instrucción escribe solo en los parámetros de salida.

3

Preparar registro y enviar respuesta positiva al controlador superior
La instrucción comprueba la solicitud de preparación de registro procedente del controlador superior, pone a
disposición el registro solicitado en RECORD y envía un acuse positivo al controlador superior.

4

Enviar respuesta negativa al controlador superior
La instrucción comprueba la solicitud de preparación de registro procedente del controlador superior, la rechaza
y envía un acuse negativo al controlador superior. El motivo del rechazo puede indicarse en los parámetros de
entrada CODE1 y CODE2.

5938

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Nota
Una vez llegada la solicitud (NEW=1), debe llamarse la instrucción dos veces más para
garantizar que se procese por completo. Al hacerlo debe mantenerse el siguiente orden:
● Primera llamada con MODE=1 o MODE=2
● Segunda llamada con MODE=3 o MODE=4

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "PRVREC":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

INT

I, Q, M, D, L o cons‐
tante

Modo de operación

F_ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Subslot en el área de trasferencia del I-Device
para el registro que se debe enviar (relevante
solo para MODE=2). El high word debe ajustarse
siempre a cero.

CODE1

Input

BYTE

I, Q, M, D, L o cons‐
tante

Cero (para MODE=3) o Error Code 1 (para MO‐
DE=4)

CODE2

Input

BYTE

I, Q, M, D, L o cons‐
tante

Cero (para MODE=3) o Error Code 2 (para MO‐
DE=4)

LEN

Input

INT

I, Q, M, D, L o cons‐
tante

Longitud máxima en bytes del registro que se
debe enviar.

NEW

Output

BOOL

I, Q, M, D, L

El controlador superior ha solicitado un nuevo
registro.

STATUS

Output

DWORD

I, Q, M, D, L

Información de error

SLOT

Output

INT

I, Q, M, D, L

Idéntico a F_ID

SUBSLOT

Output

INT

I, Q, M, D, L

Idéntico a F_ID

INDEX

Output

INT

I, Q, M, D, L

Número del registro que se debe enviar

RLEN

Output

INT

I, Q, M, D, L

Longitud del registro que se debe enviar

RECORD

InOut

ANY

I, Q, M, D, L

Registro preparado
Nota: Tenga en cuenta que en las CPUs S7-300,
el parámetro RECORD siempre requiere que se
especifiquen por completo los parámetros de DB
(ej.: P#DB13.DBX0.0 Byte 100). En las CPUs
S7-300 no está permitido omitir un número de DB
explícito; de lo contrario se genera un aviso de
error en el programa de usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro STATUS
Para la interpretación del parámetro STATUS, véase el capítulo: Parámetro STATUS
(Página 5901)

Programación del PLC
Manual de programación y manejo, 11/2019

5939

Instrucciones
4.2 Instrucciones

SALRM: Enviar alarma
Descripción de SALRM
Descripción
Esta instrucción permite enviar desde un programa de usuario de un esclavo inteligente una
alarma de un slot situado en el área de transferencia (slot virtual) al maestro DP
correspondiente. Esto da lugar al inicio del OB correspondiente en el maestro DP.
Puede asignarse a la alarma información adicional específica. Con esta instrucción puede
leerse en el maestro DP la información adicional completa.
La instrucción solo puede utilizarse en el modo compatible con S7.
● DP: El maestro integra el esclavo I mediante el archivo GSD.
● Compatible con S7: El esclavo I se vincula con el maestro mediante configuración.
Nota
La interfaz de la instrucción "SALRM" es idéntica a la del FB "SALRM" definido en la norma
PROFIBUS and PROFINET Guideline Communication Function Blocks on PROFIBUS DP
and PROFINET IO.

Funcionamiento
La instrucción "SALRM" es una instrucción asíncrona, de modo que la ejecución se prolonga
a lo largo de varias llamadas. Para iniciar la transferencia de alarma, debe llamarse la
instrucción con REQ = 1.
La operación de envío permanece activa hasta que el maestro DP confirma o interrumpe el
procesamiento de la alarma.
Mediante el parámetro de salida BUSY y los bytes 2 y 3 del parámetro de salida STATUS se
muestra el estado de la petición. Los bytes 2 y 3 de STATUS corresponden al parámetro de
salida RET_VAL de las instrucciones asíncronas.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).
La transferencia de alarma se puede dar por finalizada cuando el parámetro de salida BUSY
ha adoptado el valor FALSE .

Identificación de la petición
Si se ha lanzado el envío de una alarma al maestro DP con la instrucción "SALRM" y se vuelve
a llamar esta instrucción antes de que finalice la petición en curso, el comportamiento posterior
de la instrucción depende de si la nueva llamada corresponde a la misma petición.
Si los parámetros ID y ATYPE coinciden con una petición todavía no finalizada, la llamada se
considerará llamada consecutiva.

5940

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SALRM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: Realizar la transferencia de la alarma

ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Cualquier dirección lógica del área de transfe‐
rencia al maestro DP (slots virtuales) (desde el
punto de vista del esclavo DP) excepto la di‐
rección de diagnóstico de la estación y la di‐
rección lógica del slot 2.
La información relevante se encuentra en la
palabra menos significativa. La palabra más
significativa se ajusta a cero. El bit 15 contiene
la identificación E/S: 0 si es una dirección de
entrada y 1 si es de salida.

ATYPE (Pági‐
na 5944)

Input

INT

I, Q, M, D, L o cons‐
tante

Alarm Type
Identificación del tipo de alarma. Valores posi‐
bles:
● 1: Alarma de diagnóstico
● 2: Alarma de proceso

ASPEC (Pági‐
na 5944)

Input

INT

I, Q, M, D, L o cons‐
tante

Alarm Specifier:
● 0: No hay más información
● 1: Evento entrante, slot con fallo
● 2: Evento saliente, slot ya sin fallo
● 3: Evento entrante, slot sigue con fallo

LEN (Pági‐
na 5945)

Input

INT

I, Q, M, D, L o cons‐
tante

Longitud en bytes de la información adicional
de alarma que se debe enviar
Mayor valor: 16

DONE

Output

BOOL

I, Q, M, D, L

DONE=1: Se ha transferido la alarma

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La transferencia de la alarma toda‐
vía no ha finalizado.

ERROR (Pági‐
na 5946)

Output

BOOL

I, Q, M, D, L

ERROR = 1: Se ha producido un error.

STATUS (Pági‐
na 5946)

Output

DWORD

I, Q, M, D, L

Información de error

AINFO (Pági‐
na 5947)

InOut

ANY

I, Q, M, D, L

Alarm Info
Área de origen de la información adicional de
alarma
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro AINFO siempre requiere
que se especifiquen por completo los paráme‐
tros de DB (ej.: P#DB13.DBX0.0 byte 100). En
las CPU S7-300 no está permitido omitir un
número de DB explícito; de lo contrario se ge‐
nera un mensaje de error en el programa de
usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

5941

Instrucciones
4.2 Instrucciones

Repercusión de la llamada a "SALRM" en la información de estado de módulo y el LED de error de grupo
(SF)
Como cualquier CPU, el esclavo inteligente guarda las propiedades de sus slots en la
información de estado de módulo.
Consulte también: SZL-ID W#16#xy91: información de estado de módulo (Página 6156).
Si, mediante "SALRM", se envía una alarma de diagnóstico, el sistema operativo del esclavo
inteligente influye en la información de estado de módulo a nivel local de esclavo y en el LED
SF, en función del bit 0 del byte 0 de AINFO (este bit se envía a la información de estado con
el valor "Módulo defectuoso".). Sin embargo, en el esclavo I no se efectúa ningún registro en
el búfer de diagnóstico, y no se inicia ningún OB de alarma de diagnóstico.

5942

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Coherencia de la información de estado de módulo entre el maestro DP y el esclavo I
A continuación se contemplan diversos escenarios y sus repercusiones en la información de
estado del módulo:
● Recuperación de estación (provoca el inicio del OB 86 en el maestro DP y en el esclavo I)
Afecta a la información de estado de módulo tanto en el esclavo I como en el maestro S7
(se anula "Módulo defectuoso"). Si, desde el punto de vista del usuario, después de la
recuperación de la estación se producen fallos en el esclavo I, estos fallos deben
comunicarse al maestro DP llamando "SALRM".
● Transición de STOP a RUN del maestro DP (provoca el inicio del OB 82 en el esclavo I)
La información de estado del módulo en el esclavo I no se modifica. El maestro DP anula
el bit "Fallo del módulo" en la correspondiente información de estado de módulo.
Para garantizar la coherencia de la información de estado de módulo entre el maestro DP
y el esclavo I en el modo compatible con S7, se debe reaccionar del modo siguiente en el
esclavo I:
– Por cada slot virtual sin errores, debe enviarse al maestro DP una alarma de diagnóstico
saliente mediante "SALRM".
– Para cada slot virtual con errores, debe enviarse al maestro DP una alarma de
diagnóstico entrante mediante "SALRM".
● Transición de STOP a RUN del esclavo I (provoca el inicio del OB 82 en el maestro DP)
La información de estado de módulo en el maestro DP permanece invariable, y la del
esclavo I se anula (se anula "Módulo defectuoso".).
Para garantizar la coherencia de la información de estado de módulo entre el maestro DP
y el esclavo I, se debe reaccionar del modo siguiente en el esclavo I:
– Por cada slot virtual sin errores, debe enviarse al maestro DP una alarma de diagnóstico
saliente mediante "SALRM".
– Para cada slot virtual con errores, debe enviarse al maestro DP una alarma de
diagnóstico entrante mediante "SALRM".
Nota
Dado que "SALRM" funciona de modo asíncrono, las llamadas a "SALRM" en los OBs
de arranque no se pueden finalizar, es decir, deben finalizarse en el programa cíclico.
Todas las diferencias mencionadas entre la información de estado de módulo en el
maestro y el esclavo I solo pueden producirse en los slots que tengan asignadas
alarmas de diagnóstico mediante "SALRM". Esto, a su vez. significa que las soluciones
descritas solo son necesarias para dicho tipo de slots.

Programación del PLC
Manual de programación y manejo, 11/2019

5943

Instrucciones
4.2 Instrucciones

Parámetro ATYPE
Parámetro ATYPE
La tabla siguiente muestra, para cada uno de los valores admisibles de ATYPE , qué OB se
inicia en el respectivo maestro DP y en qué modo DP se admite la correspondiente alarma.
ATYPE

Significado en la
norma DPV1

OB correspondiente en el maestro DP S7 Modo DP
DP

Compatible con
S7

1

Alarma de diagnós‐ OB de alarma de diagnóstico (OB82)
tico

–

Sí

2

Alarma de proceso OBs de alarma de proceso (OBs de 40 a
47)

–

Sí

Nota
La posibilidad de uso de los tipos de alarma puede limitarse desde el maestro DP además de
lo indicado en la tabla anterior.

Dependencia del tipo de alarma respecto al estado operativo de un maestro S7
En un esclavo en modo compatible con S7 (operación en un maestro S7), solo pueden
enviarse alarmas de proceso y de diagnóstico cuando el correspondiente maestro DP se
encuentra en el estado operativo RUN (DP: Operate). Si el maestro DP se encuentra en el
estado operativo STOP (DP: Clear), la alarma se retiene y "SALRM" devuelve la información
de error W#16#80C8. La tarea de volver a enviar la alarma en un momento posterior
corresponde exclusivamente al usuario.

Parámetros ASPEC
Parámetro ASPEC
Este parámetro muestra el estado de diagnóstico del slot virtual conforme a la norma. Por ello
solo es posible asignar a ASPEC un valor distinto de cero en caso de enviar una alarma de
diagnóstico.
Dado que en la información adicional de alarma de S7 de la alarma de diagnóstico (registro 0)
existe una información entrante/saliente (ver Datos de diagnóstico>Byte principal 0 bit 0), se
debe asignar el valor siguiente al bit 0 (fallo de módulo) del byte 0 de la información adicional
de alarma:

5944

ASPEC

Bit "Módulo defectuoso" en AINFO (Página 5947)

0

0

1

1

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
ASPEC

Bit "Módulo defectuoso" en AINFO (Página 5947)

2

0

3

1

Parámetro LEN
Parámetro LEN
En LEN se indica la longitud en bytes de la información adicional de alarma que se debe
transferir. El rango de valores máximo admisible es de 0 a 16.
En la tabla siguiente se indica, para todos los tipos de alarma posibles, qué valores son
admisibles para LEN en los distintos modos de un esclavo inteligente.
Tipo de alarma

DP

Compatible con S7

Alarma de diagnóstico

–

de 4 a 16

Alarma de proceso

–

4

En la tabla siguiente se describe qué reacción muestra "SALRM" cuando se asigna a LEN un
valor distinto a la longitud de AINFO (Página 5947)BYTE.
Valor de LEN

Comportamiento de "SALRM"

<= Indicación de longitud de AINFO

"SALRM" envía una alarma al maestro DP. Se transfieren a
la información adicional de alarma tantos bytes como se ha‐
ya indicado en LEN.

Fuera del rango de valores admisible, p.
ej. < 0 o > 16

"SALRM" no envía ninguna alarma.
Información de error: W#16#80B1, STATUS[4]=B#16#FF

> Indicación de longitud de AINFO

"SALRM" envía una alarma al maestro DP. Se transfieren a
la información adicional de alarma tantos bytes como se ha‐
ya indicado en la indicación de longitud de AINFO.
Información de error: W#16#00B1, STATUS[4]=Indicación
de longitud de AINFO

Programación del PLC
Manual de programación y manejo, 11/2019

5945

Instrucciones
4.2 Instrucciones

Parámetros STATUS y ERROR
Parámetros STATUS y ERROR
El parámetro de salida STATUScontiene información de error. Si se interpreta como
ARRAY[1 ... 4] OF BYTE, la información de error presenta la siguiente estructura:
Elemento de cam‐ Significado
po
STATUS[1]

● B#16#00: Sin error
● B#16#C0: Error detectado por el esclavo I

STATUS[2], STA‐
TUS[3]

Equivale al parámetro de salida RET_VAL de las instrucciones

STATUS[4]

B#16#00 a excepción de algunos conflictos de longitud entre LEN y la longitud
de AINFO (Página 5947). Estas excepciones se recogen en la tabla siguiente.

En la tabla siguiente se indican todas las informaciones de error específicas de "SALRM".
ERROR

STATUS[2,3]
(W#16# ...)

Explicación

0

0000

La petición se ha ejecutado sin errores. Si LEN es < longitud de AIN‐
FO, solo se han transferido LEN bytes de la información adicional de
alarma.

0

00B1

LEN > longitud de AINFO. La petición se ha ejecutado. La información
adicional de alarma especificada en AINFO se ha transferido. STA‐
TUS[4] contiene la longitud de AINFO.

0

7000

Primera llamada con REQ=0 (ejecución en vacío). No se ha enviado
ninguna alarma. BUSY tiene el valor "0".

0

7001

Primera llamada con REQ=1. Se ha lanzado la petición.BUSY tiene el
valor "1".

0

7002

Llamada intermedia (REQ irrelevante). La alarma enviada no ha sido
confirmada todavía por el maestro DP. BUSY tiene el valor "1".

1

8090

La dirección indicada en ID se encuentra fuera del área de direcciones
admisible o no se ha configurado.

1

8091

● Se ha bloqueado la alarma mediante configuración.
● La alarma no es admisible para este tipo de esclavo.

1

8092

Tipo de datos no admisible en AINFO (solo se admiten BYTE y
BLOCK-DB)

1

8093

ID pertenece a un slot virtual desde el que no es posible efectuar
solicitudes de alarma.

1

80B0

ASPEC
● No corresponde al bit 0 del byte 0 de AINFO
● Debe tener el valor 0 con el tipo de alarma utilizado
● Se encuentra fuera del rango de valores admisible

5946

1

80B1

LEN se encuentra fuera del rango de valores admisible. STATUS[4]
contiene B#16#FF.

1

80B5

La llamada a "SALRM" en el maestro DP no es admisible.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
ERROR

STATUS[2,3]
(W#16# ...)

Explicación

1

80C3

En este momento los recursos necesarios (memoria, etc.) están ocu‐
pados.

1

80C5

En este momento la periferia descentralizada no está disponible (p. ej.
fallo de estación)

1

80C8

La función no está autorizada en el estado operativo actual del maes‐
tro DP (el maestro DP es un maestro S7 y se encuentra en el estado
operativo STOP).

Parámetro AINFO
Parámetro AINFO
El parámetro AINFO es el área de origen de la información adicional de alarma. Desde el punto
de vista del esclavo inteligente, esta área se puede rellenar con cualquier valor. Sin embargo,
si se utiliza un maestro DP de la gama S7, la información adicional de alarma enviada con la
alarma debe ajustarse a las convenciones de S7.
Si se envía una alarma de diagnóstico (ATYPE (Página 5944) =1), el usuario es responsable
de asignar un valor adecuado al registro 0 y, en su caso, al registro 1.
La tabla siguiente ofrece una propuesta de asignación conforme a S7. Se ha ajustado ya
anticipadamente el bit "Módulo defectuoso" (ver arriba). La propuesta coincide con la
asignación predeterminada (que se realiza después de POWER ON, después de una
transición STOP-RUN del esclavo inteligente o después de la recuperación de una estación),
excepto en el bit mencionado.
Número de regis‐
tro

Asignación

0

B#16#01, 0B, 00, 00

1

Con modo compatible con S7: Registro 0 + 12 bytes con cero

Información adicional
Consulte también: Formato de los datos de diagnóstico (Página 6065).

PROFIBUS
DP_PRAL: Disparar alarma de proceso del esclavo DP normalizado
Descripción
Esta instrucción permite disparar una alarma de proceso desde el programa de usuario de un
esclavo inteligente en el correspondiente maestro DP. Esto da lugar al inicio del OB 40 en el
maestro DP.

Programación del PLC
Manual de programación y manejo, 11/2019

5947

Instrucciones
4.2 Instrucciones
Con el parámetro de entrada AL_INFO puede identificarse la causa de la alarma de proceso
deseada. Esta identificación de alarma se transfiere al maestro DP y puede evaluarse en el OB
40 (variable OB40_POINT_ADDR).
La alarma de proceso solicitada se define de modo unívoco mediante los parámetros de
entrada IOID y LADDR . Por cada área de direcciones configurada de la memoria de
transferencia, se puede disparar una y solo una alarma de programa en un momento
cualquiera.

Funcionamiento
"DP_PRAL" es una instrucción asíncrona, de modo que la ejecución se prolonga a lo largo de
varias llamadas. Para iniciar la solicitud de alarma de proceso, debe llamarse "DP_PRAL" con
REQ=1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY .
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).
La petición finaliza cuando ha finalizado el procesamiento del OB 40 en el maestro DP.
Nota
Si se utiliza el esclavo DP como esclavo normalizado, la petición finaliza cuando el telegrama
de diagnóstico ha sido recogido por el maestro DP.

Identificación de una petición
Los parámetros de entrada IOID y LADDR definen una petición de manera unívoca.
Si se ha llamado la instrucción "DP_PRAL" en un esclavo DP y se ha vuelto a llamar la
instrucción antes de que el maestro DP haya confirmado la alarma de proceso solicitada, el
comportamiento posterior de la instrucción depende esencialmente de si la nueva llamada
corresponde a la misma petición. Si los parámetros IOID y LADDR coinciden con una petición
todavía no finalizada, la llamada se interpreta como llamada consecutiva independientemente
del valor del parámetro AL_INFO , y en RET_VAL se registra el valor W#16#7002 .

5948

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DP_PRAL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ=1: Disparar alarma de proceso en el
maestro DP correspondiente

IOID

Input

BYTE

I, Q, M, D, L o cons‐
tante

Identificación del área de direcciones en la
memoria de transferencia (desde el punto de
vista del esclavo DP):
● B#16#00: El bit15 de LADDR indica si se
trata de una dirección de entrada (bit15=0)
o de salida (bit15=1).
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse
la identificación de área de la dirección más
baja. Si se trata de las mismas direcciones,
debe indicarse B#16#54.

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección de inicio del área de direcciones en
la memoria de transferencia (desde el punto
de vista del esclavo DP). Si se trata de un área
perteneciente a un módulo mixto, debe indi‐
carse la menor de las dos direcciones.

AL_INFO

Input

DWORD

I, Q, M, D, L o cons‐
tante

Identificación de alarma
Esta se asigna al OB 40 que debe iniciarse en
el maestro DP correspondiente (variable
OB40_POINT_ADDR).
Si se utiliza un esclavo inteligente con un
maestro externo, debe evaluarse el telegrama
de diagnóstico en el maestro.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
un código de error.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY=1:
La alarma de proceso disparada no ha sido
confirmada todavía por el maestro DP.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

La petición se ha ejecutado sin errores.

7000

Primera llamada con REQ=0. No hay ninguna solicitud de alarma de proceso activa; BUSY tiene el valor
"0".

Programación del PLC
Manual de programación y manejo, 11/2019

5949

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
7001

Primera llamada con REQ=1. Se ha enviado una solicitud de alarma al maestro DP; BUSY tiene el valor
"1".

7002

Llamada intermedia (REQ irrelevante): La alarma disparada no ha sido confirmada todavía por el maestro
DP; BUSY tiene el valor "1".

8090

La dirección de inicio del área de direcciones en la memoria de transferencia es errónea

8091

Alarma bloqueada mediante configuración.

8093

Mediante el par de parámetros IOID y LADDR se accede a un módulo desde el que no es posible solicitar
alarmas de proceso.

80B5

La llamada en el maestro DP no es admisible.

80C3

En este momento los recursos necesarios (memoria, etc.) están ocupados.

80C5

En este momento la periferia descentralizada no está disponible (p. ej. fallo de estación).

80C8

La función no está autorizada en el actual estado operativo del maestro DP.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

DPSYC_FR: Sincronizar esclavos DP / Congelar entradas
Descripción
Esta instrucción permite sincronizar uno o varios grupos de esclavos DP.
Para ello debe enviarse a los grupos en cuestión uno de los siguientes comandos de control
o una combinación de ellos:
● SYNC (emisión y congelación simultáneas de estados de salida en los esclavos DP)
● UNSYNC (anula el comando de control SYNC)
● FREEZE (congelación de estados de entrada en los esclavos DP y lectura de las entradas
congeladas)
● UNFREEZE (anula el comando de control FREEZE)
Antes de enviar los comandos de control mencionados, deben haberse dividido en grupos,
mediante configuración, los esclavos DP. Es necesario saber qué esclavo DP está asignado
a cada grupo y con qué número, así como las características de cada uno de los grupos en lo
que respecta al comportamiento de SYNC/FREEZE.
Nota
Debe tenerse en cuenta que los comandos de control SYNC y FREEZE mantienen su validez
incluso en caso de rearranque completo o arranque en frío.
También debe tenerse en cuenta que en cada momento solo puede estar lanzada una petición
SYNC/UNSYNC y solo una petición FREEZE/UNFREEZE.

5950

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Funcionamiento
"DPSYC_FR" es una instrucción asíncrona, de modo que la ejecución se prolonga a lo largo
de varias llamadas. Para iniciar la petición, debe llamarse "DPSYC_FR" con REQ=1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).

Identificación de una petición
Si se ha lanzado una petición SYNC/FREEZE y se ha vuelto a llamar "DPSYC_FR" antes de
que finalice, el comportamiento posterior de la instrucción depende esencialmente de si la
nueva llamada corresponde a la misma petición. Si los parámetros de entrada LADDR,
GROUP y MODE coinciden entre sí, la llamada se considera una llamada consecutiva.

Escribir en salidas de módulos DP
La escritura en las salidas de los módulos DP se lanza mediante
● Comandos de transferencia a la periferia DP,
● La escritura de la memoria imagen de proceso de las salidas en los módulos (mediante el
sistema operativo al final del OB 1 o mediante llamada de la instrucción "UPDAT_PO
(Página 5883)"),
● La llamada de la instrucción "DPWR_DAT (Página 5932)".
En el caso normal, el maestro DP transfiere los datos de salida cíclicamente (en el ciclo del bus
PROFIBUS DP) a las salidas de los esclavos DP.
Si se desea transferir a las salidas al proceso de manera exactamente simultánea
determinados datos de salida que pueden estar repartidos entre varios esclavos, debe
enviarse al maestro DP correspondiente el comando de control SYNC con ayuda de la
instrucción "DPSYC_FR".

¿Qué efecto produce SYNC?
Con el comando de control SYNC se ponen en modo de sincronización los esclavos DP de los
grupos especificados, es decir, el maestro DP transfiere los datos de salida actuales y ordena
a los esclavos DP implicados que congelen las salidas. En los siguientes telegramas de salida,
los esclavos DP guardan los datos de salida en un búfer interno; el estado de las salidas
permanece invariable.
Después de cada comando de control SYNC, los esclavos DP de los grupos seleccionados
depositan los datos de salida de su búfer interno en las salidas al proceso.

Programación del PLC
Manual de programación y manejo, 11/2019

5951

Instrucciones
4.2 Instrucciones
Las salidas no se vuelven a actualizar cíclicamente hasta que el usuario envía el comando de
control UNSYNC con ayuda de la instrucción "DPSYC_FR" .
Nota
Si, en el momento en que se envía el comando de control, algún esclavo DP del grupo o grupos
seleccionados no se encuentra conectado a la red o presenta un fallo, dichos esclavos
tampoco pasan al modo SYNC. Este hecho no se notifica mediante el valor de retorno de la
instrucción.

Leer entradas de módulos DP
Se leen los datos de entrada de los módulos DP
● Con comandos de carga a la periferia DP,
● Al actualizar la memoria imagen de proceso de las entradas (mediante el sistema operativo
al final del OB 1 o mediante llamada de la instrucción "UPDAT_PI (Página 5881)"),
● Llamando la instrucción "DPRD_DAT (Página 5929)".
En el caso normal, el maestro DP recibe estos datos de entrada cíclicamente (en el ciclo del
bus PROFIBUS DP) desde sus esclavos DP y los pone a disposición de la CPU.
Si se desea leer desde el proceso de manera exactamente simultánea determinados datos de
entrada que pueden estar repartidos entre varios esclavos, debe enviarse al maestro DP
correspondiente el comando de control FREEZE con ayuda de la instrucción "DPSYC_FR".

¿Qué efecto produce FREEZE?
Con el comando de control FREEZE se ponen en modo de congelación los esclavos DP
afectados, es decir, el maestro DP ordena a los esclavos DP afectados que congelen el estado
actual de las entradas. A continuación transfiere los datos congelados al área de entrada de la
CPU.
Después de cada comando de control FREEZE, los esclavos DP vuelven a congelar el estado
de las entradas.
El maestro DP no vuelve a recibir cíclicamente el estado actual de las entradas hasta que el
usuario envía el comando de control UNFREEZE con ayuda de la instrucción "DPSYC_FR".
Nota
Si, en el momento en que se envía el comando de control, algún esclavo DP del grupo o grupos
seleccionados no se encuentra conectado a la red o presenta un fallo, dichos esclavos
tampoco pasan al modo Freeze. Este hecho no se notifica mediante el valor de retorno de la
instrucción.

Coherencia de datos
Debido al funcionamiento asíncrono y a la posibilidad de interrupción por clases de prioridad
superiores, al utilizar la instrucción "DPSYC_FR" debe asegurarse que las memorias imagen
de proceso sean coherentes con las entradas y salidas reales de la periferia.

5952

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Para garantizarlo, debe aplicarse una de las reglas de coherencia que se mencionan a
continuación:
● Defina memorias imagen parcial de proceso adecuadas (solo posible con S7-400) para las
salidas "SYNC" y las entradas "FREEZE". Llame la instrucción "UPDAT_PO (Página 5883)"
inmediatamente antes de cada primera llamada de una petición SYNC. Llame la instrucción
"UPDAT_PI (Página 5881)" inmediatamente después de cada última llamada de una
petición FREEZE.
● Alternativamente: Para las salidas afectadas por una petición SYNC, y para las entradas
afectadas por una petición FREEZE, utilice solo accesos directos a la periferia. Mientras
haya una petición SYNC en curso, no es posible escribir en las salidas afectadas, ni
tampoco leer las entradas afectadas mientras está en curso una petición FREEZE.

Uso de DPWR_DAT y DPRD_DAT
Si se utiliza la instrucción "DPWR_DAT (Página 5932)", ésta debe estar finalizada antes de que
se envíe una petición SYNC para las salidas en cuestión.
Si se utiliza la instrucción "DPRD_DAT (Página 5929)", ésta debe estar finalizada antes de que
se envíe una petición FREEZE para las entradas en cuestión.

Arranque y "DPSYC_FR"
El envío de los comandos de control SYNC y FREEZE en los OBs de arranque es
responsabilidad exclusiva del usuario.
Si se desea que las salidas de uno o varios grupos empiecen a funcionar en el modo SYNC ya
desde el inicio del programa de usuario, deben inicializarse esas salidas en el arranque y
ejecutarse por completo la instrucción "DPSYC_FR" con el comando de control SYNC.
Si se desea que las entradas de uno o varios grupos empiecen a funcionar en el modo
FREEZE ya desde el inicio del programa de usuario, debe ejecutarse por completo para esas
entradas la instrucción "DPSYC_FR" con el comando de control FREEZE.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DPSYC_FR":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control disparado por nivelREQ=1:
Lanzar la petición SYNC/FREEZE

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección lógica del maestro DP

GROUP

Input

BYTE

I, Q, M, D, L o cons‐
tante

Selección de grupo
Bit 0 = 1: Grupo 1 seleccionado
Bit 1 = 1: Grupo 2 seleccionado
:
Bit 7 = 1: Grupo 8 seleccionado
Pueden seleccionarse varios grupos por petición.
El valor B#16#0 no está permitido.

Programación del PLC
Manual de programación y manejo, 11/2019

5953

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

BYTE

I, Q, M, D, L o cons‐
tante

ID de la petición (codificación según EN 50 170 Vo‐
lume 2, PROFIBUS)
Bit 0: Reservado (valor 0)
Bit 1: Reservado (valor 0)
Bit 2:
● = 1: UNFREEZE se ejecuta
● = 0: Sin significado
Bit 3:
● = 1: FREEZE se ejecuta
● = 0: Sin significado
Bit 4:
● = 1: UNSYNC se ejecuta
● = 0: Sin significado
Bit 5:
● = 1: SYNC se ejecuta
● = 0: Sin significado
Bit 6: Reservado (valor 0)
Bit 7: Reservado (valor 0)
Valores posibles:
● Con una y solo una ID por petición:
–

B#16#04 (UNFREEZE)

–

B#16#08 (FREEZE)

–

B#16#10 (UNSYNC)

–

B#16#20 (SYNC)

● Con varias IDs por petición:

RET_VAL

Return

INT

I, Q, M, D, L

–

B#16#14 (UNSYNC, UNFREEZE)

–

B#16#18 (UNSYNC, FREEZE)

–

B#16#24 (SYNC, UNFREEZE)

–

B#16#28 (SYNC, FREEZE)

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá un có‐
digo de error.
Después de cada pasada del bloque debe evaluar‐
se RET_VAL .

BUSY

Output

BOOL

I, Q, M, D, L

BUSY=1:
La petición de SYNC/FREEZE todavía no ha finali‐
zado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

5954

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Nota
Si accede a esclavos DPV1, el maestro DP puede transferir la información de error de dichos
esclavos a la instrucción. Encontrará una descripción de esta información de error en
STATUS[3], parámetro STATUS (Página 5901).

Código de
error
(W#16#...)

Explicación

0000

La petición se ha ejecutado sin errores.

7000

Primera llamada con REQ=0. La petición definida mediante LADDR, GROUP y MODE no está activa; BUSY
tiene el valor "0".

7001

Primera llamada con REQ=1. La petición definida mediante LADDR, GROUP y MODE se ha lanzado; BUSY
tiene el valor 1.

7002

Llamada intermedia (REQ irrelevante). La petición SYNC/FREEZE activada todavía está en curso; BUSY
tiene el valor 1.

8090

El módulo seleccionado mediante LADDR no es un maestro DP.

8093

Esta instrucción no es válida para el módulo seleccionado con LADDR (configuración o versión del maestro
DP).

8094

Parámetros GROUP erróneos

8095

Parámetros MODE erróneos

80B0

El grupo seleccionado mediante GROUP no está configurado.

80B1

El grupo seleccionado mediante GROUP no está asignado a esta CPU.

80B2

La petición SYNC especificada mediante MODE no está permitida en el grupo seleccionado mediante
GROUP.

80B3

La petición FREEZEespecificada mediante MODE no está autorizada en el grupo seleccionado mediante
GROUP .

80C2

Falta de recursos temporal del maestro DP: En este momento el maestro DP está procesando el máximo
posible de peticiones para una CPU.

80C3

Esta petición SYNC/UNSYNCno se puede activar en este momento, ya que en cada momento determinado
solo puede estar lanzada una petición SYNC/UNSYNC. Compruebe el programa de usuario.

80C4

Esta petición FREEZE/UNFREEZEno se puede activar en este momento, ya que en cada momento deter‐
minado solo puede estar lanzada una petición FREEZE/UNFREEZE. Compruebe el programa de usuario.

80C5

Cortocircuito en la proximidad inmediata de la interfaz DP

80C6

Interrupción de la petición debido a expulsión de la periferia por la CPU

80C7

Interrupción de la petición debido a rearranque completo (en caliente) o arranque en frío del maestro DP

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

5955

Instrucciones
4.2 Instrucciones

DPNRM_DG: Leer datos de diagnóstico de un esclavo DP
Descripción
La instrucción "DPNRM_DG" lee los datos de diagnóstico actuales de un esclavo DP de la
forma establecida por EN 50 170 Volume 2, PROFIBUS. Los datos leídos se introducen en el
área de destino determinada por RECORD tras la correcta transferencia de los datos.
La estructura fundamental del diagnóstico de esclavo se recoge en la siguiente tabla, y la
información más detallada, en los manuales de los esclavos DP.
Byte

Significado

0

Estado de estación 1

1

Estado de estación 2

2

Estado de estación 3

3

Número de estación maestra

4

Identificación de fabricante (high byte)

5

Identificación de fabricante (low byte)

6 ...

Otros diagnósticos específicos de esclavo

Funcionamiento
La lectura se realiza de forma asíncrona, es decir, que se puede prolongar a lo largo de varias
llamadas. El estado de la petición se indica a través de los parámetros de salida RET_VAL y
BUSY.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).

Llamada
Para iniciar la lectura, debe ajustarse a "1" el parámetro de entrada REQ al llamar la instrucción.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DPNRM_DG":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: solicitud de lectura

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección de diagnóstico configurada del esclavo
DP
Nota: La dirección se debe indicar en formato
hexadecimal; p. ej. la dirección de diagnóstico
1022 significa: LADDR:=W#16#3FE.

RET_VAL

5956

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá un
código de error. Si no aparece ningún error, en
RET_VAL se especifica la longitud de los datos
realmente transferidos.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RECORD

Output

ANY

I, Q, M, D, L

Área de destino para los datos de diagnóstico
leídos. Solo se admite el tipo de datos BYTE . La
longitud mínima del registro que se debe leer o
del área de destino es de 6. La longitud máxima
del registro que se debe leer es de 240; en es‐
clavos normalizados cuyo número de datos de
diagnóstico normalizados sea superior a 240
bytes y tenga un máximo de 244 bytes, los pri‐
meros 240 bytes se transfieren al área de destino
y el correspondiente bit de desbordamiento se
activa en los datos.
Nota: Tenga en cuenta que en las CPUs S7-300,
el parámetro RECORD siempre requiere que se
especifiquen por completo los parámetros de DB
(ej.: P#DB13.DBX0.0 byte 100). En las CPUs
S7-300 no está permitido omitir un número de DB
explícito; de lo contrario se genera un aviso de
error en el programa de usuario.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY=1:
La lectura todavía no ha finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Encontrará información sobre la conversión de tipos de datos en los distintos lenguajes de
programación en "Sinopsis de la conversión de tipos de datos (Página 366)".

Parámetro RECORD
La CPU valora la longitud real de los datos de diagnóstico leídos:
Si la indicación de longitud de RECORD
● es inferior al número de datos proporcionados, los datos se rechazan y en RET_VAL se
deposita la correspondiente información de error.
●

es superior o igual al número de datos proporcionados, los datos se aceptan en el área de
destino y en RET_VAL se deposita la longitud real como valor positivo.
Nota
Hay que asegurarse de que los parámetros actuales de RECORD coincidan en todas las
llamadas pertenecientes a una petición.
Una petición está claramente establecida por el parámetro de entrada LADDR.

Programación del PLC
Manual de programación y manejo, 11/2019

5957

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
● Si se ha producido un error durante la ejecución de la función, el valor de respuesta
contendrá un código de error,
● Si durante la transferencia no se ha producido ningún error, RET_VAL contiene la longitud
de los datos leídos en bytes como número positivo.
Nota
En un esclavo DP, el número de datos leídos depende de su estado de diagnóstico.
Para evaluar la información de error del parámetro RET_VAL , véase Evaluación de errores
con el parámetro de salida RET_VAL (Página 174). Allí encontrará también la información
general de error de las instrucciones. La información específica de error "DPNRM_DG" es una
parte de la información de error de "RD_REC (Página 5922)".

Esclavos normalizados con datos de diagnóstico de más de 240 bytes
En esclavos normalizados con un número de datos de diagnóstico normalizados entre 241 y
244 bytes, debe tenerse en cuenta los siguiente:
Si la indicación de longitud de RECORD
● es inferior a 240 bytes, los datos se rechazan y en RET_VAL se deposita la correspondiente
información de error.
● es superior o igual a 240 bytes, los primeros 240 bytes de los datos de diagnóstico
normalizados se transfieren al área de destino y en los datos se activa el correspondiente
bit de desbordamiento.

Recursos del sistema con S7-400
En S7-400, al llamar "DPNRM_DG" para una petición no procesada en ese momento, se
asignan los recursos (espacio de memoria) de la CPU. Es posible llamar "DPNRM_DG"
sucesivamente a intervalos breves para varios esclavos DP, siempre que no se rebase la
cantidad máxima de peticiones "DPNRM_DG" "simultáneas" activas que la CPU es capaz de
procesar.
Si existen varias peticiones activas "simultáneas", se garantiza que todas las peticiones se
ejecuten y que no se produzcan interferencias recíprocas.
En el momento en que se alcanza el límite de los recursos del sistema, se envía una
notificación mediante RET_VAL. En tal caso debe repetirse la petición.

Consulte también
Sinopsis de la conversión de tipos de datos (Página 366)

5958

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

DP_TOPOL: Determinar topología para sistema maestro DP
Descripción
Esta instrucción permite lanzar la determinación de topología para un sistema maestro
seleccionado. Al llamar esta instrucción, se accede a todos los repetidores de diagnóstico
conectados a un sistema maestro DP.
Nota
La determinación de topología puede efectuarse en cada momento concreto solo para un
sistema maestro DP.
La determinación de topología es imprescindible para poder visualizar con detalle la ubicación
de los eventuales errores de cable. Después del montaje del sistema maestro DP y de cada
modificación de su estructura física, debe efectuarse de nuevo la determinación de topología
con la instrucción "DP_TOPOL".
Se considera que se ha modificado la estructura física cuando:
● Se modifican longitudes de cables
● Se añaden o eliminan estaciones o componentes con función de repetidor
● Se modifican direcciones de estaciones
Si un repetidor de diagnóstico notifica un error, "DP_TOPOL" escribe en las salidas DPR y
DPRI a lo largo de la duración de un paso de "DP_TOPOL". Si varios repetidores de
diagnóstico del sistema maestro DP seleccionado notifican errores, "DP_TOPOL" envía a DPR
y DPRI información acerca del primer repetidor de diagnóstico que ha notificado errores. La
información de diagnóstico completa se puede leer con la instrucción "DPNRM_DG
(Página 5956)" o en la PG. Si ningún repetidor de diagnóstico notifica errores, las salidas DPR
y DPRI adquieren el valor NULL.
Si, después de producirse un error, se desea volver a lanzar una determinación de topología,
en primer lugar debe restablecerse "DP_TOPOL". Para hacerlo, debe llamarse "DP_TOPOL"
con REQ=0 y R=1.

Funcionamiento
"DP_TOPOL" es una instrucción asíncrona, de modo que la ejecución se prolonga a lo largo
de varias llamadas. Para iniciar la determinación de topología de bus, debe llamarse
"DP_TOPOL" con REQ=1 . Para interrumpir la operación, debe llamarse "DP_TOPOL" con
R=1 .
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY .
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).
Nota
La determinación de topología puede durar varios minutos.

Programación del PLC
Manual de programación y manejo, 11/2019

5959

Instrucciones
4.2 Instrucciones

Identificación de una petición
El parámetro de entrada DP_ID define una petición de manera unívoca.
Si se ha llamado "DP_TOPOL" y se vuelve a llamar la misma instrucción antes de que finalice
la determinación de topología, el comportamiento posterior de la instrucción depende de si la
nueva llamada corresponde a la misma petición: Si el parámetro DP_ID coincide con una
petición todavía no finalizada, la llamada se interpreta como llamada consecutiva, y en
RET_VALse registra el valor W#16#7002. En cambio, si se trata de una petición diferente, la
CPU la rechaza.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DP_TOPOL":
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ=1: Lanzar determinación de topología

R

Input

BOOL

I, Q, M, D, L

R=1: Interrumpir la determinación de topología

DP_ID

Input

INT

I, Q, M, D, L o cons‐
tante

ID del sistema maestro DP cuya topología se
debe determinar

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá un
código de error.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY=1: La determinación de topología todavía
no ha finalizado.

DPR

Output

BYTE

I, Q, M, D, L

Dirección PROFIBUS del repetidor de diagnós‐
tico que notifica errores

DPRI

Output

BYTE

I, Q, M, D, L

Segmento de medición del repetidor de diagnós‐
tico que notifica errores:
● Bit 0 = 1: Fallos temporales en el segmento
DP2
● Bit 1 = 1: Fallos permanentes en el segmento
DP2
● Bit 4 = 1: Fallos temporales en el segmento
DP3
● Bit 5 = 1: Fallos permanentes en el segmento
DP3

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

5960

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Dentro de la información de error "verdadera" (códigos de error W#16#8xyz) de la tabla
siguiente, debe distinguirse entre dos casos:
● Errores temporales (códigos de error de W#16#80A2 a 80A4, 80C3, 80C5):
En este tipo de errores es posible que el error se elimine sin intervención del usuario, es
decir, puede bastar con llamar de nuevo "DP_TOPOL" (varias veces si es necesario).
Ejemplo de error temporal: En este momento los recursos necesarios están ocupados
(W#16#80C3).
● Errores permanentes (códigos de error de W#16#8082, 80B0, 80B2):
Los errores de este tipo no se pueden eliminar sin intervención del usuario. Solo tiene
sentido volver a llamar "DP_TOPOL" una vez que se haya eliminado el error. Ejemplo de
error permanente: El maestro DP o la CPU no soportan este servicio. (W#16#80B0).
Código de error

Explicación

(W#16#...)
0000

La petición se ha ejecutado sin errores.

7000

Primera llamada con REQ=0. No se ha lanzado ninguna determinación de topología. BUSY tiene el valor
"0".

7001

Primera llamada con REQ=1. Se ha lanzado la petición de determinación de topología. BUSY tiene el valor
"1".

7002

Llamada intermedia (REQ irrelevante): La determinación de topología todavía está procesándose. BUSY
tiene el valor "1".

7010

Se ha intentado interrumpir la determinación de topología. Sin embargo, no hay ninguna petición en curso
con la DP_IDindicada. BUSY tiene el valor "0".

7011

Primera llamada con R=1. Se ha lanzado la interrupción de la determinación de topología; BUSY tiene el
valor "1".

7012

Llamada intermedia: La interrupción de la determinación de topología todavía está procesándose. BUSY
tiene el valor "1".

7013

Última llamada: Se ha interrumpido la determinación de topología. BUSY tiene el valor "0".

8082

No está configurado ningún maestro DP con la DP_ID indicada.

80A2

Error en determinación de topología; encontrará información más detallada en los parámetros de salida
DPR y DPRI.

80A3

Error en determinación de topología: El tiempo de vigilancia ha finalizado (timeout).

80A4

Fallo de comunicación en el bus K

80B0

El maestro DP o la CPU no soportan este servicio.

80B2

Error en determinación de topología: No se ha detectado ningún repetidor de diagnóstico en el sistema
maestro DP seleccionado.

80C3

En este momento los recursos necesarios están ocupados. Causa posible: Ha iniciado una segunda
determinación de la topología (no está permitido determinar más de una topología en un determinado
instante).

80C5

El sistema maestro DP no está disponible en este momento.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

5961

Instrucciones
4.2 Instrucciones

ASi
ASi_3422: Controlar comportamiento del maestro ASi
Descripción
La instrucción "ASi_3422" se requiere para utilizar el modo de operación "Modo de
funcionamiento avanzado" con el CP 342-2. El modo de funcionamiento avanzado permite
controlar por completo el comportamiento del maestro a través del programa de usuario. El
acceso a las entradas y salidas se realiza, como es habitual, en el modo de funcionamiento
estándar del CP 342-2.
Las llamadas a comandos enviadas al CP342-2 se realizan desde el programa de usuario, a
través de la instrucción. Para ello es necesario especificar una llamada de comando en un
búfer de transmisión e iniciar la petición.
La instrucción "ASi_3422" transfiere la llamada de comando al CP342-2. Al finalizar la petición,
se transfiere el estado de la petición y se ponen a disposición los posibles datos de respuesta
en un búfer de recepción.

Llamada
La instrucción debe llamarse cíclicamente para cada CP342-2 existente. Por cada CP342-2
sólo puede ejecutarse una petición simultáneamente. Una petición en curso no puede
interrumpirse y no está sometida a vigilancia de tiempo por la instrucción. La instrucción
"ASi_3422" no se puede ejecutar con posibilidad de interrupción. Por ello las llamadas no se
pueden programar en niveles de ejecución que se interrumpan recíprocamente (p. ej. con
llamada en el OB 1 y en el OB 35).
Defina el procesamiento del comando en el programa de usuario del modo siguiente:
1. En caso de rearranque del programa de usuario S7, debe llamarse "ASi_3422" una sola vez
con el valor de parámetro STARTUP = TRUE.
2. En el programa de usuario, especifique la llamada del comando en un búfer de transmisión.
Este búfer de transmisión se transfiere con el parámetro de llamada SEND.
Encontrará más información sobre la interfaz de comandos del CP y los comandos del
esclavo AS-i en la documentación de hardware del procesador de comunicaciones.
3. Según el tipo de comando, se requiere un búfer de respuesta. Este búfer de respuesta se
transfiere con el parámetro de llamada RECV. Con esta interfaz no se requiere el búfer de
respuesta para información de estado.
4. Active la petición mediante el parámetro ACT=1.
5. A continuación, consulte los parámetros DONE, ERROR y STATUS.

5962

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ASi_3422":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

ACT

Input

BOOL

I, Q, M, D, L

La ejecución del comando por la función se
dispara por nivel, es decir, mientras ACT = 1,
se inicia la ejecución del comando, en caso de
que no haya una llamada en ejecución.

STARTUP

Input

BOOL

I, Q, M, D, L

Un arranque de la CPU se notifica a la instruc‐
ción mediante STARTUP = 1. Después de la
primera ejecución de la función, el usuario de‐
be desactivar STARTUP.

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección inicial de un módulo

SEND

Input

ANY

I, Q, M, D, L

La dirección inicial de un módulo, en módulos
de señal, se determina de acuerdo con los da‐
tos sobre asignación de dirección orientada a
slot.
Búfer de transmisión
El parámetro remite a un área de memoria en
la que el usuario debe especificar el comando,
p. ej.: P#DB20.DBX 20.0 Byte 10.

RECV

Input

ANY

I, Q, M, D, L

Búfer de recepción
Este búfer solo es relevante para comandos
que devuelven datos de respuesta. El paráme‐
tro remite a un área de memoria en la que se
guarda una respuesta al comando. La longitud
del área de datos parametrizada aquí es irre‐
levante, p. ej.: P#DB30.DBX 20.0 Byte 1

DONE

Output

BOOL

Q, M, D, L

Con DONE = 1 se señaliza "Petición finalizada
sin error".

ERROR

Output

BOOL

Q, M, D, L

Con ERROR = 1 se señaliza "Petición finaliza‐
da con error".

STATUS

InOut

DWORD

M, D

1. Palabra: Estado de la petición/código de
error (ver la tabla siguiente); con "Petición fi‐
nalizada con error" se genera un código de
error para obtener una descripción más deta‐
llada del error.
2. Palabra: Es utilizada por la instrucción para
fines internos y no puede modificarse.
Para llamadas de instrucción en diferentes di‐
recciones lógicas (LADDR) deben asignarse
diferentes palabras dobles para el parámetro
STATUS.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro LADDR
La dirección de inicio de esta área de memoria se determina mediante el slot del CP 342-2.

Programación del PLC
Manual de programación y manejo, 11/2019

5963

Instrucciones
4.2 Instrucciones
El CP 342-2 ocupa 16 bytes de entrada y 16 bytes de salida en el área de direcciones E/S del
autómata programable S7 (área analógica del AS). De los 16 bytes del área de direcciones del
CP 342-2 se asignan 31 x 4 bits para datos del esclavo AS-i. Los 4 bits restantes están
reservados para aplicaciones posteriores.

Parámetros DONE, ERRORy STATUS
Si durante el procesamiento de la función se produce un error, además de la información ya
mencionada en ERROR y STATUS se adjunta un "0" en el bit BR. La consulta del bit BR se
realiza de modo distinto en los programas de usuario KOP y AWL:
● KOP: Consulta a través del parámetro de salida ENO
● AWL: Consulta directa del bit BR
La tabla siguiente contiene las posibles indicaciones de la 1ª palabra de STATUS en función
de DONE y ERROR.
DONE

ERROR

STATUS

Significado

0

0

8181

La petición está en curso.

1

0

0000

Petición finalizada sin error.

0

1

8090

Dirección no válida en el parámetro LADDR.

0

1

80A0

Acuse negativo al leer el módulo.

0

1

80A1

Acuse negativo al escribir en el módulo.

0

1

80B0

El módulo no conoce este registro.

0

1

80B1

La longitud del registro indicada es errónea.

0

1

80C0

No se puede leer el registro.

0

1

80C1

El registro indicado está siendo procesado en este momento.

0

1

80C2

Hay un atasco de peticiones.

0

1

80C3

Recursos (memoria) ocupados.

0

1

80C4

Error de comunicación

0

1

8182

Significado: Identificación después de rearranque con STARTUP=TRUE (sin errores).

0

1

8184

Tipo de datos del operando formal RECV, no admisible.

0

1

8381

Dirección del esclavo errónea

0

1

8382

Esclavo no activado (no en LAS).

0

1

8383

Error en AS-Interface

0

1

8384

Comando (en el estado del CP) no admisible.

0

1

8385

El esclavo 0 existe.

0

1

83A1

No se ha encontrado en la AS-Interface el esclavo cuya dirección se desea cambiar.

0

1

83A2

El esclavo 0 existe.

0

1

83A3

El esclavo con la nueva dirección ya existe en la AS-Interface.

0

1

83A4

No es posible borrar la dirección del esclavo.

0

1

83A5

No es posible ajustar la dirección del esclavo.

0

1

83A6

No es posible guardar de modo permanente la dirección del esclavo.

0

1

83F8

Número de petición desconocido.

0

1

83F9

Error de EEPROM

5964

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

ERROR

STATUS

Significado

0

1

8F22

Error de longitud de área al leer un parámetro.

8F23

Error de longitud de área al escribir un parámetro.
Este código de error indica que un parámetro se encuentra total o parcialmente fuera
del área del operando o que la longitud de un mapa de bits en un parámetro ANY no es
divisible por 8.

0

0

0

1

1

1

8F24

Error de área al leer un parámetro.

8F25

Error de área al escribir un parámetro. Este código de error indica que un parámetro se
encuentra en un área que no es admisible para una función del sistema.

8F28

Error de alineación al leer un parámetro.

8F29

Error de alineación al escribir un parámetro. Este código de error indica que la refe‐
rencia a un parámetro es un operando cuya dirección de bit es distinta de "0".

8F30

El parámetro se encuentra en el DB global protegido contra escritura.

8F31

El parámetro se encuentra en el DB de instancia protegido contra escritura.
Este código de error indica que un parámetro se encuentra en un bloque de datos
protegido contra escritura.

0

1

8F32

El parámetro contiene un número de DB demasiado alto

0

1

8F3A

El parámetro contiene el número de un DB que no está cargado.

0

1

8F42

Se ha producido un error de acceso mientras el sistema intentaba leer un parámetro del
área de periferia de las entradas.

8F43

Se ha producido un error de acceso mientras el sistema intentaba escribir un parámetro
en el área de periferia de las salidas.

8F44

Este código de error indica que se ha denegado el acceso de lectura a un parámetro.

8F45

Este código de error indica que se ha denegado el acceso de escritura a un parámetro.

8F7F

Error interno

0
0

1
1

ASI_CTRL: controlar comportamiento del maestro ASi
Descripción ASI_CTRL
Descripción
La instrucción "ASI_CTRL" permite controlar el comportamiento del maestro AS-i a través del
programa de usuario del PLC. La instrucción procesa automáticamente el protocolo del
comando y permite la parametrización de maestros AS-i SIMATIC así como la lectura de datos
de información. Las posibilidades disponibles y el funcionamiento de la interfaz de comandos
se describen en el manual del maestro AS-i.
Se soportan maestros AS-i con conexión centralizada y maestros AS-i descentralizados vía
PROFIBUS DP. También son posibles combinaciones con PROFINET IO (ejemplo: IE/PB Link
PN IO).
La figura siguiente muestra esquemáticamente la funcionalidad de la instrucción "ASI_CTRL":

Programación del PLC
Manual de programación y manejo, 11/2019

5965

Instrucciones
4.2 Instrucciones
(VWDFLµQ6,0$7,&

0DHVWUR$6L

3URJUDPDGHXVXDULR
$6,B&75/
&RPDQGRGH

%¼IHUGHUHFHSFLµQ

Escribir
registro

Consultar
estado



Leer registro



Datos de respuesta

①
②
③
④
⑤
⑥




STATUS

Interfaz de comandos

%¼IHUGHWUDQVPLVLµQ
N.º de comando /
Datos de petición

Inicio

'LUHFFLµQLQLFLDO0DHVWUR$6L



Ejecución de
comando



Inicio del procesamiento en el parámetro REQ.
El programa transmite al maestro AS-i el comando deseado mediante la instrucción
"RDREC".
El maestro AS-i ejecuta el comando.
El estado actual del maestro AS-i se deposita en el área de entrada de datos bina‐
rios (dirección base lógica).
La instrucción "ASI_CTRL" consulta cíclicamente los 4 bits de estado y los evalúa.
Si ha terminado la ejecución de comandos, la petición de comandos concluye me‐
diante "RDREC". En el campo de datos de "RDREC" se encuentran, para cada
comando, los datos de respuesta del mismo u otra información de estado.

Dependencias entre versiones de instrucciones
La versión V1.3 de la instrucción "ASI_CTRL" exige la versión V1.1 de la instrucción "WRREC".
La versión V1.2 de la instrucción "ASI_CTRL" exige la versión V1.1 de la instrucción "WRREC".

Diferencias en la llamada de comandos con IE/AS-i Link y CPs o DP/AS-i Links
Existen diferencias sustanciales en el procedimiento de intercambio de comandos entre un
controlador y un maestro AS-i.
● Con IE/AS-i Link (PROFINET) se utiliza la interfaz de juegos de datos. Los distintos
comandos son llamados por diferentes números de juegos de datos mediante "Escribir
registro" (instrucción "WRREC") o "Leer registro" (instrucción "RDREC").
● Los CPs S7-300 y DP/AS-i Links (PROFIBUS) utilizan la interfaz de comandos. Todos los
comandos son llamados por el número de juego de datos 2 mediante una pareja de
instrucciones "Escribir registro" (instrucción "WRREC") y "Leer registro" (instrucción
"RDREC"). El tipo de comando lo define el contenido de datos al efectuarse la petición de
escritura.

5966

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Cambios respecto de la instrucción "ASi_3422"
La instrucción "ASI_CTRL" es una versión revisada de la instrucción "ASi_3422 (Página 5962)"
y presenta mejoras de funcionalidad y compatibilidad. En concreto, se han efectuado las
modificaciones siguientes:
● Para escribir y leer juegos de datos de diagnóstico, las instrucciones "WR_REC
(Página 5927)" y "RD_REC (Página 5922)" han sido sustituidas por las instrucciones
"RDREC (Página 5888)" y "WRREC (Página 5890)". Sus funciones son idénticas, pero
soportan la transferencia de datos vía PROFINET IO.
● El tipo de bloque de la instrucción ha cambiado de función (FC) a bloque de función (FB).
"ASI_CTRL" dispone de un bloque de datos de instancia y es apto para multiinstancia.
● La denominación de los parámetros formales de "ASI_CTRL" es conforme con los bloques
de sistema SIMATIC. Desaparece el parámetro de entrada STARTUP. La definición del
parámetro STATUS se ha basado en las instrucciones "RDREC (Página 5888)" y "WRREC
(Página 5890)". Además, se han adaptado las identificaciones de estado para el parámetro
DONE y para el parámetro BUSY nuevo.

Funcionamiento de la instrucción "ASI_CTRL"
La instrucción "ASI_CTRL" es un bloque de función asíncrono, de modo que la ejecución se
prolonga a lo largo de varias llamadas.
● Una petición se inicia con REQ = TRUE.
● Mediante los parámetros de salida BUSY y los dos bytes centrales del parámetro de salida
STATUS se muestra el estado de la petición.
● Mientras se procesa la petición, está activado el parámetro BUSY. En la primera llamada,
STATUS contiene el valor 00700100H. En todas las llamadas sucesivas pertenecientes a
esta petición, contiene el valor 00700200H. Al concluir la petición, el resultado se indica en
los parámetros DONE o ERROR.
– Si no se ha producido ningún error, se activa DONE. En peticiones con datos de
respuesta del maestro AS-i, dichos datos se ponen a disposición en el búfer de
recepción indicado. En este caso, además, en el parámetro STATUS se muestra la
cantidad de datos proporcionados en bytes. En peticiones sin datos de respuesta, en
STATUS se registra el valor 00000000H.
– Si durante el procesamiento de la petición se presenta un error, se activa ERROR. En
ese caso, el contenido del búfer de recepción no es válido. Para definir con más
precisión el error ocurrido, en el parámetro STATUS se registra un código de error.

Número de llamadas de comandos
Si se utiliza la instrucción "ASI_CTRL" para efectuar la petición de comandos, no deben
emitirse simultáneamente otros comandos al mismo maestro AS-i mediante "RDREC
(Página 5888)" y "WRREC (Página 5890)". Lo mismo se aplica a las llamadas múltiples de la
instrucción en el mismo maestro AS-i.
La instrucción "ASI_CTRL" no se puede ejecutar con posibilidad de interrupción. Por ello, las
llamadas no se pueden programar en niveles de ejecución que se interrumpan recíprocamente
(p. ej. con llamada en el OB 1 y en el OB 35).

Programación del PLC
Manual de programación y manejo, 11/2019

5967

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ASI_CTRL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Con REQ = TRUE se inicia una petición nueva
siempre que no se esté ejecutando otra. No se
realiza ninguna evaluación de flancos.

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección inicial del maestro AS-i en el área de
direcciones S7 (dirección base lógica). La di‐
rección inicial se determina en la configuración
de hardware al configurar el maestro.

SD

Input

ANY

I, Q, M, D, L

Búfer de transmisión
El parámetro remite a un área de memoria en
la que debe especificarse el comando (véase
"Comandos AS-i (Página 5970)").
Ejemplo: P#DB101.DBX 0.0 BYTE 223

RD

Input

ANY

I, Q, M, D, L

Búfer de recepción
Este búfer solo es relevante para comandos
que devuelven datos de respuesta. El paráme‐
tro remite a un área de memoria en la que se
guarda una respuesta al comando (véase "Co‐
mandos AS-i (Página 5970)").
Ejemplo: P#DB102.DBX 224.0 BYTE 221

DONE

Output

BOOL

Q, M, D, L

DONE = TRUE: petición finalizada sin errores.

BUSY

Output

BOOL

Q, M, D, L

BUSY = TRUE: petición en procesamiento.

ERROR

Output

BOOL

Q, M, D, L

ERROR = TRUE: petición cancelada con erro‐
res.

STATUS

Output

DWORD

M, D

Estado de la petición / Código de error
Véase la descripción de "Parámetro STATUS".

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Parámetros LADDR, SD y RD
Los parámetros LADDR, SD y RD no pueden modificarse en ninguna ejecución del bloque
mientras se procesa una petición; deben permanecer constantes.

Parámetro STATUS
La tabla siguiente contiene las posibles indicaciones de STATUS en función de DONE y
ERROR.
DONE

BUSY

ERROR

STATUS

Significado

0

0

0

00700000H Primera llamada con REQ = FALSE; no hay ninguna petición activa.

0

1

0

00700100H Primera llamada con REQ = TRUE; petición lanzada.

0

1

0

00700200H Llamada sucesiva (REQ es irrelevante); se sigue procesando la petición.

5968

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DONE

BUSY

ERROR

STATUS

1

0

0

00000000H Petición finalizada sin errores. Sin datos de respuesta.

Significado

1

0

0

0000xx00H Petición finalizada sin errores. Número de bytes xx de los datos de res‐
puesta.

0

0

1

C0818400

0

0

1

Tipo de datos del operando formal RD no admisible.

H

0

0

1

C0818500
H

Error de comunicación con el maestro AS-i (dirección configurada erró‐
neamente en el parámetro LADDR).

C0838100

Dirección errónea del esclavo AS-i.

H

0

0

1

0

0

1

C0838200

Esclavo AS-i no activado (no en LAS).

H

0

0

1

C0838300
H

Error en AS-Interface (es posible que se haya ajustado un valor insufi‐
ciente en el parámetro SD).

C0838400

En el estado actual del maestro AS-i este comando no está permitido.

H

0

0

1

0

0

1

C0838500

Existe un esclavo AS-i con dirección "0".

H

0

0

1

C0838600
H

El esclavo AS-i tiene datos de configuración no permitidos (E/S o códi‐
gos ID).

C083A100

El esclavo AS-i direccionado no se encuentra en el AS-Interface.

H

0

0

1

0

0

1

C083A200

Existe un esclavo AS-i con dirección "0".

H

C083A300

En el AS-Interface ya existe un esclavo AS-i con la dirección nueva.

H

0

0

1

C083A400

No es posible borrar la dirección del esclavo AS-i.

H

0

0

1

0

0

1

C083A500

No es posible establecer la dirección del esclavo AS-i.

H

C083A600

No es posible guardar permanentemente la dirección del esclavo AS-i.

H

0

0

1

C083A700

Error al leer el código Extended ID1.

H

0

0

1

C083A800
H

La dirección de destino no es plausible (p. ej., se utiliza una dirección de
esclavo B para un esclavo estándar).

0

0

1

C083B100

Se ha producido un error de longitud en la transferencia de string.

H

0

0

1

C083B200

Se ha producido un error de protocolo en la transferencia de string.

H

0

0

1

0

0

1

C083F800

Se desconoce el número de petición o el parámetro de la petición.

H

C083F900

El maestro AS-i ha detectado un error EEPROM.

H

Programación del PLC
Manual de programación y manejo, 11/2019

5969

Instrucciones
4.2 Instrucciones

Comandos AS-i
Descripción
La interfaz de comandos permite intercambiar datos de parametrización e información entre el
controlador y el maestro AS-i.
Con estos comandos:
● se proporciona a la especificación del maestro AS-i la funcionalidad completa del perfil de
maestro M4;
● puede configurarse completamente el maestro AS-i desde el controlador.
Nota
Comandos AS-i soportados
En el manual del maestro AS-i correspondiente pueden consultarse los comandos AS-i
soportados y una descripción detallada de los mismos.

Estructura general del búfer de transmisión
La tabla siguiente muestra la estructura general del búfer de transmisión para comandos y
datos de peticiones. El área para el número de comando debe estar ocupada siempre. El
número de bytes para los datos de la petición figura en la descripción de cada comando (véase
la documentación del maestro AS-i). En este caso, "q" equivale a la dirección inicial del búfer
de transmisión.
Byte

Bit 7

Bit 6

Bit 5

Bit 4

Bit 3

Bit 2

Bit 1

Bit 0

Significado
q+0

Número del comando

q+1

Datos de la petición

q+2

Datos de la petición

q + ...

Datos de la petición

Estructura general del búfer de recepción
La tabla siguiente muestra la estructura general del búfer de recepción para los datos de
respuesta del comando. El número de bytes para los datos de respuesta depende de cada
comando. Algunos comandos no devuelven datos de respuesta y, por tanto, necesitan la
especificación de un búfer de recepción virtual que no se rellene con datos. En este caso, "n"
equivale a la dirección inicial del búfer de recepción.
Byte

Bit 7

Bit 6

Bit 5

Bit 4

Bit 3

Bit 2

Bit 1

Bit 0

Significado

5970

n+0

Datos de respuesta

n+1

Datos de respuesta

n+2

Datos de respuesta

n + ...

Datos de respuesta

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

ATENCIÓN
Las áreas de memoria pueden sobrescribirse
Si el búfer de recepción de la instrucción "ASI_CTRL" es demasiado corto, pueden
sobrescribirse las áreas de memoria colindantes. La longitud indicada en el puntero ANY del
parámetro RD durante la llamada de la instrucción "ASI_CTRL" es irrelevante. La longitud
necesaria del búfer de recepción debe consultarse en la descripción del comando.
Para los números de comando 39H, 41H, 42H, 43H y 44H se aplica lo siguiente:
el búfer de recepción debe tener 221 bytes de longitud (del byte 0 al byte 220) aun cuando el
comando devuelva menos datos. Dependiendo del comando, el maestro AS-i puede
sobrescribir con valores cero los bytes más altos contenidos en el búfer de recepción.

Comandos AS-i
La tabla siguiente muestra una selección posible de comandos AS-i.
Nombre

Parámetro

Retorno

Codificación

Configurar_valor_de_parámetro
(Set_Permanent_Parameter)

Dirección de esclavo, pará‐
metros

Leer_valor_de_parámetro_configurado
(Get_Permanent_Parameter)

Dirección de esclavo

Parámetros

01 H

Escribir_valor_de_parámetro
(Write_Parameter)

Dirección de esclavo, pará‐
metros

Eco de parámetro

02 H

Leer_valor_de_parámetro
(Read_Parameter)

Dirección de esclavo

Valor del parámetro

03 H

00 H

Configurar_valores_de_parámetros_reales
(Store_Actual_Parameters)

04 H

Configurar_datos_de_configuración

Dirección de esclavo, confi‐
guración

Leer_datos_de_configuración_configurados

Dirección de esclavo

25 H
Datos de configuración
configurados

Configurar_datos_de_configuración_reales
(Store_Actual_Configuration)

26 H
07 H

Leer_datos_de_configuración_reales

Dirección de esclavo

Configurar_LPS

LPS

Datos de configuración
reales

28 H
29 H

Activar_modo_Offline

Modo

0A H

Seleccionar_autoprogramación

Modo

0B H

Activar_modo

Modo

0C H

Cambiar_dirección_esclavo_AS–i
(Change_AS–iSlave_Address)

Dirección1, dirección2

0D H

Leer_estado_esclavo_AS–i

Dirección de esclavo

Leer_listas_y_flags

Programación del PLC
Manual de programación y manejo, 11/2019

Registro de errores del
esclavo AS-i

0F H

LDS, LAS, LPS, flags

30 H

5971

Instrucciones
4.2 Instrucciones
Nombre

Parámetro

Leer_configuración_total

Retorno

Codificación

Datos de configuración
reales, parámetros ac‐
tuales, LAS, flags

39 H

Configurar_configuración_total

Configuración total

3A H

Escribir_lista_parámetros

Lista de parámetros

3C H

Leer_lista_eco_parámetros
Escribir_petición_CTT2

Dirección de esclavo
string CTT2

Leer_identificador_versión

Lista de ecos de pará‐
metros

33 H

String CTT2

44 H

String de versión

14 H
17 H

Leer_ID_esclavo_AS–i

Dirección de esclavo

Código ID

Leer_Extended–ID1_esclavo_AS-i

Dirección de esclavo

Código Extended ID1

Escribir_Extended-ID1_esclavo_AS–i

Código Extended ID1

Leer_Extended–ID2_esclavo_AS-i

Dirección de esclavo

Código Extended ID2

38 H

Leer_ES_esclavo_AS–i

Dirección de esclavo

Configuración E/S

18 H

Leer_lista_errores_periferia

37 H
3F H

LPF

3E H

Escribir_string_parámetros_esclavo_AS–i

Dirección de esclavo, string
de parámetros

40 H

Leer_string_parámetros_esclavo_AS–i

Dirección de esclavo

String de parámetros

41 H

Leer_string_ID_esclavo_AS–i

Dirección de esclavo

String ID

42 H

Leer_string_diagnóstico_esclavo_AS–i

Dirección de esclavo

String de diagnóstico

43 H

Leer_contador_errores_línea_AS–i

4A H

Leer_y_borrar_contador_errores_línea_AS–i

4B H

Leer_contador_errores_esclavo_AS–i

Dirección de esclavo

4C H

Leer_y_borrar_contador_errores_esclavo_AS–i

Dirección de esclavo

4D H

Comando adicional para el DP/ AS-i F-Link:
Estado_AS-i/Diag_esclavos_F

Estado / Diagnóstico
de todos los esclavos
ASIsafe

51 H

Nota
Nueva inicialización de la interfaz de comandos del maestro AS-i
Otro comando no mencionado en la tabla es el comando 77 H. Con esta llamada se reinicializa
la interfaz de comandos del maestro AS-i. Si justo en este momento el maestro AS-i indicado
está ocupado con un comando, este se interrumpe.
A partir de la versión V2.1.20 de DP/AS-i LINK Advanced se ofrece el comando adicional 0E H.
Con esta llamada puede habilitarse o bloquearse la función de vigilancia de contacto a tierra
de una línea.

5972

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

4.2.3.5

PROFIenergy

Descripción de PROFIenergy
PROFIenergy
PROFIenergy es un perfil de gestión energética con PROFINET independiente de cualquier
fabricante y cualquier dispositivo concreto. PROFIenergy permite desconectar los dispositivos
de forma coordinada y centralizada para reducir el consumo eléctrico durante pausas de
producción o durante interrupciones no planificadas.
3DXVD

&RQVXPRGHHQHUJ¯D

3DXVD

7LHPSR

Los dispositivos PROFINET o los módulos de potencia se desconectan mediante comandos
especiales en el programa de usuario del controlador PROFINET IO. No se requiere hardware
adicional. Los dispositivos PROFINET interpretan directamente los comandos PROFIenergy.

Controlador PROFIenergy (controlador PE)
El controlador PE es un PLC que activa o desactiva el estado de reposo de los dispositivos
subordinados. La desconexión o la reactivación de componentes de producción concretos o
de líneas de producción enteras se realiza mediante el programa de usuario. Los comandos (p.
ej. "Start_Pause" o "End_Pause") se emiten al dispositivo subordinado mediante las
instrucciones correspondientes (bloques de función). Los comandos se envían con el
protocolo de comunicación PROFINET.

Unidad PROFIenergy (unidad PE)
La unidad PE recibe los comandos PROFIenergy del controlador PE y los aplica de forma
correspondiente (p. ej. devolviendo un valor medido o activando un modo de ahorro de
energía). La aplicación de la unidad PE en un dispositivo apto para PROFIenergy depende del
tipo de dispositivo y del fabricante.

Programación del PLC
Manual de programación y manejo, 11/2019

5973

Instrucciones
4.2 Instrucciones
Le unidad PE se puede aplicar, por ejemplo, del siguiente modo:
● En el proxy de un módulo: los comandos PE son válidos para el módulo direccionado,
respectivamente, y dado el caso, para módulos subordinados.
● En el proxy de una tarjeta: los comandos PE son válidos para distintos módulos dentro de
la tarjeta, respectivamente.
&RQWURODGRU3(

'LVSRVLWLYR352),1(7,2

&RQWURODGRU3(

0µGXORGHLQWHUID]
,0 FRPRXQLGDG3(

0µGXORFRPRXQLGDG3(
&RPDQGR3(

'LVSRVLWLYR352),1(7,2

&RPDQGR3(

● En un módulo sin funcionalidad Proxy dentro de la red: en este caso, los comandos PE solo
son válidos para el módulo correspondiente.

Instrucciones PROFIenergy
● Instrucciones para controlador IO
– La manera más sencilla de activar o desactivar el estado de reposo de los dispositivos
PROFINET es con la instrucción "PE_START_END (Página 5975)" (comandos
PROFIenergy "Start_Pause" y "End_Pause"). mediante un flanco de señal ascendente
y descendente en la misma.
– La instrucción "PE_CMD (Página 5979)" transfiere todos los comandos PROFIenergy,
incluidos "Start_Pause" y "End_Pause". Además, con otros comandos puede
consultarse el estado actual de los dispositivos PROFINET o su comportamiento
durante las pausas, por ejemplo.
– Con la instrucción "PE_DS3_Write_ET200S (Página 5985)" se especifican los ajustes
para el comportamiento de conexión de un máximo de 8 slots del ET 200S. Esta
instrucción no es una instrucción PROFIenergy pero complementa las funciones
PROFIenergy de un ET 200S.
● Instrucción para iDevices
La instrucción "PE_I_DEV (Página 6009)" permite ejecutar PROFIenergy también en
iDevices. Esta instrucción recibe comandos PROFIenergy en el iDevice y los transfiere al
programa de usuario para ejecutarlos. Después de ejecutar el comando, el programa de
usuario llama otra vez a la instrucción "PE_I_DEV (Página 6009)" para enviar acuse al
controlador IO. Para responder, se dispone para cada comando de un bloque auxiliar
específico que proporciona a la instrucción "PE_I_DEV (Página 6009)" los datos de
respuesta.

5974

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Comandos PROFIenergy (comandos PE)
El controlador PE envía los comandos PE a la unidad PE. El comando PE puede ser un
comando de control para poner una unidad PE en un determinado modo de ahorro de energía,
o un comando para leer un estado o un valor medido:
● Comandos PE para el control
PROFIenergy soporta dos comandos de control que pueden ejecutarse mediante la
instrucción "PE_Start_End (Página 5975)" o mediante la instrucción "PE_CMD
(Página 5979)":
– Start_Pause: Iniciar un modo de ahorro de energía adecuado (PE Energy-saving mode)
– End_Pause: Finalizar el modo de ahorro de energía (paso al modo
PE_ready_to_operate)
● Comandos PE para leer un estado o un valor medido
Mediante los siguientes comandos de estado, el control puede leer con la instrucción
"PE_CMD (Página 5979)" determinada información de estado:
– PE_Identify: determina qué comandos PE soporta la unidad PE.
– PEM_Status: determina cuál es el modo activo de una unidad PE en el momento actual
(p. ej. PE_ready_to_operate).
– Query_Modes: Muestra una sinopsis de todos los modos de ahorro de energía
soportados, incluida la información de tiempo y energía
– Query_Measurement: muestra los valores medidos de una unidad PE

Ejemplos de aplicación
Pueden consultarse ejemplos de aplicación de las instrucciones PROFIenergy en el artículo
"PROFIenergy - Ahorrar energía con SIMATIC S7 (http://
support.automation.siemens.com/WW/view/es/41986454)" del Industry Online Support.

Consulte también
Service & Support (http://support.automation.siemens.com/)

Controlador IO
PE_START_END: Iniciar y finalizar modo de ahorro de energía
Descripción
Con la instrucción "PE_START_END" se inicia y finaliza la pausa de ahorro de energía para la
unidad PE especificada (p. ej. el ET 200S).
La instrucción "PE_START_END" se emplea en el controlador PE preferentemente cuando en
los dispositivos PE asignados solo hay conectados aparatos de campo en los que no van a
leerse datos de energía. Para leer los datos de energía también puede emplearse la
instrucción "PE_CMD (Página 5979)".

Programación del PLC
Manual de programación y manejo, 11/2019

5975

Instrucciones
4.2 Instrucciones
Los modos de ahorro de energía se configuran en el programa de usuario del controlador PE.
Después de ejecutar "PE_START_END", la unidad PE responde notificando qué modo de
ahorro de energía se ha adoptado realmente y lo indica en el parámetro PE_MODE_ID.

Peticiones de escritura y lectura de la instrucción "PE_START_END"
La instrucción "PE_START_END" envía internamente mediante "WRREC (Página 5890)" un
comando PROFIenergy en forma de petición de escritura a la unidad PE. A continuación,
"PE_START_END" espera el acuse de la unidad PE. Para ello, cada 100 milisegundos se lee
el registro de acuse con la instrucción "RDREC (Página 5888)". Mientras no se reciba acuse
de la entidad PE, la petición de lectura se repetirá cada 100 milisegundos durante 10
segundos. Los datos de respuesta de la unidad PE también se leen con la instrucción "RDREC
(Página 5888)".
La figura siguiente muestra el diagrama de ejecución de las peticiones de escritura y lectura:

&RQWURODGRU352),HQHUJ\

'LVSRVLWLYR352),HQHUJ\

3(B67$57B(1'3(B&0'

5(4 

3(B,B'(9

3HWLFLµQGHHVFULWXUD
1(: 
5HVSXHVWDGHHVFULWXUD
SRVLWLYR

3HWLFLµQGHOHFWXUD

PV

5HVSXHVWDGHOHFWXUD
QHJDWLYRUHFXUVRRFXSDGRR\DXWLOL]DGR

V

3HWLFLµQGHOHFWXUD

V

5HVSXHVWDGHOHFWXUD SRVLWLYR

7LHPSR

5976

7LHPSR

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "PE_START_END":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

START

Input

BOOL

I, Q, M, D, L

Transmisión del comando PE "Start_Pause" a
la unidad PE con la dirección en el parámetro
ID.

END

Input

BOOL

I, Q, M, D, L

Transmisión del comando PE "End_Pause" a
la unidad PE con la dirección en el parámetro
ID.

ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Dirección de la entidad PE (p. ej. ET 200S). La
dirección puede tomarse de la configuración
de hardware.

PAUSE_TIME

Input

TIME

I, Q, M, D, L o cons‐
tante

Duración planificada de la pausa.
● Rango:
T#1MS a T#24D20H31M23S647MS
● Valor de arranque:
T#0MS

VALID

Output

BOOL

I, Q, M, D, L

Comando PE emitido correctamente.

BUSY

Output

BOOL

I, Q, M, D, L

Aún se está ejecutando el comando PE.

ERROR

Output

BOOL

I, Q, M, D, L

Se ha producido un error durante la ejecución.
El mensaje de error se indica en el parámetro
STATUS.

STATUS

Output

DWORD

I, Q, M, D, L

Estado de bloque o número de error (véase
"Parámetro STATUS")

PE_MODE_ID

Output

BYTE

I, Q, M, D, L

Número de identificación del modo de ahorro
de energía (nivel de ahorro de energía adop‐
tado durante la pausa).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

5977

Instrucciones
4.2 Instrucciones

Parámetro PAUSE_TIME
Con el parámetro PAUSE_TIME se predefine la duración de la pausa de ahorro de energía
para la unidad PE. En la unidad PE se comprueba si la pausa predefinida tiene duración
suficiente y si se puede aplicar. La duración mínima de pausa (Time_min_Pause) debe ser
mayor que la suma de los tiempos que el dispositivo necesita para cambiar al modo de ahorro
de energía (Time_to_Pause) y para volver al modo de operación (Time_to_Operate).
3(BUHDG\B
WRBRSHUDWH

3(BHQHUJ\B
VDYLQJBPRGH

6WDUWB3DXVH

7LPHBWRB3DXVH

(QGB3DXVH

7LPHBPLQBOHQJWKBRIBVWD\

7LPHBWRB2SHUDWH

W

7LPHBPLQB3DXVH
En el ET 200S se comprueba si la pausa planificada es mayor o igual a la duración mínima de
pausa (PM-E_Pause_Min) depositada en el ET 200S. Esta es de 10 segundos. Si se utiliza una
pausa menor, los módulos de potencia (PM-E) del ET 200S permanecen conectados.
Una vez transcurrido el tiempo de pausa no se produce ningún rearranque automático, sino
que el módulo permanece en estado OFF hasta que se emite el comando "END". De este
modo se evita una reconexión descoordinada, que podría provocar picos de carga indeseados.

Parámetro STATUS
En el parámetro de salida STATUS se muestra información de error. Si se interpreta como
ARRAY[1...4] of BYTE, la información de error tiene la estructura siguiente:
Elemento de cam‐
po

Nombre

Significado

STATUS[1]

Function_Num

Causa del error
● B#16#00: sin error
● B#16#DE: error al leer el registro
● B#16#DF: error al escribir el registro
● B#16#C0: mensaje de error de la instrucción o de las instrucciones de
comunicación "RDREC (Página 5888)" y "WRREC (Página 5890)" empleadas
internamente.

STATUS[2]

Error_Decode

Ubicación de la identificación de error
● 80: error DPV1 según la norma IEC 61158-6 o error específico de instrucción
● FE: perfil DP/PNIO; error específico de PROFIenergy

5978

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Elemento de cam‐
po

Nombre

Significado

STATUS[3]

Error_Code_1

Identificación de error
● Con Error_Decode = 80:
–

80: flancos ascendentes simultáneos en los parámetros de entrada START
y END.

–

81: conflicto de longitud en los parámetros CMD_PARAM y
CMD_PARAM_LEN.

–

82-8F: otros mensajes de error (reservado)

● Con Error_Decode = FE:

STATUS[4]

Error_Code_2

–

01: "Service Request ID" no válido

–

02: "Request_Reference" erróneo

–

03: "Modifier" no válido

–

04: "Data Structure Identifier RQ" no válido

–

05: "Data Structure Identifier RS" no válido

–

06: "PE energy-saving modes" no soportados

–

07: "Response" es demasiado largo (se ha rebasado la longitud máxima
transferible)

–

08: "Count" no válido

–

50: no hay ningún "energy mode" adecuado disponible.

–

51: el valor de tiempo indicado no se soporta.

–

52: "PE_Mode_ID" no admisible

Extensión específica de fabricante de la identificación de error

Nota
Mensajes de error de las instrucciones RDREC y WRREC
La instrucción "PE_START_END" utiliza para la comunicación las instrucciones "WRREC
(Página 5890)" y "RDREC (Página 5888)". Los mensajes de error de estas instrucciones se
emiten correspondientemente en los elementos de campo STATUS[1] a STATUS[4].
Consulte el significado de los códigos de error de las instrucciones "WRREC (Página 5890)"
y "RDREC (Página 5888)" en la descripción del parámetro STATUS (Página 5901)
correspondiente.

PE_CMD: Iniciar y finalizar modo de ahorro de energía / Leer información de estado
Descripción
La instrucción "PE_CMD" se emplea en el controlador PE e inicia o finaliza una pausa de
ahorro de energía en la unidad PE. Además, "PE_CMD" permite leer más información y
valores medidos de energía de una unidad PE.
La instrucción puede emplearse preferentemente en controladores PE en cuyos dispositivos
PE correspondientes estén conectados aparatos de campo de los que deban leerse valores

Programación del PLC
Manual de programación y manejo, 11/2019

5979

Instrucciones
4.2 Instrucciones
medidos de energía. Si esto no fuera así, para iniciar y finalizar las pausas también puede
emplearse la instrucción "PE_START_END (Página 5975)".

Transferencia de los comandos PROFIenergy (comandos PE)
La instrucción "PE_CMD" transfiere un comando PROFIenergy a una unidad PE.
La instrucción también puede emplearse si en el futuro se amplía el perfil PROFIenergy con
otros comandos. Los comandos que pueden utilizarse de acuerdo con el perfil PROFIenergy
actual se listan en la descripción de los parámetros CMD y CMD_MODIFIER (véase tabla
"Parámetros CMD y CMD_MODIFIER").
● Los diferentes comandos PE que se transfieren a la unidad PE mediante la instrucción
tienen asignadas "Service_Request_IDs" definidas. Las Service_Request_IDs 01...05 y 16
se asignan en el parámetro CMD.
● Mediante el parámetro CMD_MODIFIER se especifican los dos comandos PE 04
(Query_Modes) y 16 (Query_Measurement).
● Para comandos PE concretos, en el parámetro CMD_PARA se transfieren valores
adicionales (véase la descripción de los distintos comandos PE). El parámetro
CMD_PARA_LEN define la longitud de datos en el parámetro CMD_PARA.
Los comandos se transfieren sin prueba de plausibilidad. Los datos de respuesta de la entidad
PE se depositan en el área de datos RESPONSE_DATA direccionada por el puntero ANY (los
contenidos de los telegramas de respuesta figuran en las descripciones del respectivo
comando PE).

Peticiones de escritura y lectura de la instrucción "PE_CMD"
La instrucción "PE_CMD" envía mediante "WRREC (Página 5890)" un comando PROFIenergy
en forma de petición de escritura a la unidad PE. A continuación, "PE_CMD" espera el acuse
de la unidad PE. Para ello, cada 100 milisegundos se lee el registro de acuse con la instrucción
"RDREC (Página 5888)". Mientras no se reciba acuse de la unidad PE, la petición de lectura
se repite cada 100 milisegundos durante 10 segundos. Los datos de respuesta de la unidad PE
también se leen con la instrucción "RDREC (Página 5888)".
La figura siguiente muestra el diagrama de ejecución de las peticiones de escritura y lectura:

5980

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
&RQWURODGRU352),HQHUJ\

'LVSRVLWLYR352),HQHUJ\

3(B67$57B(1'3(B&0'

5(4 

3(B,B'(9

3HWLFLµQGHHVFULWXUD
1(: 
5HVSXHVWDGHHVFULWXUD
SRVLWLYR

3HWLFLµQGHOHFWXUD

PV

5HVSXHVWDGHOHFWXUD
QHJDWLYRUHFXUVRRFXSDGRR\DXWLOL]DGR

V

3HWLFLµQGHOHFWXUD

V

5HVSXHVWDGHOHFWXUD SRVLWLYR

7LHPSR

7LHPSR

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "PE_CMD":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Inicia la transmisión del comando PE con
flanco ascendente.

ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Dirección de la unidad PE

CMD

Input

BYTE

Para los dispositivos PROFINET IO, la di‐
rección puede tomarse de la configura‐
ción hardware.

I, Q, M, D, L, P o cons‐ Service-Request-ID del comando PRO‐
tante
FIenergy en función del perfil PROFIe‐
nergy (véase "Parámetros CMD y
CMD_MODIFIER").
Si se amplía el perfil PROFIenergy son
posibles otras Service-Request-IDs.

Programación del PLC
Manual de programación y manejo, 11/2019

5981

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

CMD_MODIFIER

Input

BYTE

I, Q, M, D, L, P o cons‐ Subcomando PROFIenergy
tante
(solo con CMD=3 o CMD=16, véase "Pa‐
rámetros CMD y CMD_MODIFIER")

Descripción

Si se amplía el perfil PROFIenergy son
posibles otros subcomandos.
CMD_PARA

Input

ANY

I, Q, M, D, L

Parámetros de los comandos PE:
● Get mode: PE_mode_ID
● Get measurement values: List of
Measurement_Ids
Se registra el Service Data Request com‐
pleto.

CMD_PARA_LEN

Input

INT

I, Q, M, D, L, P o cons‐ Longitud real de los parámetros del co‐
tante
mando (la instrucción comprueba si es <=
a la longitud en CMD_PARA).

RESPONSE_DATA

InOut

ANY

I, Q, M, D, L

Información PROFIenergy
Dependiendo del comando, telegrama de
respuesta completo, incluido encabezado
de bloque.
Nota: si el búfer es demasiado pequeño
solo se registra el número de bytes, como
se indica en el puntero ANY.

VALID

Output

BOOL

I, Q, M, D, L

Comando emitido correctamente.

BUSY

Output

BOOL

I, Q, M, D, L

Aún se está ejecutando el comando.

ERROR

Output

BOOL

I, Q, M, D, L

Se ha producido un error durante la eje‐
cución.

STATUS

Output

DWORD

I, Q, M, D, L

Estado de bloque o número de error (véa‐
se "Parámetro STATUS"):

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros CMD y CMD_MODIFIER
CMD

CMD_
MODIFIER

Comando PROFIenergy

Descripción

01

0

Start_Pause (Página 5999)

Inicia el modo de ahorro de energía o cambia a otro modo de
ahorro de energía.

02

0

End_Pause (Página 6000)

Sale del modo de ahorro de energía.

03

1

Query_Modes - List energy sa‐ Muestra los modos de ahorro de energía soportados.
ving Modes (Página 6000)

2

Query_Modes - Get Mode (Pá‐ Muestra los atributos del modo de ahorro de energía activa‐
do en el momento actual.
gina 6001)

04

0

PEM_Status (Página 6003)

Consulta el estado del modo de ahorro de energía.

05

0

PE_Identify (Página 6005)

Lectura del número de comandos PE soportados y descrip‐
ción de los mismos.

5982

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
CMD

CMD_
MODIFIER

Comando PROFIenergy

Descripción

16

1

Query_Measurement Get_Measurement_List (Pági‐
na 6006)

Listado de los valores medidos soportados por la unidad PE.

2

Query_Measurement Get_Measurement_Values
(Página 6008)

Muestra los valores medidos de la unidad PE.

Parámetro STATUS
En el parámetro de salida STATUS se muestra información de error. Si se interpreta como
ARRAY[1...4] of BYTE, la información de error tiene la estructura siguiente:
Elemento de cam‐
po

Nombre

Significado

STATUS[1]

Function_Num

Causa del error
● B#16#00: sin error
● B#16#DE: error al leer el registro
● B#16#DF: error al escribir el registro
● B#16#C0: mensaje de error de las instrucciones de comunicación "RDREC
(Página 5888)" y "WRREC (Página 5890)" empleadas internamente.

STATUS[2]

Error_Decode

Ubicación de la identificación de error
● 80: error DPV1 según la norma IEC 61158-6 o error específico de instrucción
● FE: perfil DP/PNIO; error específico de PROFIenergy

Programación del PLC
Manual de programación y manejo, 11/2019

5983

Instrucciones
4.2 Instrucciones
Elemento de cam‐
po

Nombre

Significado

STATUS[3]

Error_Code_1

Identificación de error
● Con Error_Decode = 80:
–

81: conflicto de longitud en los parámetros CMD_PARA y
CMD_PARA_LEN o bien se ha excedido la longitud máxima del registro
(4095 bytes).

–

82-8F: otros mensajes de error (reservado)

● Con Error_Decode = FE:

STATUS[4]

Error_Code_2

–

01: "Service Request ID" no válido

–

02: "Request_Reference" erróneo

–

03: "Modifier" no válido

–

04: "Data Structure Identifier RQ" no válido

–

05: "Data Structure Identifier RS" no válido

–

06: "PE energy-saving modes" no soportados

–

07: "Response" es demasiado largo (se ha rebasado la longitud máxima
transferible)

–

08: "Count" no válido

–

50: no hay ningún modo de ahorro de energía (energy mode) adecuado
disponible.

–

51: el valor de tiempo indicado no se soporta.

–

52: "PE_Mode_ID" no válido

Extensión específica de fabricante de la identificación de error

Nota
Mensajes de error de las instrucciones RDREC y WRREC
Las instrucciones "PE_CMD" utilizan para la comunicación las instrucciones "WRREC
(Página 5890)" y "RDREC (Página 5888)". Los mensajes de error de estas instrucciones se
emiten correspondientemente en los elementos de campo STATUS[1] a STATUS[4].
Consulte el significado de los códigos de error de las instrucciones "WRREC (Página 5890)"
y "RDREC (Página 5888)" en la descripción del parámetro STATUS (Página 5901)
correspondiente.

5984

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

PE_DS3_Write_ET200S: Ajustar el modo de activación de los módulos de potencia
Descripción
La instrucción "PE_DS3_Write_ET200S" envía al ET 200S configuraciones básicas sobre el
modo de activación de los módulos de potencia. La instrucción "PE_DS3_Write_ET200S"
permite definir el modo de activación de hasta 8 slots del ET 200S (p. ej. para módulos de
potencia).
Nota
Esta instrucción no forma parte del perfil PROFIenergy, sino que complementa funciones
específicas de SIMATIC.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "PE_DS3_Write_ET200S":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

ENABLE

Input

BOOL

I, Q, M, D, L

Un flanco ascendente activa la transferencia
del registro. El registro debe transferirse de
nuevo después de desconectar y volver a co‐
nectar la tensión.

ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Dirección del ET 200S
La dirección puede tomarse de la configura‐
ción de hardware.

SLOT_NO_X

Input

INT

I, Q, M, D, L, P o
constante

Número de slot del X.º módulo de potencia co‐
nectable.

FUNC_X

Input

INT

I, Q, M, D, L, P o
constante

Función del módulo en este slot. Mediante el
parámetro FUNC_X se define el modo de acti‐
vación del PM-E (módulo de potencia del
ET 200S):
● FALSE:
–

Con "PAUSE_START":
- no influye en el PM-E
- el PM-E continúa conectado

–

Con "PAUSE_STOP":
- se reconecta el PM-E

● TRUE:
–

Con "PAUSE_START":
- se desconecta el PM-E

–

Con "PAUSE_STOP":
- se reconecta el PM-E

BUSY

Output

BOOL

I, Q, M, D, L

La transferencia no ha finalizado todavía.

DONE

Output

BOOL

I, Q, M, D, L

La transferencia ha finalizado sin errores.

Programación del PLC
Manual de programación y manejo, 11/2019

5985

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

ERROR

Output

BOOL

I, Q, M, D, L

Transferencia finalizada con error.

STATUS

Output

DWORD

I, Q, M, D, L, P

Número de error (véase el parámetro STATUS
de la instrucción "PE_Start_End (Pági‐
na 5975)")

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

PE_WOL: Iniciar y finalizar modo de ahorro de energía mediante WakeOnLan
Descripción PE_WOL
Descripción
La instrucción "PE_WOL" envía los comandos PROFIenergy "Start_Pause" y "End_Pause" a
varios dispositivos compatibles con PROFIenergy en sistemas PROFINET I/O.
La instrucción permite la coordinación de varios dispositivos PE siempre que soporten la
función "Wake on LAN" a través de una conexión UDP.
La instrucción "PE_WOL" solo puede ejecutarse en una CPU con interfaz Ethernet integrada.
Esta CPU debe ser capaz de cargar bloques de un tamaño de aprox. 40 kB. El bloque no se
puede utilizar con sistemas PROFINET I/O si estos están conectados a través de un CP
Ethernet.
La instrucción "PE_WOL" se ejecuta de forma asíncrona.

Definición: Wake on LAN
La funcionalidad Wake On LAN permite que dispositivos de procesamiento de datos reanuden
el trabajo a partir de un estado prácticamente de desconexión gracias a la recepción de un
paquete Ethernet especial.
Para que funcione este procedimiento, el dispositivo de procesamiento de datos debe disponer
de un controlador de red equipado para poder recibir un paquete de este tipo.
Este paquete (Magic Packet™) tiene un formato especial. Contiene 15 veces la dirección MAC
del adaptador de red.

Selección de los dispositivos
La selección de los dispositivos se realiza a través del bloque de datos de usuario en el
parámetro PENERGY. El DB de usuario representa la base de datos para el procesamiento de
varios dispositivos.
Antes de la inicialización de "PE_WOL" se debe guardar en el DB de usuario la siguiente
información, como mínimo:
● ID del sistema PROFINET I/O
● Datos de la conexión que se utiliza para "Wake On LAN"

5986

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
● Número de puerto que se utiliza para "Wake On LAN"
● Para cada dispositivo
– Tiempo de pausa (PauseTime)
– Conmutación del dispositivo al PE_SLEEP_MODE (EnableSleep)
Con el parámetro COM_RST se inicializa la instrucción "PE_WOL". Tras la inicialización se
ejecutan las peticiones guardadas en el DB de usuario una tras otra.
El siguiente gráfico muestra a modo de ejemplo cómo se transmite el comando PE
"Start_Pause" a varios dispositivos:

%ORTXHGHGDWRVGHXVXDULR

'%GHLQVWDQFLD

Dir. diag.

Bit de
inicio

Bit de fin

8081
8082

1
0

0
0

8081

8083
8048
...

1
1
...

0
0
...

8048

3(B:2/

Diag.
Adr.

8083

(1)

Paso 1: El usuario pone a "1" el bit "CmdStartPause" de los dispositivos que se van a desco‐
nectar.

(2)

Paso 2: Las direcciones de diagnóstico de los dispositivos que se van a desconectar (CmdStart‐
Pause = "1") se encadenan en la lista de espera.

(3)

Paso 3: El bit "CmdStartPause" se desactiva automáticamente una vez encadenadas las peti‐
ciones.

(4)

Paso 4: La instrucción "PE_WOL" procesa las peticiones en cuanto estas están encadenadas.

A través de los parámetros START y END se puede enviar un comando PROFIenergy
"CmdStartPause" o "CmdEndPause" para todos los dispositivos detectados en el sistema
PROFINET IO.
Con el parámetro STATUS se indica el estado del procesamiento de la petición, así como
posibles errores durante su procesamiento.

Programación del PLC
Manual de programación y manejo, 11/2019

5987

Instrucciones
4.2 Instrucciones

Manejo de la instrucción a través del DB de usuario
El manejo de la instrucción "PE_WOL" solo se puede realizar a través del DB de usuario. A este
respecto se aplica un procedimiento básico:
1. Selección del comando que se va a ejecutar para un dispositivo:
– START_PAUSE ("CmdStartPause" en el DB de usuario)
– ENDE_PAUSE ("CmdEndPause" en el DB de usuario)
– UPDATE_STATUS ("CmdUpdateStatus" en el DB de usuario)
2. Activación del bit para la actualización ("Update" en el encabezado del DB de usuario)
Entre dos actualizaciones debería transcurrir como mínimo un ciclo de CPU con un
"Update" = False, ya que de lo contrario no se puede garantizar la detección de flancos.

Priorización de los comandos PE
El siguiente gráfico muestra la cronología de los tres comandos posibles.

CmdStartPause
CmdEndPause

CmdUpdateStatus

Update

Estos se procesan uno tras otro, independientemente de si el comando previo se ha ejecutado
correctamente o ha finalizado con errores.
En caso de activación simultánea de, p. ej., "CmdEndPause" y "CmdUpdateStatus" solo se
ejecutará un comando. Dentro del bloque existe una priorización:
● El comando "CmdStartPause" tiene la máxima prioridad y siempre se ejecuta mientras esté
seleccionado.
● El comando "CmdEndPause" tiene la segunda máxima prioridad.
● El comando "CmdUpdateStatus" tiene la mínima prioridad.
Si se activan los tres comandos a la vez, los que no se ejecuten permanecen
preseleccionados. En ese caso, en el siguiente flanco ascendente se ejecutará el siguiente
comando que corresponda.

5988

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "PE_WOL":
Parámetro

Declaración

Input
COM_RST
(Página 5989)

Tipo de datos Área de memoria Descripción
BOOL

I, Q, M, D, L

Resetea el bloque y ejecuta una reinicialización. Mien‐
tras aquí esté ajustado True, comienza la operación
de inicialización pero no se ejecuta hasta el final.
La inicialización prosigue con el flanco descendente
y, una vez concluida esta, se pasa al modo de opera‐
ción normal.

START (Pági‐ Input
na 5991)

BOOL

I, Q, M, D, L

Con un flanco ascendente se ejecuta un comando
PROFIenergy "CmdStartPause" para todos los dispo‐
sitivos detectados que soporten esta función.

END (Pági‐
na 5992)

BOOL

I, Q, M, D, L

Con un flanco ascendente se ejecuta un comando
PROFIenergy "CmdEndPause" para todos los dispo‐
sitivos detectados que soporten esta función.

PENERGY
InOut
(Página 5992)

ANY

D

Puntero hacia el DB de usuario que contiene la base
de datos para el procesamiento de varios dispositivos.

STATUS (Pá‐
gina 5997)

DWORD

I, Q, M, D, L

Número de estado/error para el estado actual de la
instrucción (ver "Parámetro STATUS").

Input

Output

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro COM_RST
Desarrollo de la rutina de inicialización
Con el parámetro COM_RST se arranca la inicialización de la instrucción "PE_WOL".
El siguiente diagrama de flujo muestra la rutina de inicialización.

Programación del PLC
Manual de programación y manejo, 11/2019

5989

Instrucciones
4.2 Instrucciones
INICIO

Clean Queue

Inicializar la lista de espera de
peticiones

Config Devices

Lectura de los dispositivos
configurados del sistema
PROFINET I/O

No. of
Devices
>0

Sí
Dev. Diag.

Determinar las direcciones de
diagnóstico

Order ID

Lectura de la OrderID

Connection
setup

Configuración de la conexión
WOL

PE_Identify

Identificación de los comandos PE
soportados para cada dispositivo

No

DB de
usuario

FIN
(Error)

5990

FIN
(Inicializado)

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro START
Desarrollo del comando CmdStartPause
El diagrama de flujo muestra las funciones utilizadas internamente y la interacción con un
dispositivo al ejecutar el comando CmdStartPause.

'%GHXVXDULR

'LVSRVLWLYR

&RQWURODGRU 3(B:2/
,1,&,2

/LVWDGHGLVSRVLWLYRV
FRQ
'LDJ,'
3DXVHB7LPH
:R/
6WDUWB3DXVHB%LW
ಹ

,QIRUPDFLµQDGLFLRQDO
HQHO'%
7LPHBWRBRSHUDWH
7LPHBPLQB3DXVH
3(B0RGHB,'
ಹ
:DNHB8SB0HWKRG
:DNHB8SB'DWDB/HQJW
:DNHB8SB'DWD
ಹ

(QDEOH6OHHS 

6¯

1R

6OHHS0RGH
6HOHFFLRQD
GR"

6¯

1R

'LVSRVLWLYR
SUHSDUDQGR
UHVSXHVWD

5HVSXHVWD
7LPHBWRBRSHUDWH
7LPHBPLQB3DXVH
:DNHB8SB0HWKRG
ಹ

*UDEDUUHVSXHVWD

3DXVHB7LPH
!
7LPHBPLQB
3DXVH

,QIRBVOHHSBPRGH

6¯

6WDUWBVOHHSBPRGH
*UDEDUUHVSXHVWD

'LVSRVLWLYRHQ
3(B6/((3B02'(

1R
6WDUWB3DXVH
*UDEDUUHVSXHVWD

4XHU\6WDWXV

'LVSRVLWLYRHQ
(1(5*<B6$9,1*B
02'(

3(0B6WDWXV
5HVSXHVWD

'LVSRVLWLYRHQ
(1(5*<B6$9,1*B
02'(

),1

Programación del PLC
Manual de programación y manejo, 11/2019

5991

Instrucciones
4.2 Instrucciones

Parámetro END
Desarrollo del comando CmdEndPause
El diagrama de flujo muestra las funciones utilizadas internamente y la interacción con un
dispositivo al ejecutar el comando CmdEndPause.

'%GHXVXDULR

'LVSRVLWLYR

&RQWURODGRU 3(B:2/
,1,&,2

/LVWDGHGLVSRVLWLYRV
FRQ
'LDJ,'
3DXVHB7LPH
:R/
6WDUWB3DXVHB%LW
ಹ

3(B0RGH
6OHHS0RGH

6¯

0DJLF3DFNHWറ
Y¯D7&20
'HIDXOW3RUW

1R

(QGB3DXVH
,QIRUPDFLµQDGLFLRQDO
HQHO'%

(QGB3DXVH

*UDEDUUHVSXHVWD

7LPHBWRBRSHUDWH
7LPHBPLQB3DXVH
3(B0RGHB,'
ಹ
:DNHB8SB0HWKRG
:DNHB8SB'DWDB/HQJW
:DNHB8SB'DWD
ಹ

'LVSRVLWLYRHQ
6OHHSBPRGH

:DLW772

3(0B6WDWXV

'LVSRVLWLYRHQ
(QHUJ\BVDYLQJBPRGH
B[

'LVSRVLWLYRHQ
5HDG\BWRBRSHUDWHBP
RGH

*UDEDUUHVSXHVWD

),1

Parámetro PENERGY
Bloque de datos en el parámetro PENERGY
El DB de usuario para la instrucción PROFIenergy "PE_WOL" constituye una base de datos
para el procesamiento de varios dispositivos.

5992

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El bloque de datos se divide generalmente en dos secciones. A saber:
● Sección de encabezado 110 bytes (header)
● Sección de dispositivos para un máximo de 256 dispositivos de 100 bytes cada uno
(Device). Estos incluyen:
– Datos específicos del dispositivo (Device)
– Datos específicos de PROFIenergy (PE)
– Datos de procesamiento de petición (Task)
– Datos de usuario (UserData)
Las diferentes áreas tienen un tamaño determinado que es constante. En total suman un
tamaño constante de 25.746 bytes para el bloque de datos.

Parámetro de conexión "Connection"
La instrucción "PE_WOL" reserva un recurso de conexión del área de "Open User
Communication". Este se utiliza como conexión UDP. Para ello, deben definirse los siguientes
parámetros en el bloque de datos:
● ID de conexión (parámetro "Connection.id")
La ID de conexión es un número entero entre 1 y 32. El ajuste estándar es 31. Sirve para
identificar los recursos de comunicación asignados por el firmware, como el búfer de
transmisión y de recepción.
La ID de conexión debe ser unívoca en toda la CPU.
● Número de puerto que se utiliza para la función "Wake On LAN" (parámetro
"Header.PortNo")
Número del puerto UDP a través del que se envía un paquete "Wake On LAN". Estos
números de puerto forman parte de los recursos de comunicación identificados y puestos
a disposición en el firmware por la ID de conexión. El ajuste estándar utilizado aquí para el
puerto de 2189 no está asignado actualmente por la IANA. El número de puerto se
transfiere a la configuración de conexión. Esto repercute en los parámetros
"Connection.local_tsap_id[1]" y "Connection.rem_tsap_id[1]".
● ID de interfaz (parámetro "Connection.local_device_id")
La ID de interfaz también forma parte de la descripción de la conexión. Esta ID identifica la
interfaz de la CPU que se debe utilizar para esta conexión. Se admiten varios valores.
No obstante, estos deben adaptarse a la CPU y la interfaz utilizadas:
– B#16#01 con CPU ET200S o WinAC RTX con interfaz Ethernet en subslot IF1
– B#16#02 con CPU 315(F)-2PN/DP o CPU 317(F)-2PN/DP
– B#16#03 con CPU 319(F)-2PN/DP
– B#16#05 con CPU 41x(F)-3PN/DP
– B#16#06 con WinAC RTX con interfaz Ethernet en subslot IF2
– B#16#0B con WinAC RTX con interfaz Ethernet en subslot IF3
– B#16#0F con WinAC RTX con interfaz Ethernet en subslot IF4

Programación del PLC
Manual de programación y manejo, 11/2019

5993

Instrucciones
4.2 Instrucciones

Estructura del bloque de datos
El bloque de datos tiene la siguiente estructura:
Nombre
Header
Update (1)

Tipo de datos

Offset

Comentario

STRUCT

-

Información de encabezado

BOOL

0.0

Señal que indica una modificación en el área de datos.
● True = indica una modificación por parte del usuario.
● False = indica la aplicación de las modificaciones.

Initialized

BOOL

0.1

Señal que indica el final de la inicialización.
● True = inicialización finalizada.
● False = indica que el bloque no se ha inicializado.

LinkUp

BOOL

0.2

Indica la configuración correcta de la interfaz Ethernet.
● True = interfaz lista para su uso.
● False = interfaz aún no configurada.

LinkDown

BOOL

0.3

Indica una interfaz sin configurar.
● True = la interfaz no está configurada.
● False = la interfaz está configurada o se está
configurando actualmente.

PROFINET_ID (1)

INT

2.0

ID del sistema PROFINET I/O

Reserved

ARRAY [1..37] OF
BYTE

4.0

Reservado

LastDeviceID

INT

42.0

Contiene la ID de dispositivo más alta en este sistema
PROFINET I/O.

PortNo (1)

INT

44.0

Número de puerto que se utiliza para la función "Wake On
LAN" (valor predeterminado = 2189).

Connection

STRUCT

-

Contiene la configuración de la conexión "Wake on LAN".

5994

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nombre
block_length
id (1)
connection_type

(1)

active_est (1)

Tipo de datos

Offset

Comentario

WORD

46.0

Longitud de la estructura (siempre B#16#40).

WORD

48.0

ID de conexión

BYTE

50.0

Tipo de conexión (UDP = B#16#13)

BOOL

51.0

Establecimiento activo de la conexión (siempre pasivo con
UDP)

local_device_id (1)

BYTE

52.0

Contiene la ID de interfaz (dependiente de la CPU).

local_tsap_id_len (1)

BYTE

53.0

Contiene la longitud en bytes del puerto UDP propio/local.

rem_subnet_id_len (1)

BYTE

54.0

Sin utilizar (siempre B#16#00)

rem_staddr_len (1)

BYTE

55.0

Contiene la longitud de la dirección IP remota o B#16#00.

rem_tsap_id_len (1)

BYTE

56.0

Contiene la longitud en bytes del puerto UDP remoto.

next_staddr_len (1)

BYTE

57.0

Contiene la longitud de la dirección del router predetermi‐
nado (no relevante).

local_tsap_id (1)

ARRAY[1..8] OF
INT

58.0

Contiene el número de puerto propio/local.

rem_subnet_id (1)

ARRAY[1..6] OF
BYTE

74.0

Sin utilizar (siempre B#16#00)

rem_staddr (1)

ARRAY[1..6] OF
BYTE

80.0

Contiene la dirección IP remota.

rem_tsap_id (1)

ARRAY[1..8] OF
INT

86.0

Contiene el número de puerto UDP remoto.

next_staddr (1)

ARRAY[1..6] OF
BYTE

102.0

Irrelevante

spare (1)

WORD

108.0

ARRAY[1..256]
OF STRUCT

110.0

Matriz de los dispositivos

STRUCT

110.0

Contiene datos de cada dispositivo.

DiagID

WORD

110.0

Dirección de diagnóstico del dispositivo. Es asignada por la
configuración hardware.

InterfaceID

WORD

112.0

Dirección de diagnóstico de la interfaz del dispositivo. Es
asignada por la configuración hardware.

MACAdr

ARRAY[1..6] OF
BYTE

114.0

Contiene la dirección MAC del dispositivo.

IPAdr

ARRAY[1..4] OF
BYTE

120.0

Contiene la dirección IP del dispositivo.

OrderID

STRUCT

124.0

Contiene la OrderID del dispositivo.

Device
Device

PE

MxLen

BYTE

Contiene la longitud máxima de la matriz.

ActLen

BYTE

Contiene la cantidad actual de datos en la matriz.

Data

ARRAY[1..20]
CHAR

Contiene los datos.

STRUCT

Programación del PLC
Manual de programación y manejo, 11/2019

146.0

Datos específicos de PROFIenergy.

5995

Instrucciones
4.2 Instrucciones
Nombre
ModeID
Result

Tipo de datos

Offset

Comentario

BYTE

146.0

PE_MODE_ID conforme a especificación PROFIenergy.

BYTE

147.0

PEErrorCode conforme a especificación PROFIenergy.

(1)

TIME

148.0

Contiene el tiempo de pausa en ms.

TimeToPause

TIME

152.0

Contiene el tiempo que necesita el dispositivo para pasar al
modo de pausa.

TimeToOperate

TIME

156.0

Contiene el tiempo que necesita el dispositivo para pasar al
modo de operación.

MinSleepTime

TIME

160.0

Contiene el tiempo mínimo del dispositivo en
PE_SLEEP_MODE.

SleepToOperate

TIME

164.0

Contiene el tiempo que necesita el dispositivo para estar
listo para el servicio desde PE_SLEEP_MODE.

StatusOperate

BOOL

168.0

Indica el modo de operación del dispositivo.

StatusPause

BOOL

168.1

Indica el modo de pausa del dispositivo.

StatusSleep

BOOL

168.2

Indica el PE_SLEEP_MODE del dispositivo.

StatusTransitOK

BOOL

168.3

Indica la transición de un estado de energía a otro.

StatusInTransit

BOOL

168.4

Indica una transición de estado actual.

StatusTransitNOK

BOOL

168.5

Indica que ha fallado el cambio de estado.

StatusError

BOOL

168.6

Indica un error con el dispositivo.

StatusRetryEx

BOOL

168.7

Indica la ejecución incorrecta de un comando. No se inten‐
ta ejecutar de nuevo este comando.

CmdStartPause (1)

BOOL

169.0

Posiciona un comando START_PAUSE para este disposi‐
tivo en la lista de espera.

CmdEndPause (1)

BOOL

169.1

Posiciona un comando END_PAUSE para este dispositivo
en la lista de espera.

CmdUpdateStatus (1)

BOOL

169.2

Posiciona un comando PEM_STATUS para este dispositi‐
vo en la lista de espera.

EnableSleep (1)

BOOL

169.3

Permite el PE_SLEEP_MODE para este dispositivo.

PauseTime

● True = el dispositivo debe pasar a PE_SLEEP_MODE
si la pausa dura lo suficiente.
● False = el dispositivo no debe pasar a
PE_SLEEP_MODE.
Services
UserData
Task

5996

(2)

WORD

170.0

Indica todos los servicios PROFIenergy soportados.

ARRAY[1..24] OF
BYTE

172.0

Datos definidos por el usuario

STRUCT

196.0

Procesamiento de la petición

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nombre

Tipo de datos

Offset

Comentario

Cmd

BYTE

196.0

Bits internos para el procesamiento de la petición

CmdJ

BYTE

197.0

Bits internos para el procesamiento de la petición

TimeStart

BOOL

198.0

Inicia un tiempo de retardo.

TimeStarted

BOOL

198.1

Acaba de iniciarse un tiempo de retardo.

TimeDone

BOOL

198.2

Indica la finalización del tiempo de retardo.

Done

BOOL

198.3

Indica que la petición está finalizándose.

DelayedCmd

BOOL

198.4

Indica que todavía hay pendiente un comando retardado.

IsV1_0

BOOL

198.5

Indica que este dispositivo es un dispositivo Spec. V1.0.

IsWakeOnLAN

BOOL

198.6

Indica que este dispositivo se activa por "Wake On LAN".

RetryCount

BYTE

199.0

Contador de repeticiones de PE_COMMANDS

Duration

TIME

200.0

Contiene el valor de retardo en ms.

StartTime

TIME

204.0

Contiene el punto de inicio del tiempo de retardo.

MachineState

INT

208.0

Contiene el estado interno de la petición.

(1)

Ajuste por parte del usuario.

(2)

Uso libre para el usuario.

Parámetro STATUS
Parámetro STATUS
El valor de salida del parámetro STATUS se divide en tres áreas:
● Bits 31 a 24: MESSAGE
● Bits 23 a 16: LOCATION
● Bits 15 a 0: INFORMATION
En las siguientes tablas se explica el significado de los diferentes códigos de error de las tres
áreas:
Tabla 4-261 Valores posibles de MESSAGE
Código de
error
(W#16#...)

Descripción

00

Ningún error.

50

Instrucción inicializada.

51

Se determina la configuración del sistema PROFINET I/O.

52

La instrucción no ha podido localizar dispositivos configurados en el sistema PROFINET I/O.

53

Se determinan las direcciones lógicas de los dispositivos configurados.

54

Se lee la información de interfaz de los dispositivos.

55

Se determinan los datos I&M (solo registro 0) de los dispositivos configurados.

56

Se configura la interfaz PROFINET para el envío de "Wake on LAN" MagicPaket™ a través de UDP.

57

Se determina la compatibilidad PROFIenergy de los dispositivos conectados.

62

Detectada ID no válida del sistema PROFINET I/O. El número causante se indica en el campo INFORMA‐
TION.

Programación del PLC
Manual de programación y manejo, 11/2019

5997

Instrucciones
4.2 Instrucciones
Código de
error
(W#16#...)

Descripción

70

La instrucción se ha inicializado y procesa peticiones. El valor del campo INFORMATION indica el número
de las peticiones activas actualmente.

80

La instrucción se ha desinicializado al procesar peticiones. Esto ocurre generalmente cuando vuelve a
cargarse el DB de instancia o bien el DB de usuario.

FF

Se ha producido un error desconocido.

Tabla 4-262 Valores posibles de LOCATION
Código de
error
(W#16#...)

Descripción

00

La instrucción no se ha inicializado o bien está inactiva.

70

La instrucción está esperando peticiones.

71

La instrucción introduce una petición en la lista de peticiones.

72

La instrucción prepara el envío de una petición.

73

La instrucción envía una petición a un dispositivo.

74

La instrucción espera la respuesta del dispositivo.

75

La instrucción evalúa la respuesta del dispositivo.

76

La instrucción elimina la petición de la lista de peticiones.

FF

Se ha producido un error desconocido.

Tabla 4-263 Valores posibles de INFORMATION
Código de
error
(W#16#...)

Descripción

0000

No hay información adicional disponible ni peticiones activas.

0001 -00FF

Actualmente se procesan 1 – 255 peticiones.

8001

Error en el 1.er parámetro

8002

Error en el 2.º parámetro

8003

Error en el 3.er parámetro

8004

Error en el 4.º parámetro

8005

Error en el 5.º parámetro. Este error se indica si no hay ninguna interconexión con el DB de usuario o bien
hay una no válida.
Causas posibles:
● El DB de usuario es demasiado pequeño.
● El DB de usuario está protegido contra escritura.
● El DB de usuario no está disponible en la RAM.
● El DB de usuario no es válido para la CPU utilizada.

8100

5998

Se han intentado posicionar más de las 256 peticiones posibles. Se trata de un error temporal que se
soluciona con la finalización de algunas peticiones. La petición que se ha intentado posicionar no ha sido
aceptada y debe volver a posicionarse.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de
error
(W#16#...)

Descripción

8200

Se ha intentado enviar un comando PROFIenergy no válido o no soportado (PE_COMMAND).

84xx

Se ha producido un error de comunicación. El número del dispositivo que ha provocado el error se indica
en "xx".

85xx

El dispositivo xx ha notificado un error. El número del dispositivo que ha provocado el error se indica en "xx".

8600

Actualmente no se soporta el método de WakeUp solicitado.

FFFF

Se ha producido un error desconocido.

Comandos PROFIenergy
Comando PE "Start_Pause"
Descripción
El comando PE "Start_Pause" inicia el modo de ahorro de energía. El comando Start_Pause
puede utilizarse para:
● Conmutar la unidad PE desde el estado "Listo para el funcionamiento"
(PE_ready_to_operate) a un modo de ahorro de energía (PE_energy_saving_mode).
● Conmutar la unidad PE de un modo de ahorro de energía a otro.
El consumo de energía puede aumentar o disminuir al cambiar el modo de ahorro de
energía.

Llamada del comando PE "Start_Pause"
La llamada del comando "Start_Pause" con la instrucción "PE_CMD (Página 5979)" se realiza
con los parámetros siguientes:
Parámetros

Valor

Descripción

CMD

1

Llamada del comando PE "Start_Pause".

CMD_MODIFIER

0

Para el comando "Start_Pause" no hay más especificaciones
respecto a la llamada.

CMD_PARA_LEN

4

Longitud del parámetro CMD_PARA de 4 bytes.

CMD_PARA

ANY

Puntero ANY al valor correspondiente a "Pause_Time" (TIME).

Programación del PLC
Manual de programación y manejo, 11/2019

5999

Instrucciones
4.2 Instrucciones

Telegrama de respuesta (Service Data Response)
Los datos siguientes del telegrama de respuesta de la unidad PE se escriben en el bloque de
datos referenciado en el parámetro RESPONSE_DATA (véase instrucción "PE_CMD
(Página 5979)"):
Atributo

Valor

Tipo de datos

Descripción

PE_Mode_ID

de 1 a 255

BYTE

Número de identificación del modo de aho‐
rro de energía

Reservado

0

BYTE

-

Comando PE "End_Pause"
Descripción
El comando PE "End_Pause" finaliza el modo de ahorro de energía en la unidad PE.

Llamada al comando PE "End_Pause"
La llamada del comando "End_Pause" con la instrucción "PE_CMD (Página 5979)" se realiza
con los parámetros siguientes:
Parámetros

Valor

Descripción

CMD

2

Llamada del comando PE "End_Pause".

CMD_MODIFIER

0

Para el comando "End_Pause" no hay más especificaciones
respecto a la llamada.

CMD_PARA_LEN

0

Longitud del parámetro CMD_PARA de 0 bytes.

CMD_PARA

irrelevante

-

Telegrama de respuesta (Service Data Response)
Los datos siguientes del telegrama de respuesta de la unidad PE se escriben en el bloque de
datos referenciado en el parámetro RESPONSE_DATA (véase "PE_CMD (Página 5979)"):
Atributo

Valor

Tipo de datos

Descripción

Time_to_operate

-

DWORD

Tiempo esperado para pasar al modo
"PE_ready_to_operate".

Comando PE "Query_modes" - "List_Energy_Saving_Modes"
Descripción
Con el comando PE "Query_modes" y el subcomando (Modifier) "List_Energy_Saving_Modes"
se indican todos los modos de ahorro de energía (PE_Mode_ID) soportados por la unidad PE.

6000

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
El resultado de la consulta se escribe en forma de telegrama de respuesta en el bloque de
datos referenciado en el parámetro RESPONSE_DATA.

Llamada del comando PE "Query_modes" - "List_Energy_Saving_Modes"
La llamada del comando "List_Energy_Saving_Modes" con la instrucción "PE_CMD
(Página 5979)" se realiza con los parámetros siguientes:
Parámetro

Valor

Descripción

CMD

3

Llamada del comando PE "Query_modes".

CMD_MODIFIER

1

Especificación de la llamada del comando: seleccionar el sub‐
comando "List_Energy_Saving_Modes" para mostrar el núme‐
ro y los tipos de modos de ahorro de energía soportados.

CMD_PARA_LEN

0

Longitud del parámetro CMD_PARA de 0 bytes.

CMD_PARA

irrelevante

-

Telegrama de respuesta (Service Data Response)
Los datos siguientes del telegrama de respuesta de la unidad PE se escriben en el bloque de
datos referenciado en el parámetro RESPONSE_DATA (véase "PE_CMD (Página 5979)"):
Atributo

Valor

Tipo de datos

Descripción

Number_of_PE_
Mode_IDs

1

BYTE

El número de modos de ahorro de energía.

PE_Mode_IDs

-

Array [...] of
BYTE

Matriz con las IDs de los modos de ahorro
de energía soportados. El significado de las
distintas IDs depende de la unidad PE.

Comando PE "Query_modes" - "Get_Mode"
Descripción
Con el comando PE "Query_modes" y el subcomando (Modifier) "Get_Mode" se indican los
atributos para el modo de ahorro de energía activado actualmente.

Llamada del comando PE "Query_modes" - "Get_Mode"
La llamada del comando con la instrucción "PE_CMD" se realiza con los siguientes parámetros:
Parámetro

Valor

Descripción

CMD

3

Llamada del comando PE "Query_modes"

CMD_MODIFIER

2

Especificación de la llamada del comando: seleccionar el subcomando "Get_Mode"
para mostrar el estado del modo activado en el momento actual.

CMD_PARA_LEN

1

Longitud del parámetro CMD_PARA de 1 byte.

CMD_PARA

ANY

ANY -Puntero al valor correspondiente a PE_MODE_ID.

Programación del PLC
Manual de programación y manejo, 11/2019

6001

Instrucciones
4.2 Instrucciones

Telegrama de respuesta (Service Data Response)
Los datos siguientes del telegrama de respuesta de la unidad PE se escriben en el bloque de
datos referenciado en el parámetro RESPONSE_DATA (véase "PE_CMD (Página 5979)"):
Atributo

Valor

Tipo de datos

Descripción

PE_Mode_ID

● 0
Modo "PE_power_off"

BYTE

ID del modo de ahorro de energía activo
en el momento actual.

● 1...254
Modo de ahorro de energía de la
unidad PE (específico de
fabricante)
● 255
Modo "PE_ready_to_operate"
PE_Mode_Attributes

Bit 0:

BYTE

● = 0: Solo están disponibles los
valores estáticos de consumo de
energía y de tiempo.
● = 1: Están disponibles los valores
dinámicos de consumo de energía
y de tiempo.
Bits de 1 a 7:
● Reservado
Time_min_Pause 1

Diferencia de tiempo sin fecha

DWORD

Tiempo mínimo de pausa para el modo
PE. El tiempo mínimo de pausa es la suma
de los valores de los siguientes atributos:
● Time_to_Pause
● Time_to_operate
● Time_min_length_of_stay
Véase la descripción de "Parámetro PAU‐
SE_TIME" de la instrucción
"PE_START_END: Iniciar y finalizar modo
de ahorro de energía (Página 5975)".

Time_to_Pause 1

Diferencia de tiempo sin fecha

DWORD

Tiempo de desconexión: Tiempo transcu‐
rrido desde la llamada del modo de ahorro
de energía hasta el inicio de este (tiempo
de transición de PE_ready_to_operate a
PE_energy_saving_mode). El tiempo de
desconexión depende de la unidad PE.

Time_to_operate 1

Diferencia de tiempo sin fecha

DWORD

Tiempo de conexión: Duración de la tran‐
sición del modo de ahorro de energía
(PE_energy_saving_mode) al modo de
disponibilidad (PE_ready_to_operate).
La duración es calculada dinámicamente
por la unidad PE en el momento de la sa‐
lida.

Time_min_length_
of_stay 1

6002

DWORD

Tiempo mínimo durante el cual el modo de
ahorro de energía está activo en la unidad
PE.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Atributo

Tipo de datos

Descripción

Time_max_length_
of_stay 1

Valor

DWORD

Tiempo máximo durante el cual el modo
de ahorro de energía está activo en la uni‐
dad PE.

Mode_Power_
Consumption 2

REAL

Consumo de corriente de la unidad PE con
el modo de ahorro de energía activado.

Energy_
Consumption_
to_pause 2

REAL

Consumo de energía de la unidad PE du‐
rante la transición del modo de disponibili‐
dad (PE_ready_to_operate) al modo de
ahorro de energía (PE_energy_sa‐
ving_mode)

Energy_
Consumption_
to_operate 2

REAL

Consumo de energía de la unidad PE du‐
rante la transición del modo de ahorro de
energía (PE_energy_saving_mode) al mo‐
do de disponibilidad (PE_ready_to_opera‐
te)

Unidad: kW

Unidad: kWh

Unidad: kWh
1

Si la duración es infinita, se devuelve el valor 0xFFFFFFFF. Si la duración es cero, se devuelve "0".

2

Si los datos de energía y consumo de corriente de la unidad PE no están definidos, se devuelve "0,0".

Comando PE "PEM_Status"
Descripción
Con el comando "PEM_Status" se consulta el estado de un modo de ahorro de energía
activado en el momento actual en una unidad PE.

Llamada al comando PE "PEM_Status"
La llamada del comando "PEM_Status" con la instrucción "PE_CMD" se realiza con los
parámetros siguientes:
Parámetros

Valor

Descripción

CMD

4

Llamada del comando PE "PEM_Status".

CMD_MODIFIER

0

Para el comando "PEM_Status" no hay más especificaciones respecto a la
llamada.

CMD_PARA_LEN

0

Longitud del parámetro CMD_PARA de 0 bytes.

CMD_PARA

irrelevante

-

Programación del PLC
Manual de programación y manejo, 11/2019

6003

Instrucciones
4.2 Instrucciones

Telegrama de respuesta (Service Data Response)
Los datos siguientes del telegrama de respuesta de la unidad PE se escriben en el bloque de
datos referenciado en el parámetro RESPONSE_DATA (véase "PE_CMD (Página 5979)"):
Atributo

Valor

Tipo de datos

Descripción

PE_Mode_ID_
Source

● 0
Modo "PE_power_off"

BYTE

Modo en el que se encuentra la unidad PE
antes de emitirse un comando PE.

BYTE

Modo en el que se encuentra la unidad PE
después de ejecutarse un comando PE.

DWORD

Tiempo de conexión: Duración de la tran‐
sición del modo de ahorro de energía
(PE_energy_saving_mode) al modo de
disponibilidad (PE_ready_to_operate).

● de 1 a 254
Modo de ahorro de energía de la
unidad PE (específico de
fabricante)
● 255
Modo "PE_ready_to_operate"
PE_Mode_ID_
Destination

● 0
Modo "PE_power_off"
● de 1 a 254
Modo de ahorro de energía de la
unidad PE (específico de
fabricante)
● 255
Modo "PE_ready_to_operate"

Time_to_operate

Diferencia de tiempo sin fecha.

La duración es calculada dinámicamente
por la unidad PE en el momento de la sa‐
lida.
Remaining_time_to_
destination

Diferencia de tiempo sin fecha.

DWORD

Tiempo restante para el paso al otro mo‐
do.

Mode_Power_
Consumption

REAL

Consumo de corriente de la unidad PE
con el modo de ahorro de energía activa‐
do.

Energy_
Consumption_
to_Destination

REAL

Consumo de energía para la transición
PE momentánea

Energy_
Consumption_
to_operate

REAL

Unidad: kW

Unidad: kWh
Consumo de energía de la unidad PE du‐
rante la transición del modo de ahorro de
energía (PE_energy-saving mode) al mo‐
do de disponibilidad (PE_ready_to_opera‐
te)
Unidad: kWh

6004

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Comando PE "PE_Identify"
Descripción
Con el comando PE "PE_Identify" se leen el número y la descripción de los comandos PE
soportados por la unidad PE. El tipo y la cantidad de comandos que se soporten dependen de
la unidad PE. Dado que el propio PE_Identify es un comando PE, en caso de respuesta
positiva del dispositivo PE se muestran por lo menos tres comandos PE soportados:
Start_Pause, End_Pause y PE_Identify.

Llamada al comando PE "PE_Identify"
La llamada del comando "PE_Identify" con la instrucción "PE_CMD (Página 5979)" se realiza
con los parámetros siguientes:
Parámetros

Valor

Descripción

CMD

5

Llamada del comando "PE_Identify".

CMD_MODIFIER

0

Para el comando "PE_Identify" no hay más especificaciones respecto a la
llamada.

CMD_PARA_LEN

0

Longitud del parámetro CMD_PARA de 0 bytes.

CMD_PARA

irrelevante

-

Telegrama de respuesta (Service Data Response)
Los datos siguientes del telegrama de respuesta de la unidad PE se escriben en el bloque de
datos referenciado en el parámetro RESPONSE_DATA (véase "PE_CMD (Página 5979)"):
Atributo

Valor

Tipo de datos

Descripción

Count 1

6

BYTE

Número de comandos PROFIenergy soportados

Start_Pause

1

BYTE

Primer comando PE (Service_Request_ID) soportado

End_Pause

2

BYTE

...

Query_Modes

3

BYTE

...

PEM_Status

4

BYTE

...

PE_Identify

5

BYTE

...

Query_Measurement

16

BYTE

Último comando PE (Service_Request_ID) soportado

El número de comandos soportados es específico del fabricante y depende de la unidad PE utilizada. Los valores indicados
son un ejemplo de telegrama de respuesta en caso de que se soporten 6 comandos PE.

1

Programación del PLC
Manual de programación y manejo, 11/2019

6005

Instrucciones
4.2 Instrucciones

Comando PE "Query_Measurement" - "Get_Measurement_list"
Descripción
Con el comando PE "Query_Measurement" y el subcomando (Modifier)
"Get_measurement_list" se consultan los valores medidos que soporta la unidad PE. Los
valores medidos soportados se guardan en forma de lista en el bloque de datos referenciado
en el parámetro RESPONSE_DATA.

Llamada del comando PE "Query_Measurement" - "Get_Measurement_list"
La llamada del comando con la instrucción "PE_CMD (Página 5979)" se realiza con los
parámetros siguientes:
Parámetros

Valor

Descripción

CMD

16

Llamada del comando "Query_Measurement"

CMD_MODIFIER

1

Especificación de la llamada del comando: seleccionar el subcomando "Get_Mea‐
surement_List" para mostrar una lista de los valores medidos soportados.

CMD_PARA_LEN

0

Longitud del parámetro CMD_PARA de 0 bytes.

CMD_PARA

irrelevante

-

Telegrama de respuesta (Service Data Response)
Los datos siguientes del telegrama de respuesta de la unidad PE se escriben en el bloque de
datos referenciado en el parámetro RESPONSE_DATA (véase "PE_CMD (Página 5979)"):
Atributo

Valor

Tipo de datos

Descripción

Count

-

BYTE

Número de Measurement-IDs

reserved

-

BYTE

Measurement_ID

-

WORD

Primer Measurement_ID soportado. El Measurement_ID es especí‐
fico de fabricante. Encontrará más información en el manual de la
unidad PE en cuestión.

Accuracy_Domain

-

BYTE

Ver la tabla "Rangos de precisión".

Accuracy_Class

-

BYTE

Ver las tablas "Clases de precisión".

Range

-

REAL

Especifica el valor de fin de escala para el valor medido (solo con
rango de precisión 1). El atributo Range utiliza la misma unidad que
se haya definido con el atributo Measurement_ID (para cada Mea‐
surement_ID se utiliza solo una unidad).

Measurement_ID

-

WORD

Último Measurement_ID soportado

Accuracy_Domain

-

BYTE

Ver la tabla "Rangos de precisión".

Accuracy_Class

-

BYTE

Ver las tablas "Clases de precisión".

Range

-

REAL

Especifica el valor de fin de escala para el valor medido (solo con
rango de precisión 1). El atributo Range utiliza la misma unidad que
se haya definido con el atributo Measurement_ID (para cada Mea‐
surement_ID se utiliza solo una unidad).

...

...

6006

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Rangos de precisión
Rango de precisión

Descripción

0

Reservado

1

La desviación de precisión se expresa en porcentaje del valor de final de escala. El porcentaje de
desviación posible se divide en clases de precisión (ver tabla: Clases de precisión de los rangos de
precisión 1 y 2).

2

La desviación de precisión se expresa en porcentaje del valor medido real. El porcentaje de desvia‐
ción posible se divide en clases de precisión (ver tabla: Clases de precisión de los rangos de precisión
1 y 2).

3

La precisión de medida se define según la norma IEC 61557-12.
Las clases de potencia de funcionamiento para dispositivos de medición de potencia y supervisión
(PMD) sin sensores externos y las clases de potencia del sistema para PMD con sensores externos
están codificadas conforme a la tabla "Clases de precisión del rango de precisión 3".

4

La precisión se expresa de acuerdo con la norma EN 50470-3, capítulo 8 (ver también la tabla: Clases
de precisión del rango de precisión 4).

Clases de precisión
Tabla 4-264 Clases de precisión de los rangos de precisión 1 y 2
Clase de precisión
Significado

Clase de precisión
Significado

0

1

2

3

4

5

6

7

8

Reserva‐
do

0,01%

0,02%

0,05%

0,1%

0,2%

0,5%

1%

1,5%

9

10

11

12

13

14

15

>15

2%

2,5%

3%

5%

10%

20%

>20%

No definido

Tabla 4-265 Clases de precisión del rango de precisión 3
Clase de precisión
Significado

Clase de precisión
Significado

0

1

2

3

4

5

6

7

8

Reserva‐
do

0,02

0,05

0,1

0,2

0,5

1

1,5

2

9

10

11

12

13

14

>13

2,5

3

5

10

20

20%

No definido

Tabla 4-266 Clases de precisión del rango de precisión 4
Clase de precisión
Significado

0

1

2

3

4

5

6

>7

Reserva‐
do

0,5

1,0

1,5

2,0

2,5

3,0

No definido

Programación del PLC
Manual de programación y manejo, 11/2019

6007

Instrucciones
4.2 Instrucciones

Comando PE "Query_Measurement" - "Get_Measurement_values"
Descripción
Con el comando PE "Query_Measurement" y el subcomando (Modifier)
"Get_measurement_values" se indican los valores medidos soportados por la unidad PE. Los
valores medidos se guardan en forma de lista en el bloque de datos referenciado en el
parámetro RESPONSE_DATA.

Llamada del comando PE "Query_Measurement" - "Get_Measurement_values"
La llamada del comando con la instrucción "PE_CMD (Página 5979)" se realiza con los
parámetros siguientes:
Parámetros

Valor

Descripción

CMD

16

Llamada del comando "Query_Measurement"

CMD_MODIFIER

2

Especificación de la llamada del comando: Seleccionar el comando "Get_Measu‐
rement_Values" para mostrar una lista de los valores medidos soportados.

CMD_PARA_LEN

0

En función del número de valores medidos. La longitud del parámetro se obtiene
a partir del atributo count y la suma de las longitudes de los atributos de los valores
medidos transferidos.

CMD_PARA

ANY

Puntero ANY hacia la estructura de datos con listado de los valores medidos que
deben consultarse (véase "Parámetro CMD_PARA").

Parámetro CMD_PARA
La estructura que se indica mediante el puntero ANY en el parámetro CMD_PARA debe tener
la estructura siguiente:
Atributo

Valor

Tipo de datos

Descripción

Count

-

BYTE

Número de valores medidos (Measurement-IDs)

reserved

0

BYTE

Sin utilizar

Measurement_ID

-

WORD

Primer valor medido consultado

-

WORD

Último valor medido consultado

...
Measurement_ID

Telegrama de respuesta (Service Data Response)
Los datos siguientes del telegrama de respuesta de la unidad PE se escriben en el bloque de
datos referenciado en el parámetro RESPONSE_DATA (véase "PE_CMD (Página 5979)"):
Atributo

Valor

Tipo de datos

Descripción

Count

-

BYTE

Número de valores medidos (Measurement-IDs)

reserved

0

BYTE

Sin utilizar

Length_of_Structure

de 2 a 65535

WORD

Longitud de la estructura en bytes.

6008

1

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Atributo

Valor

Measurement_Da‐
ta_Structure_ID

1 = simple value BYTE

Tipo de datos

Descripción
Define la siguiente estructura.

Measurement_ID

de 0 a 65535

WORD

ID del valor medido soportado.

Status_of_
Measurement_Value

de 1 a 3

BYTE

Estado del valor medido:
● 1: Válido
● 2: No soportado
● 3: No válido

Transmission_Da‐
ta_Type

-

REAL

End_of_demand

-

TOD

Sellado de tiempo opcional con el tipo de datos TimeOfDay.

Length_of_Structure

-

WORD

Longitud de la estructura en bytes.

Measurement_Da‐
ta_Structure_ID

-

BYTE

Define la siguiente estructura.

Measurement_ID

-

WORD

ID del valor medido soportado.

Status_of_Measure‐
ment_Value

-

BYTE

Estado del valor medido:

...

● 1: Válido
● 2: No soportado
● 3: No válido

Transmission_Da‐
ta_Type

-

REAL

End_of_demand

-

TOD

Sellado de tiempo opcional con el tipo de datos TimeOfDay.

Si la longitud de datos de los valores medidos consultados supera el tamaño de la PDU (Protocol Data Unit) del nivel de
protocolo, los datos se transfieren de modo incompleto y solo se devuelven los valores medidos soportados.
1

iDevice / iSlave
PE_I_DEV: Forzar comandos PROFIenergy en el iDevice
Descripción
La instrucción "PE_I_DEV" se utiliza para desarrollar el perfil PROFIenergy en el dispositivo IO
inteligente (iDevice). Las funciones que en un dispositivo IO normal compatible con
PROFIenergy, p. ej. el ET 200S, son realizadas por el firmware, en el iDevice son realizadas
por la instrucción "PE_I_DEV" y los bloques auxiliares correspondientes:
● el programa de usuario del iDevice llama cíclicamente la instrucción "PE_I_DEV", que
recibe todos los comandos PROFIenergy;
● la respuesta de PROFIenergy es generada por parametrización de un bloque auxiliar. La
reacción en la pausa puede programarse libremente. Los datos de respuesta deben
prepararse en 10 segundos, pues en caso contrario en el parámetro STATUS de la
instrucción del controlador IO aparece "Stateconflict 0x80B5".
Para utilizar la instrucción no se requieren conocimientos explícitos del estándar
PROFIenergy.

Programación del PLC
Manual de programación y manejo, 11/2019

6009

Instrucciones
4.2 Instrucciones

Bloques auxiliares PROFIenergy (bloques auxiliares PE)
Con los bloques auxiliares PE se genera el telegrama de respuesta. Para ello, indique los datos
de respuesta (en texto explícito) en los parámetros de entrada del bloque correspondiente.
● Para cada comando PROFIenergy hay un bloque auxiliar correspondiente a una respuesta
positiva:
– comando PE "Start_Pause": PE_Start_RSP (Página 6014)
– comando PE "End_Pause": PE_End_RSP (Página 6015)
– comando PE "Query_modes" - "List_Energy_Saving_Modes": PE_List_Modes_RSP
(Página 6017)
– comando PE "Query_modes" - "Get_Mode": PE_Get_Mode_RSP (Página 6018)
– comando PE "PEM_Status": PE_PEM_Status_RSP (Página 6020)
– comando PE "PE_Identify": PE_Identify_RSP (Página 6022)
– comando PE "Query_Measurement" "Get_Measurement_list": PE_Measurement_List_RSP (Página 6023)
– comando PE "Query_Measurement" "Get_Measurement_values": PE_Measurement_Value_RSP (Página 6024)
● Con independencia del comando PROFIenergy utilizado, además hay un bloque auxiliar
común para una respuesta negativa (véase PE_Error_RSP (Página 6013)).

Interconexión de los bloques auxiliares
La instrucción "PE_I_DEV" y los bloques auxiliares están adaptados mutuamente. Los
parámetros se interconectan en parte de manera sencilla. El gráfico siguiente muestra qué
parámetros deben interconectarse.

3(B,B'(9
,1,'

,13DU£PHWURV
HVSHF¯ILFRVGH&0'

,15(6(7
(YDOXDFLµQ\
UHDFFLµQGHO
XVXDULR

%ORTXHDX[LOLDU3(

287&0'

8VXDULR

287&0'B02',),(5
,Q2XW&0'B3$5$

287(5525

287,1'(;

28767$786
,Q2XW$&7,9$7(

287(5525

8VXDULR

28767$786
,19$/,'
2871(:
,Q2XW'$7$B(5525563
287&0'
287&0'B02',),(5

,Q2XW9$/,'
,13(B,B'(9B1(:
,Q2XW'$7$B(5525563
,1&0'
,1&0'B02',),(5

,QWHUFRQH[LµQLPSUHVFLQGLEOH

6010

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro
La tabla siguiente muestra los parámetros de la instrucción "PE_I_DEV":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RESET

Input

BOOL

I, Q, M, D, L

Resetea la instrucción.

ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Dirección del iDevice
La dirección puede tomarse de la configura‐
ción de hardware.

VALID

Input

BOOL

I, Q, M, D, L

Los datos de respuesta del controlador PRO‐
FIenergy están preparados y pueden enviarse.

CMD_PARA

Output

ANY

I, Q, M, D, L

Parámetros de:
● Get mode: PE_mode_ID
● Get measurement values: lista de
Measurement_IDs (lista de IDs de las
variables que deben leerse; es posible leer
una sola variable o varias a la vez)
Longitud máxima: 234 bytes

DA‐
TA_ERRORR
SP

InOut

ANY

I, Q, M, D, L

Puntero al área de datos que contiene los da‐
tos de acuse del controlador PROFIenergy.

INDEX

Output

INT

I, Q, M, D, L

Número del registro PROFIenergy (0x80A0 fi‐
jo)

CMD

Output

INT

I, Q, M, D, L

Service-Request-ID del comando PROFIe‐
nergy en función del perfil PROFIenergy (véa‐
se "Parámetros CMD y CMD_MODIFIER").

Debe coincidir con el puntero utilizado en los
bloques auxiliares.

Si se amplía el perfil PROFIenergy son posi‐
bles otros comandos PE (Service-RequestIDs).
CMD_
MODIFIER

Output

INT

I, Q, M, D, L

Subcomando PROFIenergy:
● solo con CMD=3 o CMD=16, véase
"Parámetros CMD y CMD_MODIFIER";
● en todos los demás comandos: "0".
Si se amplía el perfil PROFIenergy son posi‐
bles otros subcomandos.

NEW

Output

BOOL

I, Q, M, D, L

Nuevos datos disponibles para el controlador
PROFIenergy.

ERROR

Output

BOOL

I, Q, M, D, L

Comando finalizado con error.

STATUS

Output

DWORD

I, Q, M, D, L

Información de error (véase "Parámetro STA‐
TUS")

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6011

Instrucciones
4.2 Instrucciones

Parámetros CMD y CMD_MODIFIER
CMD

CMD_
MODIFIER

Comando PROFIenergy

Descripción

01

0

Start_Pause

Inicia el modo de ahorro de energía o cambia a otro modo de
ahorro de energía.

02

0

End_Pause

Sale del modo de ahorro de energía.

03

1

Query_Modes - List energy sa‐ Muestra los modos de ahorro de energía soportados.
ving Modes

2

Query_Modes - Get Mode

Muestra los atributos del modo de ahorro de energía activa‐
do en el momento actual.

04

0

PEM_Status

Consulta el estado del modo de ahorro de energía.

05

0

PE_Identify

Lectura del número de comandos PE soportados y descrip‐
ción de los mismos.

16

1

Query_Measurement Get_Measurement_List

Listado de los valores medidos soportados por la unidad PE.

2

Query_Measurement Get_Measurement_Values

Muestra los valores medidos de la unidad PE.

Parámetro STATUS
En el parámetro de salida STATUS se muestra información de error. Si se interpreta como
ARRAY[1...4] of BYTE, la información de error tiene la estructura siguiente:
Elemento de cam‐
po

Nombre

Significado

STATUS[1]

Function_Num

Causa del error
● B#16#00: Ningún error
● B#16#DE: error al leer el registro
● B#16#DF: error al escribir el registro
● B#16#C0: mensaje de error de la instrucción "PE_I_DEV" o de las instrucciones
de comunicación de uso interno "PRVREC" y "RCVREC".

STATUS[2]

Error_Decode

Ubicación de la identificación de error
● 80: error DPV1 según la norma IEC 61158-6 o error específico de instrucción

STATUS[3]

Error_Code_1

Identificación del error (con Error_Decode = 80):
● B1: Write length error (error en la longitud de escritura o indicación de longitud
insuficiente mediante el tipo de datos ANY).

STATUS[4]

6012

Error_Code_2

Con error PROFINET: salida del mensaje de error del controlador IO. Si no se ha
producido ningún error PROFINET, el valor de STATUS[4] = "0".

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Nota
Mensajes de error de las instrucciones "PRVREC" y "RCVREC"
La instrucción "PE_I_DEV" utiliza para la comunicación las instrucciones "PRVREC
(Página 5937)" y "RCVREC (Página 5935)". Los mensajes de error de estas instrucciones se
emiten correspondientemente en los elementos de campo STATUS[1] a STATUS[4].
Encontrará el significado de los códigos de error de las instrucciones "PRVREC" y "RCVREC"
en la descripción del parámetro STATUS (Página 5901) correspondiente.

Consulte también
RDREC: Leer registro (Página 5888)
WRREC: Escribir registro (Página 5890)

Módulos auxiliares de la instrucción PE_I_DEV
PE_Error_RSP: Generación de respuesta negativa a comando
Descripción
El bloque auxiliar "PE_Error_RSP" (Response with failure) genera una respuesta negativa si el
comando solicitado no es soportado con carácter general o temporalmente. La respuesta se
genera con independencia del comando solicitado.

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_Error_RSP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PE_I_DEV_NEW

Input

BOOL

I, Q, M, D, L o cons‐ El parámetro debe estar interconectado con el
tante
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar
se ejecuta solo si el parámetro tiene el valor "1".

ERROR_CODE

Input

BYTE

I, Q, M, D, L o cons‐ Número de error
tante

ACTIVATE

InOut

BOOL

I, Q, M, D, L

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros
de entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción res‐
tablece el parámetro.
El parámetro debe fijarse en un tiempo de 10
segundos después de que en el parámetro
NEW de la instrucción "PE_I_DEV (Pági‐
na 6009)" se haya detectado un flanco ascen‐
dente.

Programación del PLC
Manual de programación y manejo, 11/2019

6013

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV
(Página 6009)".
El bloque auxiliar activa el parámetro cuando
los datos de respuesta del controlador PRO‐
FIenergy están preparados y pueden enviarse.

DATA_
ERRORRSP

InOut

ANY

D

ERROR

Output

BOOL

I, Q, M, D, L

Puntero hacia el área de datos en la que se
guardan los datos de respuesta. El parámetro
es idéntico al puntero de DATA_ERRORRSP
de la instrucción "PE_I_DEV (Página 6009)".
El área de datos direccionada contiene el tele‐
grama PROFIenergy completo.
Longitud mínima: 244 bytes
● "0": ningún error
● "1": con errores

STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "0x80B1": error en la indicación de ANY, p.
ej. área errónea

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

PE_Start_RSP: Generar respuesta a comando para iniciar pausa
Descripción
El bloque auxiliar "PE_Start_RSP" (Iniciar pausa) genera la respuesta al comando
PE Start_Pause (Página 5999). La instrucción devuelve el estado de ahorro de energía que
adopta el dispositivo (parámetro PE_MODE_ID).
Si las reacciones a pausas de distinta duración son diferentes, se puede indicar en la
notificación mediante el estado de ahorro de energía adoptado (PE_Mode_ID = 1 para una
pausa corta, PE_Mode_ID = 2 para una pausa más larga, etc.).

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_Start_RSP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PE_I_DEV_NE
W

Input

BOOL

I, Q, M, D, L o cons‐ El parámetro debe estar interconectado con el
tante
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar
se ejecuta solo si el parámetro tiene el valor "1".

CMD

Input

INT

I, Q, M, D, L o cons‐ Service-Request-ID del comando PROFIe‐
tante
nergy
El parámetro debe estar interconectado con el
parámetro de salida CMD de la instrucción
"PE_I_DEV (Página 6009)".

6014

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

PE_MODE_ID

Input

BYTE

I, Q, M, D, L o cons‐ Modo PE que adopta el proceso
tante

Descripción

ACTIVATE

InOut

BOOL

I, Q, M, D, L

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros
de entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción res‐
tablece el parámetro.
El parámetro debe fijarse en un tiempo de 10
segundos después de que en el parámetro
NEW de la instrucción "PE_I_DEV (Pági‐
na 6009)" se haya detectado un flanco ascen‐
dente.

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV
(Página 6009)".
El bloque auxiliar activa el parámetro cuando
los datos de respuesta del controlador PRO‐
FIenergy están preparados y pueden enviarse.

DATA_
ERRORRSP

InOut

ANY

D

Puntero hacia el área de datos en la que se
guardan los datos de respuesta. El parámetro
es idéntico al puntero de DATA_ERRORRSP
de la instrucción "PE_I_DEV (Página 6009)".
El área de datos direccionada contiene el tele‐
grama PROFIenergy completo.
Longitud mínima: 244 bytes

ERROR

Output

BOOL

I, Q, M, D, L

STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "1": con errores
● "0": ningún error
● "0x80B1": error en la indicación de ANY, p.
ej. área errónea

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

PE_End_RSP: Generar respuesta a comando para final de pausa
Descripción
El bloque auxiliar "PE_End_RSP" genera la respuesta al comando PE End_Pause
(Página 6000). Se devuelve como respuesta el tiempo necesario para cambiar del estado
operativo actual al estado operativo "Ready_To_Operate".

Programación del PLC
Manual de programación y manejo, 11/2019

6015

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_End_RSP":
Parámetro

Declaración

Tipo de datos

Área de memo‐
ria

Descripción

PE_I_DEV_NEW

Input

BOOL

I, Q, M, D, L o
constante

El parámetro debe estar interconectado con el
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar
se ejecuta solo si el parámetro tiene el valor "1".

CMD

Input

INT

I, Q, M, D, L o
constante

Service-Request-ID del comando PROFIe‐
nergy
El parámetro debe estar interconectado con el
parámetro de salida CMD de la instrucción
"PE_I_DEV (Página 6009)".

Time_to_Operate

Input

DWORD

I, Q, M, D, L o
constante

Tiempo para cambiar del estado operativo ac‐
tual a "Ready_To_Operate".

ACTIVATE

InOut

BOOL

I, Q, M, D, L

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros
de entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción res‐
tablece el parámetro.
El parámetro debe fijarse en un tiempo de 10
segundos después de que en el parámetro
NEW de la instrucción "PE_I_DEV (Pági‐
na 6009)" se haya detectado un flanco ascen‐
dente.

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV
(Página 6009)".
El bloque auxiliar activa el parámetro cuando
los datos de respuesta del controlador PRO‐
FIenergy están preparados y pueden enviarse.

DATA_
ERRORRSP

InOut

ANY

D

Puntero hacia el área de datos en la que se
guardan los datos de respuesta. El parámetro
es idéntico al puntero de DATA_ERRORRSP
de la instrucción "PE_I_DEV (Página 6009)".
El área de datos direccionada contiene el tele‐
grama PROFIenergy completo.
Longitud mínima: 244 bytes

ERROR

Output

BOOL

I, Q, M, D, L

● "0": ningún error
● "1": con errores

STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "0x80B1": error en la indicación de ANY, p.
ej. área errónea

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6016

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

PE_List_Modes_RSP: Generar respuesta con modos de ahorro de energía consultados
Descripción
El bloque auxiliar "PE_List_Modes_RSP" genera la respuesta al comando
PE List_Energy_Saving_Modes (Página 6000). La respuesta generada contiene el número de
los estados de ahorro de energía soportados y sus IDs.

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_List_Modes_RSP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PE_I_DEV_NEW

Input

BOOL

I, Q, M, D, L o cons‐ El parámetro debe estar interconectado con el
tante
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar se
ejecuta solo si el parámetro tiene el valor "1".

CMD

Input

INT

I, Q, M, D, L o cons‐ Service-Request-ID del comando PROFIenergy
tante
El parámetro debe estar interconectado con el
parámetro de salida CMD de la instrucción
"PE_I_DEV (Página 6009)".

CMD_MODIFIER

Input

INT

I, Q, M, D, L o cons‐ Subcomando PROFIenergy (la evaluación solo
tante
tiene lugar si CMD=3 o CMD=16). El parámetro
debe estar interconectado con el parámetro de
salida CMD_MODIFIER de la instrucción
"PE_I_DEV".

Number_of_PE_
Mode_IDs

Input

BYTE

I, Q, M, D, L o cons‐ Número de estados de ahorro de energía sopor‐
tante
tados.
Valores permitidos: de 1 a 254

PE_MODE_ID

Input

ANY

I, Q, M, D, L

Señala el área en la que se guardan las IDs de
los estados de ahorro de energía soportados
(PE_Mode_ID).
Área permitida: de 1 a 254.

ACTIVATE

InOut

BOOL

I, Q, M, D, L

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros de
entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción resta‐
blece el parámetro.
El parámetro debe fijarse en un tiempo de 10
segundos después de que en el parámetro NEW
de la instrucción "PE_I_DEV (Página 6009)" se
haya detectado un flanco ascendente.

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV (Pá‐
gina 6009)".
El bloque auxiliar activa el parámetro cuando los
datos de respuesta del controlador PROFIe‐
nergy están preparados y pueden enviarse.

Programación del PLC
Manual de programación y manejo, 11/2019

6017

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DATA_
ERRORRSP

InOut

ANY

D

Puntero hacia el área de datos en la que se guar‐
dan los datos de respuesta. El parámetro es
idéntico al puntero de DATA_ERRORRSP de la
instrucción "PE_I_DEV (Página 6009)". El área
de datos direccionada contiene el telegrama
PROFIenergy completo.

ERROR

Output

BOOL

I, Q, M, D, L

Longitud mínima: 244 bytes
● "0": ningún error
● "1": con errores
STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "0x80B1": error en la indicación de ANY, p. ej.
área errónea

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

PE_Get_Mode_RSP: Generar respuesta con datos de energía consultados
Descripción
El bloque auxiliar "PE_Get_Mode_RSP" genera la respuesta al comando Get_Mode
(Página 6001). La respuesta contiene los tiempos y los datos de potencia o de energía de cada
estado de ahorro de energía concreto.

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_Get_Mode_RSP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PE_I_DEV_NEW

Input

BOOL

I, Q, M, D, L o cons‐ El parámetro debe estar interconectado con el
tante
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar
se ejecuta solo si el parámetro tiene el valor "1".

CMD

Input

INT

I, Q, M, D, L o cons‐ Service-Request-ID del comando PROFIe‐
tante
nergy
El parámetro debe estar interconectado con el
parámetro de salida CMD de la instrucción
"PE_I_DEV (Página 6009)".

CMD_MODIFIER

Input

INT

I, Q, M, D, L o cons‐ Subcomando PROFIenergy (la evaluación so‐
tante
lo tiene lugar si CMD=3 o CMD=16). El pará‐
metro debe estar interconectado con el pará‐
metro de salida CMD_MODIFIER de la instruc‐
ción "PE_I_DEV".

PE_Mode_ID

Input

BYTE

I, Q, M, D, L o cons‐ ID del modo de ahorro de energía activo en el
tante
momento actual.

PE_Mode_Attributes

Input

BYTE

I, Q, M, D, L o cons‐ Información adicional sobre el modo de ahorro
tante
de energía

6018

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Time_min_Pause

Input

DWORD

I, Q, M, D, L o cons‐ Duración mínima de pausa para este modo de
tante
ahorro de energía PE.

Descripción

Está formada por la suma de tres parámetros:
● Time_to_Pause
● Time_to_operate
● Time_min_length_of_stay
Time_to_Pause

Input

DWORD

I, Q, M, D, L o cons‐ Duración desde el flanco en el parámetro
tante
START (véase "PE_I_DEV (Página 6009)")
hasta que se alcanza el modo de ahorro de
energía PE solicitado.

Time_to_Operate

Input

DWORD

I, Q, M, D, L o cons‐ Tiempo de conexión máximo hasta
tante
"PE_ready_to_operate". El parámetro "Ti‐
me_to_operate" puede utilizarse directamente
para los cálculos correspondientes. El valor
puede ser un valor máximo estático o bien pue‐
de calcularlo dinámicamente la unidad PE.

Time_min_Lenght_
of_stay

Input

DWORD

I, Q, M, D, L o cons‐ Tiempo mínimo durante el que la unidad PE
tante
debe permanecer en este modo PE.

Ti‐
me_max_Lenght_of_
stay

Input

DWORD

I, Q, M, D, L o cons‐ Tiempo máximo durante el que la unidad PE
tante
puede permanecer en este modo PE.

Mode_Power_
Consumption

Input

DWORD

I, Q, M, D, L o cons‐ Consumo de energía en el modo PE actual, en
tante
[kW].

Energy_Consum_
to_Pause

Input

DWORD

I, Q, M, D, L o cons‐ Consumo de energía desde
tante
"PE_ready_to_operate" hasta el modo PE ac‐
tual, en [kWh].

Energy_Consum_
to_operate

Input

DWORD

I, Q, M, D, L o cons‐ Consumo de energía desde el modo PE actual
tante
hasta "PE_ready_to_operate", en [kWh].

ACTIVATE

InOut

BOOL

I, Q, M, D, L

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros
de entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción res‐
tablece el parámetro.
El parámetro debe activarse en un tiempo de
10 segundos después de que en el parámetro
NEW de la instrucción "PE_I_DEV (Pági‐
na 6009)" se haya detectado un flanco ascen‐
dente.

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV
(Página 6009)".
El bloque auxiliar activa el parámetro cuando
están disponibles los datos de respuesta para
el controlador PROFIenergy y puedan enviar‐
se.

Programación del PLC
Manual de programación y manejo, 11/2019

6019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DATA_
ERRORRSP

InOut

ANY

D

Puntero hacia el área de datos en la que se
guardan los datos de respuesta. El parámetro
es idéntico al puntero de DATA_ERRORRSP
de la instrucción "PE_I_DEV (Página 6009)". El
área de datos direccionada contiene el telegra‐
ma PROFIenergy completo.

ERROR

Output

BOOL

I, Q, M, D, L

● "0": ningún error

Longitud mínima: 244 bytes
● "1": Se han producido errores
STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "0x80B1": error en la indicación de ANY, p.
ej. área errónea

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

PE_PEM_Status_RSP: Generar respuesta con estado PEM
Descripción
El bloque auxiliar "PE_PEM_Status_RSP" genera la respuesta al comando PEM_Status
(Página 6003).

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_PEM_Status_RSP":
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

PE_I_DEV_NEW

Input

BOOL

I, Q, M, D, L o cons‐
tante

El parámetro debe estar interconectado con el
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar se
ejecuta solo si el parámetro tiene el valor "1".

CMD

Input

INT

I, Q, M, D, L o cons‐
tante

Service-Request-ID del comando PROFIenergy
El parámetro debe estar interconectado con el
parámetro de salida CMD de la instrucción
"PE_I_DEV (Página 6009)".

PE_MODE_ID_
Source

Input

BYTE

I, Q, M, D, L o cons‐
tante

Source y Destination para PEM_STATUS.

PE_MODE_ID_
Destination

Input

BYTE

I, Q, M, D, L o cons‐
tante

● 0x00: PE_POWER_OFF

Valores:
● 0x01 – 0xFE: específico del fabricante
● 0xFF: PE_READY_TO_OPERATE

6020

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de da‐
tos

Área de memoria

Descripción

Time_to_Operate1

Input

DWORD

I, Q, M, D, L o cons‐
tante

Tiempo de conexión máximo hasta
"PE_ready_to_operate".
"Time_to_operate" puede utilizarse directamente
para los cálculos correspondientes. El valor pue‐
de ser un valor máximo estático o bien puede
calcularlo dinámicamente la unidad PE.

Remaining_time_
to_destination1

Input

DWORD

I, Q, M, D, L o cons‐
tante

Opcionalmente: tiempo restante hasta el modo
PE solicitado. Valor dinámico o valor máximo es‐
tático

Mode_Power_
Consumption2

Input

DWORD

I, Q, M, D, L o cons‐
tante

Consumo de energía en el modo PE actual, en
[kW].

Energy_
Consumption_
to_Destination2

Input

DWORD

I, Q, M, D, L o cons‐
tante

Consumo de energía hasta el modo PE solicita‐
do, en [kW].

Energy_
Consumption_
to_operate2

Input

DWORD

I, Q, M, D, L o cons‐
tante

Consumo de energía desde el modo PE actual
hasta "PE_ready_to_operate", en [kWh].

ACTIVATE

InOut

BOOL

I, Q, M, D, L

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros de
entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción resta‐
blece el parámetro.
El parámetro debe fijarse en un tiempo de 10
segundos después de que en el parámetro NEW
de la instrucción "PE_I_DEV (Página 6009)" se
haya detectado un flanco ascendente.

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV (Pá‐
gina 6009)".
El bloque auxiliar activa el parámetro cuando los
datos de respuesta del controlador PROFIe‐
nergy están preparados y pueden enviarse.

DATA_
ERRORRSP

InOut

ANY

D

ERROR

Output

BOOL

I, Q, M, D, L

Puntero hacia el área de datos en la que se guar‐
dan los datos de respuesta. El parámetro es
idéntico al puntero de DATA_ERRORRSP de la
instrucción "PE_I_DEV (Página 6009)". El área
de datos direccionada contiene el telegrama
PROFIenergy completo.
Longitud mínima: 244 bytes
● "0": ningún error
● "1": con errores

STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "0x80B1": error en la indicación de ANY, p. ej.
área errónea

1

Si la duración es ilimitada, puede indicarse el valor máximo "0xFFFFFFFF". Si la duración es "cero", puede utilizarse "0x00".

2

Si el consumo de energía no está definido, puede indicarse "0,0".

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6021

Instrucciones
4.2 Instrucciones

PE_Identify_RSP: Generar respuesta con comandos PROFIenergy soportados
Descripción
El bloque auxiliar "PE_Identify_RSP" genera la respuesta al comando PE_Identify
(Página 6005). En la respuesta al comando se indican los comandos PROFIenergy que se
soportan. Tenga en cuenta que PE_IDENTIFY es en sí mismo un comando PE y debe
indicarse correspondientemente en la respuesta.

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_Identify_RSP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PE_I_DEV_NE
W

Input

BOOL

I, Q, M, D, L o cons‐
tante

El parámetro debe estar interconectado con el
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar
se ejecuta solo si el parámetro tiene el valor "1".

CMD

Input

INT

I, Q, M, D, L o cons‐
tante

Service-Request-ID del comando PROFIe‐
nergy
El parámetro debe estar interconectado con el
parámetro de salida CMD de la instrucción
"PE_I_DEV (Página 6009)".

Start_Pause

Input

BOOL

I, Q, M, D, L o cons‐
tante

Un parámetro para cada comando PROFIe‐
nergy:

End_Pause

Input

BOOL

I, Q, M, D, L o cons‐
tante

● 0: este comando PE no se soporta

Query_Modes

Input

BOOL

I, Q, M, D, L o cons‐
tante

PEM_Status

Input

BOOL

I, Q, M, D, L o cons‐
tante

PE_Identify

Input

BOOL

I, Q, M, D, L o cons‐
tante

Query_
Measurement

Input

BOOL

I, Q, M, D, L o cons‐
tante

ACTIVATE

InOut

BOOL

I, Q, M, D, L

● 1: este comando PE se soporta

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros
de entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción res‐
tablece el parámetro.
El parámetro debe fijarse en un tiempo de 10
segundos después de que en el parámetro
NEW de la instrucción "PE_I_DEV (Pági‐
na 6009)" se haya detectado un flanco ascen‐
dente.

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV
(Página 6009)".
El bloque auxiliar activa el parámetro cuando
los datos de respuesta del controlador PRO‐
FIenergy están preparados y pueden enviarse.

6022

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DATA_
ERRORRSP

InOut

ANY

D

Puntero hacia el área de datos en la que se
guardan los datos de respuesta. El parámetro
es idéntico al puntero de DATA_ERRORRSP
de la instrucción "PE_I_DEV (Página 6009)".
El área de datos direccionada contiene el tele‐
grama PROFIenergy completo.

ERROR

Output

BOOL

I, Q, M, D, L

Longitud mínima: 244 bytes
● "0": ningún error
● "1": con errores
STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "0x80B1": error en la indicación de ANY, p.
ej. área errónea

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

PE_Measurement_List_RSP: Generar respuesta con lista de valores medidos soportados
Descripción
El bloque auxiliar "PE_Measurement_List_RSP" genera la respuesta al
comando Get_measurement_list (Página 6006). En la respuesta se indican los valores
medidos (Measurement-IDs) que se soportan.

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_Measurement_List_RSP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PE_I_DEV_NE
W

Input

BOOL

I, Q, M, D, L o cons‐
tante

El parámetro debe estar interconectado con el
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar
se ejecuta solo si el parámetro tiene el valor
"1".

CMD

Input

INT

I, Q, M, D, L o cons‐
tante

Service-Request-ID del comando PROFIe‐
nergy
El parámetro debe estar interconectado con el
parámetro de salida CMD de la instrucción
"PE_I_DEV (Página 6009)".

CMD_MODI‐
FIER

Input

INT

I, Q, M, D, L o cons‐
tante

Subcomando PROFIenergy (la evaluación so‐
lo tiene lugar si CMD=3 o CMD=16). El pará‐
metro debe estar interconectado con el pará‐
metro de salida CMD_MODIFIER de la instruc‐
ción "PE_I_DEV".

Count

Input

BYTE

I, Q, M, D, L o cons‐
tante

Número de valores medidos soportados (Mea‐
surement-IDs)

Programación del PLC
Manual de programación y manejo, 11/2019

6023

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

Measurement_
List

Input

ANY

D

Puntero hacia la la matriz con las Measure‐
ment_IDs soportadas.
Consulte la estructura de la matriz según el
perfil PROFIenergy en: Comando PE
"Query_Measurement" - "Get_Measure‐
ment_list" (Página 6006)

ACTIVATE

InOut

BOOL

I, Q, M, D, L

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros
de entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción res‐
tablece el parámetro.
El parámetro debe fijarse en un tiempo de 10
segundos después de que en el parámetro
NEW de la instrucción "PE_I_DEV (Pági‐
na 6009)" se haya detectado un flanco ascen‐
dente.

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV
(Página 6009)".
El bloque auxiliar activa el parámetro cuando
los datos de respuesta del controlador PRO‐
FIenergy están preparados y pueden enviarse.

DATA_
ERRORRSP

InOut

ANY

D

Puntero hacia el área de datos en la que se
guardan los datos de respuesta. El parámetro
es idéntico al puntero de DATA_ERRORRSP
de la instrucción "PE_I_DEV (Página 6009)".
El área de datos direccionada contiene el tele‐
grama PROFIenergy completo.
Longitud mínima: 244 bytes

ERROR

Output

BOOL

I, Q, M, D, L

● "0": ningún error
● "1": con errores

STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "0x80B1": error en la indicación de ANY, p.
ej. área errónea

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

PE_Measurement_Value_RSP: Generar respuesta con valores medidos solicitados
Descripción
El bloque auxiliar "PE_Measurement_Value_RSP" genera la respuesta al
comando Get_measurement_values (Página 6008). En la respuesta se devuelven los valores
de los valores medidos solicitados.

6024

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros del bloque auxiliar "PE_Measurement_Value_RSP":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PE_I_DEV_NE
W

Input

BOOL

I, Q, M, D, L o cons‐
tante

El parámetro debe estar interconectado con el
parámetro de salida NEW de la instrucción
"PE_I_DEV (Página 6009)". El bloque auxiliar se
ejecuta solo si el parámetro tiene el valor "1".

CMD

Input

INT

I, Q, M, D, L o cons‐
tante

Service-Request-ID del comando PROFIenergy
El parámetro debe estar interconectado con el
parámetro de salida CMD de la instrucción
"PE_I_DEV (Página 6009)".

CMD_MODI‐
FIER

Input

INT

I, Q, M, D, L o cons‐
tante

Subcomando PROFIenergy (la evaluación solo
tiene lugar si CMD=3 o CMD=16). El parámetro
debe estar interconectado con el parámetro de
salida CMD_MODIFIER de la instrucción
"PE_I_DEV".

Count

Input

BYTE

I, Q, M, D, L o cons‐
tante

Número de valores medidos (Measurement_Va‐
lues).

Measure‐
ment_Values

Input

ANY

D

Puntero hacia la matriz con los valores medidos
(Measurement_IDs).
Consulte la estructura de la matriz según el perfil
PROFIenergy en Comando PE "Query_Measu‐
rement" - "Get_Measurement_values" (Pági‐
na 6008)

ACTIVATE

InOut

BOOL

I, Q, M, D, L

Con un flanco ascendente en la entrada ACTI‐
VATE, esta instrucción copia los parámetros de
entrada en el área de datos DA‐
TA_ERROR_RSP. Después la instrucción resta‐
blece el parámetro.
El parámetro debe fijarse en un tiempo de 10
segundos después de que en el parámetro NEW
de la instrucción "PE_I_DEV (Página 6009)" se
haya detectado un flanco ascendente.

VALID

InOut

BOOL

I, Q, M, D, L

El parámetro debe estar interconectado con la
entrada VALID de la instrucción "PE_I_DEV (Pá‐
gina 6009)".
El bloque auxiliar activa el parámetro cuando los
datos de respuesta del controlador PROFIe‐
nergy están preparados y pueden enviarse.

DATA_
ERRORRSP

InOut

ANY

D

Puntero hacia el área de datos en la que se guar‐
dan los datos de respuesta. El parámetro es
idéntico al puntero de DATA_ERRORRSP de la
instrucción "PE_I_DEV (Página 6009)". El área
de datos direccionada contiene el telegrama
PROFIenergy completo.
Longitud mínima: 244 bytes

Programación del PLC
Manual de programación y manejo, 11/2019

6025

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

ERROR

Output

BOOL

I, Q, M, D, L

● "0": ningún error
● "1": con errores

STATUS

Output

WORD

I, Q, M, D, L

● "0": ningún error
● "0x80B1": error en la indicación de ANY, p. ej.
área errónea

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

4.2.3.6

Parametrización del módulo

Escribir y leer registros
Principio
Algunos módulos poseen un área de datos del sistema a la que solo es posible acceder desde
el programa mediante escritura. Esta área contiene registros con los números de 0 a 240,
aunque no todos los módulos poseen todos los registros (ver la tabla siguiente).
Además, los módulos pueden poseer también un área de datos del sistema a la que solo es
posible acceder desde el programa mediante lectura. Esta área contiene registros con los
números de 0 a 240, aunque no todos los módulos poseen todos los registros.
Nota
Algunos módulos poseen ambas áreas de datos del sistema. Se trata de áreas distintas desde
el punto de vista físico, que solo tienen en común la división lógica en registros.

6026

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Área de datos del sistema solo accesible por escritura
La tabla siguiente muestra el formato del área de datos del sistema solo accesible por
escritura. Indica el tamaño que puede ocupar cada uno de los registros y con qué instrucciones
pueden escribirse.
Número de
registro

Contenido

Tamaño

Restricción

Con acceso de escri‐
tura mediante instruc‐
ción

0

Parámetros

Con S7-300:
de 2 a 14 bytes

Con acceso de es‐
critura solo con
S7-400

WR_DPARM (Pági‐
na 6037)

Con S7-300:

-

1

Parámetros

de 2 a 14 bytes

de 2 a 127

Datos del usua‐
rio

PARM_MOD (Pági‐
na 6031)
WR_PARM (Pági‐
na 6035)

(DS0 y DS1 ocupan
juntos exactamente
16 bytes)

WR_DPARM (Pági‐
na 6037)

Cada uno ≤ 240 bytes -

WR_PARM (Pági‐
na 6035)

PARM_MOD (Pági‐
na 6031)

WR_DPARM (Pági‐
na 6037)
PARM_MOD (Pági‐
na 6031)
WR_REC (Pági‐
na 5927)
de 128 a 240

Parámetros

Cada uno ≤ 240 bytes -

WR_PARM (Pági‐
na 6035)
WR_DPARM (Pági‐
na 6037)
PARM_MOD (Pági‐
na 6031)
WR_REC (Pági‐
na 5927)

Programación del PLC
Manual de programación y manejo, 11/2019

6027

Instrucciones
4.2 Instrucciones

Área de datos del sistema solo accesible por lectura
La tabla siguiente muestra el formato del área de datos del sistema solo accesible por lectura.
Indica el tamaño que pueden ocupar los distintos registros y con qué instrucciones pueden
leerse.
Número de
registro

Contenido

0

Datos de diagnóstico es‐ 4 bytes
pecíficos de módulo (defi‐
nidos de modo homogé‐
neo para el sistema)

RDSYSST (Página 6116)
(SZL_ID00B1H)

Datos de diagnóstico es‐
pecíficos de canal

RDSYSST (Página 6116)
(SZL_ID00B2H y
00B3H) RD_REC (Página 5922)

1

(incl. registro 0)

Tamaño

Con acceso de lectura median‐
te instrucción

RD_REC (Página 5922)

● Con S7-300:
16 bytes
● Con S7-400:
de 4 a 220 bytes

de 2 a 127

Datos del usuario

Cada uno ≤ 240 bytes

RD_REC (Página 5922)

de 128 a 240

Datos de diagnóstico

Cada uno ≤ 240 bytes

RD_REC (Página 5922)

Recursos del sistema
Si se lanzan consecutivamente varias transferencias de registro de funcionamiento asíncrono,
se garantiza que todas las peticiones se ejecuten y que no se produzcan interferencias
recíprocas.
En el momento en que se alcanza el límite de los recursos del sistema, se envía una
notificación mediante RET_VAL. El estado de fallo temporal puede eliminarse repitiendo la
petición.
El número máximo de peticiones activas "simultáneamente" para un mismo tipo de instrucción
depende de la CPU.

RD_DPAR: Leer registro de un módulo
Descripción
Esta instrucción permite leer el registro con número INDEX del componente direccionado
desde los datos del sistema configurados. Puede tratarse de un módulo central o de un
componente descentralizado (PROFIBUS DP o PROFINET IO).
El valor TRUE del parámetro de salida VALID indica que el registro se ha transferido
correctamente al área de destino RECORD. En ese caso, el parámetro de salida LEN contiene
la longitud en bytes de los datos leídos.
Si se ha producido un error durante la transferencia del registro, se señaliza mediante el
parámetro de salida ERROR . En ese caso, el parámetro de salida STATUS contiene la
información de error.

6028

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Funcionamiento
La instrucción "RD_DPAR" es una instrucción asíncrona, de modo que la ejecución se
prolonga a lo largo de varias llamadas. Para iniciar la transferencia del registro, debe llamarse
"RD_DPAR" con REQ = 1.
Mediante el parámetro de salida BUSY y los bytes 2 y 3 del parámetro de salida STATUS se
muestra el estado de la petición. Los bytes 2 y 3 de STATUS corresponden al parámetro de
salida RET_VAL de las instrucciones asíncronas.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).
La transferencia del registro se puede dar por finalizada cuando el parámetro de salida BUSY
ha adoptado el valor FALSE.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RD_DPAR":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: Solicitud de lectura

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Cualquier dirección lógica del módulo
En el bit 15 se especifica si se trata de una
dirección de entrada (bit 15 = 0) o de salida
(bit 15 = 1).

INDEX

Input

INT

I, Q, M, D, L o cons‐
tante

Número de registro

VALID

Output

BOOL

I, Q, M, D, L

El nuevo registro se ha recibido y es válido

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La petición todavía no ha finalizado.

ERROR

Output

BOOL

I, Q, M, D, L

ERROR = 1: Se ha producido un error durante
la lectura.

STATUS

Output

DWORD

I, Q, M, D, L

● Identificación de llamada (bytes 2 y 3) o
código de error
● Byte 1: B#16#00, si no hay ningún error.
De lo contrario, ID de función de DPV1PDU: En caso de error al leer registros
B#16#DE, en caso de error al escribir
registros B#16#DF. Si no se utiliza ningún
elemento de protocolo DPV1: B#16#C0.
● Byte 4: Extensión específica de fabricante
de la identificación de error

Programación del PLC
Manual de programación y manejo, 11/2019

6029

Instrucciones
4.2 Instrucciones
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

LEN

Output

INT

I, Q, M, D, L

Longitud de la información del registro leída

RECORD

InOut

ANY

I, Q, M, D, L

Área de destino para el registro leído
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro RECORD siempre re‐
quiere que se especifiquen por completo los
parámetros de DB (ej.: P#DB13.DBX0.0 byte
100). En las CPUs S7-300 no está permitido
omitir un número de DB explícito; de lo contra‐
rio se genera un aviso de error en el programa
de usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros ERROR y STATUS
Consulte también: PARM_MOD: Transferir registros de un módulo (Página 6031).

RD_DPARA: Leer registro de un módulo de forma asíncrona
Descripción
Esta instrucción permite leer el registro con número RECNUM del módulo seleccionado desde
los datos del sistema configurados. El registro leído se guarda en el área de destino delimitada
mediante el parámetro RECORD .

Funcionamiento
La instrucción "RD_DPARA" es una instrucción asíncrona, de modo que la ejecución se
prolonga a lo largo de varias llamadas. Para iniciar la petición, debe llamarse la instrucción con
REQ = 1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY .
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813).

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RD_DPARA":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: solicitud de lectura

LADDR

Input

WORD

I, Q, M, D, L o constan‐ Cualquier dirección lógica del módulo. Si se
te
trata de una dirección de salida, debe estar
activado el bit más significativo.

RECNUM

Input

BYTE

I, Q, M, D, L o constan‐ Número de registro (valores admisibles: de 0
te
a 240)

6030

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución
de la instrucción, el valor de respuesta con‐
tendrá un código de error.
Si no se han producido errores durante la
transferencia, deben distinguirse los siguien‐
tes casos:
● RET_VAL contiene la longitud en bytes
del registro realmente leído, en caso de
que el área de destino sea mayor que el
registro leído.
● RET_VAL contiene "0" en caso de que la
longitud del registro leído sea igual a la
longitud del área de destino.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La petición todavía no ha finaliza‐
do.

RECORD

Output

ANY

I, Q, M, D, L

Área de destino para el registro leído. Solo se
admite el tipo de datos BYTE .
Nota: Tenga en cuenta que en las CPUs
S7-300, el parámetro RECORD siempre re‐
quiere que se especifiquen por completo los
parámetros de DB (ej.: P#DB13.DBX0.0 byte
100). En las CPUs S7-300 no está permitido
omitir un número de DB explícito; de lo con‐
trario se genera un aviso de error en el pro‐
grama de usuario.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Consulte también: PARM_MOD: Transferir registros de un módulo (Página 6031).

PARM_MOD: Transferir registros de un módulo
Descripción
Con la instrucción "PARM_MOD" se transfieren al módulo todos los registros que se hayan
configurado. A este respecto es indiferente que los registros sean estáticos o dinámicos.

Programación del PLC
Manual de programación y manejo, 11/2019

6031

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "PARM_MOD":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ= 1: solicitud de escritura

IOID

Input

BYTE

I, Q, M, D, L o cons‐
tante

Identificador del área de direcciones:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse
la identificación de área de la dirección más
baja. Si las direcciones son idénticas, debe in‐
dicarse B#16#54.

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección base lógica del módulo. Con un mó‐
dulo mixto debe indicarse la dirección más ba‐
ja de las dos.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
un código de error.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: la escritura todavía no ha finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Información de error
Dentro de la información de error "verdadera" (códigos de error W#16#8xyz), debe distinguirse
entre dos casos:
● Errores temporales (códigos de error de W#16#80A2 a 80A4, 80Cx):
En este tipo de errores es posible que el error se elimine sin intervención del usuario, es
decir, puede bastar con llamar de nuevo la instrucción (varias veces si es necesario).
Ejemplo de error temporal: En este momento los recursos necesarios están ocupados
(W#16#80C3).
● Errores permanentes (códigos de error W#16#809x, 80A1, 80Bx, 80Dx):
Los errores de este tipo no se pueden eliminar sin intervención del usuario. Solo tiene
sentido volver a llamar la instrucción una vez que se haya eliminado el error.
Ejemplo de error permanente: Longitud errónea del registro que se debe transferir
(W#16#80B1).
Nota
Si, usando una de las instrucciones WR_PARM, WR_DPARM o PARM_MOD, se
transfieren registros a un esclavo DPV1 o este funciona en modo DPV1, el maestro DP
evalúa de la siguiente manera la información de error recibida desde el esclavo:
Si la información de error se encuentra en las áreas de W#16#8000 a W#16#80FF o de
W#16#F000 a W#16#FFFF, el maestro DP reenvía la información de error a la instrucción.
Si se encuentra fuera de estas áreas, reenvía a la instrucción el valor W#16#80A2 y
suspende el esclavo.

6032

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Indicaciones para las instrucciones "RD_DPARM (Página 6034)", "WR_PARM (Página 6035)",
"WR_DPARM (Página 6037)" y "PARM_MOD"

Parámetro RET_VAL
Código de error

Explicación

Restricción

(W#16#...)
0000

Ningún error

-

7000

Primera llamada con REQ=0: No hay ninguna transferencia de datos
activa; BUSY tiene el valor 0.

-

7001

Primera llamada con REQ=1: Transmisión de datos iniciada; BUSY
tiene el valor "1".

Periferia descentralizada

7002

Llamada intermedia (REQ irrelevante): Transmisión de datos activa;
BUSY tiene el valor "1".

Periferia descentralizada

8090

La dirección base lógica indicada no es válida: No existe ninguna
asignación en el SDB1/SDB2x, o no se trata de una dirección base.

-

8092

En la referencia ANY se ha indicado un tipo distinto a BYTE .

Solo con S7-400
para RD_DPARM (Página 6034)
y WR_PARM (Página 6035)

8093

Esta instrucción no es válida para el módulo seleccionado con LADDR
e IOID. (Se soportan los módulos S7-300 en los S7-300, módulos
S7-400 en los S7-400, módulos S7-DP en los S7-300 y S7-400.)

-

80A1

Acuse negativo al enviar el juego de datos al módulo (módulo desen‐
chufado durante la transferencia o defectuoso)

1)

80A2

Error de protocolo DP con Layer 2, posible error de hardware o interfaz Periferia descentralizada 1)
en el esclavo DP

80A3

Error de protocolo DP con User-Interface/User

Periferia descentralizada 1)

80A4

Fallo de comunicación en el bus K

El error se produce entre la CPU
y una interfaz DP externa 1)

80B0

Instrucción no posible con este tipo de módulo, o el módulo no conoce
el registro.

1)

80B1

La longitud del registro que se debe transferir es errónea.
Con RD_DPARM (Página 6034): La longitud del área de destino deli‐
mitada por RECORD es insuficiente.

80B2

El slot configurado no está ocupado.

1)

80B3

El tipo de módulo real no coincide con el tipo de módulo configurado
en el SDB1

1)

80C1

Los datos de la petición de escritura efectuada anteriormente en el
módulo para el mismo registro no han sido procesados todavía por el
módulo.

1)

80C2

En este momento el módulo está procesando el máximo posible de
peticiones para una CPU.

1)

80C3

En este momento los recursos necesarios (memoria, etc.) están ocu‐
pados.

80C4

Error temporal interno. No se ha podido ejecutar la petición.

1)

Repita la petición. Si este error se produce a menudo, compruebe si
hay fuentes de perturbación en la instalación.
80C5

Periferia descentralizada no disponible o desactivada.

Programación del PLC
Manual de programación y manejo, 11/2019

Periferia descentralizada 1)

6033

Instrucciones
4.2 Instrucciones
Código de error

Explicación

Restricción

80C6

La transferencia de juegos de datos se ha cancelado por una inte‐
rrupción de la clase de prioridad (rearranque o segundo plano)

Periferia descentralizada 1)

80D0

En el SDB correspondiente no hay ninguna entrada para el módulo.

-

80D1

Este número de registro no está configurado en el correspondiente
SDB para el módulo (se descartan los números >241).

-

80D2

Módulo no parametrizable según la identificación del módulo.

-

(W#16#...)

80D3

No se puede acceder al SDB porque no está presente.

-

80D4

Error de estructura del SDB: El puntero interno del SDB señala fuera
del SDB

Solo con S7-300

80D5

El juego de datos es estático.

Solo con "WR_PARM (Pági‐
na 6035)"

8xyy

Información de error general

-

Consulte también: Evaluación de errores con el parámetro de salida
RET_VAL (Página 174)
1)

no existe con "RD_DPARM"

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

RD_DPARM: Leer registro de los datos de sistema configurados
Descripción
Esta instrucción permite leer el registro con número RECNUMdel módulo direccionado desde
los datos del sistema configurados. El registro leído se guarda en el área de destino delimitada
mediante el parámetro RECORD.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RD_DPARM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IOID

Input

BYTE

I, Q, M, D, L o cons‐
tante

Identificador del área de direcciones:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse
la identificación de área de la dirección más
baja. Si se trata de las mismas direcciones,
debe indicarse B#16#54.

LADDR

6034

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección base lógica del módulo. Con un mó‐
dulo mixto debe indicarse la dirección más ba‐
ja de las dos.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RECNUM

Input

BYTE

I, Q, M, D, L o cons‐
tante

Número de registro (valores admisibles: de 0 a
240)

RET_VAL

Return

INT

I, Q, M, D, L

Longitud en bytes del registro leído, si el regis‐
tro leído cabe en el área de destino y no se ha
producido ningún error durante la transferen‐
cia.
Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
un código de error.

RECORD

Output

ANY

I, Q, M, D, L

Área de destino para el registro leído. Solo se
admite el tipo de datos BYTE .

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Consulte también: PARM_MOD: Transferir registros de un módulo (Página 6031).

WR_PARM: Escribir registro de un módulo
Descripción
Esta instrucción permite transferir el registro RECORD al módulo direccionado. Los
parámetros que se transfieren al módulo no sobrescriben los parámetros creados mediante
configuración.

Requisitos
El registro que se va a transferir no debe ser estático. Para saber qué registros de un módulo
son estáticos, consulte la descripción del módulo.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "WR_PARM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: Solicitud de escritura

IOID

Input

BYTE

I, Q, M, D, L o cons‐
tante

Identificador del área de direcciones:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse la
identificación de área de la dirección más baja. Si
se trata de las mismas direcciones, debe indicar‐
se B#16#54.

Programación del PLC
Manual de programación y manejo, 11/2019

6035

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección base lógica del módulo. Con un módu‐
lo mixto debe indicarse la dirección más baja de
las dos.

RECNUM

Input

BYTE

I, Q, M, D, L o cons‐
tante

Número de registro

RECORD

Input

ANY

I, Q, M, D, L

Registro
Nota: Tenga en cuenta que en las CPUs S7-300,
el parámetro RECORD siempre requiere que se
especifiquen por completo los parámetros de DB
(ej.: P#DB13.DBX0.0 byte 100). En las CPUs
S7-300 no está permitido omitir un número de DB
explícito; de lo contrario se genera un aviso de
error en el programa de usuario.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá un
código de error.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La escritura todavía no ha finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RECORD
Los datos que se deben transferir se leen del parámetro RECORD en la primera llamada. Si la
transferencia del registro dura más que una llamada, en las llamadas consecutivas de la
instrucción (para la misma petición), el contenido del parámetro RECORD ya no es relevante.

Parámetro RET_VAL
Consulte también: PARM_MOD: Transferir registros de un módulo (Página 6031).
Nota
Solo con S7-400
Si aparece el error general W#16#8544, esto solo significa que estaba bloqueado el acceso a
por lo menos un byte del área de memoria de E/S que contiene el registro. Se ha proseguido
la transferencia de datos.

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

6036

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

WR_DPARM: Transferir registro
Descripción
Esta instrucción permite transferir el registro con número RECNUM desde los datos de
configuración al módulo direccionado. A este respecto es indiferente que el registro sea
estático o dinámico.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "WR_DPARM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: Solicitud de escritura

IOID

Input

BYTE

I, Q, M, D, L o cons‐
tante

Identificador del área de direcciones:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indicarse
la identificación de área de la dirección más
baja. Si se trata de las mismas direcciones,
debe indicarse B#16#54.

LADDR

Input

WORD

I, Q, M, D, L o cons‐
tante

Dirección base lógica del módulo. Con un mó‐
dulo mixto debe indicarse la dirección más ba‐
ja de las dos.

RECNUM

Input

BYTE

I, Q, M, D, L o cons‐
tante

Número de registro

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
un código de error.

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La escritura todavía no ha finaliza‐
do.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Consulte también: PARM_MOD: Transferir registros de un módulo (Página 6031).

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

Programación del PLC
Manual de programación y manejo, 11/2019

6037

Instrucciones
4.2 Instrucciones

4.2.3.7

Alarmas

Alarma horaria
Usar las instrucciones SET_TINT, CAN_TINT, ACT_TINT, QRY_TINT
Definición
Una alarma horaria es el desencadenante de la llamada controlada por reloj de un OB de
alarma horaria.

Requisitos para la llamada
Para que el sistema operativo pueda llamar un OB de alarma horaria, deben cumplirse los
siguientes requisitos:
● El OB de alarma horaria debe estar parametrizado (fecha y hora de inicio, ejecución)
– Mediante configuración o
– con la instrucción "SET_TINT (Página 6040)" en el programa de usuario.
● El OB de alarma horaria debe estar activado
– Mediante configuración o
– con la instrucción "ACT_TINT (Página 6042)" en el programa de usuario.
● El OB de alarma horaria no debe haber sido desactivado mediante configuración.
● El OB de alarma horaria debe estar presente en la CPU.
● Si el ajuste se realiza mediante la instrucción "ACT_TINT (Página 6042)", la fecha y hora de
inicio, en caso de ejecución única, no deben haber transcurrido; en caso de
ejecución periódica, el OB de alarma horaria debe llamarse durante el próximo periodo
transcurrido (momento de arranque + múltiplo de la duración del periodo).
Nota
La alarma horaria puede parametrizarse con la herramienta de configuración y activarse en
el programa de usuario ("ACT_TINT (Página 6042)").

Finalidad de las instrucciones "SET_TINT", "CAN_TINT", "ACT_TINT" y "QRY_TINT"
Con estas instrucciones, las alarmas horarias se pueden
● Ajustar ("SET_TINT (Página 6040)")
● Anular ("CAN_TINT (Página 6041)")
● Activar ("ACT_TINT (Página 6042)")
● Consultar ("QRY_TINT (Página 6043)")

6038

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Repercusiones en la alarma horaria
La tabla siguiente muestra qué efectos producen las distintas situaciones en las alarmas
horarias.
Si ...

entonces ...

se cambia el ajuste de una alarma
horaria

Se anula automáticamente la alarma horaria en curso.

(Llamada de "SET_TINT (Pági‐
na 6040)"),
Se anula la alarma horaria
(Llamada de "CAN_TINT (Pági‐
na 6041)"),

Se borran la fecha y hora de inicio. Por ello la alarma horaria
debe reajustarse antes de poder activarla.

El OB de alarma horaria no está pre‐ Se genera automáticamente un error de clase de prioridad, es
sente en el momento de la llamada, decir, el sistema operativo llama el OB 85.
Si el OB 85 no está presente, la CPU pasa al estado operativo
STOP.
Se sincroniza el reloj o se adelanta la
hora

Si al adelantar la hora se salta la fecha u hora de inicio:
● El sistema operativo llama el OB 80.1
● A continuación del OB 80 se llaman todos los OBs de
alarma horaria (una sola vez, sea cual sea el número de
periodos saltados), en caso de que no hayan sido
manipulados en el OB 80.2
Si el OB 80 no está presente, la CPU pasa al estado operativo
STOP.

Se sincroniza el reloj o se atrasa la
hora

CPUs S7-400 y CPU 318:
Si se han llamado OBs de alarma horaria en el periodo atrasa‐
do, no se llaman de nuevo al volver a recorrerse ese tiempo.
CPUs S7-300: Se ejecutan todos los OBs de alarma horaria
afectados.

1
En la información de evento de arranque del OB 80 se indica de forma cifrada qué OBs de alarma
horaria no se han podido llamar debido al adelanto de la hora. La hora indicada en la información de
evento de arranque equivale al tiempo adelantado.
2
La hora indicada en la información de evento de arranque del OB de alarma horaria recuperado
corresponde a la hora de inicio de la primera alarma horaria saltada.

Comportamiento en rearranque completo (en caliente) o arranque en frío
En caso de rearranque completo (en caliente) o arranque en frío, se borran todos los ajustes
de alarma horaria especificados en el programa de usuario mediante instrucciones. A partir de
entonces solo son efectivos los parámetros ajustados por configuración.

Programación del PLC
Manual de programación y manejo, 11/2019

6039

Instrucciones
4.2 Instrucciones

Ejecución del OB de alarma horaria
La tabla siguiente muestra los distintos efectos del parámetro "Ejecución". Este parámetro se
ajusta mediante configuración o con la instrucción "SET_TINT (Página 6040)" (parámetro de
entrada PERIOD).
Ejecución del OB de alarma horaria

Reacción

Ninguna

El OB de alarma horaria no se ejecuta aunque esté presente en
la CPU.

(Ajustable solo mediante configura‐
ción)

En el programa de usuario es posible reparametrizar, es decir,
ajustar la alarma horaria ("SET_TINT (Página 6040)").

Una sola vez

Después de la llamada al OB de alarma horaria, la alarma que‐
da anulada y puede reajustarse y activarse.

Periódicamente

Si, en el momento de la activación, la fecha y hora de inicio ya
han transcurrido, el OB de alarma horaria interrumpe el pro‐
grama cíclico en el momento "Fecha/hora de inicio + múltiplo de
la duración ajustada del periodo".

(Cada minuto, cada hora, cada día,
cada semana, cada mes, cada año)

Puede suceder, aunque es muy infrecuente, que el OB de alar‐
ma horaria todavía esté procesándose cuando se produce la
siguiente llamada.
Consecuencia:
● Error de tiempo (el sistema operativo llama el OB 80; si el
OB 80 no está presente, la CPU pasa al estado operativo
STOP)
● Se corrige el OB de alarma horaria.

SET_TINT: Ajustar alarma horaria
Descripción
Esta instrucción permite ajustar la fecha y hora de arranque de los bloques de organización de
alarma horaria. Si al fijar la hora de inicio se indican segundos y milisegundos, la indicación se
ignora y se sustituye por "0".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SET_TINT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OB_NR

Input

INT

I, Q, M, D, L o cons‐
tante

Número del OB que se inicia en el momento
SDT + múltiplo de PERIOD (OB 10 a OB 17).

SDT

Input

DT

D, L

Si al fijar la fecha y hora de arranque se indican
segundos y milisegundos, la indicación se ig‐
nora y se sustituye por 0.
Si se desea fijar el arranque mensual de un OB
de alarma horaria, solo pueden usarse para la
fecha de inicio los días 1, 2, ... 28.

6040

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PERIOD

Input

WORD

I, Q, M, D, L o cons‐
tante

Período transcurrido desde el punto de salida
SDT :
● W#16#0000 = Una vez
● W#16#0201 = Una vez por minuto
● W#16#0401 = Una vez por hora
● W#16#1001 = Una vez al día
● W#16#1201 = Una vez por semana
● W#16#1401 = Una vez al mes
● W#16#1801 = Una vez al año
● W#16#2001 = A final de mes

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el parámetro actual de
RET_VAL contendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

No ha ocurrido ningún error.

8090

Parámetro erróneo OB_NR

8091

Parámetro erróneo SDT

8092

Parámetro erróneo PERIOD

80A1

El momento inicial ajustado se encuentra en el pasado. (Este código de error solo aparece con PERIOD
= W#16#0000.)

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

CAN_TINT: Anular alarma horaria
Descripción
La instrucción permite borrar la fecha y hora de inicio de un bloque de organización de alarma
horaria. La alarma horaria se desactiva y el bloque de organización ya no se llama.
Para volver a utilizar la alarma horaria, vuelva a ajustar primero el momento de inicio
(instrucción "SET_TINT (Página 6040)") y, después, active la alarma horaria (instrucción
"ACT_TINT (Página 6042)").

Programación del PLC
Manual de programación y manejo, 11/2019

6041

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "CAN_TINT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OB_NR

Input

INT

I, Q, M, D, L o constante Número del OB cuya fecha y hora de ini‐
cio se deben borrar (OB 10 a OB 17).

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecu‐
ción de la instrucción, el parámetro actual
de RET_VAL contendrá un código de
error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

No ha ocurrido ningún error.

8090

Parámetro erróneo OB_NR

80A0

No se ha establecido ninguna fecha/hora de inicio para el OB de alarma horaria correspondiente.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

ACT_TINT: Activar alarma horaria
Descripción
La instrucción permite activar un bloque de organización de alarma horaria.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ACT_TINT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OB_NR

Input

INT

I, Q, M, D, L o constante Número del OB que se debe activar
(OB 10 a OB 17).

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecu‐
ción de la instrucción, el parámetro actual
de RET_VAL contendrá un código de
error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6042

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

No ha ocurrido ningún error.

8090

Parámetro erróneo OB_NR

80A0

No se ha ajustado ninguna fecha/hora de inicio para el OB de alarma horaria en cuestión.

80A1

El momento activado se encuentra en el pasado, y el error solo se produce si Ejecución=una sola vez.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

QRY_TINT: Consultar estado de alarma horaria
Descripción
La instrucción muestra el estado de un bloque de organización de alarma horaria en el
parámetro de salida STATUS .

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "QRY_TINT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OB_NR

Input

INT

I, Q, M, D, L o constante Número del OB cuyo estado se consulta
(OB 10 a OB 17).

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecu‐
ción de la instrucción, el parámetro actual
de RET_VAL contendrá un código de
error.

STATUS

Output

WORD

I, Q, M, D, L

Estado de la alarma horaria; véase la si‐
guiente tabla.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro STATUS
Nota
Si RET_VAL tiene un valor diferente de cero, no se puede evaluar STATUS.

Bit

Valor

Significado

0

0

En RUN.

1

Durante el arranque.

Programación del PLC
Manual de programación y manejo, 11/2019

6043

Instrucciones
4.2 Instrucciones
Bit

Valor

Significado

1

0

La alarma horaria está habilitada.

1

La alarma horaria está bloqueada mediante "DIS_IRT (Página 6059)".

0

La alarma horaria no está activada o ha expirado.

1

La alarma horaria está activada.

0

El OB con el número de OB indicado en el parámetro OB_NR no existe.

1

El OB con el número de OB indicado en el parámetro OB_NR existe.

2
4
Otros

Siempre "0"

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

No ha ocurrido ningún error.

8090

Parámetro erróneo OB_NR

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Alarma de retardo
Usar alarmas de retardo
Definición
Después de llamar la instrucción "SRT_DINT (Página 6046)", el sistema operativo genera una
alarma una vez transcurrido el tiempo de retardo parametrizado. A continuación se llama el OB
de alarma de retardo parametrizado.

Requisitos para la llamada
Para que el sistema operativo pueda llamar un OB de alarma de retardo, deben cumplirse los
siguientes requisitos:
● El OB de alarma de retardo debe haber sido activado mediante la instrucción "SRT_DINT
(Página 6046)".
● El OB de alarma de retardo no debe haber sido desactivado mediante configuración.
● El OB de alarma de retardo debe estar presente en la CPU.

6044

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Finalidad de las instrucciones "SRT_DINT", "CAN_DINT" y "QRY_DINT"
Con estas instrucciones, las alarmas de retardo se pueden
● Iniciar ("SRT_DINT (Página 6046)")
● Anular ("CAN_DINT (Página 6047)")
● Consultar ("QRY_DINT (Página 6047)").

Repercusiones en la alarma de retardo
La tabla siguiente muestra qué efectos producen las distintas situaciones en las alarmas de
retardo.
Si ...

y ...

Se inicia una alarma de re‐ La alarma de retardo ya se
tardo (llamada de
ha iniciado,
"SRT_DINT (Página 6046)")
El OB de alarma de retardo
no está presente en el mo‐
mento de la llamada,

entonces ...
Se sobrescribe la alarma de retardo; se
inicia de nuevo la alarma de retardo.
Se efectúa una entrada en el búfer de
diagnóstico y la CPU continúa funcionan‐
do.

Se ha iniciado la alarma en La llamada al OB de alarma de retardo se
un OB de arranque y el tiem‐ pospone hasta que la CPU esté en RUN.
po de retardo expira antes
de que la CPU esté en RUN,
El tiempo de retardo ha
transcurrido

Un OB de alarma de retardo
iniciado anteriormente toda‐
vía está procesándose,

El sistema operativo genera un error de
tiempo (llamada del OB 80; si el OB 80 no
está presente, la CPU continúa funcio‐
nando).

Comportamiento en rearranque completo (en caliente) o arranque en frío
En rearranque completo (en caliente) o arranque en frío, se borran todos los ajustes de alarma
de retardo especificados en el programa de usuario mediante instrucciones.

Inicio en un OB de arranque
Una alarma de retardo puede iniciarse en un OB de arranque. Para llamar el OB de alarma de
retardo deben cumplirse dos condiciones:
● El tiempo de retardo ha expirado.
● La CPU está en el estado operativo RUN.
Si el tiempo de retardo ha expirado y la CPU todavía no se encuentra en el estado operativo
RUN, la llamada del OB de alarma de retardo se pospone hasta que la CPU se encuentre en
dicho estado operativo. Tras ello, el OB de alarma de retardo se llama antes de la primera
instrucción en el OB Main [OB 1].

Programación del PLC
Manual de programación y manejo, 11/2019

6045

Instrucciones
4.2 Instrucciones

SRT_DINT: Iniciar alarma de retardo
Descripción
Esta instrucción permite iniciar una alarma de retardo que, una vez transcurrido el retardo
parametrizado (parámetro DTIME), llama un OB de alarma de retardo.
En el parámetro SIGN se puede indicar un identificador específico de usuario para señalizar el
inicio de la alarma de retardo. Los valores de DTIME y SIGN vuelven a aparecer en la
información de evento de arranque del OB indicado cuando este se ejecuta.
El tiempo transcurrido entre la llamada de la instrucción "SRT_DINT" y el inicio del OB de
alarma de retardo es como máximo un milisegundo menor que el tiempo parametrizado,
siempre que la llamada no se retrase debido a eventos de interrupción.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SRT_DINT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OB_NR

Input

INT

I, Q, M, D, L o constante Número del OB que se inicia una vez trans‐
currido un tiempo de retardo (OB 20 a
OB 23).

DTIME

Input

TIME

I, Q, M, D, L o constante Valor de tiempo del retardo (de 1 a 60000
ms)
Pueden implementarse tiempos mayores, p.
ej. utilizando un contador en un OB de alar‐
ma de retardo.

SIGN

Input

WORD

I, Q, M, D, L o constante Identificación que aparece en la información
de evento de arranque al llamar el OB de
alarma de retardo

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución
de la instrucción, el parámetro actual de
RET_VAL contendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error
(W#16#...)

Descripción

0000

No ha ocurrido ningún error.

8090

Parámetro erróneo OB_NR

8091

Parámetro erróneo DTIME

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

6046

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CAN_DINT: Anular alarma de retardo
Descripción
Esta instrucción permite anular una alarma de retardo iniciada (ver "SRT_DINT
(Página 6046)"). En tal caso, no se llama el OB de alarma de retardo.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "CAN_DINT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OB_NR

Input

INT

I, Q, M, D, L o constante Número del OB que se debe anular (OB 20
a OB 23).

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución
de la instrucción, el parámetro actual de
RET_VAL contendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

No ha ocurrido ningún error.

8090

Parámetro erróneo OB_NR

80A0

No se ha iniciado la alarma de retardo.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

QRY_DINT: Consultar estado de una alarma de retardo
Descripción
Esta instrucción permite consultar el estado de una alarma de retardo. Las alarmas de retardo
se administran con los bloques de organización OB 20 a OB 23.

Programación del PLC
Manual de programación y manejo, 11/2019

6047

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "QRY_DINT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

OB_NR

Input

INT

I, Q, M, D, L o constante Número del OB cuyo estado se desea co‐
nocer (OB 20 a OB 23).

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución
de la instrucción, el parámetro actual de
RET_VAL contendrá un código de error.

STATUS

Output

WORD

I, Q, M, D, L

Estado de la alarma de retardo; véase la si‐
guiente tabla.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro STATUS
Nota
Si RET_VAL tiene un valor diferente de cero, no se puede evaluar STATUS.

Bit

Valor

Significado

0

0

En RUN.

1

Durante el arranque.

0

La alarma de retardo está habilitada.

1

La alarma de retardo está bloqueada mediante "DIS_IRT (Página 6059)".

1
2
4

0

La alarma de retardo no está activada o ya ha caducado.

1

La alarma de retardo está activada.

0

El OB con el número de OB indicado en el parámetro OB_NR no existe.

1

Está cargado un OB con el número de OB especificado en el parámetro OB_NR.

Otros

Siempre "0"

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

No ha ocurrido ningún error.

8090

Parámetro erróneo OB_NR

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

6048

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Eventos de errores sincrónicos
Enmascarar eventos de errores sincrónicos
Introducción
Los eventos de errores sincrónicos son eventos de error de programación y acceso. Estos
eventos de error se producen cuando se emplean en la programación áreas o números de
operando erróneos o direcciones erróneas. Enmascarar estos eventos de error significa lo
siguiente:
● Los eventos de error enmascarados no desencadenan ningún OB de error y no provocan
ninguna reacción sustitutiva.
● La CPU "anota" en un registro de estado de eventos los errores enmascarados que se han
producido.
Para enmascarar errores se debe llamar la instrucción "MSK_FLT (Página 6055)".
Desenmascarar eventos de error significa anular un enmascaramiento efectuado
anteriormente y borrar el bit correspondiente en el registro de estado de eventos de la clase de
prioridad actual. El enmascaramiento se anula
● Llamando la instrucción "DMSK_FLT (Página 6056)".
● Cuando ha finalizado la clase de prioridad actual (solo con S7-400).
Si se produce un evento de error después de ser desenmascarado, el sistema operativo inicia
el correspondiente OB de error. Para la reacción a errores de programación, debe
programarse el OB 121, y para la reacción a errores de acceso, el OB 122.
Los eventos de error enmascarados y detectados se pueden leer con la instrucción
"READ_ERR (Página 6057)".
Nota
Independientemente de que estén enmascarados o desenmascarados, con S7-300
(exceptuando la CPU 318) los eventos de error se registran en el búfer de diagnóstico y se
enciende el LED de error de grupo de la CPU.

Programación del PLC
Manual de programación y manejo, 11/2019

6049

Instrucciones
4.2 Instrucciones

Tratamiento de errores en general
Cuando se producen errores de programación o acceso en un programa de usuario, puede
reaccionarse ante ello de diferentes maneras:
● Se puede programar un OB de error, que el sistema operativo llamará cuando se produzca
un evento de error relevante.
● Se puede bloquear la llamada al OB de error por separado para cada clase de prioridad. En
tal caso, la CPU no pasa a STOP cuando se produce un error relevante en la clase de
prioridad bloqueada. La CPU guarda en un registro de estado de eventos los errores que
se producen. Sin embargo, esta entrada en el registro no permite saber cuándo y cuántas
veces se ha producido el error en cuestión.
(YHQWRGHHUURUV¯QFURQR

1R

(UURUHQPDVFDUDGR"

6¯

/ODPDGDGHXQ2%GH
HUURU 6LHO2%GHHUURUQR
HVW£SURJUDPDGROD&38
SDVDD6723

%ORTXHRGHODOODPDGDGH
XQ2%GHHUURU 6LVH
SURGXFHXQHUURUOD&38
QRSDVDD6723

(QHO2%HVW£SURJUDPD
GDODUHDFFLµQGHVHDGD
DQWHXQHUURU

(QHOUHJLVWURGHHVWDGR
GHHYHQWRVVHLQWURGXFH
XQHYHQWRGHHUURU

Máscara de error
Los eventos de errores sincrónicos están asignados a un determinado patrón de bits,
la máscara de error. Esta máscara de error se reproduce también en los parámetros de entrada
y salida de las instrucciones "MSK_FLT (Página 6055)", "DMSK_FLT (Página 6056)" y
"READ_ERR (Página 6057)".
En los eventos de errores sincrónicos se distingue entre los errores de programación y los de
acceso, que pueden enmascararse con dos máscaras de error distintas. Encontrará las
correspondientes máscaras de error en las siguientes imágenes.

6050

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Máscara de error de programación
La siguiente imagen muestra el patrón de bits de la máscara de error para errores de
programación. La máscara para errores de programación se encuentra en los parámetros
"PRGFLT_..." (ver a continuación "Error de programación, palabra menos significativa" o "Error
de programación, palabra más significativa").

3DODEUDPHQRV ; ; ; ; ; ;
VLJQLILFDWLYD

 1|GHELW

 

;
(UURUGHFRQYHUVLµQ%&'
(UURUGHORQJLWXGGH£UHDDOOHHU
(UURUGHORQJLWXGGH£UHDDOHVFULELU
(UURUGH£UHDDOOHHU
(UURUGH£UHDDOHVFULELU
(UURUGHQ¼PHURGHWHPSRUL]DGRU
(UURUGHQ¼PHURGHFRQWDGRU
(UURUGHDOLQHDFLµQDOOHHU
(UURUGHDOLQHDFLµQDOHVFULELU





3DODEUDP£V
VLJQLILFDWLYD

 1|GHELW

; ; ; ;

;

(UURUGHHVFULWXUDEORTXHGHGDWRV
(UURUGHGDWRVEORTXHGHGDWRVGHLQVWDQFLD
(UURUGHQ¼PHURGHEORTXH'%
(UURUGHQ¼PHURGHEORTXH',
(UURUGHQ¼PHURGHEORTXH)&
(UURUGHQ¼PHURGHEORTXH)%
'%QRFDUJDGR
)&QRFDUJDGR
6)&QRFDUJDGR
)%QRFDUJDGR
6)%QRFDUJDGR
/H\HQGD

; 1RUHOHYDQWH

Bits no relevantes
En la imagen superior, x significa para los ...
● ... Parámetros de entrada

para "MSK_FLT (Página 6055)", "DMSK_FLT (Pági‐
na 6056)", "READ_ERR (Página 6057)"

= "0"

● ... Parámetros de salida

para "MSK_FLT (Página 6055)", "DMSK_FLT (Pági‐
na 6056)"

= "1" para S7-300

para "READ_ERR (Página 6057)"

= "0"

Programación del PLC
Manual de programación y manejo, 11/2019

= "0" para S7-400

6051

Instrucciones
4.2 Instrucciones

Máscara de error de acceso para todas las CPUs
La siguiente imagen muestra el patrón de bits de la máscara para errores de acceso (para
todas las CPUs). La máscara de errores de acceso se encuentra en los parámetros
ACCFLT_...
En las tablas siguientes encontrará una explicación de los errores de acceso (véanse a
continuación).

 
3DODEUD
; ; ; ; ; ; ; ; ; ; ; ;
PHQRV
VLJQLILFDWLYD

 1|GHELW
; ;
(UURUGHDFFHVRDODSHULIHULDDOOHHU
(UURUGHDFFHVRDODSHULIHULDDOHVFULELU



 1|GHELW
3DODEUD
P£V
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;
VLJQLILFDWLYD

/H\HQGD

; LUUHOHYDQWH

Ejemplo
La siguiente imagen muestra el aspecto de la palabra menos significativa de la máscara para
errores de acceso con todos los errores enmascarados (para todas las CPUs).
● Como parámetro de entrada para "MSK_FLT (Página 6055)"
● Como parámetro de salida para "MSK_FLT (Página 6055)"
3DU£PHWUR
GHHQWUDGD



 

 1|GHELW

               
(UURUHVHQPDVFDUDGRV


3DU£PHWUR
GHVDOLGD

/H\HQGD

6052

 

 1|GHELW

; ; ; ; ; ; ; ; ; ; ; ;   ; ;
(UURUHVHQPDVFDUDGRV

;

1RUHOHYDQWH



1RHQPDVFDUDGRV



(QPDVFDUDGRV

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Error de programación, palabra menos significativa
La tabla siguiente contiene los errores que están asignados a la palabra menos significativa de
la máscara para errores de programación. Los distintos errores se muestran emparejados con
sus posibles causas.
Posibles causas de errores de programación, palabra menos significativa
Error

ID de evento
(W#16#...)

El error se produce ...

BCD - Error de conversión

2521

... Cuando el error que se debe convertir no es un nú‐
mero BCD (p. ej. 5E8).

Error de longitud de área
durante lectura

2522

... Cuando un operando direccionado no se encuentra
por completo dentro del área de operandos posible.
Ejemplo: Debe leerse MW 320, aunque el área de mar‐
ca solo ocupa 256 bytes.

Error de longitud de área
durante escritura

2523

... Cuando un operando direccionado no se encuentra
por completo dentro del área de operandos posible.
Ejemplo: Debe escribirse un valor en MW 320, aunque
el área de marca solo ocupa 256 bytes.

Error de área durante lectu‐ 2524
ra

... Cuando, en un direccionamiento indirecto, abarcando
varias áreas, se especifica una identificación de área
errónea para el operando.
Ejemplo:
Correcto: LAR1 P#E 12.0
L W[AR1, P#0.0]
Erróneo: LAR1 P#12.0
L W[AR1, P#0.0] Con esta operación
se notifica el error de área.

Error de área durante escri‐ 2525
tura

... Cuando, en un direccionamiento indirecto, abarcando
varias áreas, se especifica una identificación de área
errónea para el operando.
Ejemplo:
Correcto: LAR1 P#E 12.0
T W[AR1, P#0.0]
Erróneo: LAR1 P#12.0
T W[AR1, P#0.0] Con esta operación
se notifica el error de área.

Error de número de tempo‐
rizador

2526

Error de número de conta‐
dor

2527

Programación del PLC
Manual de programación y manejo, 11/2019

... Cuando se accede a un temporizador no existente.
Ejemplo:SI T [MW 0] con MW 0 = 129; se solicita iniciar
el temporizador 129 aunque solo existen 128 tempori‐
zadores.
... Cuando se accede a un contador no existente.
Ejemplo: ZV Z [MW 0] con MW 0 = 600; se accede al
contador 600, a pesar de que solo existen 512 contado‐
res (CPU 416-1).

6053

Instrucciones
4.2 Instrucciones
Error

ID de evento
(W#16#...)

El error se produce ...

Error de alineación durante
lectura

2528

... Cuando se direcciona un operando de byte, palabra o
palabra doble con una dirección de bit ≠ 0.
Ejemplo: Correcto: LAR1 P#M12.0
L B[AR1, P#0.0]
Erróneo: LAR1 P#M12.4
L B[AR1, P#0.0]

Error de alineación durante
escritura

2529

... Cuando se direcciona un operando de byte, palabra o
palabra doble con una dirección de bit ≠ 0.
Ejemplo:
Correcto: LAR1 P#M12.0
T B[AR1, P#0.0]
Erróneo: LAR1 P#M12.4
T B[AR1, P#0.0]

Error de programación, palabra más significativa
La tabla siguiente contiene los errores que están asignados a la palabra más significativa de
la máscara para errores de programación. Los distintos errores se muestran emparejados con
sus posibles causas.
Posibles causas de errores de programación, palabra más significativa

6054

Error

ID de evento
(W#16#...)

El error se produce ...

Error de escritura bloque de
datos

2530

... Cuando el bloque de datos en el que se escribe
está protegido contra escritura.

Error de datos bloque de da‐
tos de instancia

2531

... Cuando el bloque de datos de instancia en el que
se escribe está protegido contra escritura.

Error de número de bloque DB 2532

... Cuando se abre un bloque de datos cuyo número
es mayor que el número máximo admisible.

Error de número de bloque DI 2533

... Cuando se abre un bloque de datos de instancia
cuyo número es mayor que el número máximo admi‐
sible.

Error de números de bloque
FC

2534

... Cuando se llama una función cuyo número es ma‐
yor que el número máximo admisible.

Error de número de bloque FB 2535

... Cuando se llama un bloque de función cuyo núme‐
ro es mayor que el número máximo admisible.

DB no cargado

253A

... Cuando el bloque de datos que se desea abrir no
está cargado.

Instrucción no cargada

253C a 253F

... Cuando la instrucción que se desea llamar no está
cargada.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Error de acceso
La tabla siguiente contiene todos los errores que están asignados a la máscara de errores para
errores de acceso (para todas las CPUs). Los distintos errores se muestran emparejados con
sus posibles causas.
Error

ID de evento
(W#16#...)

El error se produce ...

Error de acceso a la periferia
al leer

2942

... Cuando la dirección del área de periferia no tiene
asignado ningún módulo de señal.
O bien
... Cuando el acceso a dicha área de periferia no se
acusa dentro del tiempo de vigilancia de módulo ajus‐
tado (retardo de acuse).

Error de acceso a periferia al
escribir

2943

... Cuando la dirección del área de periferia no tiene
asignado ningún módulo de señal.
o
... Cuando el acceso a dicha área de periferia no se
acusa dentro del tiempo de vigilancia de módulo ajus‐
tado (retardo de acuse).

MSK_FLT: Enmascarar eventos de error síncrono
Descripción
Esta instrucción permite controlar la reacción de la CPU ante eventos de errores sincrónicos.
Para ello se enmascaran los correspondientes eventos de errores sincrónicos (para las
máscaras de error, ver Enmascarar eventos de errores sincrónicos (Página 6049)). Llamando
a "MSK_FLT" se enmascaran los eventos de errores sincrónicos en la clase de prioridad actual.
Si en los parámetros de entrada se ajustan a "1" algunos bits de las máscaras de errores
sincrónicos, los otros bits, ya ajustados anteriormente, mantienen el valor "1". Así se obtienen
nuevas máscaras de error que pueden leerse a través de los parámetros de salida. Los
eventos de errores sincrónicos enmascarados por el usuario no llaman ningún OB, sino que
únicamente se consignan en un registro de estado de eventos. El registro de estado de
eventos puede leerse con la instrucción "READ_ERR (Página 6057)".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "MSK_FLT":
Parámetro

Declaración

Tipo de datos

Área de memoria

PRGFLT_SET_MASK

Input

DWORD

I, Q, M, D, L o constante Errores de programación que de‐
ben enmascararse

ACCFLT_SET_MASK

Input

DWORD

I, Q, M, D, L o constante Errores de acceso que deben en‐
mascararse

RET_VAL

Return

INT

I, Q, M, D, L

Programación del PLC
Manual de programación y manejo, 11/2019

Descripción

Información de error

6055

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PRGFLT_MASKED

Output

DWORD

I, Q, M, D, L

Errores de programación enmas‐
carados

ACCFLT_MASKED

Output

DWORD

I, Q, M, D, L

Errores de acceso enmascarados

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

Ninguno de los errores estaba ya enmascarado.

0001

Por lo menos uno de los errores estaba ya enmascarado; pese a ello se enmascaran los otros errores.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

DMSK_FLT: Desenmascarar eventos de error síncrono
Descripción
Esta instrucción se utiliza para desenmascarar los eventos de error enmascarados con
"MSK_FLT (Página 6055)". Para ello deben ajustarse a "1" en los parámetros de entrada los
bits correspondientes de las máscaras de error. Llamando a "DMSK_FLT" se desenmascaran
los correspondientes eventos de errores sincrónicos de la clase de prioridad actual. Al mismo
tiempo se borran las entradas consultadas en el registro de estado de eventos. Las nuevas
máscaras de error pueden leerse a través de los parámetros de salida.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DMSK_FLT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PRGFLT_
RESET_MASK

Input

DWORD

I, Q, M, D, L o constante Errores de programación que deben
desenmascararse

ACCFLT_
RESET_MASK

Input

DWORD

I, Q, M, D, L o constante Errores de acceso que deben desen‐
mascararse

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

PRGFLT_
MASKED

Output

DWORD

I, Q, M, D, L

Errores de programación todavía en‐
mascarados

ACCFLT_
MASKED

Output

DWORD

I, Q, M, D, L

Errores de acceso todavía enmascara‐
dos

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6056

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error
(W#16#...)

Descripción

0000

Se han desenmascarado todos los errores especificados.

0001

Por lo menos uno de los errores no estaba enmascarado; pese a ello se desenmascaran los otros
errores.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

READ_ERR: Leer registro de estado de eventos
Descripción
Esta instrucción permite leer el registro de estado de eventos. El registro de estado de eventos
tiene una estructura equivalente a la de las máscaras de errores de programación y acceso
que pueden programarse como parámetros de entrada con "MSK_FLT (Página 6055)" y
"DMSK_FLT (Página 6056)".
En los parámetros de entrada se especifican los eventos de errores sincrónicos que se desean
consultar en el registro de estado de eventos. Llamando "READ_ERR" se leen (y al mismo
tiempo se borran) las entradas deseadas del registro de estado de eventos.
En el registro de estado de eventos se puede averiguar cuáles de los errores sincrónicos
enmascarados se han producido al menos una vez en la clase de prioridad actual. Un bit
activado significa que el error sincrónico correspondiente ha aparecido por lo menos una vez.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "READ_ERR":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

PRGFLT_QUERY

Input

DWORD

I, Q, M, D, L o constante Consulta de los errores de programa‐
ción

ACCFLT_QUERY

Input

DWORD

I, Q, M, D, L o constante Consulta de los errores de acceso

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

PRGFLT_CLR

Output

DWORD

I, Q, M, D, L

Errores de programación que se han
producido

ACCFLT_CLR

Output

DWORD

I, Q, M, D, L

Errores de acceso que se han produci‐
do

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6057

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

Todos los errores consultados están enmascarados.

0001

Por lo menos uno de los errores consultados no está enmascarado.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Eventos de errores asíncronos
Retardar y bloquear alarmas y eventos de errores asíncronos
Finalidad de las instrucciones "DIS_IRT", "EN_IRT", "DIS_AIRT", "EN_AIRT"
Estas instrucciones se utilizan para las siguientes acciones referentes al procesamiento de
alarmas y eventos de errores asíncronos:
● Bloquear su ejecución en todos los ciclos siguientes de la CPU con "DIS_IRT
(Página 6059)", o
● Retardar clases de prioridad de mayor prioridad hasta el final del OB con "DIS_AIRT
(Página 6059)"
● Volver a habilitar la ejecución con "EN_IRT (Página 6061)" o "EN_AIRT (Página 6063)".
El procesamiento de alarmas y eventos de errores asíncronos se programa en el programa de
usuario. Para ello deben programarse los correspondientes OBs.

Ventaja de las instrucciones "DIS_AIRT" y "EN_AIRT"
Retardando eventos de alarma y de errores asíncronos de mayor prioridad con la instrucción
"DIS_AIRT (Página 6062)" y habilitándolos con la instrucción "EN_AIRT (Página 6063)" se
obtienen las siguientes ventajas para el usuario:
La CPU registra el número de retardos de alarma. Un retardo de eventos de alarma o de
errores asíncronos programado por el usuario no se puede eliminar llamando FC estándar si
en dichos FC estándar también se bloquean y vuelven a habilitar eventos de alarma y de
errores asíncronos.

Clases de alarma
Las alarmas se dividen en varias clases. La tabla siguiente contiene todas las clases de alarma
y los correspondientes OBs.

6058

Clase de alarma

OB

Alarmas horarias

De OB 10 a OB 17

Alarmas de retardo

De OB 20 a OB 23

Alarmas cíclicas

De OB 30 a OB 38

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Clase de alarma

OB

Alarmas de proceso

De OB 40 a OB 47

Alarmas para DPV1

OB 55 a OB 57

Alarma de multiprocesamiento

OB 60

Alarmas de error de redundan‐
cia

OB 70, OB 72

Alarmas de error asíncronas

OB 80 a OB 87 (ver abajo)

Alarmas de error sincrónicas

OB 121, OB 122
(Para enmascarar o desenmascarar el procesamiento de las alar‐
mas de error sincrónicas, utilice las instrucciones "MSK_FLT (Pági‐
na 6055)", "DMSK_FLT (Página 6056)" y "READ_ERR (Pági‐
na 6057)")

Eventos de errores asíncronos
La tabla siguiente contiene todos los eventos de error asíncronos ante los que se puede
reaccionar en el programa de usuario mediante un OB adecuado.
Eventos de errores asíncronos

OB

Error de tiempo (p. ej. rebase del tiempo de ciclo)

OB 80

Error de fuente de alimentación (p. ej. error de batería)

OB 81

Alarma de diagnóstico (p. ej. fusible defectuoso en un módulo de señal)

OB 82

Alarma de extracción/inserción

OB 83

Error de hardware en CPU (p. ej. error de interfaz)

OB 84

Error de ejecución del programa

OB 85

Fallo del rack

OB 86

Error de comunicación

OB 87

DIS_IRT: Bloquear evento de interrupción
Descripción
Esta instrucción permite bloquear el procesamiento de nuevos eventos de alarma y de errores
sincrónicos. Bloquear significa que el sistema operativo de la CPU, al producirse un evento de
interrupción,
● ni llama un OB de alarma o un OB de error asíncrono,
● ni desencadena la reacción definida en caso de que no haya ningún OB de alarma ni ningún
OB de error asíncrono programado.
El bloqueo del procesamiento de eventos de alarma o de errores asíncronos es válido en todas
las clases de prioridad. El bloqueo solo puede eliminarse con la instrucción "EN_IRT
(Página 6061)" o con un rearranque completo (en caliente) o un arranque en frío.

Programación del PLC
Manual de programación y manejo, 11/2019

6059

Instrucciones
4.2 Instrucciones
El hecho de que el sistema operativo registre o no el evento de alarma o de errores asíncronos
en el búfer de diagnóstico depende del parámetro de entrada MODE seleccionado.
Nota
Tenga en cuenta que al programar la instrucción "DIS_IRT" se descartan todas las alarmas
que se produzcan.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DIS_IRT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

BYTE

I, Q, M, D, L o constante Indica qué eventos de alarma y errores
asíncronos se bloquean.

OB_NR

Input

INT

I, Q, M, D, L o constante Número de OB

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecu‐
ción de la instrucción, el valor de respues‐
ta contendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro MODE
MODE
(B#16#...)

Significado

00

Se bloquean todos los eventos de alarma y errores asíncronos nuevos que se produzcan. (Los eventos de
errores sincrónicos no se bloquean.) Asigne al parámetro OB_NR el valor "0". Se siguen registrando los
eventos en el búfer de diagnóstico.

01

Se bloquean todos los eventos nuevos que se produzcan de la clase de alarma indicada. Para identificar la
clase de alarma, haga lo siguiente:
● Alarmas horarias: 10
● Alarmas de retardo: 20
● Alarmas cíclicas: 30
● Alarmas de proceso: 40
● Alarmas para DPV1: 50
● Alarma de multiprocesamiento: 60
● Alarmas de error de redundancia: 70
● Alarmas de error asíncronas: 80
Se siguen registrando los eventos en el búfer de diagnóstico.

02

Se bloquean todos los eventos nuevos que se produzcan de la alarma indicada. Para identificar la alarma se
usa el número de OB. Se siguen registrando los eventos en el búfer de diagnóstico.

80

Todos los eventos de alarma y errores asíncronos nuevos que se producen se bloquean y no se registran
en el búfer de diagnóstico. Asigne al parámetro OB_NR el valor "0". El sistema operativo registra el evento
W#16#5380 en el búfer de diagnóstico.

6060

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
MODE
(B#16#...)

Significado

81

Todos los eventos nuevos que se producen de la clase de alarma indicada se bloquean y no se registran ya
en el búfer de diagnóstico. El sistema operativo registra el evento W#16#5380 en el búfer de diagnóstico.

82

Todos los eventos nuevos que se producen de la alarma indicada se bloquean y tampoco se registran ya en
el búfer de diagnóstico. El sistema operativo registra el evento W#16#5380 en el búfer de diagnóstico.

Parámetro RET_VAL
Código de
error

Descripción

(W#16#...)
0000

No ha ocurrido ningún error.

8090

El parámetro de entrada OB_NR contiene un valor no permitido.

8091

El parámetro de entrada MODE contiene un valor no permitido.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

EN_IRT: Habilitar evento de interrupción
Descripción
La instrucción permite habilitar el procesamiento de nuevos eventos de alarma y errores
asíncronos que se ha bloqueado anteriormente con la instrucción "DIS_IRT (Página 6059)".
Habilitar significa que el sistema operativo de la CPU, al producirse un evento de interrupción,
● lama un OB de alarma o un OB de error asíncrono
o
● dispara la reacción definida en caso de que no haya ningún OB de alarma ni ningún OB de
error asíncrono programado.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "EN_IRT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

BYTE

I, Q, M, D, L o constante Indica qué eventos de alarma y errores
asíncronos se habilitan (ver abajo).

OB_NR

Input

INT

I, Q, M, D, L o constante Número de OB

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la eje‐
cución de la instrucción, el valor de res‐
puesta contendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6061

Instrucciones
4.2 Instrucciones

Parámetro MODE
MODE

Significado

0

Se habilitan todos los eventos de alarma y errores asíncronos nuevos que se produzcan.

1

Se habilitan todos los eventos nuevos que se produzcan de la clase de alarma indicada. Para identificar la clase
de alarma, haga lo siguiente:
● Alarmas horarias: 10
● Alarmas de retardo: 20
● Alarmas cíclicas: 30
● Alarmas de proceso: 40
● Alarmas para DPV1: 50
● Alarma de multiprocesamiento: 60
● Alarmas de error de redundancia: 70
● Alarmas de error asíncronas: 80

2

Se habilitan todos los eventos nuevos que se produzcan de la alarma indicada. Para identificar la alarma se usa
el número de OB.

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

No ha ocurrido ningún error.

8090

El parámetro de entrada OB_NR contiene un valor no permitido.

8091

El parámetro de entrada MODE contiene un valor no permitido.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

DIS_AIRT: Retardar tratamiento de eventos de alarma y errores asíncronos de mayor prioridad
Descripción
Esta instrucción permite retardar el procesamiento de OBs de alarma y OBs de errores
asíncronos cuya prioridad sea mayor que la del OB actual. La instrucción "DIS_AIRT" puede
llamarse varias veces en un OB. El sistema operativo cuenta las llamadas a la instrucción. El
retardo de procesamiento se aplica hasta que, usando la instrucción "EN_AIRT
(Página 6063)", se eliminan todos los retardos de procesamiento de OBs de alarma y OBs de
errores asíncronos definidos con "DIS_AIRT", o acaba de procesarse el OB actual.
Los eventos de alarma o de errores asíncronos pendientes se procesan en cuanto se elimina
el retardo de procesamiento con la instrucción "EN_AIRT (Página 6063)" o finaliza el
procesamiento del OB actual.

6062

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DIS_AIRT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RET_VAL

Return

INT

I, Q, M, D, L

Número de retardos (= número de llama‐
das de DIS_AIRT)

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
La tabla siguiente contiene el valor de retorno de "DIS_AIRT", que se devuelve a través del
parámetro RET_VAL .
Valor de retorno

Descripción

n

"Una vez finalizada la instrucción, n" muestra el número de retardos de procesamiento, es decir, de
llamadas de "DIS_AIRT" (el procesamiento de alarmas vuelve a habilitarse cuando n = 0; ver "EN_AIRT
(Página 6063)").

EN_AIRT: Habilitar tratamiento de eventos de alarma y errores asíncronos de mayor prioridad
Descripción
La instrucción permite habilitar el procesamiento de eventos de alarma y errores asíncronos de
mayor prioridad que se ha retardado anteriormente con la instrucción "DIS_IRT
(Página 6062)". Para ello deben finalizarse uno por uno todos los retardos de procesamiento
con la instrucción "EN_AIRT".

Ejemplo
Si p. ej. se han retardado alarmas 5 veces con 5 llamadas de "DIS_AIRT (Página 6062)", para
eliminar todos esos retardos deben usarse 5 llamadas a "EN_AIRT".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "EN_AIRT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RET_VAL

Return

INT

I, Q, M, D, L

Número de retardos todavía programa‐
dos después de la ejecución de
"EN_AIRT" o aviso de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6063

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Para saber cómo evaluar la información de error del parámetro RET_VAL , consulte el
capítulo Evaluación de errores con el parámetro de salida RET_VAL (Página 174). En ese
capítulo encontrará también la información general de error de las instrucciones. La tabla
siguiente contiene el valor de retorno específico de "EN_AIRT", o la información de error que
puede devolverse a través del parámetro RET_VAL .
Valor de retorno y error

Descripción

n

"Una vez finalizada la instrucción, n" muestra el número de retardos de procesamiento, es
decir, de llamadas de "EN_AIRT" (el procesamiento de alarmas vuelve a habilitarse cuando
n = 0).

W#16#8080

Aunque el procesamiento de la alarma ya se ha habilitado anteriormente, se ha llamado
"EN_AIRT".

Evento de multiprocesamiento
MP_ALM: Alarma de multiprocesamiento
Descripción
En el modo de multiprocesamiento, la llamada a esta instrucción dispara la alarma de
multiprocesamiento. Esto da lugar al inicio sincronizado del OB 60 en todas las CPUs
correspondientes. En el modo monoprocesador y en el funcionamiento en rack segmentado,
el OB 60 solo se inicia en la CPU en la que se ha llamado la instrucción.
Con el parámetro de entrada JOB puede identificarse la causa de la alarma de
multiprocesamiento deseada. Esta identificación de petición se transfiere a todas las CPUs
correspondientes y puede evaluarse en el OB de multiprocesamiento (OB 60).
Esta instrucción puede llamarse en cualquier punto del programa. Sin embargo, la llamada
solo tiene sentido en el estado operativo RUN, por lo que en el estado operativo ARRANQUE
está bloqueada. Esto se notifica mediante un valor de función.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "MP_ALM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

JOB

Input

BYTE

I, Q, M, D, L o constante Identificador de petición
Valores posibles: de 1 a 15

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la eje‐
cución de la instrucción, el valor de res‐
puesta contendrá un código de error.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6064

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8090

El parámetro de entrada JOBcontiene un valor no permitido.

80A0

El procesamiento del OB 60 de la alarma de multiprocesamiento anterior todavía no ha finalizado en la
CPU propia o en otra CPU.

80A1

Estado operativo erróneo (ARRANQUE en lugar de RUN)

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

4.2.3.8

Avisos

Formato de los datos de diagnóstico
Registros 0 y 1 de los datos del sistema
Los datos de diagnóstico de un módulo se encuentran en los registros 0 y 1 del área de datos
del sistema (ver Escribir y leer registros (Página 6026)):
● El registro 0 contiene 4 bytes de datos de diagnóstico, que describen el estado actual de un
módulo de señal.
● El registro 1 contiene
– los 4 bytes de datos de dispositivo que también se encuentran en el registro 0, y
– los datos de diagnóstico específicos de módulo.

Formato y contenido de los datos de diagnóstico
A continuación se describen el formato y el contenido de los distintos bytes de los datos de
diagnóstico. Se aplica la siguiente regla general: Cuando se produce un error, el bit
correspondiente se ajusta a "1".
Byte

Bit

Significado

0

0

Fallo de módulo

1

Error interno

2

Error externo

3

Existe error de canal

4

Falta tensión auxiliar externa

5

Falta conector frontal

6

Falta parametrización

7

Parámetros erróneos en el módulo

Programación del PLC
Manual de programación y manejo, 11/2019

Observación

Registro
0y1

6065

Instrucciones
4.2 Instrucciones
Byte

Bit

Significado

Observación

Registro

1

0

Clase de módulo

0101: Módulo analógico

0y1

a

0000: CPU

3

1000: Módulo de función
1100: CP
1111: Módulo digital
0011: Esclavo DP normalizado
1011: Esclavo I
0100: IM

2

4

Existe información de canal

5

Existe información de usuario

6

Alarma de diagnóstico de sustituto

7

Mantenimiento necesario (solo con PROFI‐
NET IO)

0

Módulo de memoria erróneo o ausente

1

Fallo de comunicación

2

Estado operativo

0y1
0: RUN
1: STOP

3

6066

3

La vigilancia del tiempo de ciclo se ha dis‐
parado

4

Fallo de la tensión de alimentación interna
del módulo

5

Batería vacía

6

Fallo de todo el respaldo

7

Mantenimiento solicitado (solo con PROFI‐
NET IO)

0

Fallo de aparato de ampliación

1

Fallo de procesador

2

Error de EPROM

3

Error de RAM

4

Error de ADU/DAU

5

Fallo de fusible

6

Alarma de proceso perdida

7

Reservado

0y1

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Byte

Bit

Significado

Observación

Registro

4

0

Tipo de canal

B#16#70: Entrada digital

1

a

B#16#72: Salida digital

6

B#16#71: Entrada analógica
B#16#73: Salida analógica
B#16#74: FM-POS
B#16#75: FM-REG
B#16#76: FM-ZAEHL
B#16#77: FM-TECHNO
B#16#78: FM-NCU
B#16#79: a
B#16#7D: reservado
B#16#7E: US300
B#16#7F: reservado

7

¿Existe otro tipo de canal?

0: No

0

Número de bits de diagnóstico que un mó‐
dulo devuelve por canal.

El número de bits de diagnóstico por canal
se redondea a los límites de byte.

Número de canales del mismo tipo en un
módulo

Si en un módulo existen diferentes tipos de 1
canales, para cada tipo de canal se repite
la estructura a partir del byte 4 en el regis‐
tro 1.
Primer byte del vector de error de canal (la 1
longitud del vector de error de canal se de‐
fine en función del número de canal y se
redondea a los límites de byte.)

1: Sí
5

a

1

7
6

0
a
7

7

...

0

Error de canal, canal 0/grupo de canales 0

1

Error de canal, canal 1/grupo de canales 1

2

Error de canal, canal 2/grupo de canales 2

3

Error de canal, canal 3/grupo de canales 3

4

Error de canal, canal 4/grupo de canales 4

5

Error de canal, canal 5/grupo de canales 5

6

Error de canal, canal 6/grupo de canales 6

7

Error de canal, canal 7/grupo de canales 7

-

Errores específicos de canal (ver Formato
de los datos de diagnóstico específicos de
canal (Página 6067) ):

1

Formato de los datos de diagnóstico específicos de canal
Errores específicos de canal
A partir del byte que se encuentra justo a continuación del vector de error de canal, se
muestran los errores específicos de canal para cada canal del módulo. A continuación se
muestra el formato del diagnóstico específico de canal para los distintos tipos de canal. Para
la asignación de bits se aplica la siguiente regla:
● 1 = error
● 0 = sin error

Programación del PLC
Manual de programación y manejo, 11/2019

6067

Instrucciones
4.2 Instrucciones

Canal de entrada analógica
Byte de diagnóstico para un canal de entrada analógica
Bit

Significado

Observación

0

Error de configuración/parame‐ Notificable mediante WR_USMSG (Página 6100) y
trización
EVENTN = W#16#8x50

1

Error síncrono (error modo co‐
mún)

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x51

2

Cortocircuito P

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x52

3

Cortocircuito M

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x53

4

Rotura de hilo

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x54

5

Error en canal de referencia

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x55

6

Rebase por defecto del rango
de medición

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x56

7

Rebase por exceso del rango
de medición

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x57

Canal de salida analógica
Byte de diagnóstico para un canal de salida analógica

6068

Bit

Significado

0

Error de configuración/parametri‐ Notificable mediante WR_USMSG (Página 6100) y
zación
EVENTN = W#16#8x60

Observación

1

Error síncrono (error modo co‐
mún)

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x61

2

Cortocircuito P

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x62

3

Cortocircuito M

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x63

4

Rotura de hilo

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x64

5

0

Reservado

6

Falta tensión de carga

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x66

7

0

Reservado

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Canal de entrada digital
Byte de diagnóstico para un canal de entrada digital
Bit

Significado

Observación

0

Error de configuración/parametri‐ Notificable mediante WR_USMSG (Página 6100) y
zación
EVENTN = W#16#8x70

1

Defecto a masa

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x71

2

Cortocircuito P (sensor)

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x72

3

Cortocircuito M

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x73

4

Rotura de hilo

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x74

5

Falta alimentación del sensor

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x75

6

0

Reservado

7

0

Reservado

Canal de salida digital
Byte de diagnóstico para un canal de salida digital
Bit

Significado

Observación

0

Error de configuración/parametri‐
zación

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x80

1

Defecto a masa

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x81

2

Cortocircuito P

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x82

3

Cortocircuito M

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x83

4

Rotura de hilo

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x84

5

Actuación fusible

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x85

6

Falta tensión de carga

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x86

7

Sobretemperatura

Notificable mediante WR_USMSG (Página 6100) y
EVENTN = W#16#8x87

Programación del PLC
Manual de programación y manejo, 11/2019

6069

Instrucciones
4.2 Instrucciones

Instrucciones para generar avisos de PLC con DB de instancia
Introducción a la creación de avisos de PLC con instrucciones
Instrucciones para generar avisos de bloque
Para generar un aviso de PLC, se debe llamar en el programa una de las siguientes
instrucciones:
● "NOTIFY (Página 6080)"
● "NOTIFY_8P (Página 6073)"
● "ALARM (Página 6083)"
● "ALARM_8 (Página 6075)"
● "ALARM_8P (Página 6077)"
Estas instrucciones tienen las siguientes características:
● Con "NOTIFY (Página 6080)" y "NOTIFY_8P (Página 6073)", todo cambio de señal 0 -> 1
ó 1 > 0 detectado en la llamada da lugar al envío de un aviso.
● En el caso de "ALARM (Página 6083)", "ALARM_8 (Página 6075)" y "ALARM_8P
(Página 6077)", si la notificación controlada por confirmación (acuse) está inactiva, todo
cambio de señal detectado en la llamada dará lugar a un aviso.
Sin embargo, si la notificación controlada por confirmación está activada, no todos los
cambios de señal detectados darán lugar a un aviso (más detalles abajo). En este caso, el
visor de avisos no mostrará el aviso enviado.
● Después de la ejecución del bloque, los valores asociados (entradas SD_i) se han leído en
su totalidad y se han asociado al aviso (ver "Parámetros de envío y recepción"
en Parámetros comunes de las instrucciones para la comunicación S7 (Página 6833)).
En lo referente a la coherencia respecto a clases de mayor prioridad, se aplica a los valores
asociados lo siguiente: Todo valor asociado SD_i es coherente en sí mismo.
● Con los parámetros de estado DONE, ERROR y STATUS se vigila el estado de
procesamiento del bloque (ver "Parámetros de estado" en Parámetros comunes de las
instrucciones para la comunicación S7 (Página 6833)).
Nota
Los parámetros ID y EV_ID solo se evalúan en la primera llamada del bloque (los
parámetros actuales o los valores predefinidos de la instancia).

Registros de visualizadores
Para que las instrucciones para generar avisos de PLC envíen un aviso al detectar un cambio
de señal, es necesario que haya por lo menos un visualizador registrado para avisos de PLC.
Si no hay ninguno registrado, el parámetro STATUS devuelve el valor "1".

6070

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Detección de cambio de señal
Por cada instancia de una instrucción de aviso, está disponible una memoria de avisos con dos
2 espacios de memoria.
Inicialmente, esta memoria de avisos está vacía. En cuanto la instrucción detecta un cambio
de señal en la entrada SIG o en una de las entradas SIG_1, ... SIG_8, se registra el cambio en
el primer espacio de memoria. Este espacio está ocupado hasta que se envía el aviso
correspondiente.
El siguiente cambio de señal detectado en la entrada SIG o en una de las entradas SIG_1, ...
SIG_8 se registra en el segundo espacio de memoria. Si el primer espacio de memoria todavía
está ocupado y se producen nuevos cambios de señal, se sobrescribe siempre el segundo
espacio de memoria.
Esta pérdida de avisos se notifica mediante los parámetros de salida ERROR y STATUS
(ERROR=0, STATUS=11). Además, los dispositivos de visualización registrados reciben una
notificación al respecto en cuanto puede enviarse el siguiente aviso.
Si el primer espacio de memoria queda libre, el segundo espacio de memoria se transfiere al
primero. De este modo, el segundo espacio de memoria vuelve a quedar libre.

Notificación controlada por acuse
Para reducir el volumen de avisos en la instalación, pueden usarse las instrucciones "ALARM
(Página 6083)", "ALARM_8 (Página 6075)" y "ALARM_8P (Página 6077)", que soportan el
procedimiento de notificación controlada por acuse.
En este procedimiento, después de generarse un aviso entrante (cambio de señal de 0 a 1)
para una señal, no se vuelven a generar avisos para la misma señal hasta que el usuario haya
acusado el primero en un visualizador. El siguiente aviso que se muestra en el visualizador
después del acuse es un aviso saliente (cambio de señal de 1 a 0). A continuación se inicia de
nuevo el ciclo de aviso con un aviso entrante (cambio de señal de 0 a 1), que debe acusarse.
De este modo se pueden controlar a través del visualizador los avisos provocados por cambio
de señal (excepto el aviso saliente).
El procedimiento de notificación (notificación controlada por acuse activa o inactiva) para las
instrucciones "ALARM (Página 6083)", "ALARM_8 (Página 6075)" y "ALARM_8P
(Página 6077)" se define para toda la CPU en la configuración.
Para que la evaluación de avisos sea uniforme dentro de una instalación, en caso de utilizarse
el procedimiento de notificación controlada por acuse, debe comprobarse que todos los
visualizadores soporten este procedimiento.
Nota
(Sobre el uso de visualizadores que no soportan la notificación controlada por acuse.)
Si se ha activado en la CPU la notificación controlada por acuse, la CPU envía los avisos solo
a aquellos visualizadores que soportan este procedimiento. Por lo tanto, si no hay ningún
visualizador que soporte la notificación controlada por acuse, la CPU no envía ningún aviso.
Esto se notifica una sola vez con ERROR=1 y STATUS=1.

Programación del PLC
Manual de programación y manejo, 11/2019

6071

Instrucciones
4.2 Instrucciones

Acuse de aviso con las instrucciones "ALARM", "ALARM_8" y "ALARM_8P"
Se aplica el concepto de confirmación (acuse) centralizado, es decir, cuando se ha confirmado
un aviso en un visualizador, esta información de confirmación se envía en primer lugar a la
CPU que ha generado el aviso. Desde allí se distribuye la información de acuse a todos los
visualizadores registrados al efecto.
Siempre se acusa una señal, y no un aviso individual. Si p. ej se han notificado varios flancos
ascendentes de una señal y se acusa el evento entrante, todos los eventos entrantes
anteriores con el mismo número de aviso se consideran acusados.

Indicador de acuse
Las instrucciones "NOTIFY (Página 6080)" y "NOTIFY_8P (Página 6073)" no poseen indicador
de acuse. Con "ALARM (Página 6083)" se puede conocer el estado de acuse a través de los
parámetros de salida ACK_UP y ACK_DN, con "ALARM_8P (Página 6077)" y "ALARM_8
(Página 6075)", a través del parámetro de salida ACK_STATE. Estas salidas se actualizan en
el momento de la llamada del bloque, en caso de que el parámetro de control EN_R tenga el
valor "1".

Bloquear y habilitar avisos mediante instrucción o dispositivo de visualización
Puede ser útil suprimir avisos, p. ej. cuando se realizan modificaciones estructurales de la
instalación. Por ello existe la posibilidad de bloquear y volver a habilitar avisos desde el
dispositivo de visualización o desde el programa. El bloqueo/habilitación es válido para todos
los dispositivos que se han registrado para el aviso en cuestión. Permanece vigente hasta que
se vuelve a habilitar el aviso correspondiente.
Si se han bloqueado avisos, esto se notifica a través de los parámetros de salida ERROR y
STATUS (ERROR = 1, STATUS = 21).

Espacio requerido en memoria de trabajo por las instrucciones para generar avisos de bloque
Las instrucciones para generar avisos de PLC requieren, para funcionar sin problemas, un
búfer de datos de comunicación dependiente de los valores asociados en la memoria de
trabajo de la CPU (área de código). El espacio ocupado en la memoria se indica en la tabla
siguiente.

6072

Instrucción

Espacio en bytes requerido en la memoria de trabajo de la CPU

NOTIFY

200 + 2 * longitud de los valores asociados indicados en la primera llamada en
SD_1,...SD_10

NOTIFY_8P

200 + 2 * longitud de los valores asociados indicados en la primera llamada en
SD_1,...SD_10

ALARM

200 + 2 * longitud de los valores asociados indicados en la primera llamada en
SD_1,...SD_10

ALARM_8

100

ALARM_8P

200 + 2 * longitud de los valores asociados indicados en la primera llamada en
SD_1,...SD_10

AR_SEND

54

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Número de datos transmisibles
El número de datos transmisibles a través de los valores asociados SD_i de las instrucciones
"NOTIFY (Página 6080)", "NOTIFY_8P (Página 6073)", "ALARM (Página 6083)" y
"ALARM_8P (Página 6077)" no debe superar una determinada longitud máxima. Esta longitud
de datos máxima se calcula de la siguiente manera:
longmax =
mín (pdu_local, pdu_remota) - dif - 4 * número de parámetros SD_i utilizados
Donde:
● mín (pdu_local, pdu_remota) es el valor mínimo de los números pdu_local y pdu_remota
● pdu_local es la longitud máxima de los bloques de datos de la CPU propia (ver datos
técnicos de la CPU utilizada)
● pdu_remota es la longitud máxima de los bloques de datos de los visualizadores
● dif = 48 si está activa la notificación controlada por acuse; 44 si está inactiva

Ejemplo
Supongamos que una CPU 414-2 envía avisos a HMI a través de Industrial Ethernet. La
notificación controlada por acuse está inactiva.
Se utilizan los valores asociados SD_1, SD_2 y SD_3.
pdu_local = 480 bytes, pdu_remota = 480 bytes,
Número de parámetros SD_i utilizados: 3
Se aplica lo siguiente:
longmax = min (480, 480) - 44 - 4 * 3 = 480 - 44 - 12 = 424
Por lo tanto, la longitud de datos máxima transmisible por instrucción es de 424 bytes.

NOTIFY_8P: Notificar hasta ocho cambios de señal
Descripción
La instrucción "NOTIFY_8P" es la ampliación de "NOTIFY (Página 6080)" a ocho señales.
Se genera un aviso cuando se ha detectado un cambio de señal en por lo menos una señal.
En la primera llamada de "NOTIFY_8P" se genera siempre un aviso. Para las ocho señales
existe un número de aviso común, que se divide en ocho avisos parciales en el visualizador.
Por cada instancia de "NOTIFY_8P" está disponible una memoria de avisos con 2 espacios de
memoria. Para más detalles sobre el almacenamiento intermedio de cambios de señal, ver la
sección Introducción a la creación de avisos de PLC con instrucciones (Página 6070).
Nota
A pesar de la pérdida de aviso, se notifican al visualizador los dos últimos cambios de cada
señal.

Programación del PLC
Manual de programación y manejo, 11/2019

6073

Instrucciones
4.2 Instrucciones
ADVERTENCIA
Llamada de "NOTIFY_8P"
Antes de llamar "NOTIFY_8P" en un sistema de automatización, debe comprobarse que
todos los visualizadores soporten ese bloque. Si no se tiene en cuenta esto, se interrumpirá
la comunicación entre el sistema de automatización y los visualizadores conectados. En
consecuencia, no se podrá acceder a la instalación con los visualizadores conectados.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "NOTIFY_8P":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

SIG_i,

Input

BOOL

I, Q, M, D, L

Señal con el número ordinal i que se debe
vigilar

ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Canal de datos para avisos: W#16#EEEE
ID solo se evalúa en la primera llamada.

EV_ID

Input

C_NOTIFY_8P

I, Q, M, D, L

Número de aviso (no permitido: 0)
EV_ID solo se evalúa en la primera llamada.
Tras ello, en cada llamada de "NOTIFY_8P"
con el DB de instancia correspondiente, se
utiliza el mismo número de aviso que en la
primera llamada.

1≤i≤8

El número de aviso se asigna automática‐
mente. Con ello se garantiza la coherencia
de los números de aviso. El número de aviso
debe ser unívoco dentro del programa de
usuario.
SEVERITY

Input

WORD

I, Q, M, D, L o cons‐
tante

Peso del evento
Valores posibles: De 0 a 127 (el valor 0 re‐
presenta el peso máximo);
valor predeterminado: 64
Este parámetro no es relevante para el pro‐
cesamiento del aviso.

DONE

Output

BOOL

I, Q, M, D, L

Parámetro de estado DONE: Ha finalizado
la generación del aviso.

ERROR

Output

BOOL

I, Q, M, D, L

El parámetro de estado ERROR:
ERROR=TRUE significa que se ha produci‐
do un error durante el procesamiento. Para
más detalles, véase el parámetro STATUS.

STATUS

Output

WORD

I, Q, M, D, L

Parámetro de estado STATUS: Ver una in‐
formación de error

SD_i,

InOut

ANY

I, Q, M, D, T, C

Valor asociado con número ordinal i

1 ≤ i ≤ 10

Solo se permiten los tipos de datos BOOL
(no permitido: mapa de bits), BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME, S5TIME, DATE_AND_TIME
Nota: Si el puntero ANY accede a un DB,
este siempre debe especificarse.
(p. ej.: P# DB10.DBX5.0 byte 10)

6074

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros ERROR y STATUS
La siguiente tabla contiene toda la información de los errores específicos de "NOTIFY_8P",
que puede indicarse a través de los parámetros ERROR y STATUS .
ERROR

STATUS (de‐
cimal)

Explicación

0

11

Pérdida de aviso: El cambio de señal precedente o el aviso precedente no se ha podido enviar
y se sustituye por el aviso actual.

0

22

● Error en el puntero a los valores asociados SD_i:
–

Referente a la longitud de datos o al tipo de datos

–

No se puede acceder a los valores asociados en la memoria del usuario, p. ej. debido
a que se ha borrado un DB o a un error de longitud de área

–

El aviso activado se envía sin valores asociados o solo con el número de valores
asociados posible en el momento.

● El parámetro actual seleccionado de SEVERITY se encuentra por encima del rango
admisible. El aviso activado se envía con SEVERITY=127.
0

25

La comunicación se ha iniciado. El aviso se está procesando.

1

1

Problemas de comunicación: La conexión se ha interrumpido o no hay registro

1

4

En la primera llamada
● la EV_ID indicada se encuentra fuera del rango admisible
● existe un error formal del puntero ANY SD_i
● se ha rebasado el área de memoria máxima transmisible para la CPU por cada
"NOTIFY_8P"

1

10

El acceso a la memoria de usuario local no es posible (p. ej. acceso a un DB borrado)

1

12

En la llamada de la instrucción ha ocurrido lo siguiente:
● Se ha indicado un DB de instancia que no pertenece a "NOTIFY_8P"
● No se ha indicado ningún DB de instancia, sino un DB global

1

18

EV_ID ya ha sido utilizado por una de las instrucciones "NOTIFY (Página 6080)", "NO‐
TIFY_8P", "ALARM (Página 6083)", "ALARM_8 (Página 6075)" o "ALARM_8P (Página 6077)".

1

20

La memoria de trabajo disponible no es suficiente.

1

21

El aviso con la EV_ID indicada está bloqueado.

Consulte también
Crear avisos de programa (Página 8326)

ALARM_8: Generar avisos PLC sin valores asociados para ocho señales
Descripción
A excepción de la ausencia de los valores asociados SD_1, ..., SD_10, esta instrucción es
idéntica a NOTIFY_8P (Página 6073).
Programación del PLC
Manual de programación y manejo, 11/2019

6075

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ALARM_8":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

EN_R

Input

BOOL

I, Q, M, D, L

Parámetro de control enabled to receive,
con el cual, al llamar el bloque, la salida
ACK_STATE se actualiza (EN_R=1) o no
se actualiza (EN_R=0).

SIG_i,

Input

BOOL

I, Q, M, D, L

Señal con el número ordinal i que se debe
vigilar

ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Canal de datos para avisos: W#16#EEEE
ID solo se evalúa en la primera llamada.

EV_ID

Input

C_ALARM_8

I, Q, M, D, L

Número de aviso (no permitido: 0) EV_ID
solo se evalúa en la primera llamada. Tras
ello, en cada llamada de "ALARM_8" con el
DB de instancia correspondiente, se utiliza
el mismo número de aviso que en la primera
llamada.

1≤i ≤8

El número de aviso se asigna automática‐
mente. Con ello se garantiza la coherencia
de los números de aviso. El número de aviso
debe ser unívoco dentro del programa de
usuario.
SEVERITY

Input

WORD

I, Q, M, D, L o cons‐
tante

Peso del evento

Parámetro de estado DONE:

Valores posibles: De 0 a 127 (el valor 0 sig‐
nifica el peso máximo)
Este parámetro no es relevante para el pro‐
cesamiento del aviso.

DONE

Output

BOOL

I, Q, M, D, L

ERROR

Output

BOOL

I, Q, M, D, L

El parámetro de estado ERROR:
ERROR=TRUE significa que se ha produci‐
do un error durante el procesamiento. Para
más detalles, véase el parámetro STATUS.

STATUS

Output

WORD

I, Q, M, D, L

Parámetro de estado STATUS: Ver una in‐
formación de error

ACK_STATE

Output

WORD

I, Q, M, D, L

Mapa de bits con el estado de acuse actual
de los ocho avisos (1: Evento acusado, 0:
Evento no acusado):

Ha finalizado la generación del aviso.

● Los bits de 0 a 7 se reproducen en el
evento entrante en SIG_1 a SIG_8
● Los bits de 8 a 15 se reproducen en el
evento saliente en SIG_1 a SIG_8
● Estado de inicialización: W#16#FFFF,
es decir, se han acusado todos los
eventos entrantes y salientes

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6076

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros ERROR y STATUS
La siguiente tabla contiene toda la información de error específica de la instrucción "ALARM_8"
que puede indicarse a través de los parámetros ERROR y STATUS .
ERROR

STATUS
(decimal)

Explicación

0

11

Pérdida de aviso: El cambio de señal precedente o el aviso precedente no se ha podido enviar
y se sustituye por el aviso actual.

0

22

El parámetro actual seleccionado de SEVERITY se encuentra por encima del rango admisible.
El aviso activado se envía con SEVERITY=127.

0

25

La comunicación se ha iniciado. El aviso se está procesando.

1

1

Problemas de comunicación: La conexión se ha interrumpido o no hay registro
Si está activada la notificación controlada por acuse: Indicación temporal, si no existen visuali‐
zadores que soporten la notificación controlada por acuse

1

4

En la primera llamada, la EV_ID indicada se encuentra fuera del rango admisible.

1

10

El acceso a la memoria de usuario local no es posible (p. ej. acceso a un DB borrado)

1

12

En la llamada de la instrucción ha ocurrido lo siguiente:
● Se ha indicado un DB de instancia que no pertenece a "ALARM_8"
● No se ha indicado ningún DB de instancia, sino un DB global

1

18

EV_ID ya ha sido utilizado por una de las instrucciones "NOTIFY (Página 6080)", "NOTIFY_8P
(Página 6073)", "ALARM (Página 6083)", "ALARM_8" o "ALARM_8P (Página 6077)".

1

20

La memoria de trabajo disponible no es suficiente.

1

21

El aviso con la EV_ID indicada está bloqueado.

Nota
Después de la primera llamada, todos los bits de la salida ACK_STATE están activados, y los
valores anteriores de las entradas SIG_i, 1 ≤ i ≤ 8 se ponen a 0.

Consulte también
Crear avisos de programa (Página 8326)

ALARM_8P: Generar avisos PLC con valores asociados para ocho señales
Descripción
Esta instrucción es la ampliación de "ALARM (Página 6083)" a ocho señales.
Si no está activada la notificación controlada por acuse, se genera siempre un aviso cuando se
detecta un cambio de señal en por lo menos una señal (excepción: En la primera llamada se
genera siempre un aviso). Para las ocho señales existe un número de aviso común, que se
divide en ocho avisos parciales en el visualizador. Puede acusarse por separado cada uno de
los avisos parciales, o bien varios avisos parciales al mismo tiempo.
Mediante el parámetro de salida ACK_STATE puede seguir procesándose el estado de acuse
de los distintos avisos en el programa. Si se bloquea o habilita un aviso de una instrucción

Programación del PLC
Manual de programación y manejo, 11/2019

6077

Instrucciones
4.2 Instrucciones
"ALARM_8P", esto afecta siempre a toda la instrucción "ALARM_8P". No es posible bloquear
o habilitar señales individualmente.
Por cada instancia de "ALARM_8P" está disponible una memoria de avisos con dos espacios
de memoria. Para más detalles sobre el almacenamiento intermedio de cambios de señal, ver
la sección Introducción a la creación de avisos de PLC con instrucciones (Página 6070).

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ALARM_8P":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

EN_R

Input

BOOL

I, Q, M, D, L

Parámetro de control enabled to receive,
con el cual, al llamar el bloque, la salida
ACK_STATE se actualiza (EN_R=1) o no
se actualiza (EN_R=0).

SIG_i,

Input

BOOL

I, Q, M, D, L

Señal con el número ordinal i que se debe
vigilar

ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Canal de datos para avisos: W#16#EEEE
ID solo se evalúa en la primera llamada.

EV_ID

Input

C_ALARM_8P

I, Q, M, D, L

Número de aviso (no permitido: 0); EV_ID
solo se evalúa en la primera llamada. Tras
ello, en cada llamada de "ALARM_8P" con
el DB de instancia correspondiente, se utili‐
za el mismo número de aviso que en la pri‐
mera llamada.

1≤i ≤8

El número de aviso se asigna automática‐
mente. Con ello se garantiza la coherencia
de los números de aviso. El número de aviso
debe ser unívoco dentro del programa de
usuario.
SEVERITY

DONE

Input

Output

WORD

BOOL

I, Q, M, D, L o cons‐
tante

I, Q, M, D, L

Peso del evento
Valores posibles: De 0 a 127 (el valor 0 sig‐
nifica el peso máximo)
Este parámetro no es relevante para el pro‐
cesamiento del aviso.
Parámetro de estado DONE:
Ha finalizado la generación del aviso.

ERROR

Output

BOOL

I, Q, M, D, L

El parámetro de estado ERROR
ERROR=TRUE significa que se ha produci‐
do un error durante el procesamiento. Para
más detalles, véase el parámetro STATUS.

STATUS

Output

WORD

I, Q, M, D, L

Parámetro de estado STATUS: Ver una in‐
formación de error

6078

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

ACK_STATE

Output

WORD

I, Q, M, D, L

Mapa de bits con el estado de acuse actual
de los ocho avisos (1: Evento acusado, 0:
Evento no acusado):
● Los bits de 0 a 7 se reproducen en el
evento entrante en SIG_1 a SIG_7
● Los bits de 8 a 15 se reproducen en el
evento saliente en SIG_1 a SIG_7
● Estado de inicialización: W#16#FFFF,
es decir, se han acusado todos los
eventos entrantes y salientes

SD_j,

InOut

ANY

1≤ j ≤10

I, Q, M, D, T, C

Valor asociado con número ordinal j
Los valores asociados son válidos para to‐
dos los avisos. Solo se permiten los tipos de
datos BOOL (no permitido: mapa de bits),
BYTE, CHAR, WORD, INT, DWORD, DINT,
REAL, DATE, TOD, TIME, S5TIME, DA‐
TE_AND_TIME.
Nota: Si el puntero ANY accede a un DB,
éste siempre debe especificarse (por ej.:
P# DB10.DBX5.0 byte 10).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetros ERROR y STATUS
La siguiente tabla contiene toda la información de error específica de la instrucción
"ALARM_8P" que puede indicarse a través de los parámetros ERRORy STATUS.
ERROR

STATUS

Explicación

(decimal)
0

11

Pérdida de aviso: El cambio de señal precedente o el aviso precedente no se ha podido enviar
y se sustituye por el aviso actual.

0

22

● Error en el puntero a los valores asociados SD_i:
–

Referente a la longitud de datos o al tipo de datos

–

No se puede acceder a los valores asociados en la memoria del usuario, p. ej. debido a
que se ha borrado un DB o a un error de longitud de área

–

El aviso activado se envía sin valores asociados.

● El parámetro actual seleccionado de SEVERITY se encuentra por encima del rango
admisible. El aviso activado se envía con SEVERITY=127 .
0

25

La comunicación se ha iniciado. El aviso se está procesando.

1

1

Problemas de comunicación: La conexión se ha interrumpido o no hay registro.
Si está activada la notificación controlada por acuse: Indicación temporal, si no existen visuali‐
zadores que soporten la notificación controlada por acuse.

Programación del PLC
Manual de programación y manejo, 11/2019

6079

Instrucciones
4.2 Instrucciones
ERROR

STATUS

Explicación

(decimal)
1

4

En la primera llamada:
● La EV_ID indicada se encuentra fuera del rango admisible.
● Existe un error formal del puntero ANY SD_i .
● Se ha rebasado el área de memoria máxima transmisible para la CPU por cada "ALARM_8P".

1

10

El acceso a la memoria de usuario local no es posible (p. ej. acceso a un DB borrado)

1

12

Al llamar la instrucción
● se ha indicado un DB de instancia que no pertenece a "ALARM_8P".
● no se ha indicado ningún DB de instancia, sino un DB global

1

18

EV_ID ya ha sido utilizado por una de las instrucciones "NOTIFY (Página 6080)", "NOTIFY_8P
(Página 6073)", "ALARM (Página 6083)", "ALARM_8 (Página 6075)" o "ALARM_8P".

1

20

La memoria de trabajo disponible no es suficiente.

1

21

El aviso con la EV_ID indicada está bloqueado.

Nota
Después de la primera llamada, todos los bits de la salida ACK_STATEestán activados, y se
adoptan los valores anteriores "0" de las entradas SIG_i, 1< i < 8.

Consulte también
Crear avisos de programa (Página 8326)

NOTIFY: Notificar un cambio de señal
Descripción
La instrucción vigila una señal. Tanto con flanco ascendente (evento entrante) como con flanco
descendente (aviso saliente), genera un aviso al cual pueden adjuntarse hasta diez valores
asociados. El aviso se envía a todos los dispositivos registrados al efecto. En la primera
llamada se envía un aviso con el estado de señal actual.
Los valores asociados se captan en el momento de la evaluación de flancos y se asignan al
aviso.
Por cada instancia de la instrucción está disponible una memoria de avisos con 2 espacios de
memoria. Para más detalles sobre el almacenamiento intermedio de cambios de señal, ver
Introducción a la creación de avisos de PLC con instrucciones (Página 6070).
La instrucción "NOTIFY" se ajusta a la norma IEC 1131-5.

6080

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "NOTIFY":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción
La señal que debe vigilarse

SIG

Input

BOOL

I, Q, M, D, L

ID

Input

WORD

I, Q, M, D, L o constante Canal de datos para avisos: W#16#EEEE
ID solo se evalúa en la primera llamada.

EV_ID

Input

C_NOTIFY

I, Q, M, D, L

Número de aviso (no permitido: 0)
EV_ID solo se evalúa en la primera llamada.
Tras ello, en cada llamada de "NOTIFY" con
el DB de instancia correspondiente, se utili‐
za el mismo número de aviso que en la pri‐
mera llamada.
El número de aviso se asigna automática‐
mente. Con ello se garantiza la coherencia
de los números de aviso. El número de aviso
debe ser unívoco dentro del programa de
usuario.

SEVERITY

Input

WORD

I, Q, M, D, L o constante Peso del evento
Valores posibles: De 0 a 127 (el valor 0 sig‐
nifica el peso máximo)
Este parámetro no es relevante para el pro‐
cesamiento del aviso.

DONE

Output

BOOL

I, Q, M, D, L

Parámetro de estado DONE: Ha finalizado
la generación del aviso.

ERROR

Output

BOOL

I, Q, M, D, L

El parámetro de estado ERROR
ERROR=TRUE significa que se ha produci‐
do un error durante el procesamiento. Para
más detalles, véase el parámetro STATUS.

STATUS

Output

WORD

I, Q, M, D, L

Parámetro de estado STATUS: Ver una in‐
formación de error

SD_i,

InOut

ANY

I, Q, M, D, T, C

1≤i ≤10

Valor asociado con número ordinal i
Solo se permiten los tipos de datos BOOL
(no permitido: mapa de bits), BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME, S5TIME, DATE_AND_TIME.
Nota: Si el puntero ANY accede a un DB,
este siempre debe especificarse.
(p. ej.: P# DB10.DBX5.0 byte 10)

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6081

Instrucciones
4.2 Instrucciones

Parámetros ERROR y STATUS
La tabla siguiente contiene toda la información de error específica que puede devolverse a
través de los parámetros ERROR y STATUS .
ERROR

STATUS
(decimal)

Explicación

0

11

Pérdida de aviso: El cambio de señal precedente o el aviso precedente no se ha podido enviar
y se sustituye por el aviso actual.

0

22

● Error en el puntero a los valores asociados SD_i:
–

Referente a la longitud de datos o al tipo de datos

–

No se puede acceder a los valores asociados en la memoria del usuario, p. ej. debido a
que se ha borrado un DB o a un error de longitud de área

–

El aviso activado se envía sin valores asociados o solo con el número de valores
asociados posible en el momento.

● El parámetro actual seleccionado de SEVERITY se encuentra por encima del rango
admisible. El aviso activado se envía con SEVERITY=127 .
0

25

La comunicación se ha iniciado. El aviso se está procesando.

1

1

Problemas de comunicación: La conexión se ha interrumpido o no hay registro

1

4

En la primera llamada
● la EV_ID indicada se encuentra fuera del rango admisible
● existe un error formal del puntero ANY SD_i
● se ha rebasado el área de memoria máxima transmisible para la CPU por cada "NOTIFY"

1

10

El acceso a la memoria de usuario local no es posible (p. ej. acceso a un DB borrado)

1

12

Al llamar la instrucción
● se ha indicado un DB de instancia que no pertenece a "NOTIFY".
● no se ha indicado ningún DB de instancia, sino un DB global

1

18

EV_ID ya ha sido utilizado por una de las instrucciones "NOTIFY", "NOTIFY_8P (Página 6073)",
"ALARM (Página 6083)", "ALARM_8 (Página 6075)" o "ALARM_8P (Página 6077)".

1

20

La memoria de trabajo disponible no es suficiente.

1

21

El aviso con la EV_ID indicada está bloqueado.

Consulte también
Crear avisos de programa (Página 8326)

6082

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

ALARM: Generar avisos PLC con indicación de acuse
Descripción
La instrucción vigila una señal.
● Modo estándar (es decir, la notificación controlada por acuse está desactivada): Tanto con
flanco ascendente (evento entrante) como con flanco descendente (aviso saliente), el
bloque genera un aviso al cual pueden adjuntarse hasta diez valores asociados.
● Notificación controlada por acuse activada: Una vez generado el aviso entrante, el bloque
no genera más avisos para la señal hasta que el evento entrante ha sido acusado en un
visualizador.
Consulte también: Introducción a la creación de avisos de PLC con instrucciones
(Página 6070).
El aviso se envía a todos los dispositivos registrados al efecto.
En la primera llamada se envía un aviso con el estado de señal actual.
La salida ACK_UP se anula cuando existe un flanco ascendente. Se activa cuando llega el
acuse del evento entrante desde un visualizador registrado.
De modo análogo, para la salida ACK_DN se aplica lo siguiente: Se anula cuando existe un
flanco descendente. Se activa cuando llega el acuse del evento saliente desde un visualizador
registrado. Una vez llegado el acuse desde un visualizador registrado, la información de acuse
se transfiere a todos los dispositivos registrados al efecto.
Por cada instancia de la instrucción "ALARM" está disponible una memoria de avisos con dos
espacios de memoria. Para más detalles sobre el almacenamiento intermedio de cambios de
señal, ver la sección "Detección de cambio de señal" en Introducción a la creación de avisos
de PLC con instrucciones (Página 6070).
La instrucción "ALARM" se ajusta a la norma IEC 1131-5.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ALARM":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

EN_R

Input

BOOL

I, Q, M, D, L

Parámetro de control enabled to receive con el
cual, al llamar el bloque, las salidas ACK_UP y
ACK_DN se actualizan (EN_R=1) o no se ac‐
tualizan (EN_R=0). Con EN_R=0, los paráme‐
tros de salida ACK_UP y ACK_DN permane‐
cen invariables.

SIG

Input

BOOL

I, Q, M, D, L

La señal que debe vigilarse

ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Canal de datos para avisos: W#16#EEEE
ID solo se evalúa en la primera llamada.

Programación del PLC
Manual de programación y manejo, 11/2019

6083

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

EV_ID

Input

C_ALARM

I, Q, M, D, L

Número de aviso (no permitido: 0)
EV_ID solo se evalúa en la primera llamada.
Tras ello, en cada llamada de "ALARM" con el
DB de instancia correspondiente, se utiliza el
mismo número de aviso que en la primera lla‐
mada.
El número de aviso se asigna automáticamen‐
te. Con ello se garantiza la coherencia de los
números de aviso. El número de aviso debe
ser unívoco dentro del programa de usuario.

SEVERITY

DONE

Input

Output

WORD

BOOL

I, Q, M, D, L o cons‐
tante

I, Q, M, D, L

Peso del evento
Valores posibles: De 0 a 127 (el valor 0 signi‐
fica el peso máximo)
Este parámetro no es relevante para el proce‐
samiento del aviso.
Parámetro de estado DONE:
Ha finalizado la generación del aviso.

ERROR

Output

BOOL

I, Q, M, D, L

El parámetro de estado ERROR
ERROR=TRUE significa que se ha producido
un error durante el procesamiento. Para más
detalles, véase el parámetro STATUS.

STATUS

Output

WORD

I, Q, M, D, L

Parámetro de estado STATUS: Ver una infor‐
mación de error

ACK_DN

Output

BOOL

I, Q, M, D, L

El evento saliente ha sido acusado en un vi‐
sualizador.
Estado de inicialización: 1

ACK_UP

Output

BOOL

I, Q, M, D, L

El evento entrante ha sido acusado en un vi‐
sualizador.
Estado de inicialización: 1

SD_i,

InOut

ANY

I, Q, M, D, T, C

Valor asociado con número ordinal i

1≤i ≤10

Solo se permiten los tipos de datos BOOL (no
permitido: mapa de bits), BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME, S5TIME, DATE_AND_TIME.
Nota: Si el puntero ANY accede a un DB, este
siempre debe especificarse. (p. ej.:
P# DB10.DBX5.0 byte 10)

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6084

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros ERROR y STATUS
La siguiente tabla contiene toda la información de error específica de la instrucción "ALARM"
que puede indicarse a través de los parámetros ERROR y STATUS .
ERROR

STATUS

Explicación

(decimal)
0

11

Pérdida de aviso: El cambio de señal precedente o el aviso precedente no se ha podido enviar
y se sustituye por el aviso actual.

0

22

● Error en el puntero a los valores asociados SD_i:
–

Referente a la longitud de datos o al tipo de datos

–

No se puede acceder a los valores asociados en la memoria del usuario, p. ej. debido
a que se ha borrado un DB o a un error de longitud de área

–

El aviso activado se envía sin valores asociados.

● El parámetro actual seleccionado de SEVERITY se encuentra por encima del rango
admisible. El aviso activado se envía con SEVERITY=127.
0

25

La comunicación se ha iniciado. El aviso se está procesando.

1

1

Problemas de comunicación: La conexión se ha interrumpido o no hay registro
Si está activada la notificación controlada por acuse: Indicación temporal, si no existen visua‐
lizadores que soporten la notificación controlada por acuse

1

4

En la primera llamada
● la EV_ID indicada se encuentra fuera del rango admisible
● existe un error formal del puntero ANY SD_i
● Se ha rebasado el área de memoria máxima transmisible para la CPU por cada ALARM

1

10

El acceso a la memoria de usuario local no es posible (p. ej. acceso a un DB borrado)

1

12

En la llamada de la instrucción ha ocurrido lo siguiente:
● Se ha indicado un DB de instancia que no pertenece a ALARM
● No se ha indicado ningún DB de instancia, sino un DB global

1

18

EV_ID ya ha sido utilizado por una de las instrucciones "NOTIFY (Página 6080)", "NO‐
TIFY_8P" (Página 6073)", "ALARM", "ALARM_8 (Página 6075)" o "ALARM_8P (Pági‐
na 6077)".

1

20

La memoria de trabajo disponible no es suficiente.

1

21

El aviso con la EV_ID indicada está bloqueado.

Nota
Después de la primera llamada, las salidas ACK_UP y ACK_DN tienen el valor "1", y para la
entrada SIG se adopta el valor anterior "0".

Consulte también
Crear avisos de programa (Página 8326)

Programación del PLC
Manual de programación y manejo, 11/2019

6085

Instrucciones
4.2 Instrucciones

Instrucciones para generar avisos de PLC sin DB de instancia
Comportamiento en arranque de las instrucciones para generar avisos de PLC
Comportamiento en rearranque completo (en caliente)
En el rearranque completo (en caliente), los DBs de instancia de las instrucciones para generar
avisos de PLC se ponen en estado no inicializado. Los parámetros actuales guardados en los
DBs de instancia permanecen invariables. Con la siguiente llamada de bloque, los parámetros
ID y EV_ID se evalúan de nuevo.

Comportamiento en arranque en frío
En el arranque en frío, los contenidos de los DBs de instancia de las instrucciones para generar
avisos de PLC se ajustan a los valores iniciales.

Comportamiento en rearranque
En el rearranque, las instrucciones para generar avisos de PLC se comportan como bloques
de función del usuario con posibilidad de continuación. Continúan ejecutándose a partir del
punto de interrupción.

Comportamiento tras un borrado total
El borrado total siempre implica la interrupción de todas las conexiones, de modo que ya no
hay ningún dispositivo registrado para avisos. Se borra el programa de usuario. Si se ha
insertado una tarjeta FLASH, las partes del programa relevantes para la ejecución se cargan
de nuevo en la CPU desde la tarjeta, y la CPU efectúa un rearranque completo (en caliente) o
un arranque en frío (implícitamente siempre se trata de un arranque en frío, ya que tras el
borrado total todos los datos del usuario quedan inicializados).

Comportamiento en fallo de las instrucciones para generar avisos de PLC
Interrupción de la conexión
Las conexiones asignadas a las instancias se vigilan para detectar su posible interrupción. En
caso de interrupción de la conexión, el dispositivo afectado se borra de la lista interna de la
CPU de los dispositivos registrados para avisos de PLC. Se borran los avisos todavía
pendientes para ese dispositivo.
Si después de una interrupción de conexión existen todavía otros dispositivos registrados,
éstos siguen recibiendo avisos. Las instrucciones no dejarán de enviar avisos hasta que estén
interrumpidas las conexiones con todos los dispositivos registrados. Tras ello se realiza una
notificación a través de los parámetros de salida ERROR y STATUS (ERROR = 1, STATUS =
1).

6086

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Interfaz de error con el programa de usuario
Si al procesarse una instrucción para generar avisos de PLC se produce un error, el parámetro
de salida ERROR se ajusta a "1", y se registra en el parámetro de salida STATUS la
correspondiente identificación de error. Esta información de error se puede evaluar en el
programa.
Ejemplos de posibles errores:
● La transmisión no es posible debido a falta de recursos
● Error al acceder a una de las señales que se deben vigilar

Introducción a la creación de avisos de PLC con instrucciones
Instrucciones para generar avisos de PLC
Pueden generarse avisos de PLC con las siguientes instrucciones:
● "ALARM_SQ (Página 6092)"
● "ALARM_S (Página 6090)"
● "ALARM_DQ (Página 6096)"
● "ALARM_D (Página 6094)"
Estas instrucciones tienen las siguientes características:
● Los avisos de PLC enviados de "ALARM_SQ (Página 6092)" y "ALARM_DQ
(Página 6096)" con el estado de señal "1" pueden acusarse desde un visualizador
registrado. Los avisos de PLC de "ALARM_S" (Página 6090) y "ALARM_D (Página 6094)"
siempre se acusan de modo implícito.
● Los avisos de PLC no se generan al detectarse un cambio de flanco, sino al producirse
cualquier llamada.
● Después de la ejecución del bloque, el valor asociado SD está captado por completo y
asignado al aviso de PLC.
En lo referente a la coherencia respecto a clases de prioridad de mayor prioridad, se aplica
al valor asociado lo siguiente: Son coherentes
– los tipos de datos simples (bit, byte, palabra y palabra doble)
– una matriz del tipo de datos Byte hasta una longitud máxima específica de CPU

ALARM_SC
Con ayuda de la instrucción "ALARM_SC (Página 6098)" es posible determinar
● el estado de acuse del último "aviso entrante" y el estado de señal en la última llamada de
"ALARM_SQ (Página 6092)" / "ALARM_DQ (Página 6096)", o bien
● el estado de señal en la última llamada de "ALARM_S (Página 6090)" / "ALARM_D
(Página 6094)".

Programación del PLC
Manual de programación y manejo, 11/2019

6087

Instrucciones
4.2 Instrucciones

Registro de visualizadores
Para que las instrucciones para generar avisos de PLC envíen un aviso de PLC al producirse
una llamada, es necesario que haya por lo menos un visualizador registrado para avisos de
PLC.

Respaldo de avisos
Para evitar en lo posible que se pierdan avisos incluso en caso de sobrecarga del sistema de
comunicación, las instrucciones "ALARM_SQ (Página 6092)", "ALARM_S (Página 6090)",
"ALARM_DQ (Página 6096)" y "ALARM_D (Página 6094)" pueden almacenar en memoria
intermedia dos avisos cada una.
Si, a pesar de ello, se pierden avisos de PLC, esto se notifica mediante RET_VAL. Con el
siguiente aviso de PLC que pueda enviarse, los visualizadores registrados recibirán una
notificación al respecto.

Acuse de aviso con "ALARM_SQ" y "ALARM_DQ"
Cuando se acusa en un visualizador un "aviso entrante", esta información de acuse se envía
en primer lugar a la CPU que ha provocado el aviso. Desde allí se distribuye la información de
acuse a todos los visualizadores registrados al efecto.

Bloquear y habilitar avisos
Los avisos de PLC generados con "ALARM_SQ (Página 6092)", "ALARM_S (Página 6090)",
"ALARM_DQ (Página 6096)" o "ALARM_D (Página 6094)", no se pueden bloquear y a
continuación volver a habilitar.

Modificaciones de un programa que contiene llamadas a "ALARM_SQ" / "ALARM_S"
Nota
Al cargar un bloque ya existente en la CPU con llamadas a "ALARM_SQ (Página 6092)" /
"ALARM_S (Página 6090)", es posible que el bloque anterior haya enviado un aviso de PLC
entrante, pero el nuevo bloque no envíe el correspondiente aviso de PLC saliente. En este
caso, el aviso permanece en la memoria interna de avisos de la CPU. Esta situación puede
producirse también cuando se borran bloques con llamadas de "ALARM_SQ (Página 6092)" /
"ALARM_S (Página 6090)".
Para borrar de la memoria interna de avisos este tipo de avisos de PLC, debe ponerse la CPU
en el estado operativo STOP y a continuación efectuar un rearranque completo (en caliente)
o un arranque en frío.

Modificaciones de un programa que contiene llamadas a "ALARM_DQ" / "ALARM_D"
Aunque el programa contenga llamadas a "ALARM_DQ (Página 6096)" y/o "ALARM_D
(Página 6094)", las mencionadas modificaciones del programa pueden provocar que queden
avisos de PLC en la memoria interna de avisos, ocupando de modo permanente recursos del
sistema.

6088

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
A diferencia de los recursos del sistema asignados mediante llamadas de "ALARM_SQ
(Página 6092)" / "ALARM_S (Página 6090)", los recursos del sistema asignados mediante
llamadas de "ALARM_DQ (Página 6096)" / "ALARM_D (Página 6094)" pueden liberarse sin
necesidad de poner la CPU en el estado operativo STOP. Para esto debe usarse la instrucción
"DEL_SI (Página 6112)". Antes de liberar recursos del sistema asignados de modo dinámico
"DEL_SI", puede ser útil leer con la instrucción "READ_SI" la información acerca de este tipo
de recursos del sistema en la CPU en el momento actual (ver instrucción "READ_SI
(Página 6109)").

Número de datos transmisibles
El número de datos transmisibles a través del valor asociado SD de las instrucciones
"ALARM_S (Página 6090)", "ALARM_SQ (Página 6092)", "ALARM_D (Página 6094)" y
"ALARM_DQ (Página 6096)" no debe superar una determinada longitud máxima. Esta longitud
de datos máxima se calcula de la siguiente manera:

longmax = min (pdu_local, pdu_remota) - 48
Donde:
● pdu_local es la longitud máxima de los bloques de datos de la CPU propia (SZL_ID
W#16#0131, INDEX 1, variable pdu)
● pdu_remota es la longitud máxima de los bloques de datos de los visualizadores

Ejemplo
Supongamos que una CPU 414-2 envía avisos a una PG 760 (a través de MPI).

pdu_local = 480 bytes, pdu_remota = 480 bytes,
Se aplica lo siguiente:

longmax = min (480, 480) - 48 = 480 - 48 = 432
Por lo tanto, la longitud de datos máxima transmisible por instrucción es de 432 bytes.

Programación del PLC
Manual de programación y manejo, 11/2019

6089

Instrucciones
4.2 Instrucciones

ALARM_S: Generar aviso de alarma
Descripción
La instrucción genera para cada llamada un aviso al que puede adjuntarse un valor asociado.
El aviso se envía a todos los dispositivos registrados al efecto. De este modo, la instrucción
pone a disposición del usuario un sencillo mecanismo de notificación. Debe tenerse en cuenta
que la instrucción solo se llama cuando el valor de la señal SIG que dispara el aviso está
invertido con respecto a la última llamada. De lo contrario, se notifica a través de RET_VAL, y
no se envía ningún aviso. En la primera llamada de la instrucción, hay que asegurarse de que
en la entrada SIG esté ajustado el valor "1". De lo contrario, se recibe a través de RET_VAL una
información de error y no se envía ningún aviso.
Nota
En los programas nuevos que se vayan a crear, se recomienda usar siempre la instrucción
"ALARM_D (Página 6094)" (si la CPU la soporta), ya que ofrece mejores posibilidades de
administración de los recursos del sistema.

Asignación de recursos del sistema
Al generar un aviso, el sistema operativo asigna un recurso del sistema para toda la duración
de un ciclo de señal.
El ciclo de señal se prolonga desde la llamada con SIG=1 hasta la siguiente llamada con
SIG=0. Si dentro del ciclo de señal se sobrecarga o se borra el bloque que genera el aviso, el
correspondiente recurso del sistema queda ocupado hasta el siguiente rearranque completo
(en caliente).

Acuse de avisos
Los avisos que se han enviado con "ALARM_S" siempre están acusados de modo implícito. El
estado de señal en la última llamada de "ALARM_S se puede determinar con ayuda de
"ALARM_SC (Página 6098)".

Almacenamiento intermedio de estados de señal
La instrucción "ALARM_S" ocupa recursos del sistema. En ellos se almacenan
temporalmente, entre otras cosas, los dos últimos estados de señal, incluido el sello de tiempo
y el valor asociado. Si se produce una llamada a "ALARM_S" en un momento en que los
estados de señal de las dos últimas llamadas "válidas" no han sido enviados todavía
(desbordamiento de señal), se descartan el estado de señal actual y el último estado de señal
y se registra en la memoria intermedia una identificación de desbordamiento. En el primer
momento en que sea posible, se envía la penúltima señal junto con el identificador de
desbordamiento.
Ejemplo:

6090

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

W

W

W

Supongamos que t0, t1 y t2 son los momentos de llamada de "ALARM_S". Si los estados de
señal de t0 y t1 todavía no han sido enviados en el momento t2, se descartan los estados de
señal de t1 y t2, y en el estado de señal de t0 se activa el identificador de desbordamiento.

Desbordamiento de instancia
Si el número de llamadas de "ALARM_S" es mayor que el número máximo de recursos del
sistema de la CPU, puede producirse una escasez de recursos (desbordamiento de instancia).
Esto se notifica mediante información de error en RET_VAL, así como en los visualizadores
registrados.
El número máximo de llamadas de "ALARM_S" depende de la CPU.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ALARM_S":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción
La señal que dispara el aviso

SIG

Input

BOOL

I, Q, M, D, L

ID

Input

WORD

I, Q, M, D, L o constante Canal de datos para avisos: W#16#EEEE

EV_ID

Input

C_ALARM_S

I, Q, M, D, L

SD

Input

ANY

I, Q, M, D, T, C

Número de aviso (no permitido: "0")
Valor asociado
Longitud máxima: 12 bytes
Solo se permiten los tipos de datos BOOL
(no permitido: mapa de bits), BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME, S5TIME, DATE_AND_TIME.

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

0001

● El valor asociado supera la longitud máxima admisible.
● No es posible acceder a la memoria de usuario local (p. ej. acceso a un DB borrado) El aviso se envía.
● El valor asociado señala un valor en el área de datos local. El aviso se envía. (solo S7-400)

0002

Advertencia: Se ha asignado el último espacio de memoria libre para acuse de avisos. (solo S7-400)

Programación del PLC
Manual de programación y manejo, 11/2019

6091

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
8081

La EV_ID indicada se encuentra fuera del rango admisible.

8082

Se pierde el aviso, ya que la CPU no tiene más recursos libres para generar avisos de PLC mediante
instrucciones.

8083

Se pierde el aviso, ya que ese cambio de señal ya existe, pero todavía no se ha podido enviar (desbor‐
damiento de señal).

8084

En la llamada actual y anterior a "ALARM_S", la señal que dispara el aviso SIG tiene el mismo valor.

8085

No existe registro para la EV_ID indicada.

8086

Ya se está procesando en una clase de prioridad menor una llamada para la EV_ID indicada.

8087

En la primera llamada de "ALARM_S", la señal que dispara el aviso tenía el valor "0".

8088

La EV_ID indicada ya está ocupada por otro recurso del sistema ("ALARM_S", ALARM_DQ (Pági‐
na 6096) , ALARM_D (Página 6094)).

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Crear avisos de programa (Página 8326)

ALARM_SQ: Generar aviso de alarma con acuse
Descripción
La instrucción genera para cada llamada un aviso al que puede adjuntarse un valor asociado.
El aviso se envía a todos los dispositivos registrados al efecto. "De este modo, ALARM_SQ"
pone a disposición del usuario un sencillo mecanismo de notificación. Recuerde que
"ALARM_SQ" solo debe llamarse cuando el valor de la señal SIG que dispara el aviso está
invertido con respecto a la última llamada. De lo contrario, se notifica a través de RET_VAL, y
no se envía ningún aviso. En la primera llamada de "ALARM_SQ", debe asegurarse de que en
la entrada SIG esté ajustado el valor "1". De lo contrario, se recibe a través de RET_VAL una
información de error y no se envía ningún aviso.
Nota
En los programas nuevos que se vayan a crear, se recomienda usar siempre la instrucción
"ALARM_DQ (Página 6096)" (si la CPU la soporta), ya que ofrece mejores posibilidades de
administración de los recursos del sistema.

Asignación de recursos del sistema
Al generar un aviso con "ALARM_SQ", el sistema operativo asigna un recurso del sistema para
la duración de un ciclo de señal.
Con "ALARM_SQ, el ciclo de señal se prolonga desde la llamada con SIG=1 hasta la siguiente
llamada con SIG=0. A ese intervalo debe sumarse, en su caso, el tiempo transcurrido hasta el
acuse de la señal entrante desde uno de los visualizadores registrados.

6092

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Si dentro del ciclo de señal se sobrecarga o se borra el bloque que genera el aviso, el
correspondiente recurso del sistema queda ocupado hasta el siguiente rearranque completo
(en caliente).

Acuse de avisos
Los avisos enviados por "ALARM_SQ" pueden acusarse con el estado de señal "1" en un
visualizador registrado. El estado de acuse del último "aviso entrante" y el estado de señal en
la última llamada de "ALARM_SQ pueden consultarse con ayuda de la instrucción
"ALARM_SC (Página 6098)".

Almacenamiento intermedio de estados de señal
"ALARM_SQ" ocupa recursos del sistema. En ellos se almacenan temporalmente, entre otras
cosas, los dos últimos estados de señal, incluido el sello de tiempo y el valor asociado. Si se
produce una llamada a "ALARM_SQ" en un momento en que los estados de señal de las dos
últimas llamadas "válidas" no han sido enviados todavía (desbordamiento de señal), se
descartan el estado de señal actual y el último estado de señal y se registra en la memoria
intermedia una identificación de desbordamiento. En el primer momento en que sea posible,
se envía la penúltima señal junto con el identificador de desbordamiento.
Ejemplo:

W

W

W

Supongamos que t0, t1 y t2 son los momentos de llamada de "ALARM_SQ". Si los estados de
señal de t0 y t1 todavía no han sido enviados en el momento t2, se descartan los estados de
señal de t1 y t2, y en el estado de señal de t0 se activa el identificador de desbordamiento.

Desbordamiento de instancia
Si el número de llamadas de "ALARM_SQ" es mayor que el número máximo de recursos del
sistema de la CPU, puede producirse una escasez de recursos (desbordamiento de instancia).
Esto se notifica mediante información de error en RET_VAL, así como en los visualizadores
registrados.
El número máximo de llamadas de "ALARM_SQ" depende de la CPU.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ALARM_SQ":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SIG

Input

BOOL

I, Q, M, D, L

La señal que dispara el aviso

ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Canal de datos para avisos: W#16#EEEE

Programación del PLC
Manual de programación y manejo, 11/2019

6093

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

EV_ID

Input

C_ALARM_S

I, Q, M, D, L

Número de aviso (no permitido: 0)

SD

Input

ANY

I, Q, M, D, T, C

Valor asociado
Longitud máxima: 12 bytes
Solo se permiten los tipos de datos BOOL (no
permitido: mapa de bits), BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME, S5TIME, DATE_AND_TIME.

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

0001

● El valor asociado supera la longitud máxima admisible.
● No es posible acceder a la memoria de usuario local (p. ej. acceso a un DB borrado) El aviso se envía.
● El valor asociado señala un valor en el área de datos local. El aviso se envía. (solo S7-400)

0002

Advertencia: Se ha asignado el último espacio de memoria libre para acuse de avisos. (solo S7-400)

8081

La EV_ID indicada se encuentra fuera del rango admisible.

8082

Se pierde el aviso, ya que la CPU no tiene más recursos libres para generar avisos de PLC mediante
instrucciones.

8083

Se pierde el aviso, ya que ese cambio de señal ya existe, pero todavía no se ha podido enviar (desbor‐
damiento de señal).

8084

En la llamada actual y anterior a "ALARM_SQ", la señal que dispara el aviso SIGtiene el mismo valor.

8085

No existe registro para la EV_ID indicada.

8086

Ya se está procesando en una clase de prioridad menor una llamada para la EV_ID indicada.

8087

En la primera llamada de "ALARM_SQ", la señal que dispara el aviso tenía el valor "0".

8088

La EV_ID indicada ya está ocupada por otro recurso del sistema (ALARM_S (Página 6090), ALARM_DQ
(Página 6096), ALARM_D (Página 6094)).

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Crear avisos de programa (Página 8326)

ALARM_D: Generar siempre avisos PLC acusados
Descripción
La instrucción genera para cada llamada un aviso de PLC al que puede adjuntarse un valor
asociado. En esto coincide con la instrucción "ALARM_S (Página 6090)".

6094

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Al generar un aviso con "ALARM_D", el sistema operativo asigna un recurso del sistema para
la duración de un ciclo de señal.
Con "ALARM_D, el ciclo de señal se prolonga desde la llamada con SIG=1 hasta la siguiente
llamada con SIG=0. Si dentro del ciclo de señal se sobrecarga o se borra el bloque que genera
el aviso, el correspondiente recurso del sistema queda ocupado hasta el siguiente rearranque
completo (en caliente).
La diferencia funcional entre "ALARM_D" y "ALARM_S (Página 6090)" consiste en que el
usuario puede administrar esos recursos del sistema ocupados.
● Con ayuda de READ_SI puede leerse información acerca de los recursos del sistema.
● Con DEL_SI pueden liberarse recursos del sistema ocupados. Esto es especialmente útil
cuando los recursos del sistema están ocupados de modo permanente. Un recurso del
sistema permanece ocupado p. ej. hasta el próximo rearranque completo (en caliente)
cuando, al efectuar una modificación del programa, se borra una llamada de FB que
contiene llamadas de "ALARM_D". Si, al efectuar una modificación del programa, se carga
de nuevo un FB con llamadas de "ALARM_D", puede suceder que "ALARM_D" no genere
más avisos de PLC.
La instrucción "ALARM_D" tiene un parámetro más que la instrucción "ALARM_S
(Página 6090)": se trata de la entrada CMP_ID. Con ella se asignan los avisos de PLC
generados con la instrucción "ALARM_D" a áreas lógicas, p. ej. instalaciones parciales. Si se
llama "ALARM_D" en un FB, es conveniente asignar a "CMP_ID" el número del DB de instancia
correspondiente.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ALARM_D":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SIG

Input

BOOL

I, Q, M, D, L

La señal que dispara el aviso

ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Canal de datos para avisos: W#16#EEEE

EV_ID

Input

C_ALARM_S

I, Q, M, D, L

Número de aviso (no permitido: 0)

CMP_ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

component identifier (no autorizado: 0)
Identificador del sistema parcial al que está
asignado el aviso en cuestión
Valores recomendados:
● low word: de 1 a 65535
● high word: 0
Atendiendo a esta recomendación, se evi‐
tan posibles conflictos con paquetes de pro‐
gramación creados por SIEMENS.

SD

Input

ANY

I, Q, M, D, T, C

Valor asociado
Longitud máxima: 12 bytes
Solo se permiten los tipos de datos BOOL
(no permitido: mapa de bits), BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME, S5TIME, DATE_AND_TIME

RET_VAL

Return

INT

Programación del PLC
Manual de programación y manejo, 11/2019

I, Q, M, D, L

Información de error

6095

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

0001

● El valor asociado supera la longitud máxima admisible, o
● No es posible acceder a la memoria de usuario local (p. ej. acceso a un DB borrado) El aviso se envía.
● El valor asociado señala un valor en el área de datos local. El aviso se envía. (solo S7-400)

0002

Advertencia: Se ha asignado el último espacio de memoria libre para acuse de avisos. (solo S7-400)

8081

La EV_ID indicada se encuentra fuera del rango admisible.

8082

Se pierde el aviso, ya que la CPU no tiene más recursos libres para generar avisos de PLC mediante
instrucciones.

8083

Se pierde el aviso, ya que ese cambio de señal ya existe, pero todavía no se ha podido enviar (desbor‐
damiento de señal).

8084

En la llamada actual y anterior a "ALARM_D", la señal que dispara el aviso SIGtiene el mismo valor.

8085

No existe registro para la EV_ID indicada.

8086

Ya se está procesando en una clase de prioridad menor una llamada para la EV_ID indicada.

8087

En la primera llamada de "ALARM_D", la señal que dispara el aviso tenía el valor "0".

8088

La EV_ID indicada ya está ocupada por otro recurso del sistema ("ALARM_SQ (Página 6092)",
"ALARM_S (Página 6090)", "ALARM_DQ" (Página 6096)).

8089

Se ha asignado a CMP_ID el valor "0".

808A

CMP_ID no concuerda con EV_ID

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Crear avisos de programa (Página 8326)

ALARM_DQ: Generar avisos PLC acusables
Descripción
La instrucción "ALARM_DQ" genera para cada llamada un aviso al que puede adjuntarse un
valor asociado. En esto coincide con la instrucción "ALARM_SQ (Página 6092)".
Al generar un aviso con "ALARM_DQ", el sistema operativo asigna un recurso del sistema para
toda la duración de un ciclo de señal.
Con "ALARM_DQ, el ciclo de señal se prolonga desde la llamada con SIG=1 hasta la siguiente
llamada con SIG=0. A ese intervalo debe sumarse, en su caso, el tiempo transcurrido hasta el
acuse de la señal entrante desde uno de los visualizadores registrados.

6096

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Si dentro del ciclo de señal se sobrecarga o se borra el bloque que genera el aviso, el
correspondiente recurso del sistema queda ocupado hasta el siguiente rearranque completo
(en caliente).
La diferencia de funcionalidad de "ALARM_DQ" respecto a "ALARM_SQ (Página 6092)"
consiste en que es posible administrar los recursos del sistema ocupados en "ALARM_DQ".
● "READ_SI (Página 6109)" permite leer información acerca de los recursos del sistema
ocupados.
● Con "DEL_SI (Página 6112)" se liberan recursos del sistema ocupados. Esto es
especialmente útil cuando los recursos del sistema están ocupados de modo permanente.
Un recurso del sistema permanece ocupado p. ej. hasta el siguiente rearranque completo
(en caliente) cuando, al efectuar una modificación del programa, se borra una llamada de
FB que contiene llamadas de "ALARM_DQ". Si, al efectuar una modificación del programa,
se carga de nuevo un FB con llamadas de "ALARM_DQ", puede suceder que "ALARM_DQ"
no genere más avisos de PLC.
La instrucción "ALARM_DQ" tiene un parámetro más que las instrucciones "ALARM_SQ
(Página 6092)": se trata de la entrada CMP_ID. Con ella se asignan los avisos de PLC
generados con las instrucciones "ALARM_DQ" a áreas lógicas, p. ej. instalaciones parciales.
Si se llama "ALARM_DQ" en un FB, es conveniente asignar a "CMP_ID" el número del DB de
instancia correspondiente.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ALARM_DQ":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SIG

Input

BOOL

I, Q, M, D, L

La señal que dispara el aviso

ID

Input

WORD

I, Q, M, D, L o cons‐
tante

Canal de datos para avisos: W#16#EEEE

EV_ID

Input

C_ALARM_S

I, Q, M, D, L

Número de aviso (no permitido: 0)

CMP_ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

component identifier (no autorizado: 0); Identi‐
ficador del sistema parcial al que está asigna‐
do el aviso en cuestión
Valores recomendados:
● low word: de 1 a 65535
● high word: 0
Atendiendo a esta recomendación, se evitan
posibles conflictos con paquetes de programa‐
ción creados por SIEMENS.

SD

Input

ANY

I, Q, M, D, T, C

Valor asociado
Longitud máxima: 12 bytes
Solo se permiten los tipos de datos BOOL (no
permitido: mapa de bits), BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME, S5TIME, DATE_AND_TIME

RET_VAL

Return

INT

I, Q, M, D, L

Mostrar

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6097

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

0001

● El valor asociado supera la longitud máxima admisible, o
● No es posible acceder a la memoria de usuario local (p. ej. acceso a un DB borrado) El aviso se envía.
● El valor asociado señala un valor en el área de datos local. El aviso se envía. (solo S7-400)

0002

Advertencia: Se ha asignado el último espacio de memoria libre para acuse de avisos. (solo S7-400)

8081

La EV_ID indicada se encuentra fuera del rango admisible.

8082

Se pierde el aviso, ya que la CPU no tiene más recursos libres para generar avisos de PLC mediante
instrucciones.

8083

Se pierde el aviso, ya que ese cambio de señal ya existe, pero todavía no se ha podido enviar (desbor‐
damiento de señal).

8084

En la llamada actual y anterior a "ALARM_DQ", la señal que dispara el aviso SIG tiene el mismo valor.

8085

No existe registro para la EV_ID indicada.

8086

Ya se está procesando en una clase de prioridad menor una llamada para la EV_ID indicada.

8087

En la primera llamada de "ALARM_DQ", la señal que dispara el aviso tenía el valor "0".

8088

La EV_ID indicada ya está ocupada por otro recurso del sistema (ALARM_SQ (Página 6092), ALARM_S
(Página 6090), ALARM_D (Página 6094)).

8089

Se ha asignado a CMP_ID el valor "0".

808A

CMP_ID no concuerda con EV_ID

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Crear avisos de programa (Página 8326)

ALARM_SC: Determinar el estado de acuse del último aviso entrante ALARM_SQ
Descripción
Con ayuda de esta instrucción es posible determinar
● el estado de acuse del último aviso entrante de "ALARM_SQ (Página 6092)" / "ALARM_DQ
(Página 6096)" y el estado de la señal que ha disparado el aviso en la última llamada de
"ALARM_SQ (Página 6092)" / "ALARM_DQ (Página 6096)", o bien
● el estado de la señal que ha disparado el aviso en la última llamada de "ALARM_S
(Página 6090)" / "ALARM_D (Página 6094)"
. Si se han asignado los números de aviso con ayuda de la configuración de avisos, el aviso o
la señal están referenciados de manera unívoca a través del número de aviso especificado por
el usuario.
La instrucción accede a la memoria ocupada temporalmente de las instrucciones "ALARM_SQ
(Página 6092)", "ALARM_S (Página 6090)", "ALARM_DQ (Página 6096)" y "ALARM_D
(Página 6094)".

6098

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ALARM_SC":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

EV_ID

Input

C_ALARM_S

I, Q, M, D, L

Número de aviso para el que se desea conocer
el estado de señal en la última llamada o el
estado de acuse del último aviso entrante (solo
con ALARM_SQ y con ALARM_DQ)

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

STATE

Output

BOOL

I, Q, M, D, L

Estado de la señal que ha disparado el aviso
en la última llamada

Q_STATE

Output

BOOL

I, Q, M, D, L

● si el parámetro EV_ID indicado
corresponde a una llamada de
"ALARM_S" / "ALARM_D": "1"
● si el parámetro EV_ID indicado
corresponde a una llamada de
"ALARM_SQ" / "ALARM_DQ": Estado de
acuse del último aviso entrante:
–

0: no acusado

–

1: acusado

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8081

La EV_ID indicada se encuentra fuera del rango admisible.

8082

En este momento no hay ningún espacio de memoria asignado para esta EV_ID (posible causa: La señal
correspondiente todavía no ha tenido nunca el estado "1", o ya ha vuelto a adoptar el estado "0").

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Consulte también
Crear avisos de programa (Página 8326)

Programación del PLC
Manual de programación y manejo, 11/2019

6099

Instrucciones
4.2 Instrucciones

WR_USMSG: Escribir evento de diagnóstico de usuario en el búfer de diagnóstico
Descripción
Esta instrucción permite escribir un evento de diagnóstico del usuario en el búfer de
diagnóstico. Además es posible enviar el correspondiente aviso de diagnóstico del usuario a
todos los dispositivos registrados a tal efecto (asignando el parámetro de entrada SEND =
TRUE). Cuando se produce un error, el parámetro de salida RET_VAL contiene la información
de error.

Enviar aviso de diagnóstico del usuario
Con la instrucción, un evento de diagnóstico de usuario se registra en el búfer de diagnóstico.
Además es posible enviar el correspondiente aviso de diagnóstico del usuario también a todos
los dispositivos registrados al efecto (asignando el parámetro de entrada SEND = TRUE). En
ese caso, el aviso de diagnóstico del usuario se escribe en el búfer de transmisión y desde allí
se envía automáticamente a los dispositivos registrados al efecto.
Se puede comprobar si en el momento actual es posible enviar avisos de diagnóstico del
usuario. Para ello se llama la instrucción "RDSYSST (Página 6116)" con los parámetros
SZL_ID = W#16#0132 y INDEX = W#16#0005. La cuarta palabra del registro que se devuelve
indica si en el momento actual la transmisión es posible (1) o no (0).
'LVSRVLWLYR

&38

SHM3*23
6(1' 
758(

%¼IHUGH
WUDQVPLVLµQ


:5B8606*




%¼IHUGHGLDJQµVWLFR

7UDQVPLVLµQHQPRGR
DV¯QFURQRUHVSHFWRDO
SURJUDPDGHXVXDULR



Búfer de transmisión lleno
Para introducir un aviso de diagnóstico del usuario en el búfer de transmisión es necesario que
éste no se encuentre lleno. La cantidad de entradas posibles en el búfer de transmisión
depende del tipo de CPU.
Cuando el búfer de transmisión está lleno, entonces
● se registra pese a ello el evento de diagnóstico en el búfer de diagnóstico
● se indica en el parámetro RET_VAL que el búfer de transmisión está lleno.
(RET_VAL = W#16#8092).

6100

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Dispositivo no registrado
Si se debe enviar un aviso de diagnóstico de usuario (SEND = TRUE) y no hay ningún
dispositivo registrado, entonces
● se registra pese a ello el evento de diagnóstico de usuario en el búfer de diagnóstico.
● se indica en el parámetro RET_VAL que no hay ningún dispositivo registrado (W#16#0091
o W#16#8091. El valor W#16#8091 aparece en versiones antiguas de la CPU).

Estructura de una entrada
Las entradas en el búfer de diagnóstico tienen la siguiente estructura interna:
Byte

Contenido

1y2

ID de evento

3

Clase de prioridad

4

Número de OB

5y6

Reservado

7y8

Información adicional 1

9, 10, 11 y 12

Información adicional 2

de 13 a 20

Sello de tiempo

ID de evento
Cada evento tiene asignada una ID de evento.

Información adicional
La información adicional contiene datos adicionales sobre el evento. El contenido de la
información adicional puede variar según el evento en cuestión. Si se genera un evento de
diagnóstico de usuario, se puede definir de modo personalizado el contenido de estas
entradas.
Cuando se envía un aviso de diagnóstico de usuario, se puede integrar la información adicional
en el texto del aviso (específico de ID de evento) en forma de valores asociados.

Sello de tiempo
El sello de tiempo es del tipo Date_and_Time.

Programación del PLC
Manual de programación y manejo, 11/2019

6101

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "WR_USMSG":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SEND

Input

BOOL

I, Q, M, D, L

Habilitar el envío del aviso de diagnóstico de
usuario a todos los dispositivos registrados

EVENTN

Input

WORD

I, Q, M, D, L o constante ID de evento. El usuario asigna la ID de
evento. La asignación predeterminada no
se realiza mediante el servidor de avisos.

INFO1

Input

ANY

I, Q, M, D, L

Información adicional: 1 palabra de longitud

INFO2

Input

ANY

I, Q, M, D, L

Información adicional: 2 palabras de longitud

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro SEND
Con SEND = TRUE se envía el aviso de diagnóstico del usuario a todos los dispositivos
registrados al efecto. La transmisión solo se realiza si hay por lo menos un dispositivo
registrado y el búfer de transmisión no está lleno. La transmisión se realiza de modo asíncrono
respecto al programa de usuario.

Parámetro EVENTN
El parámetro EVENTN contiene la ID de evento del evento de usuario. Pueden registrarse IDs
de evento con el formato W#16#8xyz , W#16#9xyz, W#16#Axyz, W#16#Bxyz.
Las IDs con formato W#16#8xyz y W#16#9xyz pertenecen a eventos predefinidos, y las IDs
con formato W#16#Axyz y W#16#Bxyz , a eventos personalizables.
Un evento entrante se identifica mediante x = 1, y un evento saliente con x = 0. Para eventos
de clase A y B se aplica lo siguiente: yz es el número, en formato hexadecimal, asignado al
aviso en cuestión en la configuración de avisos.

Parámetro INFO1
El parámetro INFO1 contiene una información de una palabra de longitud. Para INFO1 se
admiten los siguientes tipos de datos:
● WORD
● INT
● ARRAY [0...1] OF CHAR
Se puede integrar el parámetro INFO1 como valor asociado en el texto del aviso para así
añadir al aviso información actual.

6102

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro INFO2
El parámetro INFO2 contiene una información de dos palabras de longitud. Para INFO2 se
admiten los siguientes tipos de datos:
● DWORD
● DINT
● REAL
● TIME
● ARRAY [0...3] OF CHAR
Se puede integrar el parámetro INFO2 como valor asociado en el texto del aviso para así
añadir al aviso información actual.

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

Ningún error

0091

No hay ningún dispositivo registrado (se registra el evento de diagnóstico en el búfer de diagnóstico)

8083

Tipo de datos INFO1 no admisible

8084

Tipo de datos INFO2 no admisible

8085

EVENTN no admisible

8086

Longitud de INFO1 no admisible

8087

Longitud de INFO2 no admisible

8091

(Este código de error aparece solo en versiones antiguas de la CPU.)
No hay ningún dispositivo registrado (se registra el evento de diagnóstico en el búfer de diagnóstico)

8092

En este momento no es posible la transmisión: búfer de transmisión lleno (se registra el evento de
diagnóstico en el búfer de diagnóstico)

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

AR_SEND: Enviar datos de fichero
Descripción
Esta instrucción envía datos de fichero a sistemas de control y observación registrados al
efecto. Estos notifican a la CPU el número de fichero relevante en el telegrama de registro. Los
datos de fichero pueden tener un tamaño de hasta 65534 bytes, en función de la memoria de
trabajo de la CPU y del área de operandos utilizada. El formato de los datos de fichero debe
tener en cuenta las especificaciones del sistema de control y observación utilizado.
El proceso de transmisión se activa después de la llamada del bloque y de un flanco
ascendente en la entrada de control REQ. La dirección inicial de los datos de fichero que se
deben enviar se define mediante SD_1, y la longitud del bloque de datos, mediante LEN. El
envío de los datos se efectúa de modo asíncrono respecto al procesamiento del programa de
usuario. La finalización correcta del proceso de transmisión se indica con "1" en el parámetro

Programación del PLC
Manual de programación y manejo, 11/2019

6103

Instrucciones
4.2 Instrucciones
de estado DONE. Con un flanco ascendente en la entrada de control R se cancela el proceso
de transmisión en curso.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "AR_SEND":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

Parámetro de control request

R

Input

BOOL

I, Q, M, D, L

Parámetro de control reset: Interrupción de
la petición actual

ID

Input

WORD

I, Q, M, D o constante Canal de datos para avisos: W#16#EEEE
ID solo se evalúa en la primera llamada.

AR_ID

Input

C_AR_SEND

I, Q, M, D, L o cons‐
tante

Número de fichero (no autorizado: 0);
AR_ID solo se evalúa en la primera llamada.
Tras ello, en cada llamada de "AR_SEND"
con el DB de instancia correspondiente, se
utiliza el mismo número de fichero que en la
primera llamada.
El número de fichero se asigna automática‐
mente. Con ello se garantiza la coherencia
de los números de fichero.

DONE

Output

BOOL

I, Q, M, D, L

Parámetro de estado DONE: Transmisión
finalizada

ERROR

Output

BOOL

I, Q, M, D, L

El parámetro de estado ERROR:
ERROR=TRUE significa que se ha produci‐
do un error durante el procesamiento. Para
más detalles, véase el parámetro STATUS.

STATUS

Output

WORD

I, Q, M, D, L

Parámetro de estado STATUS: Ver una in‐
formación de error

SD_1

InOut

ANY

I, Q, M, D, T, C

Puntero a datos de fichero. La indicación de
longitud no se evalúa.
Solo se permiten los tipos de datos BOOL
(no permitido: mapa de bits), BYTE, CHAR,
WORD, INT, DWORD, DINT, REAL, DATE,
TOD, TIME, S5TIME, DATE_AND_TIME.
Los datos de fichero deben tener un formato
adecuado para el sistema de destino.
Nota: Si el puntero ANY accede a un DB,
éste siempre debe especificarse (por ej.:
P# DB10.DBX5.0 byte 10).

LEN

InOut

WORD

I, Q, M, D, L

Longitud en bytes del bloque de datos que
debe transferirse

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6104

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros ERROR y STATUS
La tabla siguiente contiene toda la información de error específica que puede devolverse a
través de los parámetros ERROR y STATUS .
ERROR

STATUS

Explicación

(decimal)
0

11

Advertencia: La nueva petición no tiene efecto, ya que la anterior todavía no ha finalizado.

0

25

La comunicación se ha iniciado. La petición está en proceso.

1

1

Problemas de comunicación

1

2

Acuse negativo, la función no puede ejecutarse

1

3

No existe registro para la AR_ID indicada.

1

4

● Error en el puntero a datos de fichero SD_1 referente a la longitud o al tipo de datos
● En la primera llamada, la AR_ID indicada se encuentra fuera del rango admisible.

1

5

Se ha ejecutado la solicitud de reset

1

7

La petición RESETes irrelevante, ya que la función en curso ha finalizado o no ha sido activada
(bloque en estado erróneo)

1

10

No es posible acceder a la memoria de usuario local
(p. ej. acceso a un DB borrado)

1

12

En la llamada de la instrucción ha ocurrido lo siguiente:
● Se ha indicado un DB de instancia que no pertenece a AR_SEND
● No se ha indicado ningún DB de instancia, sino un DB global

1

18

AR_ID ya ha sido utilizada por un AR_SEND.

1

20

La memoria de trabajo disponible no es suficiente.

Coherencia de datos
Para garantizar la coherencia de datos, no puede volver a escribirse en la parte del área de
transmisión SD_1 utilizada actualmente hasta que no haya finalizado el proceso de
transmisión actual. Esto ocurre cuando el parámetro de estado DONE adopta el valor "1".

Otras
EN_MSG: Habilitar avisos PLC
Descripción
Esta instrucción permite volver a habilitar avisos de PLC bloqueados. Es indiferente que el
bloqueo se haya realizado desde un visualizador o con "DIS_MSG (Página 6107)".
Los avisos que se deben habilitar se indican mediante los parámetros de entrada MODEy
MESGN. El requisito para el inicio correcto de una habilitación con esta instrucción es que en
el momento actual no esté activo ningún otro bloqueo de la misma instrucción.
Para iniciar la habilitación, debe ajustarse a "1" el parámetro de entrada REQ.

Programación del PLC
Manual de programación y manejo, 11/2019

6105

Instrucciones
4.2 Instrucciones

Funcionamiento
La habilitación se efectúa de modo asíncrono, es decir, puede prolongarse durante varias
llamadas de la instrucción (ver también Diferencia entre las instrucciones que funcionan
síncronamente y las que funcionan asíncronamente (Página 4813)):
● En la primera llamada (REQ =1), la instrucción comprueba los parámetros de entrada e
intenta asignar los recursos de sistema necesarios. Si la comprobación da resultado
positivo, se efectúa el registro en RET_VAL W#16#7001, se activa BUSY, y se lanza la
habilitación.
De lo contrario, se registra en RET_VAL la correspondiente información de error, y la
petición finaliza. En tal caso, BUSY no debe evaluarse.
● Si hay llamadas intermedias, se efectúa el registro en RET_VAL W#16#7002 (la CPU
todavía procesa la petición), y se activa BUSY. Las llamadas intermedias no afectan a la
petición en curso.
● En la última llamada, se efectúa el registro en RET_VALW#16#0000 si no se han detectado
errores. En ese caso, BUSY se ajusta a 0. En caso de error, se registra la información de
error en RET_VAL , y BUSY no debe evaluarse.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "EN_MSG":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción
REQ = 1: Lanzar habilitación

REQ

Input

BOOL

I, Q, M, D, L

MODE

Input

BYTE

I, Q, M, D, L o constante Parámetros para seleccionar los avisos que
deben habilitarse: ver la tabla siguiente;

MESGN

Input

DWORD

I, Q, M, D, L o constante Número de aviso
Relevante solo para MODE = 6. Esto permi‐
te habilitar un aviso individual.

RET_VAL

Return

INT

I, Q, M, D, L

Información de error (ver abajo);

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La habilitación todavía no ha fi‐
nalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro MODE
La tabla siguiente recoge los valores admisibles del parámetro de entrada MODE .
Valor

Significado

0

Todos los avisos de PLC de la CPU generados con instrucciones

1

Todos los avisos de PLC de la CPU generados con instrucciones, es decir, todos los avisos de "NOTIFY
(Página 6080)", "NOTIFY_8P (Página 6073)", "ALARM (Página 6083)", "ALARM_8P (Página 6077)" y
"ALARM_8 (Página 6075)"

6

Alarma individual de la clase "Avisos PLC generados con instrucciones"

6106

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

La habilitación ha finalizado sin errores.

7000

Primera llamada con REQ =0: No se ha activado la habilitación.

7001

Primera llamada con REQ =1: Se ha lanzado la habilitación.

7002

Llamada intermedia: La habilitación ya está activa.

8081

Error al acceder a un parámetro

8082

MODE tiene un valor no válido.

8083

El número de aviso se encuentra fuera del rango de valores admisible.

8084

No hay ningún registro para el/los aviso(s) especificado(s) mediante MODE y en su caso mediante
MESGN .

80C3

La habilitación del/los aviso(s) especificado(s) mediante MODE y en su caso mediante MESGN no se
puede lanzar en este momento, porque ya está activa otra habilitación de "EN_MSG ".

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

DIS_MSG: Bloquear avisos PLC
Descripción
Esta instrucción permite bloquear avisos de PLC generados con instrucciones. Los avisos que
se deben bloquear se definen mediante los parámetros de entrada MODEy MESGN. El
requisito para un bloqueo correcto con la instrucción "DIS_MSG" es que en el momento actual
no esté activo ningún otro bloqueo con "DIS_MSG".
Los avisos que al llamar "DIS_MSG" ya están preparados para ser enviados, pero todavía se
encuentran en un búfer interno, no se ven afectados por el bloqueo, y por lo tanto se transmiten.
El bloqueo de avisos se notifica en las salidas ERROR y STATUS de las instrucciones
"NOTIFY (Página 6080)", "NOTIFY_8P (Página 6077)", "ALARM (Página 6083)", "ALARM_8P
(Página 6077)" y "ALARM_8 (Página 6075)".
Para iniciar el proceso, al llamar "DIS_MSG" debe ajustarse a "1"el parámetro de entrada REQ.

Programación del PLC
Manual de programación y manejo, 11/2019

6107

Instrucciones
4.2 Instrucciones

Funcionamiento
El bloqueo se efectúa de modo asíncrono, es decir, puede prolongarse durante varias
llamadas (ver también Diferencia entre las instrucciones que funcionan síncronamente y las
que funcionan asíncronamente (Página 4813)):
● En la primera llamada (REQ =1), "DIS_MSG" comprueba los parámetros de entrada e
intenta asignar los recursos de sistema necesarios. Si la comprobación da resultado
positivo, se efectúa el registro en RET_VALW#16#7001, se activa BUSY y se lanza el
bloqueo.
De lo contrario, se registra en RET_VAL la correspondiente información de error, y la
petición finaliza. En tal caso, BUSY no debe evaluarse.
● Si hay llamadas intermedias, se efectúa el registro en RET_VALW#16#7002 (la CPU
todavía procesa la petición), y se activa BUSY. Las llamadas intermedias no afectan a la
petición en curso.
● En la última llamada, se efectúa el registro en RET_VALW#16#0000, si no se han
detectado errores. En este caso, BUSY se ajusta a "0". En caso de error, se registra la
información de error en RET_VAL, y BUSY no debe evaluarse.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DIS_MSG":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: Lanzar bloqueo

MODE

Input

BYTE

I, Q, M, D, L o cons‐
tante

Parámetros para seleccionar los avisos que
deben bloquearse: ver la tabla siguiente

MESGN

Input

DWORD

I, Q, M, D, L o cons‐
tante

Número de aviso
Relevante solo para MODE= 5, 6, 7. Esto per‐
mite bloquear un aviso individual.

RET_VAL

Return

INT

I, Q, M, D, L

Código de error (ver abajo)

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: El bloqueo todavía no ha finalizado.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro MODE
La tabla siguiente recoge los valores admisibles del parámetro de entrada MODE .
Valor

Significado

0

Todos los avisos de PLC de la CPU generados con instrucciones

1

Todos los avisos de PLC de la CPU generados con instrucciones, es decir, todos los avisos de "NOTIFY (Pági‐
na 6080)", "NOTIFY_8P (Página 6073)", "ALARM (Página 6083)", "ALARM_8P (Página 6077)" y "ALARM_8
(Página 6075)"

6

Alarma individual de la clase "Avisos PLC generados con instrucciones"

6108

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

El bloqueo ha finalizado sin errores.

7000

Primera llamada con REQ =0: No se ha activado el bloqueo.

7001

Primera llamada con REQ =1: Se ha lanzado el bloqueo.

7002

Llamada intermedia: El bloqueo ya está activo.

8081

Error al acceder a un parámetro

8082

MODE tiene un valor no válido.

8083

El número de aviso se encuentra fuera del rango de valores admisible.

8084

No hay ningún registro para el/los aviso(s) especificado(s) mediante MODE y en su caso mediante
MESGN .

80C3

El bloqueo del/los aviso(s) especificado(s) mediante MODE y en su caso mediante MESGN no se puede
lanzar en este momento, porque ya está activo otro bloqueo de "DIS_MSG".

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

READ_SI: Leer recursos del sistema asignados dinámicamente
Creación de recursos del sistema asignados dinámicamente al generar avisos con las instrucciones
"ALARM_DQ" y "ALARM_D"
Al crear avisos con "ALARM_DQ (Página 6096)" y "ALARM_D (Página 6094)", el sistema
operativo asigna temporalmente espacio de almacenamiento en la memoria del sistema.
Si p. ej. se borra un FB presente en la CPU mediante llamadas de "ALARM_DQ (Página 6096)"
o "ALARM_D (Página 6094)", puede suceder que los correspondientes recursos del sistema
queden ocupados de modo permanente. Si se vuelve a cargar el FB con llamadas de
"ALARM_DQ (Página 6096)" o "ALARM_D (Página 6094)", puede suceder que las
instrucciones "ALARM_DQ (Página 6096)" y "ALARM_D (Página 6094)" no se procesen
debidamente.

Descripción
Con la instrucción "READ_SI" se pueden leer los recursos del sistema utilizados actualmente
que se han ocupado al generar avisos con "ALARM_DQ (Página 6096)" y "ALARM_D
(Página 6094)". Para esto se emplean los valores EV_ID y CMP_ID. Dichos valores se envían
a la instrucción "READ_SI" en el parámetro SI_ID .
La instrucción "READ_SI" tiene 4 modos de operación posibles, que se enumeran en la tabla
siguiente. El modo de operación deseado se ajusta con el parámetro MODE.
MODE

¿Qué recursos del sistema ocupados por "ALARM_DQ" / "ALARM_D" se leen?

1

Todos (la llamada de "READ_SI" se efectúa con SI_ID:=0)

2

El recurso del sistema que se ha ocupado en la llamada de "ALARM_DQ" / "ALARM_D" con EV_ID:=ev_id (la
llamada de READ_SI se efectúa con SI_ID:=ev_id)

Programación del PLC
Manual de programación y manejo, 11/2019

6109

Instrucciones
4.2 Instrucciones
MODE

¿Qué recursos del sistema ocupados por "ALARM_DQ" / "ALARM_D" se leen?

3

Todos los recursos del sistema que se han ocupado en la llamada de "ALARM_DQ" / "ALARM_D" con
CMP_ID:=cmp_id (la llamada de READ_SI se efectúa con SI_ID:=cmp_id)

0

Otros recursos del sistema que no se han podido leer en la llamada anterior con MODE=1 o MODE=3 , por
haberse elegido un campo de destino SYS_INST demasiado pequeño

Funcionamiento
Si al llamar READ_SI con MODE=1 o MODE=3 se ha escogido un área de destino SYS_INST
lo suficientemente grande, dicha área contendrá después de la llamada el contenido de todos
los recursos del sistema seleccionados mediante el parámetro MODE que estén ocupados en
el momento actual.
Si en el momento actual hay una gran cantidad de recursos del sistema ocupados, el tiempo
de ejecución será prolongado. Si la CPU tiene mucha carga de trabajo, puede ser que se
rebase el tiempo máximo de vigilancia de ciclo configurado.
Este problema de tiempo de ejecución puede resolverse de la siguiente manera: Escoja un
área de destino SYS_INST relativamente pequeña. Si la instrucción no puede guardar en
SYS_INST todos los recursos del sistema que se deben leer, se recibirá una notificación a
través de RET_VAL=W#16#0001. En tal caso, debe llamarse READ_SI, con MODE=0 y la
misma SI_ID que en la llamada anterior, tantas veces como sea necesario para que RET_VAL
adquiera el valor W#16#0000.
Nota
Dado que el sistema operativo no coordina las llamadas de READ_SIcorrespondientes a una
petición de lectura, todas las llamadas de READ_SIdeben efectuarse en la misma clase de
prioridad.

6110

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "READ_SI":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

INT

I, Q, M, D, L o cons‐
tante

ID de la petición
Valores permitidos:
● 1: Leer todos los recursos del sistema
● 2: Leer el recurso del sistema que se ha
ocupado en la llamada de "ALARM_DQ" /
"ALARM_D" con EV_ID = ev_id
● 3: Leer los recursos del sistema que se han
ocupado en la llamada de "ALARM_DQ" /
"ALARM_D" con CMP_ID = cmp_id
● 0: Llamada consecutiva

SI_ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Identificador para el/los recurso(s) del sistema
que se debe(n) leer
Valores permitidos:
● 0, si MODE=1
● Número de aviso ev_id, si MODE=2
● Identificador cmp_id del sistema parcial, si
MODE=3

RET_VAL

Return

INT

I, Q, M, D, L

Valor de retorno (información de error o estado
de la petición)

N_SI

Output

INT

I, Q, M, D, L

Número de recursos del sistema que se mues‐
tran en SYS_INT

SYS_INST

Output

ANY

D

Área de destino para los recursos del sistema
leídos

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

0001

No se han podido leer todos los recursos del sistema, porque se ha elegido un área de destino SYS_INST
demasiado pequeña.

8081

(solo con MODE=2 ó 3) Se ha asignado a SI_ID el valor 0.

8082

(solo con MODE=1) Se ha asignado a SI_ID un valor distinto de 0.

8083

(solo con MODE=0) Se ha asignado a SI_ID un valor distinto al de la llamada anterior con MODE=1 ó 3.

8084

Se ha asignado a MODE un valor no admisible.

8085

READ_SI ya está procesándose en otro OB.

8086

El área de destino SYS_INST es demasiado pequeña para un recurso del sistema.

Programación del PLC
Manual de programación y manejo, 11/2019

6111

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
8087 o 8092

El área de destino SYS_INST no se encuentra en un DB, o hay un error en el puntero ANY.

8xyy

Información de error general
Consulte también: ALARM_D: Generar siempre avisos PLC acusados (Página 6094)

Parámetro Área de destino SYS_INST: Estructura
El área de destino para los recursos del sistema ocupados leídos debe encontrarse dentro de
un DB. Es recomendable definir el área de destino como un campo de estructuras, cada una
de ellas con el siguiente formato:
Elemento de estruc‐
tura

Tipo de datos

Descripción

SFC_NO

WORD

N.º de la instrucción que ha asignado el recurso del sistema

LEN

BYTE

Longitud en bytes de la estructura, incl. SFC_NO y LEN: B#16#0C

SIG_STAT

BOOL

Estado de señal

ACK_STAT

BOOL

Estado de acuse del evento entrante (flanco ascendente)

EV_ID

DWORD

Número de aviso

CMP_ID

DWORD

Identificador del sistema parcial

DEL_SI: Borrar recursos del sistema asignados dinámicamente
Creación de recursos del sistema asignados dinámicamente al generar avisos con las instrucciones
"ALARM_DQ" y "ALARM_D"
Al crear avisos con "ALARM_DQ (Página 6096)" y "ALARM_D (Página 6094)", el sistema
operativo asigna temporalmente espacio de almacenamiento en la memoria del sistema.
Si p. ej. se borra un FB presente en la CPU mediante llamadas de "ALARM_DQ (Página 6096)"
o "ALARM_D (Página 6094)", puede suceder que los correspondientes recursos del sistema
queden ocupados de modo permanente. Si se vuelve a cargar el FB con llamadas de
"ALARM_DQ (Página 6096)" / "ALARM_D (Página 6094)", puede suceder que las
instrucciones "ALARM_DQ (Página 6096)" y "ALARM_D (Página 6094)" no se procesen
debidamente.

Descripción
La instrucción "DEL_SI" permite borrar recursos del sistema utilizados en el momento actual.

6112

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
"DEL_SI" tiene tres modos de operación posibles, que se enumeran en la tabla siguiente. El
modo de operación deseado se ajusta con el parámetro MODE .
MODE

¿Qué recursos del sistema ocupados por "ALARM_DQ" / "ALARM_D" se borran?

1

Todos (la llamada de "DEL_SI" se efectúa con SI_ID:=0)

2

El recurso del sistema que se ha ocupado en la llamada de "ALARM_DQ" (Página 6096) / ALARM_D (Pági‐
na 6094) con EV_ID:=ev_id (la llamada de DEL_SI se efectúa con SI_ID:=ev_id)

3

Todos los recursos del sistema que se han ocupado en la llamada de "ALARM_DQ" (Página 6096) / ALARM_D
(Página 6094) con CMP_ID:=cmp_id (la llamada de DEL_SI se efectúa con SI_ID:=cmp_id)

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DEL_SI":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MODE

Input

INT

I, Q, M, D, L o cons‐
tante

ID de la petición
Valores permitidos:
● 1: Borrar todos los recursos del sistema
● 2: Borrar el recurso del sistema que se ha
ocupado en la llamada de "ALARM_DQ"
(Página 6096) / "ALARM_D (Página 6094)"
con EV_ID = ev_id
● 3: Borrar los recursos del sistema que se
han ocupado en la llamada
de "ALARM_DQ" (Página 6096) /
"ALARM_D (Página 6094)" con
CMP_ID = cmp_id

SI_ID

Input

DWORD

I, Q, M, D, L o cons‐
tante

Identificador para el/los recurso(s) del sistema
que se debe(n) borrar
Valores permitidos:
● 0, si MODE=1
● Número de aviso ev_id, si MODE=2
● Identificador cmp_id del sistema parcial, si
MODE=3

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8081

(solo con MODE=2 ó 3) Se ha asignado a SI_ID el valor "0".

8082

(solo con MODE=1) Se ha asignado a SI_ID un valor distinto de "0".

Programación del PLC
Manual de programación y manejo, 11/2019

6113

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
8084

Se ha asignado a MODE un valor no admisible.

8085

"DEL_SI" ya se está procesando en este momento.

8086

No se han podido borrar todos los recursos del sistema seleccionados, ya que por lo menos uno de ellos
estaba procesándose en el momento de la llamada de "DEL_SI".

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

4.2.3.9

Diagnóstico

RD_SINFO: Leer información de arranque del OB actual
Descripción
Esta instrucción permite leer la información de arranque:
● Del último OB llamado que todavía no se ha procesado completamente
● Del último OB de arranque iniciado
Ambas informaciones de arranque carecen de sello de tiempo. Si la llamada se produce en el
OB 100, el OB 101 o el OB 102, se devuelven dos informaciones de arranque idénticas.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RD_SINFO".
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

TOP_SI

Output

STRUCT

D, L

Información de arranque del OB actual

START_UP_SI

Output

STRUCT

D, L

Información de arranque del último OB de
arranque iniciado

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
La instrucción no devuelve información de error específica, sino únicamente general. La
información de error general y su evaluación se describen en el parámetro de salida
"RET_VAL".
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174).

6114

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros TOP_SI y START_UP_SI
Los parámetros de salida TOP_SI y START_UP_SI son dos estructuras con formato idéntico.
El formato de ambas se muestra en la tabla siguiente.
Elemento de estructura Tipo de datos

Descripción

EV_CLASS

BYTE

● Bits de 0 a 3: ID de evento

EV_NUM

BYTE

Número de evento

PRIORITY

BYTE

Número del nivel de ejecución
(significado de B#16#FE: El OB no existe, está bloqueado o no puede arran‐
carse en el actual estado operativo.)

NUM

BYTE

Número de OB

TYP2_3

BYTE

ID de datos 2_3:
identifica la información registrada en ZI2_3

TYP1

BYTE

ID de datos 1:
identifica la información registrada en ZI1

ZI1

WORD

Información adicional 1

ZI2_3

DWORD

Información adicional 2_3

● Bits de 4 a 7: Clase de evento

Nota
Los elementos estructurales indicados en la tabla anterior coinciden exactamente en su
contenido con las variables temporales de un OB.
Sin embargo, debe tenerse en cuenta que, en los distintos OBs, las variables temporales
pueden tener otros nombres y tipos de datos. También debe tenerse en cuenta que la interfaz
de llamada de los OBs contiene además la fecha y hora en que se solicitó el OB.
Los bits de 4 a 7 del elemento estructural EV_CLASS contienen la clase de evento. Aquí son
posibles los siguientes valores:
● 1: Eventos de arranque de OBs estándar
● 2: Eventos de arranque de OBs de errores síncronos
● 3: Eventos de arranque de OBs de errores asíncronos
El elemento estructural PRIORITY devuelve la clase de prioridad correspondiente al OB actual.
Además de estos dos elementos, también es importante NUM . NUM contiene el número del
OB actual o del último OB de arranque iniciado.

Ejemplo
Supongamos que el último OB llamado, que todavía no se ha procesado por completo, es el
OB 80, y el último OB de arranque llamado es el OB 100.

Programación del PLC
Manual de programación y manejo, 11/2019

6115

Instrucciones
4.2 Instrucciones
La tabla siguiente muestra la correspondencia entre los elementos estructurales del parámetro
TOP_SI de la instrucción "RD_SINFO" y las correspondientes variables locales del OB 80.
TOP_SI
Tipo de datos
Elemento de estructura

OB 80 - Variable local correspondiente

Tipo de datos

EV_CLASS

BYTE

OB80_EV_CLASS

BYTE

EV_NUM

BYTE

OB80_FLT_ID

BYTE

PRIORITY

BYTE

OB80_PRIORITY

BYTE

NUM

BYTE

OB80_OB_NUMBR

BYTE

TYP2_3

BYTE

OB80_RESERVED_1

BYTE

TYP1

BYTE

OB80_RESERVED_2

BYTE

ZI1

WORD

OB80_ERROR_INFO

WORD

ZI2_3

DWORD

OB80_ERR_EV_CLASS

BYTE

OB80_ERR_EV_NUM

BYTE

OB80_OB_PRIORITY

BYTE

OB80_OB_NUM

BYTE

La tabla siguiente muestra la correspondencia entre los elementos estructurales del parámetro
START_UP_SI de la instrucción "RD_SINFO" y las correspondientes variables locales del
OB 100.
START_UP_SI
Tipo de datos
Elemento de estructura

OB 100 - Variable local

Tipo de datos

EV_CLASS

BYTE

OB100_EV_CLASS

BYTE

EV_NUM

BYTE

OB100_STRTUP

BYTE

PRIORITY

BYTE

OB100_PRIORITY

BYTE

NUM

BYTE

OB100_OB_NUMBR

BYTE

TYP2_3

BYTE

OB100_RESERVED_1

BYTE

TYP1

BYTE

OB100_RESERVED_2

BYTE

ZI1

WORD

OB100_STOP

WORD

ZI2_3

DWORD

OB100_STRT_INFO

DWORD

RDSYSST: Leer lista de estado del sistema
Descripción
Esta instrucción permite leer una lista parcial de las listas de estado del sistema (SZL) o un
extracto de lista parcial de SZL.
Para iniciar la lectura, al llamar "RDSYSST" debe ajustarse a "1" el parámetro de entrada
REQ . Si la operación de lectura se ha podido ejecutar de inmediato, la instrucción devuelve el

6116

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
valor "0" en el parámetro de salida BUSY. Si BUSY tiene el valor "1", la operación de lectura
todavía no ha finalizado.
Nota
Si se llama la instrucción "RDSYSST" en el OB de alarma de diagnóstico con la
SZL‑IDW#16#00B1, W#16#00B2 o W#16#00B3 y se accede al módulo que ha provocado la
alarma de diagnóstico, la lectura se efectúa de inmediato.
Con "RDSYSST" se transfieren siempre registros enteros.

Recursos del sistema
Si se lanzan varias operaciones de lectura con poca diferencia de tiempo entre sí (las
peticiones con los parámetros SZL_IDW#16#00B4, W#16#4C91, W#16#4092, W#16#4292,
W#16#4692 y, en su caso, W#16#00B1 y W#16#00B3), el sistema operativo garantiza la
ejecución de todas las peticiones sin que se produzcan interferencias entre ellas. En el
momento en que se alcanza el límite de los recursos del sistema, se envía una notificación
mediante RET_VAL. El estado de fallo temporal puede eliminarse repitiendo la petición.
El número máximo de peticiones activas "simultáneamente" para la instrucción depende de la
CPU.
Nota
En las CPU S7-400 puede transferirse un máximo de 432 bytes al área de destino con la
instrucción "RDSYSST".

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RDSYSST":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ=1: Lanzar el procesamiento

SZL_ID

Input

WORD

I, Q, M, D, L o cons‐
tante

SZL‑ID de la lista parcial o del extracto de lista
parcial

INDEX

Input

WORD

I, Q, M, D, L o cons‐
tante

Tipo o número de un objeto en una lista parcial

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el parámetro RET_VAL conten‐
drá un código de error.

BUSY

Output

BOOL

I, Q, M, D, L

TRUE: La lectura todavía no ha finalizado.

Programación del PLC
Manual de programación y manejo, 11/2019

6117

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SZL_HEADER

Output

STRUCT

D, L

Véase más abajo

DR

Output

ANY

I, Q, M, L, D

Área de destino para la lista parcial SZL leída
o el extracto de lista parcial SZL leído:
● Si solo se ha leído la información de
encabezado de una lista parcial SZL, no se
debe evaluar DR, sino únicamente
SZL_HEADER.
● De lo contrario, el producto de LENTHDR y
N_DR indica cuántos bytes se han
registrado en DR.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro SZL_HEADER
El parámetro SZL_HEADER es una estructura que se define del siguiente modo:
SZL_HEADER:
STRUCT
LENTHDR: WORD
N_DR:
WORD
END_STRUCT
LENTHDR es la longitud de un registro de la lista parcial SZL o del extracto de lista parcial SZL.
● Si solo se ha leído la información de encabezado de una lista parcial SZL, N_DR contiene
el número de registros relevantes presentes.
● De lo contrario, N_DR contiene el número de registros transferidos al área de destino.

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

Ningún error

0081

La longitud del campo de resultado es insuficiente (a pesar de ello se enviarán todos los registros posibles.
La cantidad puede leerse en el SZL-Header.)

7000

Primera llamada con REQ=0: Ninguna transmisión de datos activa; BUSY tiene el valor "0".

7001

Primera llamada con REQ=1: Transmisión de datos iniciada; BUSY tiene el valor "1".

7002

Llamada intermedia (REQ irrelevante): Transmisión de datos activa; BUSY tiene el valor "1".

8081

La longitud del campo de resultado es insuficiente (no hay espacio para un registro)

8082

La SZL_ID es errónea o se desconoce en la CPU o en la instrucción.

8083

INDEX erróneo o no permitido

8085

En este momento la información no está disponible por razones atribuibles al sistema, p. ej. debido a falta
de recursos.

8086

No se puede leer el registro debido a un fallo del sistema (bus, módulos, sistema operativo).

8087

No se puede leer el registro porque el módulo no existe o no está acusado.

6118

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
8088

No se puede leer el registro porque la ID de módulo real difiere de la ID de módulo configurada.

8089

No se puede leer el registro porque el módulo no es apto para diagnóstico o no soporta el registro.

80A2

Error de protocolo de DP (error Layer 2) (error temporal)

80A3

Error de protocolo de DP con User-Interface/User (error temporal)

80A4

Fallo de comunicación en el bus K (el error se produce entre la CPU y la interfaz DP externa) (error
temporal)

80C5

Periferia descentralizada no disponible (error temporal)

80C6

La transferencia de registros se ha cancelado por una interrupción de la clase de prioridad (rearranque o
segundo plano)

80D2

No se puede leer el registro porque el módulo no es apto para diagnóstico.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Parámetro SZL_ID
Nota
Listas parciales legibles de las CPUs S7
● Encontrará las listas parciales para S7-300 legibles mediante "RDSYSST" en la
correspondiente lista de operación.
● Encontrará las listas parciales S7-400 legibles mediante "RDSYSST" en la correspondiente
lista de operación.

SZL_ID
(W#16#...)

Lista parcial

INDEX
(W#16#...)

ID de módulo
0111 (Pági‐
na 6127)

Un registro de identificación
Identificación del módulo

0001

Identificación del hardware base

0006

Identificación del firmware base

0007

Características de la CPU
0012 (Pági‐
na 6128)
0112 (Pági‐
na 6128)

Todas las características

Irrelevante

Características de un grupo
Unidad de procesamiento MC7

0000

Sistema horario

0100

Comportamiento del sistema

0200

Descripción de lenguaje MC7

0300

Disponibilidad de la instrucción "C_DIAG (Página 6184)" 0400
0F12 (Pági‐
na 6128)

Solo información de encabezado de la lista parcial SZL

Irrelevante

Áreas de memoria del usuario

Programación del PLC
Manual de programación y manejo, 11/2019

6119

Instrucciones
4.2 Instrucciones
SZL_ID
(W#16#...)

Lista parcial

INDEX
(W#16#...)

0113 (Pági‐
na 6131)

Un registro para el área de memoria especificada
Memoria de trabajo

0001

Áreas del sistema
0014 (Pági‐
na 6132)

Registros de todas las áreas del sistema

Irrelevante

0F14 (Pági‐
na 6132)

Solo información de encabezado de la lista parcial SZL

Irrelevante

Tipos de bloque
0015 (Pági‐
na 6133)

Registros de todos los tipos de bloque

Irrelevante

Identificación de un componente
001C (Pági‐
na 6134)

Identificación de todos los componentes

011C (Pági‐
na 6134)

Identificación de un componente

0F1C (Pági‐
na 6134)

Irrelevante

Nombre del sistema de automatización

0001

Nombre del módulo

0002

Identificador de la instalación del módulo

0003

Entrada de derechos de autor

0004

Número de serie del módulo

0005

Nombre de tipo de módulo

0007

Número de serie de la Memory Card

0008

Fabricante y perfil de un módulo de CPU

0009

Identificador de la situación de un módulo

000B

Solo información de encabezado de la lista parcial SZL

Irrelevante

Estado de alarma
0222 (Pági‐
na 6140)

Registro para la alarma especificada

Número de OB

Correspondencia entre memorias imagen parcial de proceso y CPUs
0025 (Pági‐
na 6143)

Correspondencia entre todas las memorias imagen par‐
cial de proceso y OBs

Irrelevante

0125 (Pági‐
na 6143)

Correspondencia entre una memoria imagen parcial de
proceso y el OB correspondiente

N.º de memoria imagen
parcial de proceso

0225 (Pági‐
na 6143)

Correspondencia entre un OB y las memorias imagen
parcial de proceso correspondientes

N.º de OB

0F25 (Pági‐
na 6143)

Solo información de encabezado de la lista parcial SZL

Irrelevante

Datos de estado de comunicación
0132 (Pági‐
na 6146)

0232 (Pági‐
na 6146)

6120

Datos de estado para un componente de comunicación
Diagnóstico

0005

Sistema horario

0008

Datos de estado para un componente de comunicación

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
SZL_ID
(W#16#...)

Lista parcial

INDEX
(W#16#...)

Nivel de protección de la CPU y posiciones del interruptor
de manejo

0004

Estado de los LEDs del módulo (no se puede leer en todas las CPUs)
0174 (Pági‐
na 6153)

Estado de un LED

Identificador de LED

Información del sistema maestro DP
0090 (Pági‐
na 6155)

Información acerca de todos los sistemas maestros DP
conocidos para la CPU

0000

0190 (Pági‐
na 6155)

Información acerca de un sistema maestro DP

ID del sistema maestro DP

0F90 (Pági‐
na 6155)

Solo información de encabezado de la lista parcial SZL

0000

Información de estado del módulo (se devuelven como máximo 27 registros.)
0091 (Pági‐
na 6156)

Información de estado del módulo de todos los módulos/ Irrelevante
submódulos insertados

0191 (Pági‐
na 6156)

Información de estado de todos los módulos/racks no de‐ Irrelevante
sactivados con ID de módulo errónea

0291 (Pági‐
na 6156)

Información de estado de módulo de todos los módulos
en estado de fallo y no desactivados

Irrelevante

0391 (Pági‐
na 6156)

Información de estado de módulo de todos los módulos
no disponibles

Irrelevante

0591 (Pági‐
na 6156)

Información de estado de módulo de todos los submódu‐ Irrelevante
los del módulo host

0991 (Pági‐
na 6156)

Información de estado de módulo de un sistema maestro
DP

ID del sistema maestro DP

0C91 (Pági‐
na 6156)

Información de estado de un módulo en configuración
centralizada o conectado a una interfaz DP integrada o a
una interfaz PROFINET (integrada o externa)

Dirección base lógica

4C91 (Pági‐
na 6156)

Información de estado de un módulo conectado a una
interfaz DP externa

Dirección base lógica

0D91 (Pági‐
na 6156)

Información de estado de módulo de todos los módulos
del rack o la estación especificados (DP o PROFINET)

ID del rack o del sistema
maestro DP y número de
estación, o número de es‐
tación seguido de las dos
últimas posiciones de la ID
del subsistema PNIO

0E91 (Pági‐
na 6156)

Información de estado de todos los módulos asignados

Irrelevante

0F91 (Pági‐
na 6156)

Solo información de encabezado de la lista parcial SZL

Irrelevante

Información de estado del rack/de la estación
0092 (Pági‐
na 6162)

Consigna de estado de los racks en configuración cen‐
0/ID del sistema maestro
tralizada o de las estaciones de un sistema maestro DP. DP

4092 (Pági‐
na 6162)

ID del sistema maestro DP
Consigna de estado de las estaciones de un sistema
maestro DP conectado a través de una interfaz DP exter‐
na.

Programación del PLC
Manual de programación y manejo, 11/2019

6121

Instrucciones
4.2 Instrucciones
SZL_ID
(W#16#...)

Lista parcial

INDEX
(W#16#...)

0192 (Pági‐
na 6162)

Estado de activación de las estaciones de un sistema
maestro DP conectado a través de una interfaz DP inte‐
grada.

ID del sistema maestro DP

0292 (Pági‐
na 6162)

Estado real de los racks en configuración centralizada o
de las estaciones de un sistema maestro DP.

0/ID del sistema maestro
DP

4292 (Pági‐
na 6162)

Estado real de las estaciones de un sistema maestro DP
conectado a través de una interfaz DP externa.

ID del sistema maestro DP

0392 (Pági‐
na 6162)

Estado del respaldo por batería de un rack de una CPU,
cuando falla por lo menos una batería.

0

0492 (Pági‐
na 6162)

Estado de todo el respaldo por batería de todos los racks
de una CPU.

0

0592 (Pági‐
na 6162)

Estado de la alimentación de 24 V de todos los racks de
una CPU.

0

0692 (Pági‐
na 6162)

Estado de diagnóstico de los aparatos de ampliación en 0/ID del sistema maestro
configuración centralizada o de las estaciones de un sis‐ DP
tema maestro DP conectado a través de una interfaz DP
integrada.

4692 (Pági‐
na 6162)

ID del sistema maestro DP
Estado de diagnóstico de las estaciones de un sistema
maestro DP conectado a través de una interfaz DP exter‐
na.

Información de estado del rack/de la estación
0094 (Pági‐
na 6165)

Estado teórico de los racks en configuración centralizada
o de las estaciones de un sistema de controlador IO.

0/ID del subsistema PNIO

0194 (Pági‐
na 6165)

Estado de activación de una estación de un sistema de
controlador IO configurado y desactivado.

ID del subsistema PNIO

0294 (Pági‐
na 6165)

Estado real de los racks en configuración centralizada o
de las estaciones de un sistema de controlador IO.

0/ID del subsistema PNIO

0694 (Pági‐
na 6165)

Estado de diagnóstico de los aparatos de ampliación en 0/ID del subsistema PNIO
configuración centralizada o de las estaciones de un sis‐
tema de controlador IO.

0794 (Pági‐
na 6165)

Estado de mantenimiento del rack central o de las esta‐
ciones de un sistema de controlador IO.

0/ID del subsistema PNIO

0F94 (Pági‐
na 6165)

Solo información de encabezado

-

Información avanzada del sistema maestro DP
0195 (Pági‐
na 6167)

Información avanzada acerca de un sistema maestro DP ID del sistema maestro DP

0F95 (Pági‐
na 6167)

Solo información de encabezado de la lista parcial SZL

0000

Información de estado del módulo con PROFINET IO y PROFIBUS DP
0696 (Pági‐
na 6168)

Información de estado de todos los submódulos de un
módulo especificado (solo con PROFINET IO conectado
a una interfaz integrada).

Dirección con identifica‐
ción E/S

0C96 (Pági‐
na 6168)

Información de estado de un módulo o submódulo central
o conectado a una interfaz PROFIBUS DP integrada o a
una interfaz PROFINET (integrada o externa)

Dirección inicial con identi‐
ficación E/S

Búfer de diagnóstico (se devuelven como máximo 21 registros)

6122

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
SZL_ID
(W#16#...)

Lista parcial

INDEX
(W#16#...)

00A0 (Pági‐
na 6175)

Todas las entradas transmisibles en el estado operativo
actual

Irrelevante

01A0 (Pági‐
na 6175)

Las entradas más recientes (el número se indica median‐ Número
te el índice)

0FA0 (Pági‐
na 6175)

Solo información de encabezado de la lista parcial SZL

Irrelevante

Datos de diagnóstico en módulos
00B1 (Pági‐
na 6176)

Los cuatro primeros bytes de diagnóstico de un módulo
(DS0)

Dirección base lógica

00B2 (Pági‐
na 6178)

Todos los datos de diagnóstico de un módulo (220 bytes,
DS1) (ningún módulo DP)

Rack, slot

00B3 (Pági‐
na 6179)

Todos los datos de diagnóstico de un módulo (220 bytes,
DS1)

Dirección base lógica

00B4 (Pági‐
na 6179)

Datos de diagnóstico de un esclavo DP

Dirección de diagnóstico
configurada

Consulte también
Diferencia entre las instrucciones que funcionan síncronamente y las que funcionan
asíncronamente (Página 4813)

Lista de estado del sistema
Sinopsis de la lista de estado del sistema (SZL)
Definición: Lista de estado del sistema
La lista de estado del sistema describe el estado actual de un sistema de automatización. El
contenido de la SZL (lista de estado del sistema) puede leerse, aunque no modificarse,
mediante funciones de información. Las listas parciales son listas virtuales, es decir, el sistema
operativo de los módulos centrales las confecciona solo a petición del usuario.
Solo es posible leer una lista parcial al mismo tiempo con "RDSYSST (Página 6116)". Aquí se
describen las listas parciales de la lista de estado del sistema que pueden leerse en el
programa de usuario mediante "RDSYSST (Página 6116)" y cuya información hace referencia
a
● CPUs o
● a los módulos cuyas listas parciales no son específicas de módulo (p. ej. las IDs de SZL
W#16#00B1, W#16#00B2, W#16#00B3).
Encontrará las listas parciales específicas de módulo, p. ej. para CPs y FMs, en las respectivas
descripciones de módulo.

Programación del PLC
Manual de programación y manejo, 11/2019

6123

Instrucciones
4.2 Instrucciones

Contenido
La lista de estado del sistema contiene información acerca de:
● Datos del sistema
● Información de estado del módulo en la CPU
● Datos de diagnóstico en módulos
● Búfer de diagnóstico

Datos del sistema
Los datos del sistema son datos característicos de una CPU, fijos o parametrizables.
Describen las siguientes características de rendimiento:
● Configuración de la CPU
● Estado de las clases de prioridad
● Comunicación.

Información de estado del módulo
La información de estado del módulo describe el estado actual de los componentes que se
vigilan mediante el diagnóstico del sistema.

Datos de diagnóstico en módulos
Los módulos aptos para diagnóstico asignados a una CPU poseen datos de diagnóstico que
se almacenan en los propios módulos.

Búfer de diagnóstico
El búfer de diagnóstico contiene entradas de diagnóstico en el orden en que se generan.

Estructura de una lista parcial de SZL
Principios básicos
Se puede leer una lista parcial o un extracto de lista parcial con "RDSYSST (Página 6116)".
Para ello se define con los parámetros SZL_ID (ID de lista de estado del sistema) e INDEX lo
que se desea leer.

Estructura
Una lista parcial se compone de
● un encabezado y
● los registros.

6124

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de una lista parcial se compone de:
● SZL-ID
● INDEX
● La longitud en bytes de un registro de la lista
● El número de registros que contiene la lista parcial.

Índice
Para determinadas listas parciales o extractos de listas parciales, es necesario especificar un
identificador de tipo de objeto o un número de objeto. Para ello se utiliza el índice. Si el índice
no se requiere para una información, su contenido es irrelevante.

Registros
Los registros de una lista parcial tienen una longitud determinada. Esta longitud depende de
qué información esté almacenada en la lista parcial. El modo en que las palabras de datos
están asignadas en un registro depende también de la lista parcial.

ID de SZL
SZL-ID (ID de lista de estado del sistema)
Cada lista parcial perteneciente a la lista de estado del sistema posee un número. Las listas
parciales pueden visualizarse de modo completo o parcial. Los extractos de lista parcial
posibles están definidos de modo fijo y se identifican a su vez mediante un número. La SZL-ID
se compone del número de la lista parcial y el número del extracto de lista parcial y de la clase
de módulo.

Estructura
La SZL-ID tiene una longitud de una palabra. Se compone de los siguientes elementos:


 

&ODVHGHPµGXOR





1¼PHURGHOH[WUDFWR



1¼PHURGHOLVWDSDUFLDO

GHOLVWDSDUFLDO

Figura 4-36

Estructura de la SZL-ID

Programación del PLC
Manual de programación y manejo, 11/2019

6125

Instrucciones
4.2 Instrucciones

Clase de módulo
Ejemplos de clases de módulos:
Clase de módulo

Cifrado correspondiente (binario)

CPU

0000

IM

0100

FM

1000

CP

1100

Número del extracto de lista parcial
Los números de extracto de lista parcial y su significado dependen de la lista parcial en
cuestión. Con el número de extracto de lista parcial se indica qué porción de una lista parcial
se desea leer.

Número de lista parcial
Con el número de lista parcial se indica qué lista parcial de la lista de estado del sistema se
desea leer.

Listas parciales de SZL posibles
Subset
En un módulo siempre está disponible solo una porción de todas las listas parciales posibles.
Según el módulo están disponibles unas listas parciales u otras.

Listas parciales de SZL posibles
La tabla siguiente recoge todas las listas parciales posibles con el número que les corresponde
dentro de la SZL-ID (ID de lista de estado del sistema).

6126

Lista parcial

SZL-ID

ID de módulo

W#16#xy11 (Pá‐
gina 6127)

Características de la CPU

W#16#xy12 (Pá‐
gina 6128)

Áreas de memoria del usuario

W#16#xy13 (Pá‐
gina 6131)

Áreas del sistema

W#16#xy14 (Pá‐
gina 6132)

Tipos de bloque

W#16#xy15 (Pá‐
gina 6133)

Identificación de un componente

W#16#xy1C (Pá‐
gina 6134)

Estado de alarma

W#16#xy22 (Pá‐
gina 6140)

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Lista parcial

SZL-ID

Correspondencia entre memorias imagen parcial de proceso y OBs

W#16#xy25 (Pá‐
gina 6143)

Comunicación: Datos de estado

W#16#xy32 (Pá‐
gina 6146)

Estado de los LEDs de módulo

W#16#xy74 (Pá‐
gina 6153)

Información del sistema maestro DP

W#16#xy90 (Pá‐
gina 6155)

Información de estado del módulo

W#16#xy91 (Pá‐
gina 6156)

Información de estado del rack/de la estación

W#16#xy92 (Pá‐
gina 6162)

Información de estado del rack/de la estación

W#16#xy94 (Pá‐
gina 6165)

Información avanzada del sistema maestro DP

W#16#xy95 (Pá‐
gina 6167)

Información de estado del módulo con PROFINET IO y PROFIBUS DP

W#16#xy96 (Pá‐
gina 6168)

Búfer de diagnóstico

W#16#xyA0 (Pá‐
gina 6175)

Información de diagnóstico del módulo (DS 0)

W#16#00B1 (Pá‐
gina 6176)

Información de diagnóstico del módulo (DS 1), dirección física

W#16#00B2 (Pá‐
gina 6178)

Información de diagnóstico del módulo (DS 1), dirección lógica

W#16#00B3 (Pá‐
gina 6179)

Datos de diagnóstico de un esclavo DP

W#16#00B4 (Pá‐
gina 6179)

ID de SZL W#16#xy11: ID de módulo
Finalidad
La identificación de este módulo se obtiene a través de la lista parcial con la SZL-ID (ID de lista
de estado del sistema) W#16#xy11.

Programación del PLC
Manual de programación y manejo, 11/2019

6127

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de SZL con la SZL-IDW#16#xy11 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL-ID del extracto de lista parcial
W#16#0111: Un solo registro de identificación

INDEX

Número de un determinado registro
W#16#0001: Identificación del módulo
W#16#0006: Identificación del hardware base
W#16#0007: Identificación del firmware base

LENTHDR

W#16#001C: Un registro tiene una longitud de 14 palabras (28 bytes)

N_DR

Número de registros

Registro
Un registro de la SZL con la SZL-IDW#16#xy11 tiene la siguiente estructura:
Nombre

Longitud

Significado

Index

1 palabra Número de un registro de identificación

MRPC

20 bytes

Machine-Readable Product Code
Con INDEX W#16#0007: Reservado
Con INDEXW#16#0001 y W#16#0006: Referencia del módulo; cadena de
19 caracteres y un espacio en blanco (20H); p. ej. para CPU 314: "6ES7
314-0AE01-0AB0"

ModuleType

1 palabra Reservado

OutMod1

1 palabra Con INDEXW#16#0001: Versión del módulo
Con INDEXW#16#0006 y W#16#0007: "V" y la primera cifra del identifica‐
dor de versión

OutMod2

1 palabra Con INDEXW#16#0001: Reservado
Con INDEXW#16#0006y W#16#0007: Resto de cifras del identificador de
versión

ID de SZL W#16#xy12: características de la CPU
Finalidad
Los módulos del tipo CPU poseen una serie de características con una clara dependencia del
hardware. Cada una de estas características tiene asignado un identificador. Las
características del módulo se pueden conocer a través de la lista parcial con la SZL-ID (ID de
lista de estado del sistema) W#16#xy12.

6128

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy12 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL-ID del extracto de lista parcial:
W#16#0012: Todas las características
W#16#0112: Características de un grupo; el grupo se indica en el parámetro INDEX.
W#16#0F12: Solo información de encabezado de la lista parcial SZL

INDEX

Grupo
W#16#0000: Unidad de procesamiento MC7
W#16#0100: Sistema horario
W#16#0200: Comportamiento del sistema
W#16#0300: Descripción de lenguaje MC7 de la CPU
W#16#0400: Disponibilidad de la instrucción "C_DIAG (Página 6184)"

LENTHDR

W#16#0002: Un registro tiene una longitud de una palabra (2 bytes)

N_DR

Número de registros

Registro
Un registro de la lista parcial con la SZL-IDW#16#xy12 tiene una longitud de una palabra. Para
cada característica existente hay almacenado un identificador de característica. Un
identificador de característica tiene una longitud de una palabra.
Nota
Se visualizan todos los registros relevantes para la CPU en uso. Se muestran uno tras otro sin
espacios intermedios.

Identificador de característica
La tabla siguiente contiene todos los identificadores de características.
Identificador

Significado

W#16#0000 - 00FF

Unidad de procesamiento MC7 (grupo con índice 0000)

W#16#0001

Procesamiento MC7 generador de código

W#16#0002

Intérprete MC7

W#16#0100 - 01FF

Sistema horario (grupo con índice 0100)

W#16#0101

Resolución de 1 ms

W#16#0102

Resolución de 10 ms

W#16#0103

Sin reloj en tiempo real

W#16#0104

Formato de hora BCD

W#16#0105

Conjunto de la funcionalidad horaria (ajustar hora, activar y leer estado de
hora, sincronización horaria: Reloj esclavo y reloj maestro)

W#16#0106

OB_RT está disponible

W#16#0200 - 02FF

Comportamiento del sistema (grupo con índice 0200)

Programación del PLC
Manual de programación y manejo, 11/2019

6129

Instrucciones
4.2 Instrucciones

6130

Identificador

Significado

W#16#0201

Apto para multiprocesamiento

W#16#0202

Arranque en frío, rearranque completo (en caliente) y rearranque disponi‐
bles

W#16#0203

Arranque en frío y rearranque completo (en caliente) disponibles

W#16#0204

Rearranque completo (en caliente) y rearranque disponibles

W#16#0205

Solo rearranque completo (en caliente) disponible

W#16#0206

Es posible reconfigurar en RUN para la periferia descentralizada mediante
módulos de reserva configurados.

W#16#0208

Con atención a la funcionalidad de Motion Control

W#16#0300 - 03FF

Descripción de lenguaje MC7 de la CPU (grupo con índice 0300)

W#16#0301

Ocupado

W#16#0302

Todos los comandos con números en coma fija de 32 bits

W#16#0303

Todos los comandos con números en coma flotante

W#16#0304

sin, asin, cos, acos, tan, atan, sqr, sqrt, ln, exp

W#16#0305

Acu3/Acu4 con los comandos correspondientes (ENT, PUSH, POP, LEA‐
VE)

W#16#0306

Comandos de Master Control Relay

W#16#0307

Registro de direcciones 1 presente con los comandos correspondientes

W#16#0308

Registro de direcciones 2 presente con los comandos correspondientes

W#16#0309

Comandos para el direccionamiento de varias áreas

W#16#030A

Comandos para el direccionamiento interno de un área

W#16#030B

Todos los comandos de direccionamiento indirecto mediante M

W#16#030C

Todos los comandos de direccionamiento indirecto mediante DB

W#16#030D

Todos los comandos de direccionamiento indirecto mediante DI

W#16#030E

Todos los comandos de direccionamiento indirecto mediante LD

W#16#030F

Todos los comandos para la transferencia de parámetros en instrucciones

W#16#0310

Comandos de marcas de flanco mediante E

W#16#0311

Comandos de marcas de flanco mediante A

W#16#0312

Comandos de marcas de flanco mediante M

W#16#0313

Comandos de marcas de flanco mediante DB

W#16#0314

Comandos de marcas de flanco mediante DI

W#16#0315

Comandos de marcas de flanco mediante LD

W#16#0316

Evaluación dinámica del bit ERAB

W#16#0317

Área de datos local dinámica con los correspondientes comandos

W#16#0318

Ocupado

W#16#0319

Ocupado

W#16#0401

Ocupado

W#16#0402

Reservado

W#16#0403

"C_DIAG (Página 6184)" está disponible

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

ID de SZL W#16#xy13: áreas de memoria del usuario
Finalidad
La información sobre las áreas de memoria de este módulo se puede obtener a través de la
lista parcial con la SZL-ID (ID de lista de estado del sistema) W#16#xy13.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy13 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

La SZL-ID del extracto de lista parcial
W#16#0113: Registro para un área de memoria
Para indicar el área de memoria debe usarse el parámetro INDEX.

INDEX

Indicar un área de memoria (solo con SZL-IDW#16#0113)
W#16#0001: Memoria de trabajo

LENTHDR

W#16#0024: Un registro tiene una longitud de 18 palabras (36 bytes)

N_DR

Número de registros

Registro
Un registro de la lista parcial con la SZL-IDW#16#xy13 tiene la siguiente estructura:
Nombre

Longitud

Significado

Index

1 palabra Índice de un área de memoria

Code

1 palabra Tipo de memoria:

W#16#0001: Memoria de trabajo
● W#16#0001: Memoria volátil (RAM)
● W#16#0002: Memoria no volátil (FEPROM)
● W#16#0003: Memoria mixta (RAM y FEPROM)
Size

2 pala‐
bras

Tamaño total de la memoria seleccionada (suma de Area1 y Area2)

Mode

1 palabra Modo lógico de la memoria
● Bit 0: Área de memoria volátil
● Bit 1: Área de memoria no volátil
● Bit 2: Área de memoria mixta
Para memoria de trabajo:
● Bit 3: Código y datos separados
● Bit 4: Código y datos juntos

Granularity

1 palabra Siempre ocupado con "0"

Area1

2 pala‐
bras

Tamaño en bytes del área de memoria volátil

Reserved1

2 pala‐
bras

Tamaño del área de memoria volátil ocupada

Programación del PLC
Manual de programación y manejo, 11/2019

6131

Instrucciones
4.2 Instrucciones
Nombre

Longitud

Significado

Block1

2 pala‐
bras

Mayor bloque libre en el área de memoria volátil

Area2

2 pala‐
bras

Tamaño en bytes del área de memoria no volátil

Reserved2

2 pala‐
bras

Tamaño del área de memoria no volátil ocupada

Block2

2 pala‐
bras

Mayor bloque libre en el área de memoria no volátil

Si es "0": No hay información o la información no se puede recuperar.

Si es "0": No hay información o la información no se puede recuperar.

ID de SZL W#16#xy14: áreas del sistema
Finalidad
La información sobre las áreas del sistema de este módulo se puede obtener a través de la lista
parcial con la SZL-ID (ID de lista de estado del sistema) W#16#xy14.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy14 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

La SZL-ID del extracto de lista parcial
W#16#0014: Todas las áreas del sistema de un módulo
W#16#0F14: Solo información de encabezado de la lista parcial SZL

INDEX

Irrelevante

LENTHDR

W#16#0008: Un registro tiene una longitud de 4 palabras (8 bytes)

N_DR

Número de registros
El número de registros debe parametrizarse por lo menos con 9. Si se elige un área
de destino demasiado pequeña, "RDSYSST (Página 6116)" no devuelve ningún
registro.

6132

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Registro
Un registro de la lista parcial con la SZL-IDW#16#xy14 tiene la siguiente estructura:
Nombre

Longitud

Index

1 palabra

Significado
Índice del área del sistema
● W#16#0001: PAE (cantidad en bytes)
● W#16#0002: PAA (cantidad en bytes)
● W#16#0003: Marca (cantidad en bits)
Nota: Este índice solo es devuelto por las CPUs en las que la cantidad de
marcas puede representarse en una palabra.
Si la CPU usada no devuelve este valor, debe evaluarse el índice
W#16#0008 .
● W#16#0004: Temporizadores (cantidad)
● W#16#0005: Contadores (cantidad)
● W#16#0006: Número de bytes en el área de direcciones lógica
● W#16#0007: Datos locales (toda el área de datos local de la CPU, en
bytes)
Nota: Este índice solo es devuelto por las CPUs en las que la longitud de toda
el área de datos local puede representarse en una palabra.
Si la CPU usada no devuelve este valor, debe evaluarse el índice
W#16#0009.
● W#16#0008: Marcas (cantidad en bytes)
● W#16#0009: Datos locales (toda el área de datos local de la CPU, en KB)

code

1 palabra

Tipo de memoria
● W#16#0001: Memoria volátil (RAM)
● W#16#0002: Memoria no volátil (FEPROM)
● W#16#0003: Memoria mixta (RAM y FEPROM)

number

1 palabra

Número de elementos del área del sistema

retentive

1 palabra

Número de elementos remanentes

ID de SZL W#16#xy15: Tipos de bloque
Finalidad
Los tipos de bloque presentes en un módulo se pueden conocer a través de la lista parcial con
la SZL-ID (ID de lista de estado del sistema) W#16#xy15.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy15 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

La SZL-ID del extracto de lista parcial
W#16#0015: Registros de todos los tipos de bloque de un módulo

INDEX

Programación del PLC
Manual de programación y manejo, 11/2019

Irrelevante

6133

Instrucciones
4.2 Instrucciones
Contenido

Significado

LENTHDR

W#16#000A: Un registro tiene una longitud de 5 palabras (10 bytes)

N_DR

Número de registros

Registro
Un registro de la lista parcial con la SZL-IDW#16#xy15 tiene la siguiente estructura:
Nombre

Longitud

Significado

Index

1 palabra Número de tipo de bloque
● W#16#0800: OB
● W#16#0A00: DB
● W#16#0B00: SDB
● W#16#0C00: FC
● W#16#0E00: FB

MaxNumber

1 palabra Número máximo de bloques del tipo
● con OBs: Número máximo posible de OBs de una CPU
● con DBs: Número máximo posible de DBs, incluido el DB0
● con SDBs: Número máximo posible de SDBs, incluido el SDB2
● con FCs y FBs: Número máximo posible de bloques cargables

MaxLenght

1 palabra Tamaño total máximo en KB del objeto de carga

MaxWorkMem

2 pala‐
bras

Longitud máxima en bytes de la porción de memoria de trabajo en un
bloque

ID de SZL W#16#xy1C: identificación de un componente
Finalidad
La CPU o el sistema de automatización se pueden identificar a través de la lista parcial con la
SZL-ID (ID de lista de estado del sistema) W#16#xy1C.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy1C tiene la siguiente estructura:
Contenido

Significado

SZL-ID

La SZL-ID del extracto de lista parcial
● W#16#001C: Identificación de todos los componentes
● W#16#011C: Identificación de un componente
● W#16#0F1C: Solo información de encabezado de la lista parcial SZL

6134

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Contenido

Significado

INDEX

● Identificación del componente para el extracto de lista parcial con la SZLIDW#16#011C y W#16#031C
–

W#16#0001: Nombre del sistema de automatización

–

W#16#0002: Nombre del módulo

–

W#16#0003: Identificador de la instalación del módulo

–

W#16#0004: Entrada de derechos de autor

–

W#16#0005: Número de serie del módulo

–

W#16#0007: Nombre del tipo de módulo

–

W#16#0008: Número de serie de la Memory Card
En los módulos que no permiten insertar una Memory Card, no se devuelve
ningún registro.

–

W#16#0009: Fabricante y perfil de un módulo de CPU

–

W#16#000A: Identificador OEM de un módulo (solo S7-300)

–

W#16#000B: Identificador de la situación de un módulo

–

W#16#000C: número de serie del módulo Sync 1

–

W#16#000D: número de serie del módulo Sync 2

● Número de rack correspondiente al extracto de lista parcial con la SZLIDW#16#021C (byte 0: Número de rack, byte 1: B#16#00)
LENTHDR

W#16#0022: Un registro tiene una longitud de 17 palabras (34 bytes)

N_DR

Número de registros

Registro
Un registro de la lista parcial con la SZL-IDW#16#xy1C tiene la siguiente estructura:
INDEX = W#16#0001
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial W#16#011C:
Identificador del componente: W#16#0001
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:
–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#01

name

12 palabras Nombre del sistema de automatización
(máximo 24 caracteres; si se utilizan menos, se rellena el resto con B#16#00)

res

4 palabras

Programación del PLC
Manual de programación y manejo, 11/2019

Reservado

6135

Instrucciones
4.2 Instrucciones
INDEX = W#16#0002
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial W#16#011C:
Identificador del componente: W#16#0002
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:
–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#02

name

12 palabras Nombre del módulo
(máximo 24 caracteres; si se utilizan menos, se rellena el resto con
B#16#00 )

res

4 palabras

Reservado

INDEX = W#16#0003
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial W#16#011C:
Identificador del componente: W#16#0003
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:

tag

–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#03

16 palabras Identificador de la instalación del módulo
(máximo 32 caracteres; si se utilizan menos, se rellena el resto con
B#16#00)

INDEX = W#16#0004
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial W#16#011C:
Identificador del componente: W#16#0004
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:

6136

–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#04

copyright

13 palabras Cadena de caracteres constante "Original Siemens Equipment"

res

3 palabras

Reservado

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
INDEX = W#16#0005
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial W#16#011C:
Identificador del componente: W#16#0005
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:

serialn

–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#05

12 palabras Número de serie del módulo (cadena de un máximo de 24 caracteres. Si se
utilizan menos, se rellena el resto con B#16#00).
Nota: El número de serie es unívoco en todo el mundo para componentes
SIMATIC. Está vinculado al hardware de la CPU, es decir, se mantiene aun
en caso de que se actualice el firmware.

res

4 palabras

Reservado

INDEX = W#16#0007
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial W#16#011C:
Identificador del componente: W#16#0007
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:

cputypname

Programación del PLC
Manual de programación y manejo, 11/2019

–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#07

16 palabras Nombre del tipo de módulo (cadena de un máximo de 32 caracteres. Si
se utilizan menos, se rellena el resto con B#16#00).

6137

Instrucciones
4.2 Instrucciones
INDEX = W#16#0008
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial W#16#011C:
Identificador del componente: W#16#0008
● Con los extractos de lista parcial W#16#011C, W#16#021C y
W#16#031C:
byte 0:

sn_mc/mmc

–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#08

16 palabras Número de serie de la Memory Card/Micro Memory Card (cadena de un
máximo de 32 caracteres). Si se utilizan menos, se rellena el resto con
B#16#00).
● Para números de serie Siemens: Número de serie sin
complementos
● Para números de serie de producto (PSN) de una Micro Memory
Card de S7: "MMC" más número de serie (PSN)
● Para números de serie de una Memory Card de S7: "MC" más
número de serie
Si no hay ninguna Memory Card insertada, la cadena de caracteres
finaliza justo después de "MMC" o "MC".

INDEX = W#16#0009
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial
W#16#011C: Identificador del componente: W#16#0009
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:

6138

–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#09

manufacturer_id

1 palabra

Ver PROFIBUS Profile Guidelines Part 1, Identification & Mainte‐
nance Functions

profile_id

1 palabra

Ver PROFIBUS Profile Guidelines Part 1, Identification & Mainte‐
nance Functions

profile_specific_typ

1 palabra

Ver PROFIBUS Profile Guidelines Part 1, Identification & Mainte‐
nance Functions

res

13 palabras Reservado

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
INDEX = W#16#000A
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial
W#16#011C: Identificador del componente: W#16#000A
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:
–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#0A

oem_copy‐
right_string

13 palabras

Identificador de copyright OEM (cadena de un máximo de 20 ca‐
racteres. Si se utilizan menos, se rellena el resto con B#16#00).

oem_id

1 palabra

ID de OEM. Asignada por Siemens.

oem_add_id

2 palabras

Identificador adicional de OEM. Definible por el usuario.

INDEX = W#16#000B
Nombre

Longitud

Significado

index

1 palabra

● Con una CPU estándar y el extracto de lista parcial W#16#011C:
Identificador del componente: W#16#000B
● Con los extractos de lista parcial W#16#021C y W#16#031C:
byte 0:

loc_id

–

Bits de 0 a 2: Número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111
byte 1: Identificador del componente: B#16#0B

16 palabras Identificador de situación (cadena de un máximo de 32 caracteres. Si se
utilizan menos, se rellena el resto con B#16#00).

INDEX = W#16#000C
Nombre

Longitud

Significado

index

1 palabra

● Byte0:
–

Bits de 0 a 2: número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111

● Byte 1: identificador del componente: B#16#0C
mlfb

5 palabras

Del carácter 10.º al 19.º de la referencia del módulo Sync 1

fill

1 palabra

Cuatro espacios (ASCII)

es

1 palabra

Versión (ASCII), p. ej. "01"

fill

1 byte

Dos espacios (ASCII)

vendor_sn

17 bytes

Número de serie

Programación del PLC
Manual de programación y manejo, 11/2019

6139

Instrucciones
4.2 Instrucciones

Nota
Si no existe el módulo Sync 1 o no se puede identificar, el registro se rellena según la variable
"index" con B#16#00.

INDEX = W#16#000D
Nombre

Longitud

Significado

index

1 palabra

● Byte0:
–

Bits de 0 a 2: número de rack;

–

Bit 3: 0 = CPU de reserva, 1 = CPU maestra;

–

Bits de 4 a 7: 1111

● Byte 1: identificador del componente: B#16#0D
mlfb

5 palabras

Del carácter 10.º al 19.º de la referencia del módulo Sync 2

fill

1 palabra

Cuatro espacios (ASCII)

es

1 palabra

Versión (ASCII), p. ej. "01"

fill

1 byte

Dos espacios (ASCII)

vendor_sn

17 bytes

Número de serie

Nota
Si no existe el módulo Sync 2 o no se puede identificar, el registro se rellena según la variable
"index" con B#16#00.

ID de SZL W#16#xy22: estado de alarma
Finalidad
El estado actual de procesamiento de alarma y generación de alarmas se puede conocer a
través de la lista parcial con la SZL-ID (ID de lista de estado del sistema) W#16#xy22.

6140

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy22 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL-ID del extracto de lista parcial
W#16#0222 Registro para la alarma especificada. Debe indicarse la alarma
(n.º de OB) en el parámetro INDEX.

INDEX

N.º de OB o clase de alarma (para SZL-IDW#16#0222)
W#16#0000: Ciclo libre
W#16#000A: Alarma horaria
W#16#0014: Alarma de retardo
W#16#001E: Alarma cíclica
W#16#0028: Alarma de proceso
W#16#0032: Alarma DP
W#16#003C: Alarma de sincronismo
W#16#0050: Alarmas de error asíncronas
W#16#005A: Segundo plano
W#16#0064: Arranque
W#16#0078: Alarmas de error sincrónicas

LENTHDR

W#16#001C: Un registro tiene una longitud de 14 palabras (28 bytes)

N_DR

Número de registros

Programación del PLC
Manual de programación y manejo, 11/2019

6141

Instrucciones
4.2 Instrucciones

Registro
Un registro de la lista parcial con la SZL-IDW#16#xy22 tiene la siguiente estructura:
Nombre

Longitud

Significado

Info

10 palabras Información de arranque del OB correspondiente, con las siguientes
excepciones:
● En el OB 1 se obtienen el tiempo de ciclo actual mínimo (en los
bytes 8 y 9) y máximo (en los bytes 10 y 11) (base de tiempo: ms,
recuento de bytes a partir de 0).
● Mientras está activa una petición para una alarma de retardo, los
bytes de 8 a 11 (recuento de bytes a partir de 0) contienen el tiempo
restante en ms respecto al retardo parametrizado.
● En el OB 80 se pueden leer el tiempo de ciclo configurado mínimo
(en los bytes 8 y 9) y máximo (en los bytes 10 y 11) (base de
tiempo: ms, recuento de bytes a partir de 0).
● Para alarmas de error sin información actual
● En las alarmas, la información de estado contiene la
parametrización actual de origen de la alarma.
● En los errores sincrónicos, se registra como clase de prioridad
B#16#7F si los OBs todavía no se han procesado; de lo contrario
se registra la clase de prioridad de la última llamada.
● Si un OB tiene varios eventos de arranque y estos no se han
producido todavía en el momento de recabar la información, se
devuelve como número de evento W#16#xyzz con:

6142

–

x: Clase de evento

–

zz: Número menor definido del grupo

–

y: Sin definir. De lo contrario, se utiliza el número del último
evento de arranque que se ha producido.

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nombre

Longitud

Significado

AlarmStatus1

1 palabra

Identificadores de procesamiento:
● Bit 0: Estado del evento de alarma fijado mediante
parametrización:
–

= 0: Habilitado

–

= 1: Bloqueado

● Bit 1: Estado del evento de alarma fijado mediante "DIS_IRT
(Página 6059)":
–

= 0: No bloqueado

–

= 1: Bloqueado

● Bit 2 = 1: El origen de la alarma está activo (en el caso de las
alarmas de tiempo, la petición de generación está vigente (OB de
alarma horaria iniciado), OB de alarma de retardo iniciado, OB de
alarma cíclica configurado)
● Bit 4: El OB de alarma
–

= 0: no está cargado

–

= 1: está cargado

● Bit 5: Estado del OB de alarma fijado mediante TIS:
–

= 1: Bloqueado

● Bit 6: Entrada en el búfer de diagnóstico
–
AlarmStatus2

1 palabra

= 1: Bloqueado

Reacción si el OB no está cargado o está bloqueado
● Bit 0 = 1: Bloquear origen de alarma
● Bit 1 = 1: Generar error de evento de alarma
● Bit 2 = 1: La CPU pasa al estado operativo STOP
● Bit 3 = 1: La alarma solo se descarta

AlarmStatus3

2 palabras

Descartar mediante funciones TIS:
N.º de bit x activado significa: El número de evento que excede en x el
menor número de evento del OB en cuestión está descartado median‐
te función TIS.

ID de SZL W#16#xy25: correspondencia entre memorias imagen parcial de proceso y OBs
Finalidad
La correspondencia entre memorias imagen parcial de proceso y OBs se puede conocer a
través de la lista parcial con la SZL-ID (ID de lista de estado del sistema) W#16#xy25.

Programación del PLC
Manual de programación y manejo, 11/2019

6143

Instrucciones
4.2 Instrucciones
La lista parcial informa acerca de
● Memorias imagen parcial de proceso que se han asignado a OBs individuales para su
actualización por el sistema
● Memorias imagen parcial de proceso que se han asignado a OBs de alarma de sincronismo
individuales (OBs 61 a 64) En este caso, la actualización de memorias imagen parcial de
proceso se realiza llamando las instrucciones "SYNC_PI (Página 5884)" y "SYNC_PO
(Página 5886)".
La correspondencia entre los sistemas maestros DP y los OBs de alarma de sincronismo
se puede conocer a través de SZL W#16#xy95 (Página 6167).

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy25 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL-ID del extracto de lista parcial
● W#16#0025: Correspondencia entre todas las memorias imagen parcial de proceso
y OBs dentro de la CPU
● W#16#0125: Correspondencia entre una memoria imagen parcial de proceso y el
correspondiente OB
El número de memoria imagen parcial de proceso se especifica en el parámetro
INDEX.
● W#16#0225: Correspondencia entre un OB y las correspondientes memorias imagen
parcial de proceso
El número de OB se especifica en el parámetro INDEX.
Nota: Solo es posible asignar varias memorias imagen parcial de proceso a los OBs
de alarma de sincronismo (OBs 61 a 64).
● W#16#0F25: Solo información de encabezado de la lista parcial SZL

INDEX

● Para SZL-ID W#16#0025: Irrelevante
● Para SZL-ID W#16#0125: N.º de memoria imagen parcial de proceso
● Para SZL-ID W#16#0225: N.º de OB
● Para SZL-ID W#16#0F25: Irrelevante

6144

LENTHDR

W#16#0004: Un registro tiene una longitud de 2 palabras (4 bytes)

N_DR

Número de registros

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Registro
Un registro del extracto de lista parcial con la SZL-IDW#16#xy25 tiene la siguiente estructura:
Nombre

Longitud

Significado

PPI*_nr

1 bytes

N.º de memoria imagen parcial de proceso

PPI*_use

1 bytes

Tipo de correspondencia entre memoria imagen parcial de proceso y OB:
● Bit 0 = 1: La memoria imagen parcial de proceso de entrada está
asignada al OB especificado para su actualización por el sistema.
● Bit 1 = 1: La memoria imagen parcial de proceso de salida está
asignada al OB especificado para su actualización por el sistema.
● Bit 2 = 1: La memoria imagen parcial de proceso de entrada está
asignada al OB de alarma de sincronismo especificado y puede
actualizarse llamando "SYNC_PI (Página 5884)" en ese OB.
● Bit 3 = 1: La memoria imagen parcial de proceso de salida está
asignada al OB de alarma de sincronismo especificado y puede
actualizarse llamando "SYNC_PO (Página 5886)" en ese OB.
● Bits de 4 a 7: 0

ob_nr

1 bytes

N.º de OB

res

1 bytes

Reservado

*PPI: Parial Process Image

Extractos de lista parcial
● Extracto de lista parcial con SZL-ID = W#16#0025:
Se devuelven en orden ascendente los registros de todas las memorias imagen parcial de
proceso que se han asignado a un OB en la configuración. Para las memorias imagen
parcial de proceso no asignadas a ningún OB, ob_nr tiene valor cero. No se devuelve
ningún registro para memorias imagen parcial de proceso.
● Extracto de lista parcial con SZL-ID = W#16#0125:
Si en la configuración se ha asignado un OB a la memoria imagen parcial de proceso a la
que se accede, se devuelve un registro. Si no se ha asignado ningún OB, no se devuelve
ningún registro.
Nota
La memoria imagen parcial de proceso 0 tiene asignado de modo predeterminado el OB 1.
En consecuencia, al solicitar información acerca de la memoria imagen parcial de proceso
0, siempre se obtiene un registro.

Programación del PLC
Manual de programación y manejo, 11/2019

6145

Instrucciones
4.2 Instrucciones
● Extracto de lista parcial con SZL-ID = W#16#0225:
Para cada memoria imagen parcial de proceso asignada al OB al que se accede, se
devuelve un registro. Si en la configuración no se ha asignado al OB al que se accede
ninguna memoria imagen parcial de proceso, no se devuelve ningún registro.
Nota
Los OBs de alarma de sincronismo pueden tener asignadas varias memorias imagen
parcial de proceso. En ese caso se devuelven varios registros.
● Extracto de lista parcial SZL-ID = W#16#0F25:
Se devuelve el número máximo posible de registros.

Ejemplos de significado de los registros
Parámetros de llamada
de "RDSYSST (Pági‐
na 6116)"

Variables devueltas

Explicación

SZL_ID = W#16#0125,
INDEX = W#16#0008

PPI*_nr = B#16#08,
PPI*_use = B#16#03,
ob_nr = B#16#15

Se devuelve un registro.
Las memorias imagen de proceso de entrada y sa‐
lida 8 están asignadas al OB 21 para su actualiza‐
ción por el sistema.

SZL_ID = W#16#0125,
INDEX = W#16#0009

–

No se devuelve ningún registro.
Por lo tanto: La memoria imagen parcial de proceso
9 no está asignada a ningún OB.

SZL_ID = W#16#0225,
INDEX = W#16#003D

PPI*_nr = B#16#0A,
PPI*_use = B#16#C0,
ob_nr = B#16#3D

Se devuelven dos registros.
El OB 61 tiene asignadas las memorias imagen de
proceso de entrada y salida 10 y 16. Estas pueden
actualizarse en el OB 61 llamando "SYNC_PI (Pá‐
gina 5884)" y "SYNC_PO (Página 5886)".

PPI*_nr = B#16#10,
PPI*_use = B#16#C0,
ob_nr = B#16#3D
SZL_ID = W#16#0225,
INDEX = W#16#0001

PPI*_nr = B#16#00,
PPI*_use = B#16#03,
ob_nr = B#16#01

Se devuelve un registro.
El OB 1 tiene asignadas las memorias imagen de
proceso de entrada y salida 0. Estas son actualiza‐
das por el sistema.

*PPI: Parial Process Image

ID de SZL W#16#xy32: Datos de estado de comunicación
ID de SZL W#16#xy32: Datos de estado de comunicación
Finalidad
Los datos de estado de comunicación del módulo se pueden obtener a través de la lista parcial
con la SZL-IDW#16#xy32.

6146

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL‑IDW#16#xy32 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL‑ID del extracto de lista parcial
● W#16#0132: Datos de estado de un componente de comunicación (siempre solo un
registro). Para indicar el componente de comunicación debe usarse el parámetro
INDEX.
● W#16#0232: Datos de estado para un componente de comunicación. Para indicar el
componente de comunicación debe usarse el parámetro INDEX.

INDEX

Componente de comunicación
● Para SZL‑IDW#16#0132:
–

W#16#0005 Diagnóstico

–

W#16#0008 Sistema horario

–

W#16#000B Sistema horario

–

W#16#000C Sistema horario

● Para SZL‑IDW#16#0232:
W#16#0004 Nivel de protección de la CPU, posiciones del interruptor de manejo e
identificadores de versión/sumas de verificación
LENTHDR

W#16#0028: Un registro tiene una longitud de 20 palabras (40 bytes)

N_DR

Número de registros

Registro
Un registro de la lista parcial con la SZL-IDW#16#0132 tiene siempre una longitud de 20
palabras. Los registros están ocupados de diferentes maneras. La ocupación depende del
parámetro INDEX, es decir, de a qué componente de comunicación corresponda el registro.

Registro del extracto de lista parcial con la ID de SZL W#16#0132 Índice W#16#0005
Contenido
El extracto de lista parcial con la SZL-IDW#16#0132 y el IndexW#16#0005 contiene
información acerca del estado de diagnóstico del módulo.

Registro
Un registro del extracto de lista parcial con la SZL-IDW#16#0132 y el IndexW#16#0005 tiene
la siguiente estructura:
Nombre

Longitud

Significado

Index

1 palabra

W#16#0005: Diagnóstico

ext

1 palabra

Funcionalidad avanzada
● 0: No
● 1: Sí

Programación del PLC
Manual de programación y manejo, 11/2019

6147

Instrucciones
4.2 Instrucciones
Nombre

Longitud

Significado

send

1 palabra

Transmisión automática
● 0: No
● 1: Sí

possible

1 palabra

La transmisión de avisos de diagnóstico del usuario es posible en este
momento
● 0: No
● 1: Sí

res

16 palabras Reservado

Registro del extracto de lista parcial con la ID de SZL W#16#0132 Índice W#16#0008
Contenido
El extracto de lista parcial con la SZL-IDW#16#0132 y el IndexW#16#0008 contiene
información acerca del estado del sistema horario del módulo.

Registro
Un registro del extracto de lista parcial con la SZL-IDW#16#0132 y el IndexW#16#0008 tiene
la siguiente estructura:
Nombre

Longitud

Significado

Index

1 palabra

W#16#0008: Estado del sistema horario

cycle

1 palabra

Reservado

corr

1 palabra

Factor de corrección de la hora

clock 0

1 palabra

Contador de horas de funcionamiento 0: Tiempo en horas

clock 1

1 palabra

Contador de horas de funcionamiento 1: Tiempo en horas

clock 2

1 palabra

Contador de horas de funcionamiento 2: Tiempo en horas

clock 3

1 palabra

Contador de horas de funcionamiento 3: Tiempo en horas

clock 4

1 palabra

Contador de horas de funcionamiento 4: Tiempo en horas

clock 5

1 palabra

Contador de horas de funcionamiento 5: Tiempo en horas

clock 6

1 palabra

Contador de horas de funcionamiento 6: Tiempo en horas

clock 7

1 palabra

Contador de horas de funcionamiento 7: Tiempo en horas

time

4 palabras

Fecha y hora actuales (formato: date_and_time)

rtm _0

1 bytes

Runtime meter
Bit x: Contador de horas de funcionamiento x, 0 ≤ x ≤ 7 (bit = 1: Contador
de horas de funcionamiento en marcha)

res

1 bytes

Reservado

rtmOV _0

1 bytes

Runtime meter Overflow
Bit x: Desbordamiento del contador de horas de funcionamiento x, 0 ≤ x
≤ 7 (bit = 1: Desbordamiento)

6148

res

1 bytes

Reservado

status

1 palabra

Estado de la hora (para la asignación de bits, ver abajo)

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nombre

Longitud

Significado

res

3 bytes

Reservado

status_valid

1 bytes

Validez de la variable status: B#16#01: status válida

Estado de la hora (status)
Bit

Valor prede‐
terminado

Descripción

15

0

Signo del valor de corrección
(0: positivo, 1: negativo)

de 14 a 10 00000

Valor de corrección
Este parámetro permite corregir la hora del módulo obtenida mediante
telegrama, p. ej. para ajustarla a la hora local:
Hora local = Hora del módulo ± Valor de
corrección * 0,5 h
Esta corrección tiene en cuenta la zona horaria y la diferencia entre el
horario de verano y el horario de invierno

9

0

Reservado

8

0

Reservado

7

0

Hora de aviso
Este parámetro indica si en el próximo cambio de hora se produce el cam‐
bio de horario de verano a horario de invierno o al revés.
(0: no se produce, 1: se produce)

6

0

Indicador de horario de verano/invierno
Este parámetro indica si la hora local calculada mediante el valor de co‐
rrección corresponde al horario de verano o al de invierno.
(0: horario de invierno, 1: horario de verano)

5

0

Este parámetro no se utiliza en S7.

de 4 a 3

00

Resolución de hora
Este parámetro refleja la exactitud de la hora transferida.
(00: 0,001 s, 01: 0,01 s, 10: 0,1 s, 11: 1 s)

2

0

Este parámetro no se utiliza en S7.

1

0

Este parámetro no se utiliza en S7.

0

0

Fallo de sincronización
Este parámetro indica si la hora transferida en el telegrama está sincroni‐
zada por un reloj maestro externo, p. ej. SICLOCK.
(0: la sincronización no se ha producido, 1: la sincronización se ha produ‐
cido)
Nota:
Solo tiene sentido evaluar este bit en una CPU si existe sincronización
horaria externa continua.

Programación del PLC
Manual de programación y manejo, 11/2019

6149

Instrucciones
4.2 Instrucciones

Registro del extracto de lista parcial con la ID de SZL W#16#0132 Índice W#16#000B
Contenido
El extracto de lista parcial con la SZL-IDW#16#0132 y el IndexW#16#000B contiene
información acerca del estado de los contadores de horas de funcionamiento de 32 bits de 0
a 7 del módulo.
Nota
En el extracto de lista parcial con la SZL-IDW#16#0132 y el IndexW#16#0008, estos
contadores de horas de funcionamiento aparecen como contadores de horas de
funcionamiento de 16 bits.
Esto permite seguir utilizando los programas que han sido desarrollados para una CPU con
contadores de horas de funcionamiento de 16 bits, y que usan el extracto de lista parcial con
la SZL-IDW#16#0132 y el IndexW#16#0008.

Registro
Un registro del extracto de lista parcial con la SZL-IDW#16#0132 y el índice W#16#000B tiene
la siguiente estructura:
Nombre

Longitud

Significado

Index

1 palabra W#16#000B: Estado del sistema horario

rtm _0

1 bytes

Runtime meter
Bit x: Estado del contador de horas de funcionamiento x , 0 ≤ x ≤ 7 (bit = 1:
Contador de horas de funcionamiento en marcha)

res

1 bytes

rtmOV _0

1 bytes

Reservado
Runtime meter overflow
Bit x: Desbordamiento del contador de horas de funcionamiento x, 0 ≤ x ≤ 7
(bit = 1: Desbordamiento)

6150

res

1 bytes

Reservado

clock 0

2 pala‐
bras

Contador de horas de funcionamiento 0: Tiempo en horas

clock 1

2 pala‐
bras

Contador de horas de funcionamiento 1: Tiempo en horas

clock 2

2 pala‐
bras

Contador de horas de funcionamiento 2: Tiempo en horas

clock 3

2 pala‐
bras

Contador de horas de funcionamiento 3: Tiempo en horas

clock 4

2 pala‐
bras

Contador de horas de funcionamiento 4: Tiempo en horas

clock 5

2 pala‐
bras

Contador de horas de funcionamiento 5: Tiempo en horas

clock 6

2 pala‐
bras

Contador de horas de funcionamiento 6: Tiempo en horas

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nombre

Longitud

Significado

clock 7

2 pala‐
bras

Contador de horas de funcionamiento 7: Tiempo en horas

res

1 palabra Reservado

Registro del extracto de lista parcial con la ID de SZL W#16#0132 Índice W#16#000C
Contenido
El extracto de lista parcial con la SZL-IDW#16#0132 y el INDEXW#16#000C contiene
información acerca del estado de los contadores de horas de funcionamiento de 32 bits de 8
a 15 del módulo.

Registro
Un registro del extracto de lista parcial con la SZL-IDW#16#0132 y el INDEXW#16#000C tiene
la siguiente estructura:
Nombre

Longitud

Significado

Index

1 palabra

W#16#000C: Estado del sistema horario

rtm_0

1 bytes

Runtime meter
Bit x: Estado del contador de horas de funcionamiento (8+x), 0 ≤ x ≤ 7 (bit =
1: Contador de horas de funcionamiento en marcha)

res

1 bytes

rtmOV _0

1 bytes

Reservado
Runtime meter overflow
Bit x: Desbordamiento del contador de horas de funcionamiento (8+x), 0 ≤ x
≤ 7 (bit = 1: Desbordamiento)

res

1 bytes

Reservado

clock 8

2 pala‐
bras

Contador de horas de funcionamiento 8: Tiempo en horas

clock 9

2 pala‐
bras

Contador de horas de funcionamiento 9: Tiempo en horas

clock 10

2 pala‐
bras

Contador de horas de funcionamiento 10: Tiempo en horas

clock 11

2 pala‐
bras

Contador de horas de funcionamiento 11: Tiempo en horas

clock 12

2 pala‐
bras

Contador de horas de funcionamiento 12: Tiempo en horas

clock 13

2 pala‐
bras

Contador de horas de funcionamiento 13: Tiempo en horas

clock 14

2 pala‐
bras

Contador de horas de funcionamiento 14: Tiempo en horas

clock 15

2 pala‐
bras

Contador de horas de funcionamiento 15: Tiempo en horas

res

1 palabra

Reservado

Programación del PLC
Manual de programación y manejo, 11/2019

6151

Instrucciones
4.2 Instrucciones

Registro del extracto de lista parcial con la SZL-ID W#16#0232 Índice W#16#0004
Contenido
El extracto de lista parcial con la SZL-IDW#16#0232 y el Index W#16#0004 contiene
información acerca del nivel de protección de la CPU, las posiciones del selector de modo y las
sumas de verificación de la configuración de hardware y del programa de usuario.

Registro
Un registro del extracto de lista parcial con la SZL-IDW#16#0232 y el Index W#16#0004 tiene
la siguiente estructura:
Nombre

Longitud

Significado

Index

1 palabra

● Byte 1:
B#16#04: Nivel de protección de la CPU, posiciones del selector de modo y
sumas de verificación
● Byte 0:
CPU estándar: B#16#00
Bit 3: 0 = CPU de reserva, 1 = CPU maestra
Bits de 4 a 7: 1111

ProtLevel_ModeSwitch

1 palabra

Nivel de protección ajustado mediante selector de modo (1, 2, 3)

ProtLevel_Par

1 palabra

Nivel de protección parametrizado (0, 1, 2, 3; 0: No hay ninguna contraseña
asignada, nivel de protección no válido).

ProtLevel_Valid

1 palabra

Nivel de protección válido de la CPU

ModeSwitch

1 palabra

Posición del selector de modo (1:RUN, 2:RUN-P, 3:STOP, 4:MRES, 0:no defi‐
nida o desconocida)

Startup_ModeSwitch

1 palabra

Posición del selector de tipo de arranque (1:CRST, 2:WRST, 0:no definida, no
existente o desconocida)

res

1 palabra

Reservado

ID_Val_CheckSum

1 palabra

Identificador de la validez de las cuatro sumas de verificación siguientes (0: no
válido)

ID_CheckSum1_HWConf

1 palabra

Suma de verificación 1 de la configuración de hardware (formato Intel):
Operación lógica O-exclusiva con las longitudes de todos los bloques de datos
del sistema

ID_CheckSum2_HWConf

1 palabra

Suma de verificación 2 de la configuración de hardware (formato Intel):
Operación lógica O-exclusiva con las sumas de verificación de todos los blo‐
ques de datos del sistema

ID_CheckSum1_UserProg

1 palabra

Suma de verificación 1 del programa de usuario (formato Intel):
Operación lógica O-exclusiva con las longitudes de los siguientes bloques: OBs,
DBs, FBs, FCs

ID_CheckSum2_UserProg

1 palabra

Suma de verificación 2 del programa de usuario (formato Intel):
Operación lógica O-exclusiva con las sumas de verificación de los siguientes
bloques: OBs, DBs, FBs, FCs

res

2 palabras

Reservado

sfc_req

1 palabra

Petición de nivel de protección 2 o 3 realizada por la instrucción "PROTECT" (1:
petición realizada)

6152

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nombre

Longitud

Significado

sfc_act

1 palabra

Activación del nivel de protección 2 o 3 realizada por la instrucción "PROTECT"
(1: activación realizada)

res

4 palabras

Reservado

SZL-ID W#16#xy74: estado de los LEDs de módulo
Finalidad
El estado de los LEDs de módulo se puede conocer a través de la lista parcial con la SZL-ID
W#16#xy74 en las CPU estándar (si existe).

Programación del PLC
Manual de programación y manejo, 11/2019

6153

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL-ID W#16#xy74 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL-ID del extracto de lista parcial
W#16#0174 Estado de un LED.
Para seleccionar el LED debe usarse el parámetro INDEX.

INDEX

Identificador de LED (relevante solo para SZL-IDW#16#0174)
● W#16#0001: SF (error de grupo)
● W#16#0002: INTF (error interno)
● W#16#0003: EXTF (error externo)
● W#16#0004: RUN
● W#16#0005: STOP
● W#16#0006: FRCE (forzar permanentemente)
● W#16#0007: CRST (rearranque completo)
● W#16#0008: BAF (error de batería/sobrecarga, cortocircuito de la tensión de
batería en el bus)
● W#16#0009: USR (personalizado)
● W#16#000A: USR1 (personalizado)
● W#16#000B: BUS1F (error de bus interfaz 1)
● W#16#000C: BUS2F (error de bus interfaz 2) o BUS5F (error de bus interfaz 5) en
las CPUs 414-3 PN/DP, 416-3 PN/DP y 416F-3 PN/DP
● W#16#0012: IFM1F (error de interfaz, módulo de interfaz 1)
● W#16#0013: IFM2F (error de interfaz, módulo de interfaz 2)
● W#16#0014: BUS3F (error de bus interfaz 3)
● W#16#0015: MAINT (mantenimiento solicitado)
● W#16#0016: DC 24 V
● W#16#0017: BUS5F (error de bus interfaz 5)
● W#16#0080: IF (fallo de inicialización)
● W#16#0081: UF (fallo de usuario)
● W#16#0082: MF (fallo de monitorización)
● W#16#0083: CF (fallo de comunicación)
● W#16#0084: TF (fallo de tarea)
● W#16#00EC: APPL_STATE_RED
● W#16#00ED: APPL_STATE_GREEN

6154

LENTHDR

W#16#0004: Un registro tiene una longitud de 2 palabras (4 bytes)

N_DR

Número de registros

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Registro
Un registro de la lista parcial con la SZL-ID W#16#xy74 tiene la siguiente estructura:
Nombre

Longitud

Significado

CPU_LED_ID

1 palabra ● Byte 0:
–

CPU estándar: B#16#00

–

Bit 3: 0=CPU de reserva, 1=CPU maestra

–

Bits de 4 a 7: 1111

● Byte 1: Identificador de LED
LED_on

1 byte

Estado del LED:
● 0: Off
● 1: On

LED_flash

1 byte

Estado de parpadeo del LED:
● 0: Sin parpadeo
● 1: Parpadeo normal (2 Hz)
● 2: Parpadeo lento (0,5 Hz)

SZL-ID W#16#xy90: información del sistema maestro DP
Finalidad
La información de estado de todos los sistemas maestros DP conocidos por la CPU se puede
obtener a través de la lista parcial con la SZL-IDW#16#xy90.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy90 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

La SZL-ID del extracto de lista parcial
W#16#0090: Información acerca de todos los sistemas maestros DP conocidos por la
CPU
W#16#0190: Información acerca de un sistema maestro DP
W#16#0F90: Solo información de encabezado de lista parcial

INDEX

● Para el extracto de lista parcial con la SZL-IDW#16#0190:
–

byte menos significativo: B#16#00

–

byte más significativo: ID del sistema maestro DP

● Para los extractos de lista parcial con las SZL-IDW#16#0090 y W#16#0F90:
–

W#16#0000

LENTHDR

W#16#000E: Un registro tiene una longitud de 7 palabras (14 bytes)

N_DR

Número de registros
Para el extracto de lista parcial con la SZL-IDW#16#0190: de 0 a 1
Para el extracto de lista parcial con la SZL-IDW#16#0090:
● Con una CPU estándar: de 0 a 14

Programación del PLC
Manual de programación y manejo, 11/2019

6155

Instrucciones
4.2 Instrucciones

Registro
Un registro de la lista parcial con la IDW#16#xy90 tiene la siguiente estructura:
Nombre

Longitud

Significado

dp_m_id

1 bytes

ID del sistema maestro DP

dp_m_rack

1 bytes

Número de rack del maestro DP
● Con una CPU estándar: 0

dp_m_slot

1 bytes

Slot del maestro DP o
slot de la CPU (con interfaz DP integrada)

dp_m_SubModule

1 bytes

● Con interfaz DP integrada: Número de interfaz del maestro DP:
–

1: X2

–

2: X1

–

3: IF1

–

4: IF2

● Con interfaz DP externa: 0
logadr

1 palabra

Dirección lógica inicial del maestro DP

res

1 palabra

Reservado

res

1 palabra

Reservado

dp_m_state

1 bytes

Otras características del sistema maestro DP
Bit 0:

Modo DP
● 0: Compatible con S7
● 1: DPV1

Bit 1:

Ciclo DP
● 0: No equidistante
● 1: Equidistante

Bits de 2 a
6:

● Reservado

Bit 7:

Tipo de maestro DP
● 0: Maestro DP integrado
● 1: Maestro DP externo

res

3 bytes

Reservado

SZL-ID W#16#xy91: información de estado de módulo
Finalidad
La información de estado de todos los módulos asignados a la CPU se puede obtener a través
de la lista parcial con la SZL-ID W#16#xy91.
Nota
No es posible evaluar la SZL-ID W#16#xy91 para un módulo con direcciones comprimidas
(ET 200S).

6156

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL-ID W#16#xy91 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

La SZL-ID del extracto de lista parcial
● W#16#0091 Información de estado de todos los módulos/submódulos insertados y configurados de la
CPU (solo S7-400)
● W#16#0191 Información de estado de todos los módulos/racks no desactivados con ID de módulo
errónea (solo S7-400)
● W#16#0291 Información de estado de todos los módulos en estado de fallo y no desactivados (solo
S7-400)
● W#16#0391 Información de estado de todos los módulos no disponibles (solo S7-400)
● W#16#0591 Información de estado de módulo de todos los submódulos del módulo host
● W#16#0991 Información de estado de módulo de un sistema maestro DP
● W#16#0A91 Información de estado de todos los subsistemas DP y sistemas maestros DP (solo
S7-300 sin CPU 318-2 DP), así como sistemas PROFINET IO
● W#16#0C91 Información de estado de un módulo en configuración centralizada o conectado a una
interfaz DP integrada o a una interfaz PROFINET a través de la dirección base lógica
● W#16#4C91 Información de estado de un módulo conectado a una interfaz DP externa a través de la
dirección base lógica
Si se usan más de 4 interfaces DP externas, puede producirse erróneamente un RET_VAL
W#16#80A4.
● W#16#0D91 Información de estado de todos los módulos del rack o la estación indicados (DP o
PROFINET)
● W#16#0E91 Información de estado de todos los módulos asignados
● W#16#0F91 Solo información de encabezado de lista parcial SZL

Programación del PLC
Manual de programación y manejo, 11/2019

6157

Instrucciones
4.2 Instrucciones
Contenido

Significado

INDEX

● Para el extracto de lista parcial con la SZL-ID W#16#0C91:
–

S7-400:
Bits de 0 a 14: Dirección base lógica del módulo,
Bit 15: 0 = entrada, 1 = salida

–

S7-300:
Bits de 0 a 14: Cualquier dirección lógica del módulo,
Bit 15: 0 = entrada, 1 = salida

● Para el extracto de lista parcial con la SZL-ID W#16#4C91 (solo S7-400):
–

Bits de 0 a 14: Dirección base lógica del módulo,

–

Bit 15: 0 = entrada/1 = salida

● Para el extracto de lista parcial con las IDs de SZL W#16#0091, W#16#0191,W#16#0291,
W#16#0391, W#16#0491, W#16#0591, W#16#0A91, W#16#0E91, W#16#0F91:
INDEX es irrelevante, todos los módulos (en rack y en periferia descentralizada)
● Para el extracto de lista parcial con la SZL-ID W#16#0991 (solo S7-400):
W#16#xx00: todos los módulos de un sistema maestro DP (xx contiene la ID de sistema maestro DP)
● Para el extracto de lista parcial con la SZL-ID W#16#0D91
–

W#16#00xx: todos los módulos y submódulos de un rack (xx contiene el número del rack)

–

W#16#xxyy: todos los módulos de una estación DP o todos los dispositivos IO de una estación
PROFINET IO (PROFIBUS DP: xx contiene la ID del sistema maestro DP, yy el número de
estación; PROFINET IO: bits de 0 a 10: número de estación, bits de 11 a 14: las dos últimas
posiciones de la ID del subsistema PNIO, bit 15: 1 (ver abajo tercera figura con adr1)

LENTHDR

W#16#0010: Un registro tiene una longitud de 8 palabras (16 bytes)

N_DR

Número de registros; en función del producto, el número de registros transferidos a la instrucción
"RDSYSST (Página 6116)" puede ser menor

Con W#16#0091, W#16#0191 y W#16#0F91 se devuelven 2 registros adicionales por rack:
● Un registro para la fuente de alimentación, si la hay y está configurada, y
● un registro para el rack.
El orden de los registros en caso de configuración centralizada es el siguiente: PS, slot 1, slot
2,..., slot 18, rack.

6158

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Un registro de la lista parcial con la ID W#16#xy91 tiene la siguiente estructura:
Nombre

Longitud

Significado

adr1

1 palabra ● Con configuración centralizada: Número de rack
● En caso de configuración descentralizada con PROFIBUS DP: ID del sistema
maestro DP, número de estación
● En caso de configuración descentralizada con PROFINET IO: Bit 15 = 1
(identificador de PROFINET IO), las dos últimas posiciones de la ID del sistema
PROFINET IO, número de estación
Nota: Toda interfaz PROFINET tiene la consideración de "submódulo en
configuración centralizada", independientemente de su uso para PROFINET IO.

adr2

1 palabra ● En caso de configuración centralizada o descentralizada con PROFIBUS DP:
Número de slot y número de slot del submódulo
● En caso de configuración descentralizada con PROFINET IO: Número de slot
Nota: Toda interfaz PROFINET tiene la consideración de "submódulo en
configuración centralizada", independientemente de su uso para PROFINET IO.

LogicalAddr

1 palabra Primera dirección lógica E/S asignada (dirección base)

SetType

1 palabra PROFINET IO: Tipo teórico (ver abajo); de lo contrario, reservado

ActualType

1 palabra PROFINET IO: Tipo real (ver abajo); de lo contrario, reservado

res

1 palabra 00xx = N.º de CPU 1-4 (solo S7-400)
Con PROFINET IO:
● SZL-ID=W#16#0C91: Número de submódulos realmente existentes (sin contar el
submódulo 0)
● SZL-ID=W#16#0D91: Número de submódulos (sin contar el submódulo 0)
● SZL-ID=W#16#4C91: Número de submódulos realmente existentes (sin contar el
submódulo 0)
● SZL-ID=W#16#4D91: Número de submódulos realmente existentes (sin contar el
submódulo 0)

Programación del PLC
Manual de programación y manejo, 11/2019

6159

Instrucciones
4.2 Instrucciones
Nombre

Longitud

IOStat

1 palabra Estado E/S

Significado
● Bit 0 = 1: Fallo del módulo (detectado mediante alarma de diagnóstico)
● Bit 1 = 1: Módulo existente
● Bit 2 = 1: Módulo no disponible
● Bit 3 = 1: Módulo desactivado
● Bit 4 = 1: Fallo de la estación (solo slot de representante)
● Bit 5 = 1: Para este módulo o estación hay un proceso CiR activo actualmente, o
todavía no finalizado
● Bit 6 = 1: Reservado para S7-400
● Bit 7 = 1: Módulo en el segmento de bus local
● Bits de 8 a 15: Identificador de datos para dirección lógica (entrada: B#16#B4,
salida: B#16#B5, interfaz DP integrada: B#16#FE, interfaz DP externa: B#16#FF)

AreaID_ModuleWidth

1 palabra Identificación de área/ancho de módulo
● bits de 0 a 2: Ancho de módulo
● Bit 3: Reservado
● bits de 4 a 6: Identificación de área
–

0 = S7-400

–

1 = S7-300

–

2 = Área ET

–

3 = Área P

–

4 = Área Q

–

5 = Área IM3

–

6 = Área IM4

● Bit 7: Reservado

Con determinados módulos se muestran en el registro los siguientes valores:
Nombre

PS

CPU

(solo S7-400)

CPU IFM

Rack

(S7-300)

(solo S7-400)

adr1

Número de rack

Información estándar se‐ Información estándar se‐ Número de rack
gún se ha descrito ante‐ gún se ha descrito ante‐
riormente
riormente

adr2

W#16#01FF

W#16#0200 o
W#16#0200 a
W#16#1800

W#16#0200

W#16#00FF

LogicalAddr

W#16#0000

W#16#7FFF

W#16#007C

W#16#0000

SetType

Información estándar
según se ha descrito
anteriormente

W#16#00C0 o
W#16#0081 o
W#16#0082

W#16#00C0

Información estándar se‐
gún se ha descrito ante‐
riormente

6160

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Nombre

PS

CPU

(solo S7-400)

CPU IFM

Rack

(S7-300)

(solo S7-400)

IOStat

W#16#0000

Información estándar se‐ Información estándar se‐ W#16#0000
gún se ha descrito ante‐ gún se ha descrito ante‐
riormente
riormente

AreaID_Module‐
Width

W#16#0000

W#16#0011 o
W#16#0001 o
W#16#0002

W#16#0011

W#16#0000

Parámetro adr1
El parámetro adr1 contiene:
● En caso de configuración centralizada, el número de rack (0-31).
%LW

     

























1¼PHURGHUDFN



● En caso de estructura descentralizada con PROFIBUS DP
– La ID del sistema maestro DP (1-32)
– El número de estación (0-127).
%LW

     



















1¼PHURGHHVWDFLµQ

,'GHOVLVWHPDPDHVWUR'3

● En caso de estructura descentralizada con PROFINET IO
– Bit de identificación para PROFINET IO (bit 15)
– Las dos últimas posiciones de la ID del sistema PROFINET IO (0-15); para obtener la ID
del sistema PROFINET IO completa, sume 100 (decimal)
– El número de estación (0-2047).
%LW

     



Programación del PLC
Manual de programación y manejo, 11/2019

,'GHVLVWHPD,2





















1¼PHURGHHVWDFLµQ

6161

Instrucciones
4.2 Instrucciones

Parámetro adr2
El parámetro adr2 contiene:
● En caso de configuración centralizada o descentralizada con PROFIBUS DP, el número de
slot y el número de slot de submódulo
Bit:

     









6ORW













6ORWGHVXEPµGXOR

● En caso de configuración descentralizada con PROFINET IO, el número de slot.

Parámetros Tipo teórico (SetType) y Tipo real (ActualType) para PROFINET IO
ID de tipo

Significado

(W#16#...)
8100

Se especifica en Tipo teórico y en Tipo real si no es posible la comprobación de tipo.

8101

Se especifica en Tipo teórico si es posible la comprobación de tipo.

8101

Se especifica como Tipo real si Tipo teórico=Tipo real.

8102

Se especifica como Tipo real si Tipo teórico<>Tipo real.

SZL-ID W#16#xy92: Información de estado de rack o estación
Finalidad
A través de la lista parcial con la SZL-IDW#16#xy92 se puede obtener información acerca de
la configuración teórica y real de los racks con estructura centralizada y estaciones de un
sistema maestro DP.

6162

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Leer la SZL mediante "RDSYSST" con una CPU S7-400
Si se lee la lista parcial con "RDSYSST (Página 6116)", es imprescindible que los parámetros
SZL_ID y INDEX de "RDSYSST (Página 6116)" sean compatibles entre sí.
SZL_ID

INDEX

W#16#0092 o

ID de un sistema maestro DP conectado a través de una interfaz
DP integrada.

W#16#0192 o
W#16#0292 o
W#16#0392 o
W#16#0492 o
W#16#0592 o
W#16#0692
:

:

W#16#4092 o

ID de un sistema maestro DP conectado a través de una interfaz
DP externa.

W#16#4292 o
W#16#4692

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy92 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL-ID del extracto de lista parcial:
● W#16#0092: Consigna de estado de los racks en configuración centralizada o de
las estaciones de un sistema maestro DP conectado a través de una interfaz DP
integrada.
● W#16#4092: Consigna de estado de las estaciones de un sistema maestro DP
conectado a través de una interfaz DP externa.
● W#16#0192: Estado de activación de las estaciones de un sistema maestro DP
conectado a través de una interfaz DP integrada
● W#16#0292: Estado real de los racks en configuración centralizada o de las
estaciones de un sistema maestro DP conectado a través de una interfaz DP
integrada.
● W#16#0392: Estado del respaldo por batería de un rack de una CPU, cuando falla
por lo menos una batería.
● W#16#0492: Estado de todo el respaldo por batería de todos los racks de una CPU
● W#16#0592: Estado de la alimentación de 24 V de todos los racks de una CPU.
● W#16#4292: Estado real de las estaciones de un sistema maestro DP conectado a
través de una interfaz DP externa
● W#16#0692: Estado de diagnóstico de los aparatos de ampliación en configuración
centralizada o de las estaciones de un sistema maestro DP conectado a través de
una interfaz DP integrada
● W#16#4692: Estado de diagnóstico de las estaciones de un sistema maestro DP
conectado a través de una interfaz DP externa

INDEX

0/ID del sistema maestro DP

Programación del PLC
Manual de programación y manejo, 11/2019

6163

Instrucciones
4.2 Instrucciones
Contenido

Significado

LENTHDR

W#16#0010: El registro tiene una longitud de ocho palabras (16 bytes)

N_DR

Número de registros

Registro
Un registro de la lista parcial con la IDW#16#xy92 tiene la siguiente estructura:
Contenido

Longitud

Significado

status_0 a
status_15

16 bytes

Estado de rack/estado de estación, estado del respaldo o estado de activa‐
ción (el estado de activación solo es relevante para módulos DP).
● W#16#0092:
–

Bit=0: Rack/estación no configurados

–

Bit=1: Rack/estación configurados

● W#16#4092:
–

Bit=0: Estación no configurada

–

Bit=1: Estación configurada

● W#16#0192:
–

Bit=0: Estación no configurada o configurada y activada

–

Bit=1: Estación configurada y desactivada

● W#16#0292:
–

Bit=0: Fallo del rack/de la estación, o rack/estación desactivados o no
configurados

–

Bit=1: Rack/estación existentes, activados y sin fallo

● W#16#4292:
–

Bit=0: Fallo de la estación, o estación desactivada o no configurada

–

Bit=1: Estación existente, activada y sin fallo

● W#16#0692:
–

Bit=0: Todos los módulos del aparato de ampliación/de una estación
están presentes, disponibles y sin fallo, y la estación está activada

–

Bit=1: Por lo menos un módulo del aparato de ampliación/de una
estación no funciona correctamente, o la estación está desactivada

● W#16#4692:

status_0

1 bytes

–

Bit=0: Todos los módulos de una estación están presentes,
disponibles y sin fallo, y la estación está activada

–

Bit=1: Por lo menos un módulo de una estación no funciona
correctamente, o la estación está desactivada

Bit 0: Dispositivo central (INDEX = 0) o estación 1 (INDEX <> 0)
Bit 1: 1. Aparato de ampliación o estación 2
:
:
Bit 7: 7. Aparato de ampliación o estación 8

6164

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Contenido

Longitud

Significado

status_1

1 bytes

Bit 0: 8. Aparato de ampliación o estación 9
:
:
Bit 7: 15. Aparato de ampliación o estación 16

status_2

1 bytes

Bit 0: 16. Aparato de ampliación o estación 17
:
:
Bit 5: 21. Aparato de ampliación o estación 22
Bit 6: 0 o estación 23
Bit 7: 0 o estación 24

status_3

1 bytes

Bit 0: 0 o estación 25
:
:
Bit 5: 0 o estación 30
Bit 6: Aparato de ampliación en el rango SIMATIC-S5 o estación 31
Bit 7: 0 o estación 32

status_4

1 bytes

Bit 0: 0 o estación 33
:
:
Bit 7: 0 o estación 40

:
:
status_15

1 bytes

Bit 0: 0 o estación 121
:
:
Bit 7: 0 o estación 128

SZL-ID W#16#0x94: información de estado de rack o estación
Finalidad
A través de la lista parcial con la SZL-IDW#16#0x94 se puede obtener información acerca de
la configuración teórica y real de los racks en configuración centralizada y estaciones de un
sistema maestro PROFIBUS DP/un sistema de controlador PROFINET IO.

Programación del PLC
Manual de programación y manejo, 11/2019

6165

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#0y94 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL-ID del extracto de lista parcial:
● W#16#0094:
Consigna de estado de los racks en configuración centralizada o de las estaciones
de un sistema de controlador IO (bit de estado = 1: Rack/estación configurados)
● W#16#0194:
Estado de activación de una estación de un sistema de controlador IO configurada
y desactivada (bit de estado = 1)
● W#16#0294:
Estado real de los racks en configuración descentralizada o de las estaciones de un
sistema de controlador IO
(bit de estado = 1: Rack/estación existentes, activados y sin fallo)
● W#16#0694:
Estado de diagnóstico de los aparatos de ampliación en configuración
descentralizada o de las estaciones de un sistema de controlador IO (bit de estado
= 1: Por lo menos un módulo del rack o estación está en fallo o desactivado)
● W#16#0794:
Estado de diagnóstico / mantenimiento del rack central o de las estaciones de un
sistema de controlador IO (bit de estado = 0: No hay averías y no se requiere
mantenimiento, bit de estado = 1: El rack / la estación presenta una avería y / o se
necesita mantenimiento y / o se solicita mantenimiento)
● W#16#0F94:
Solo información de encabezado

INDEX

● 0: Módulo central
● 1-32: Módulo descentralizado conectado a PROFIBUS DP
● 100-115: Módulo descentralizado conectado a PROFINET IO

LENTHDR

Longitud del registro posterior

N_DR

Número de registros

Registro
Un registro de la lista parcial con la IDW#16#0y94 tiene la siguiente estructura:
Contenido

Longitud

index

1 palabra ● 0: Módulo central

Significado
● 1-32: Módulo descentralizado conectado a PROFIBUS DP
● 100-115: Módulo descentralizado conectado a PROFINET IO

status_0

BOOL

Información de grupo
● 1: Por lo menos uno de los bits de estado posteriores tiene el valor 1
● 0: Todos los bits de estado posteriores tienen el valor 0

6166

status_1

BOOL

Estado estación 1

status_2

BOOL

Estado estación 2

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Contenido

Longitud

Significado

BOOL

Estado estación 2047

..
status_2047

Un bit de estado de racks/estaciones/dispositivos no configurados contiene el valor "0".
Nota
Diferencia importante respecto a la SZL-IDW#16#xy92 anterior
Hay un desplazamiento de un bit en relación a la SZL-IDW#16#xy92 anterior, ya que el bit
status_0 sirve como información de grupo.

SZL-ID W#16#xy95: información avanzada del sistema maestro DP/sistema PROFINET IO
Finalidad
La información de estado avanzada de todos los sistemas maestros DP/ sistemas
PROFINET IO conocidos por la CPU se puede obtener a través de la lista parcial con la SZLIDW#16#xy95. En relación con la lista parcial con la SZL-IDW#16#xy90 se ha introducido
información sobre los sistemas PROFINET IO y datos adicionales acerca del modo isócrono
de un sistema maestro DP.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy95 tiene la siguiente estructura:
Contenido
SZL-ID

INDEX

Significado
La SZL-ID del extracto de lista parcial
W#16#0195:

Información avanzada acerca de un sistema maestro DP/sistema PROFINET IO

W#16#0F95:

Solo información de encabezado de la lista parcial SZL

● Para el extracto de lista parcial con la SZL-IDW#16#0195:
–

byte menos significativo: B#16#00

–

byte más significativo: ID de sistema maestro DP/ID de sistema PROFINET IO

● Para el extracto de lista parcial con la SZL-IDW#16#0F95:
–

W#16#0000

LENTHDR

W#16#0028:

Un registro tiene una longitud de 20 palabras (40 bytes)

N_DR

Número de registros:
Para el extracto de lista parcial con la SZL-IDW#16#0195: de 0 a 1

Programación del PLC
Manual de programación y manejo, 11/2019

6167

Instrucciones
4.2 Instrucciones

Registro
Un registro de la lista parcial con la IDW#16#xy95 tiene la siguiente estructura:
Nombre

Longitud

Significado

dp_m_id

1 bytes

ID de sistema maestro DP/ID de sistema PROFINET IO

dp_m_rack

1 bytes

Número de rack del maestro DP/controlador IO
● Con una CPU estándar: 0

dp_m_slot

1 bytes

Slot del maestro DP/controlador IO o
slot de la CPU (con interfaz DP integrada)

dp_m_SubModule

1 bytes

● Con interfaz integrada: Número de interfaz del maestro DP/controlador IO:
–

1: X2

–

2: X1

–

3: IF1

–

4: IF2

● Con interfaz externa: 0
LogicalAddr

2 bytes

Dirección lógica inicial del maestro DP/controlador IO

res

2 bytes

Reservado

res

2 bytes

Reservado

dp_m_state

1 bytes

● Otras características del sistema maestro DP/sistema PROFINET IO
Bit 0:

Modo DP (solo con PROFIBUS DP)
● 0: Compatible con S7
● 1: DPV1

Bit 1:

Ciclo DP o PN
● 0: No equidistante
● 1: Equidistante

Bits de 2 a 6:

● Reservado

Bit 7:

Tipo de maestro DP/controlador IO
● 0: Maestro DP integrado/controlador IO integrado
● 1: Maestro DP externo/controlador IO externo

dp_address

1 bytes

Número de dispositivo DP (dirección PROFIBUS)

res

2 bytes

Reservado

SyncCyclInter_OB

1 bytes

OB de alarma de sincronismo asignado (relevante solo si el ciclo DP o PN es equidistante)

res

1 bytes

Reservado

baudrate

4 bytes

Velocidad de transferencia del sistema maestro DP o del sistema PNIO en formato Hex

IsoDPCycle

4 bytes

Duración en μs del ciclo DP o PN equidistante

res

16 bytes

Reservado

SZL-ID W#16#xy96: información de estado de módulo con PROFINET IO y PROFIBUS DP
Finalidad
La información de estado de todos los módulos asignados a la CPU se puede obtener a través
de la lista parcial con la SZL-IDW#16#xy96.

6168

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Para complementar SZL-IDW#16#xy91 (Página 6156), la lista parcial con la SZLIDW#16#xy96 ofrece datos de estado adicionales de módulos y submódulos.
Contiene información específica de PROFINET IO e información sobre módulos PROFIBUS
DP y módulos centrales.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xy96 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

La SZL-ID del extracto de lista parcial
● W#16#0696
Información de estado de todos los submódulos de un módulo especificado (con PROFIBUS DP y
módulos centrales, el nivel de submódulo no existe).
● W#16#0C96
Información de estado de un módulo/un submódulo central o conectado a una interfaz PROFIBUS DP/
PROFINET a través de la dirección inicial.

INDEX

● Bits de 0 a 14: Dirección del módulo
● Bit 15: 0 = entrada, 1 = salida

LENTHDR

Longitud del registro posterior

N_DR

Número de registros

Registro
Un registro de la lista parcial con la IDW#16#xy96 tiene la siguiente estructura:
Contenido

Longitud

Significado

LogicalAddr

1 palabra

● Bits de 0 a 14: Dirección del módulo
● Bit 15: 0 = entrada, 1 = salida

System

1 palabra

ID de módulo central/ ID de sistema maestro DP/ ID de sistema PROFINET IO:
● 0: Módulo central
● 1-32: Módulo descentralizado conectado a PROFIBUS DP
● 100-115: Módulo descentralizado conectado a PROFINET IO

API*

2 palabras

Perfil de aplicación configurado para un dispositivo PROFINET descentralizado.
Los perfiles son definiciones específicas de sector o de tecnología, que van más allá
de la norma PROFINET.
En el perfil 0, los datos concuerdan completamente con las definiciones de la norma
PROFINET.

Station

1 palabra

Número de rack/número de estación/número de dispositivo

Slot

1 palabra

Número de slot

Subslot

1 palabra

Slot de submódulo (si no puede insertarse ningún módulo, debe indicarse aquí "0")

Offset

1 palabra

Offset en el área de direcciones de datos útiles del módulo correspondiente

Programación del PLC
Manual de programación y manejo, 11/2019

6169

Instrucciones
4.2 Instrucciones
Contenido

Longitud

Significado

SetType

7 palabras

Tipo teórico
En PROFINET IO, el tipo teórico tiene estructura jerárquica

SetType_UnEqual_Ac‐
tualType

1 palabra

Pala‐
bra

PROFINET IO

PROFIBUS DP

1:

Número de fabricante o ID de perfil (p. ej.:
W#16#FF00 para PROFIBUS)

0000

2:

Dispositivo

0000

3:

Número consecutivo o índice de perfil

0000

4:

1. Palabra de la palabra doble ID módulo

ID de tipo

5:

2. Palabra de la palabra doble ID módulo

0000

6:

1. Palabra de la palabra doble ID submódulo

0000

7:

2. Palabra de la palabra doble ID submódulo

0000

Identificador teórico/real
● Bit 0 = 0: Teórico coincide con real
● Bit 0 = 1: Teórico no coincide con real
● Bits de 1 a 15: Reservado

res

1 palabra

Reservado

IOStat

1 palabra

Estado E/S
● Bit 0 = 1: Fallo del módulo (detectado mediante alarma de diagnóstico)
● Bit 1 = 1: El módulo existe
Bit 2 = 1: Módulo no disponible
● Bit 3 = 1: El módulo está desactivado
Bit 4 = 1: Fallo de la estación (solo slot de representante)
● Bit 5 = 1: M7: El módulo puede ser host para submódulos
S7: Para este módulo o estación hay un proceso CiR activo actualmente, o
todavía no finalizado
● Bit 6 = 1: Reservado para S7-400
● Bit 7 = 1: Módulo en el segmento de bus local (solo con S7-300)
● Bit 8 = 1: Módulo, mantenimiento necesario ("verde")
● Bit 9 = 1: Módulo, solicitud de mantenimiento ("amarillo")
● Bits de 10 a 15: Reservado

6170

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Contenido

Longitud

Significado

AreaID_ModuleWidth

1 palabra

Identificación de área/ancho de módulo
● bits de 0 a 2: Ancho de módulo
● Bit 3: Reservado
● bits de 4 a 6: Identificación de área
–

0 = S7-400

–

1 = S7-300

–

2 = PROFINET IO (descentralizado)

–

3 = área P

–

4 = área Q

–

5 = área IM3

–

6 = área IM4

● Bit 7: Reservado
● Bit 7: Reservado
res

5 palabras

Reservado

* Application Process Instance

Lista parcial con la SZL-IDW#16#0696 para módulos conectados al PROFIBUS DP
Se emite el aviso de error "No existe nivel de submódulo".

SZL-ID W#16#xy9C: Información del intercambiador de herramientas (PROFINET IO)
Finalidad
Puede obtenerse información sobre los intercambiadores de herramientas configurados y sus
herramientas a través de la lista parcial con la SZL-ID W#16#xy9C.
Los intercambiadores de herramientas son dispositivos IO que gestionan herramientas. Una
herramienta consta de uno o más dispositivos IO. Cada herramienta se asigna de forma
unívoca a un puerto de un intercambiador de herramientas.
En un cambio de herramientas en primer lugar se desactivan todos los dispositivos IO que
pertenecen a la herramienta activa en esos momentos y, a continuación, se activan los
dispositivos IO pertenecientes a la nueva herramienta. La desactivación y activación se
realizan con la instrucción "D_ACT_DP (Página 5917)".

Programación del PLC
Manual de programación y manejo, 11/2019

6171

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL-ID W#16#xy9C tiene la siguiente estructura:
Contenido

Significado

SZL-ID

La ID SZL del extracto de lista parcial
● W#16#009C
Información sobre todos los intercambiadores de herramientas y sus herramientas en un sistema
PROFINET IO
● W#16#019C
Información sobre todos los intercambiadores de herramientas de un sistema PROFINET IO
● W#16#029C
Información sobre un intercambiador de herramientas y sus herramientas
● W#16#039C
Información sobre una herramienta y sus dispositivos IO
● W#16#0F9C
Solo información de encabezado de la lista parcial SZL

INDEX

Para el extracto de lista parcial con la ID SZL
● W#16#009C: ID del sistema PROFINET IO
● ID del sistema W#16#019C: PROFINET IO
● W#16#029C: dirección lógica del intercambiador de herramientas
● W#16#039C: dirección lógica de un dispositivo IO cualquiera de la herramienta
● ID del sistema W#16#0F9C: PROFINET IO

LENTHDR

W#16#000C (longitud del siguiente registro en bytes: 12)

N_DR

Número de registros

Registro
Un registro de la lista parcial con la SZL-ID W#16#xy9C tiene la siguiente estructura:
Contenido

Longitud

Significado

StationW

1 WORD

Número de estación (del registro, puede ser intercambiador de herramientas o estación
de una herramienta)

LogAdrW

1 WORD

● Bits de 0 a 14: Dirección del módulo
● Bit 15: 0 = entrada, 1 = salida

StationWZK

1 WORD

Número de estación del cabezal de la herramienta (el cabezal de la herramienta es el
dispositivo IO de una herramienta que se ha conectado directamente al puerto del inter‐
cambiador de herramientas).

StationWZW

1 WORD

Número de estación del intercambiador de herramientas

SlotWZW

1 WORD

Slot del intercambiador de herramientas

SubslotWZW

1 WORD

Slot de submódulo del intercambiador de herramientas

Nota
Si un intercambiador de herramientas posee varios puertos en los que se administran
herramientas, para cada puerto se suministra un registro.

6172

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo
El uso de las diferentes listas parciales individuales se representa una vez más a partir del
siguiente ejemplo.
En la línea de un sistema PROFINET IO hay dos intercambiadores de herramientas (IOD 3 y
IOD 10), cuyas herramientas tienen la siguiente estructura:
● Intercambiador de herramientas IOD 3 (IO-Device 3) con las tres herramientas siguientes
en el puerto 2 del intercambiador:
– Herramienta 1 (IOD 4, IOD 5 y IOD 6)
– Herramienta 2 (IOD 7)
– Herramienta 3 (IOD 8 y IOD 9)
● Intercambiador de herramientas IOD 10 con dos puertos de intercambiador de
herramientas, de los que cada uno posee dos herramientas.
– Puerto 3 del intercambiador de herramientas: Herramienta 1 (IOD 11 y IOD 12),
herramienta 2 (IOD 13)
– Puerto 4 del intercambiador de herramientas: Herramienta 1 (IOD 14, IOD 15 y IOD 16),
herramienta 2 (IOD 17 y IOD 18)
De ello resulta la estructura siguiente:

Programación del PLC
Manual de programación y manejo, 11/2019

6173

Instrucciones
4.2 Instrucciones

352),1(7,2&RQWUROOHU

,2'

,2'

,QWHUFDPELDGRUGH
KHUUDPLHQWDV
3RUW

,2'

3RUW

&DEH]DOGHOD
KHUUDPLHQWD

,2'

,2'HYLFH
,2'

,2'HYLFH
,2'

+HUUDPLHQWD

,2'
3RUW

,2'

3RUW

,QWHUFDPELDGRUGH
KHUUDPLHQWDV

,2'

,2'

,2'

,2'

3RUW
3RUW
,2'

,2'

3RUW
3RUW

,2'

,2'

,2'

,2'

,2'

Las listas parciales de la SZL ofrecen registros para los siguientes IO-Devices:
● Extracto de listas parciales con SZL-ID W#16#009C (índice: ID del sistema PROFINET IO):
proporciona 17 registros para los siguientes IO-Devices:
– Intercambiador de herramientas: IOD 3, IOD 10 (para el puerto 3) e IOD 10 (para el
puerto 4)
– Herramientas: IOD 4, IOD 5, IOD 6, IOD 7, IOD 8, IOD 9, IOD 11, IOD 12, IOD 13,
IOD 14, IOD 15, IOD 16, IOD 17 y IOD 18
● Extracto de listas parciales con SZL-ID W#16#019C (índice: ID del sistema PROFINET IO):
proporciona 3 registros para los siguientes IO-Devices:
– Intercambiador de herramientas: IOD 3, IOD 10 (para el puerto 3) y IOD 10 (para el
puerto 4)
– Herramientas: Ninguno

6174

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
● Extracto de listas parciales con SZL-ID W#16#029C (índice: Dirección del IOD 3):
proporciona 3 registros para los siguientes IO-Devices:
– Intercambiador de herramientas: IOD 3
– Herramientas: IOD 4, IOD 5, IOD 6, IOD 7, IOD 8 y IOD 9
● Extracto de listas parciales con SZL-ID W#16#029C (índice: Dirección del IOD 10):
proporciona 10 registros para los siguientes IO-Devices:
– Intercambiador de herramientas: IOD 10 (para el puerto 3) y IOD 10 (para el puerto 4)
– Herramientas: IOD 11, IOD 12, IOD 13, IOD 14, IOD 15, IOD 16, IOD 17 y IOD 18
● Extracto de listas parciales con SZL-ID W#16#039C (índice: Dirección lógica del IOD 4):
proporciona 3 registros para los siguientes IO-Devices: (esto se aplica de forma análoga
para la dirección lógica del IOD 5 y IOD 6)
– Intercambiador de herramientas: Ninguno
– Herramientas: IOD 4, IOD 5 y IOD 6
● Extracto de listas parciales con SZL-ID W#16#039C (índice: Dirección lógica del IOD 13):
proporciona un registro para los siguientes IO-Devices:
– Intercambiador de herramientas: Ninguno
– Herramientas: IOD 13

SZL-ID W#16#xyA0: búfer de diagnóstico
Finalidad
Las entradas del búfer de diagnóstico del módulo se pueden conocer a través de la lista parcial
con la SZL-IDW#16#xyA0.
Nota
Las CPUs S7-300 proporcionan como máximo tantos registros como la cantidad de entradas
de búfer de diagnóstico mostradas en el modo de operación RUN (valor predeterminado: 10).
10). Las CPUs S7-400 proporcionan como máximo 21 registros.

Programación del PLC
Manual de programación y manejo, 11/2019

6175

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#xyA0 tiene la siguiente estructura:
Contenido
SZL-ID

Significado
La SZL-ID del extracto de lista parcial:
● W#16#00A0: Todas las entradas transmisibles en el estado operativo actual
● W#16#01A0: Las entradas más recientes, cuyo número se indica mediante el
parámetro INDEX.
Si el número de avisos del búfer de diagnóstico es menor que el número máximo de
avisos configurado por el usuario, en algunos casos la instrucción "RDSYSST
(Página 6116)" puede devolver valores no válidos con este extracto de lista parcial.
Por ello debe evitarse un POWER OFF sin respaldo.
● W#16#0FA0: Solo información de encabezado de la lista parcial SZL

INDEX

Solo para SZL-IDW#16#01A0: Número de las entradas más recientes

LENTHDR

W#16#0014: Un registro tiene una longitud de 10 palabras (20 bytes)

N_DR

Número de registros

Registro
Un registro de la lista parcial con la SZL-IDW#16#xyA0 tiene la siguiente estructura:
Nombre

Longitud en palabras Significado

ID

1 palabra

ID de evento

info

5 palabras

Información sobre el evento o sus efectos

time

4 palabras

Sello de tiempo del evento

Búfer de diagnóstico
Encontrará más información sobre eventos del búfer de diagnóstico en la ayuda contextual
para el evento visualizado.

SZL-ID W#16#00B1: información de diagnóstico de rack
Finalidad
Los 4 primeros bytes de diagnóstico de un módulo apto para diagnóstico se pueden conocer
a través de la lista parcial con la SZL-IDW#16#00B1.

6176

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#00B1 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

W#16#00B1

INDEX

● bits de 0 a 14: Dirección base lógica
● Bit 15: 0 para entrada, 1 para salida

LENTHDR

W#16#0004: Un registro tiene una longitud de 2 palabras (4 bytes)

N_DR

1

Registro
Un registro de la lista parcial con la SZL-IDW#16#00B1 tiene la siguiente estructura:
Nombre

Longitud

Significado

byte0

1 bytes

● Bit 0: Fallo de módulo/OK (identificador de fallo de grupo)
● Bit 1: Error interno
● Bit 2: Error externo
● Bit 3: Existe error de canal
● Bit 4: Falta tensión auxiliar externa
● Bit 5: Falta conector frontal
● Bit 6: Módulo no parametrizado
● Bit 7: Parámetro erróneo en módulo

byte1

1 bytes

● Bit 0 a bit 3: Clase de módulo (CPU, FM, CP, IM, SM, ...)
● Bit 4: Existe información de canal
● Bit 5: Existe información de usuario
● Bit 6: Alarma de diagnóstico de sustituto
● Bit 7: Mantenimiento necesario (solo con PROFINET IO)

Programación del PLC
Manual de programación y manejo, 11/2019

6177

Instrucciones
4.2 Instrucciones
Nombre

Longitud

Significado

byte2

1 bytes

● Bit 0: Módulo de usuario erróneo o no existe
● Bit 1: Fallo de comunicación
● Bit 2: Estado operativo RUN/STOP (0 = RUN, 1 = STOP)
● Bit 3: La vigilancia de tiempo ha reaccionado (watchdog)
● Bit 4: Fallo de la tensión de alimentación interna del módulo
● Bit 5: Batería vacía (BFS)
● Bit 6: Fallo de todo el respaldo
● Bit 7: Mantenimiento solicitado (solo con PROFINET IO)

byte3

1 bytes

● Bit 0: Fallo de aparato de ampliación (detectado por IM)
● Bit 1: Fallo de procesador
● Bit 2: Error de EPROM
● Bit 3: Error de RAM
● Bit 4: Error de ADU/DAU
● Bit 5: Fallo de fusible
● Bit 6: Alarma de proceso perdida
● Bit 7: Reserva (inicializado con 0)

SZL-ID W#16#00B2: registro de diagnóstico 1 a través de dirección física
Finalidad
El registro de diagnóstico 1 de un módulo insertado central (es decir, excluyendo DP y
submódulos) puede obtenerse a través de la lista parcial con la SZL-IDW#16#00B2. Para
especificar el módulo debe indicarse el número de rack y de slot.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#00B2 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

W#16#00B2

INDEX

W#16#xxyy:
● xx contiene el número del rack
● yy contiene el número del slot

LENTHDR

La longitud del registro depende del módulo

N_DR

1

Registro
El tamaño de un registro de la lista parcial con la SZL-IDW#16#00B2, así como el contenido del
registro, dependen del módulo que se utilice. Encontrará más información al respecto en el
correspondiente manual del módulo.

6178

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

SZL-ID W#16#00B3: datos de diagnóstico de módulo a través de la dirección base lógica
Finalidad
Todos los datos de diagnóstico de un módulo se pueden obtener a través de la lista parcial con
la SZL-IDW#16#00B3. Esta información también es posible para DP y submódulos. El módulo
se selecciona a través de su dirección base lógica.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#00B3 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

W#16#00B3

INDEX

● bits de 0 a 14: Dirección base lógica
● Bit 15: 0 para entrada, 1 para salida

LENTHDR

Longitud de un registro (en función del módulo)

N_DR

1

Registro
El tamaño de un registro de la lista parcial con la SZL-IDW#16#00B3, así como su contenido,
dependen del módulo que se utilice. Encontrará más información al respecto en el
correspondiente manual del módulo.

SZL-ID W#16#00B4: datos de diagnóstico de un esclavo DP
Finalidad
Los datos de diagnóstico de un esclavo DP se pueden obtener a través de la lista parcial con
la SZL-IDW#16#00B4. El formato de estos datos de diagnóstico se especifica en EN50 170
Volume 2, PROFIBUS. El módulo se selecciona a través de su dirección de diagnóstico
configurada.

Encabezado
El encabezado de la lista parcial con la SZL-IDW#16#00B4 tiene la siguiente estructura:
Contenido

Significado

SZL-ID

W#16#00B4

INDEX

Dirección de diagnóstico configurada del esclavo DP

LENTHDR

Longitud de un registro. La longitud máxima es de 240 bytes; en los esclavos normali‐
zados en los que el número de datos de diagnóstico normalizados es superior a 240
bytes, con un máximo de 244, se leen los 240 primeros bytes y se adjunta a los datos
el correspondiente bit de desbordamiento.

N_DR

1

Programación del PLC
Manual de programación y manejo, 11/2019

6179

Instrucciones
4.2 Instrucciones

Registro
Un registro de la lista parcial con la SZL-IDW#16#00B4 tiene la siguiente estructura:
Nombre

Longitud

Significado

status1

1 bytes

Estado de estación 1

status2

1 bytes

Estado de estación 2

status3

1 bytes

Estado de estación 3

Station_No

1 bytes

Número de estación maestra

Vendor_ID_highByte

1 bytes

Identificación de fabricante (high byte)

Vendor_ID_lowByte

1 bytes

Identificación de fabricante (low byte)

....

....

Otros diagnósticos específicos de esclavo

OB_RT: Determinar tiempo de ejecución del programa OB
Descripción
Esta instrucción permite conocer el tiempo de ejecución de OBs individuales en distintos
periodos.
Nota
Esta instrucción devuelve los últimos valores de tiempo registrados para el OB deseado, sin
importar que este se encuentre cargado o no en el momento actual. Los datos no se anulan
mediante borrado ni sobrecarga, sino solo mediante un rearranque completo (en caliente).

6180

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "OB_RT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Significado

OB_NR

Input

INT

I, Q, M, D, L

OB cuyos últimos tiempos conocidos se desean
consultar. Son números válidos de OB todos los
OBs implementados en la CPU, excepto OB 121
y OB 122. El procesamiento de errores sincróni‐
cos se incluye en el tiempo de procesamiento del
OB causante del error. Si se indican los OBs 121
y 122 o un OB no cargado en la CPU, se devuel‐
ve un aviso de error.
Si OB_NR=0, se transfieren los datos del OB en
cuyo contexto se haya llamado la instrucción. Si
se llama la instrucción "OB_RT" en los OBs 121
ó 122 con OB_NR=0, se devuelven los tempori‐
zadores del OB causante de la alarma, junto con
los temporizadores del OB 12x.

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de la
instrucción, el valor de respuesta contendrá un
código de error.
De lo contrario, RET_VAL contiene el número del
OB para el que se han consultado dichos datos.

PRIO

Output

INT

I, Q, M, D, L

En PRIO se devuelve la clase de prioridad del OB
consultado.

LAST_RT

Output

DINT

I, Q, M, D, L

Tiempo de ejecución en µs del último procesa‐
miento finalizado del OB indicado.
Si el OB cuyos tiempos de ejecución se desean
conocer está procesándose actualmente, se apli‐
ca lo siguiente:
En la primera llamada de la instrucción "OB_RT"
durante el procesamiento actual del OB deseado
se indica en LAST_RT el tiempo de ejecución del
último procesamiento finalizado del OB.
Con cada nueva llamada de la instrucción
"OB_RT" durante el procesamiento actual del OB
deseado, en LAST_RT
● se indica DW#16#FFFF FFFF, en caso de
que en el OB deseado ya se haya efectuado
una llamada de "OB_RT" OB_NR=0,
● el tiempo de ejecución del último
procesamiento finalizado del OB, en caso de
que en el OB deseado no se haya efectuado
ninguna llamada de "OB_RT" con OB_NR=0.
Nota: Los tiempos de interrupción por OBs de
mayor prioridad no se indican en LAST_RT . Las
prestaciones específicas de OB del sistema ope‐
rativo (p. ej. la creación y preparación de infor‐
mación de arranque de OB, la actualización de la
memoria imagen de proceso, la actualización de
la memoria imagen parcial de proceso) se indi‐
can en LAST_RT .

Programación del PLC
Manual de programación y manejo, 11/2019

6181

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Significado

LAST_ET

Output

DINT

I, Q, M, D, L

Intervalo en µs entre la solicitud de OB y el fin del
procesamiento del OB indicado, para el último
procesamiento finalizado del OB indicado.
Si el OB cuyos tiempos de ejecución se desean
conocer está procesándose actualmente, rige lo
siguiente:
En la primera llamada de la instrucción "OB_RT"
durante el procesamiento actual del OB deseado
se indica en LAST_ET el intervalo entre la última
solicitud de OB completamente procesada y el fin
del procesamiento del OB indicado.
Con cada nueva llamada de la instrucción
"OB_RT" durante el procesamiento actual del OB
deseado, en LAST_ET
● se indica DW#16#FFFF FFFF , en caso de
que en el OB deseado ya se haya efectuado
una llamada de "OB_RT" OB_NR=0,
● el intervalo entre la última solicitud de OB
completamente procesada y el fin del
procesamiento del OB deseado, en caso de
que en el OB deseado no se haya efectuado
ninguna llamada de "OB_RT" con OB_NR=0.
Nota: Los tiempos de interrupción por OBs de
mayor prioridad se indican en LAST_ET .

CUR_T

Output

DINT

I, Q, M, D, L

Momento de la solicitud del OB indicado que está
procesándose actualmente, en forma de tiempo
relativo en µs. Si el OB indicado no está proce‐
sándose actualmente, CUR_T contiene el valor
"0".
Nota: La hora del sistema es un contador que
contabiliza desde "0" a "2 147 483 647" µs. En
caso de desbordamiento, el contador empieza
de nuevo desde "0".

CUR_RT

6182

Output

DINT

I, Q, M, D, L

Tiempo de ejecución transcurrido en µs del pro‐
cesamiento actual del OB indicado. CUR_RT es
"0" si el OB (todavía) no está procesándose. Fi‐
nalizado el procesamiento, el tiempo de ejecu‐
ción se transfiere a LAST_RT , y CUR_RT se
ajusta a 0.
Nota: Los tiempos de interrupción por OBs de
mayor prioridad no se indican en CUR_RT . Las
prestaciones específicas de OB del sistema ope‐
rativo suministradas hasta el momento de la lla‐
mada de la instrucción "OB_RT" se indican en
CUR_RT .

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Significado

CUR_ET

Output

DINT

I, Q, M, D, L

El intervalo en µs transcurrido desde la solicitud
del OB indicado que está procesándose actual‐
mente. CUR_ET es "0" si el OB indicado no está
procesándose actualmente. Finalizado el proce‐
samiento, el tiempo de ejecución se transfiere a
LAST_ET , y CUR_ET se ajusta a "0".
Nota: Los tiempos de interrupción por OBs de
mayor prioridad se indican en CUR_ET .

NEXT_ET

Output

DINT

I, Q, M, D, L

Si hay más procesamientos del OB indicado pen‐
dientes antes de que finalice la solicitud actual,
en NEXT_ET se indica el intervalo en µs entre el
momento actual y el momento de la próxima so‐
licitud. NEXT_ET es "0" si no existe para el OB en
cuestión ningún otro evento de arranque aparte
del evento de inicio en procesamiento o pendien‐
te de procesamiento.
WinLC RTX y las CPUs S7-400 no utilizan este
parámetro. En estos sistemas, NEXT_ET tiene el
valor "FFFF FFFF".
Nota: Los tiempos de interrupción por OBs de
mayor prioridad se indican en NEXT_ET .

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Los tiempos incluyen también los tiempos de ejecución de posibles procesamientos anidados
de alarmas de errores sincrónicos (OB 121, OB 122).
Nota
Si se indica en OB_NR un número de OB que está presente en los datos de la CPU, pero el OB
correspondiente todavía no ha sido llamado por el sistema operativo o no ha sido cargado en
la CPU por el usuario, RET_VAL contiene el número de OB indicado, y PRIO la prioridad
configurada (o en su caso predeterminada) del OB indicado. Los parámetros de tiempo de
ejecución (CUR_RT, CUR_ET, LAST_RT, LAST_ET, NEXT_ET) devuelven el valor inicial
DW#16#FFFF FFFF. En los siguientes tipos de arranque o cambios de estado operativo, los
parámetros de tiempo de ejecución se ajustan a su valor inicial: Rearranque completo,
arranque en frío, rearranque.

Parámetro RET_VAL
Clase de evento
código de error

Explicación

de 1 a 102

Número del OB al que se transfiere la información

W#16#8080

El parámetro OB_NR contiene un valor no admisible.

W#16#8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

6183

Instrucciones
4.2 Instrucciones

C_DIAG: Determinar estado actual de la conexión
Descripción
Esta instrucción permite conocer el estado actual de todas las conexiones S7 y todas las
conexiones S7 de alta disponibilidad (o sus conexiones parciales).
Evaluando adecuadamente estos datos de conexión pueden detectarse el fallo de las
conexiones S7 y las conexiones S7 de alta disponibilidad y, en su caso, notificarlo a un sistema
de manejo y visualización. Las conexiones vigiladas pueden existir tanto entre sistemas de
automatización como entre un sistema de automatización y un sistema de manejo y
visualización.
Nota
El cambio de estado operativo RUN -> STOP -> RUN de una CPU no influye en el estado de
las conexiones configuradas. Excepción: Cuando una estación H pasa del estado redundante
al estado STOP, en el caso de las conexiones de alta disponibilidad se deshacen las
conexiones parciales que terminan en la CPU de reserva.
En cambio, después de un fallo de red, se vuelven a establecer todas las conexiones
configuradas, con lo que cambia el estado de conexión.
Así, al llamarse por primera vez la instrucción en el arranque o después de este, la información
de conexión varía en función de si el último estado operativo de la CPU fue STOP o POWER
OFF.

Funcionamiento
C_DIAG" es una instrucción asíncrona, de modo que la ejecución puede prolongarse a lo largo
de varias llamadas.
Para iniciar la petición, debe llamarse "C_DIAG" con REQ=1.
Si la petición se ha podido ejecutar de inmediato, la instrucción devuelve en el parámetro de
salida BUSY el valor "0". Si BUSY tiene el valor "1", la petición todavía está procesándose.

Llamada
Para detectar fallos de conexiones S7 y conexiones S7 de alta disponibilidad debe llamarse
"C_DIAG" en un OB de alarma cíclica que sea iniciado por el sistema operativo p. ej. cada 10
segundos.
Dado que en circunstancias normales el estado de las conexiones no suele variar, para estas
llamadas cíclicas es recomendable no copiar los datos de conexión al programa de usuario
hasta que hayan cambiado respecto a la última llamada (llamada con MODE=B#16#02, ver
abajo).

6184

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
La instrucción "C_DIAG" tiene cuatro modos de operación posibles, que se enumeran en la
tabla siguiente.
MODE
(B#16#...)

"C_DIAG" copia datos de conexión en el programa
de usuario

"C_DIAG" transfiere información de acuse al sistema
operativo

00

No

SÍ

01

SÍ

SÍ

02

● Sí, en caso de que los datos de conexión hayan
cambiado

SÍ

● No, en caso de que los datos de conexión no
hayan cambiado
03

SÍ

No

Al transferir la información de acuse al sistema operativo, se acusan las modificaciones de
estado de los datos de conexión producidas desde la última llamada de "C_DIAG" (con
MODE=B#16#00, 01 o 02).
Nota
Si se llama "C_DIAG" en un OB de alarma cíclica en el modo de operación "Copia
condicionada" (MODE=B#16#02), debe comprobarse que después de un arranque en frío de
la CPU no haya valores iniciales en el área de destino. Para asegurarlo, debe llamarse una vez
"C_DIAG" en el OB 102 con el modo de operación "Copia incondicional con acuse"
(MODE=B#16#01).

Programación del PLC
Manual de programación y manejo, 11/2019

6185

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "C_DIAG":
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

REQ

Input

BOOL

Parámetro de control request to activate

I, Q, M, D, L

REQ=1: Se lanza la petición, si todavía no se ha
iniciado.
MODE

Input

BYTE

I, Q, M, D, L o cons‐
tante

ID de la petición
Valores posibles:
● B#16#00: "C_DIAG" no copia datos de
conexión, sino que se limita a transferir al
sistema operativo una información de acuse.
● B#16#01: "C_DIAG" copia los datos de
conexión al programa de usuario, sea cual
sea su estado de modificación, y transfiere
al sistema operativo una información de
acuse.
● B#16#02: Si los datos de conexión han
cambiado, "C_DIAG" los copia en el
programa de usuario. Si no han cambiado,
no se realiza la copia. "C_DIAG" transfiere al
sistema operativo una información de acuse
en ambos casos.
● B#16#03: "C_DIAG" copia los datos de
conexión en el programa de usuario, sea
cual sea su estado de modificación. No
transfiere al sistema operativo ninguna
información de acuse.

RET_VAL

Return

INT

I, Q, M, D, L

Valor de retorno (código de error o estado de la
petición)

BUSY

Output

BOOL

I, Q, M, D, L

BUSY=1: La petición todavía no ha finalizado.

6186

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

N_CON

Output

INT

Índice de la última estructura en CON_ARR, en
la que .DIS_PCON o .DIS_CON tienen el valor
TRUE . Así, en el programa de usuario solo es
necesario comprobar los primeros N_CON ele‐
mentos de CON_ARR .

I, Q, M, D, L

Nota: La primera estructura del campo
CON_ARR tiene el índice "1".
CON_ARR

Output

ANY

I, Q, M, D, L

Área de destino para los datos de conexión leí‐
dos.
Solo se admite el tipo de datos BYTE .
Cada conexión tiene asignada una estructura.
Debe escogerse un área de destino lo bastante
grande para albergar todas las estructuras in‐
cluso en caso de alcanzarse el máximo de co‐
nexiones posibles en la CPU. Téngalo en cuen‐
ta sobre todo después de cambiar una CPU,
siempre que la CPU nueva tenga más recursos
que la anterior.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro CON_ARR
El área de destino para los datos de conexión leídos es un campo de estructuras. Cada
conexión tiene asignada una estructura.
No es necesario que el campo esté ocupado desde las posiciones iniciales con valores válidos,
y también puede haber entradas no válidas entre dos valores válidos.
Las conexiones no están ordenadas en función de referencias de conexión.
Nota
Al copiar los datos de conexión desde el sistema operativo al área de destino especificada, se
garantiza la coherencia de los datos de una conexión.

Programación del PLC
Manual de programación y manejo, 11/2019

6187

Instrucciones
4.2 Instrucciones

Formato de una estructura
Parámetro

Tipo de datos

Descripción

CON_ID

WORD

Referencia de conexión que se ha asignado a esa conexión en la configuración
W#16#FFFF: Identificador no válido, es decir, conexión no configurada. Si adicional‐
mente CON_ARR[i].DIS_PCON o CON_ARR[i].DIS_CON están activadas (ver aba‐
jo), la conexión ha sido reconfigurada o borrada desde la última llamada de "C_DIAG".

STAT_CON

BYTE

Estado actual de la conexión S7 o de la conexión S7 de alta disponibilidad
Valores posibles:
● B#16#00: Conexión S7 no establecida
● B#16#10: Conexión S7 de alta disponibilidad no establecida
● B#16#01: La conexión S7 está estableciéndose en este momento
● B#16#11: La conexión S7 de alta disponibilidad está estableciéndose en este
momento
● B#16#02: La conexión S7 está establecida
● B#16#12: La conexión S7 de alta disponibilidad está establecida, pero sin alta
disponibilidad
● B#16#13: La conexión S7 de alta disponibilidad está establecida, con alta
disponibilidad

PROD_CON

BYTE

STBY_CON

BYTE

Número de conexión parcial de la conexión productiva
Valores posibles: 0, 1, 2, 3
Número de conexión parcial de la conexión de reserva (standby) (B#16#FF: No hay
conexión de reserva)
Valores posibles: 0, 1, 2, 3
Nota: Solo una conexión S7 de alta disponibilidad puede poseer una conexión de
reserva.

DIS_PCON

BOOL

Las transiciones W#16#12 -> W#16#13 y W#16#13 -> W#16#12 de
CON_ARR[i].STAT_CON desde la última llamada de instrucción ajustan
CON_ARR[i].DIS_PCON a "1". Cualquier otro cambio de estado de la conexión i no
provoca alteraciones en CON_ARR[i].DIS_PCON .
Nota:
● Con MODE=B#16#01 y 02 , al copiar los datos de conexión en el área de destino
se desactiva el bit del sistema operativo que corresponde a DIS_PCON.
● Con MODE=B#16#03 , el bit del sistema operativo que corresponde a DIS_PCON
permanece invariable.

DIS_CON

BOOL

Toda modificación de CON_ARR[i].STAT_CON desde la última llamada de
"C_DIAG", a excepción de las transiciones W#16#12 -> W#16#13 y W#16#13 ->
W#16#12 , ajusta CON_ARR[i].DIS_CON a 1.
Nota:
● Con MODE=B#16#01 y 02 , al copiar los datos de conexión en el área de destino
se desactiva el bit del sistema operativo que corresponde a "DIS_CON".
● Con MODE=B#16#03 , el bit del sistema operativo que corresponde a "DIS_CON"
permanece invariable.

RES0

BYTE

Reservado (B#16#00)

RES1

BYTE

Reservado (B#16#00)

6188

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error
(W#16#...)

Explicación

0000

● MODE=B#16#00, 01 o 02: Sin cambio del estado de conexión (elemento de estructura STAT_CON)
desde la última llamada. La petición se ha ejecutado sin errores.
● MODE=B#16#03: La copia se ha ejecutado sin errores.

0001

● MODE=B#16#00, 01 o 02: Cambio del estado de conexión (elemento de estructura STAT_CON) en
por lo menos una conexión desde la última llamada. La petición se ha ejecutado sin errores.
● MODE=B#16#03: RET_VAL W#16#0001 no es posible:

7000

Primera llamada con REQ=0.
La petición definida mediante MODE no se procesa; BUSY tiene el valor "0",

7001

Primera llamada con REQ=1.
Se ha lanzado la petición definida mediante MODE . BUSY tiene el valor "1".

7002

Llamada intermedia (REQ irrelevante). La petición activada todavía está en curso. BUSY tiene el valor "1".

8080

El parámetro MODE contiene un valor no admisible.

8081

El parámetro CON_ARR contiene un tipo de datos no admisible.

8082

El parámetro CON_ARR contiene una indicación de longitud demasiado pequeña. La instrucción no copia
datos en el área de destino.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

4.2.3.10

Funciones de bloques de datos

READ_DBL: Leer de un bloque de datos de la memoria de carga
Descripción
La instrucción copia un DB o una parte de un DB que se encuentra en la memoria de carga
(Micro Memory Card) en el área de datos de un DB de destino. El DB de destino tiene que ser
relevante para la ejecución, es decir, no puede haberse creado con el atributo UNLINKED. El
contenido de la memoria de carga no se modifica en la operación de copia.
Para garantizar la coherencia de los datos no debe modificarse el área de destino durante el
procesamiento de "READ_DBL" (es decir, mientras el parámetro BUSY tenga el valor TRUE).
Para los parámetros SRCBLK y DSTBLK se aplican las siguientes restricciones:
● En el caso de un puntero ANY del tipo BOOL la longitud debe ser divisible entre 8.
● En el caso de un puntero ANY del tipo STRING la longitud debe ser 1.

Programación del PLC
Manual de programación y manejo, 11/2019

6189

Instrucciones
4.2 Instrucciones
La longitud del DB de origen puede consultarse, en caso necesario, con la instrucción
"TEST_DB (Página 6201)".
Nota
READ_DBL se procesa de modo asíncrono, lo que la hace inadecuada para leer variables
repetidamente (es decir, de modo cíclico) en la memoria de carga.
Una petición iniciada siempre se finaliza. Si se alcanza el número máximo de instrucciones
"READ_DBL" activas simultáneamente y en ese momento se vuelve a llamar "READ_DBL" en
una clase de mayor prioridad, se devuelve el código de error W#16#80C3. No es
recomendable, por lo tanto, volver a iniciar inmediatamente la petición de mayor prioridad.

Funcionamiento
La instrucción "READ_DBL" es una instrucción asíncrona, de modo que la ejecución se
prolonga a lo largo de varias llamadas. Para iniciar la petición, debe llamarse "READ_DBL" con
REQ =1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813)

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "READ_DBL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: solicitud de lectura

SRCBLK

Input

ANY

D

Puntero al bloque de datos de la memoria de
carga de la que se lee

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: la lectura todavía no ha finaliza‐
do.

DSTBLK

Output

ANY

D

Puntero al bloque de datos de la memoria de
trabajo en la que se tiene que escribir

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6190

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

Sin error

0081

El área de destino es mayor que el área de origen.
El área de origen se escribe completamente en el área de destino, el resto de bytes del área de destino
no se modifica.

7000

Primera llamada con REQ=0: Ninguna transmisión de datos activa; BUSY tiene el valor "0".

7001

Primera llamada con REQ=1: Transmisión de datos iniciada; BUSY tiene el valor "1".

7002

Llamada intermedia (REQ irrelevante): Transmisión de datos activa; BUSY tiene el valor "1".

8081

El área de origen es mayor que el área de destino.
El área de destino se escribe por completo, el resto de bytes del área de origen se ignoran.

8093

En el parámetro DSTBLK no se ha indicado ningún bloque de datos o se ha indicado uno que no se
encuentra en la memoria de trabajo.

80B1

Con el parámetro SRCBLK no se ha indicado ningún bloque de datos o el bloque de datos indicado no es
un objeto de la memoria de carga (p. ej. un DB creado mediante "CREAT_DB (Página 6195)").

80B4

El DB con atributo F no debe leerse.

80C0

El DB de destino está siendo procesado por otra instrucción o función de comunicación.

80C3

El número máximo de instrucciones "READ_DBL" activas simultáneamente ya se ha alcanzado en este
momento.

8xyy

Códigos de error generales
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

WRIT_DBL: Escribir en un bloque de datos de la memoria de carga
Descripción
Esta instrucción permite transferir el contenido de un DB o un área de DB desde la memoria de
trabajo a un DB o un área de DB de la memoria de carga (Micro Memory Card). El DB de origen
tiene que ser relevante para la ejecución, es decir, no puede haberse creado con el atributo
UNLINKED. Sin embargo, sí puede haber sido creado mediante la instrucción "CREAT_DB".
Para garantizar la coherencia de los datos no debe modificarse el área de origen durante el
procesamiento de "WRIT_DBL" (es decir, mientras el parámetro BUSY tenga el valor TRUE).
Para los parámetros SRCBLK y DSTBLK se aplican las siguientes restricciones:
● En el caso de un puntero ANY del tipo BOOL la longitud debe ser divisible entre 8.
● En el caso de un puntero ANY del tipo STRING la longitud debe ser 1.
La longitud del DB de destino puede consultarse, en caso necesario, con la instrucción
"TEST_DB (Página 6201)".

Programación del PLC
Manual de programación y manejo, 11/2019

6191

Instrucciones
4.2 Instrucciones
"WRIT_DBL" no modifica la suma de verificación del programa de usuario si se escribe en un
DB creado mediante instrucción. Por el contrario, al describir un DB cargado, la primera
escritura en este DB sí modifica la suma de verificación del programa de usuario.
Nota
"WRIT_DBL" no es adecuada para escribir variables repetidamente (es decir, de modo cíclico)
en la memoria de carga, ya que, por motivos técnicos, las Micro Memory Cards solo admiten
un número determinado de accesos de escritura.

Funcionamiento
La instrucción "WRIT_DBL" es una instrucción asíncrona, de modo que la ejecución se
prolonga a lo largo de varias llamadas. Para iniciar la petición, debe llamarse "WRIT_DBL" con
REQ =1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813)

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "WRIT_DBL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: solicitud de escritura

SRCBLK

Input

ANY

D

Puntero en el bloque de datos de la memoria
de trabajo de la que se lee

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La escritura todavía no ha finali‐
zado.

DSTBLK

Output

ANY

D

Puntero al bloque de datos de la memoria de
carga en la que se tiene que escribir.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

Sin error

0081

El área de destino es mayor que el área de origen.
El área de origen se escribe completamente en el área de destino, el resto de bytes del área de destino
no se modifica.

7000

Primera llamada con REQ=0: Ninguna transmisión de datos activa; BUSY tiene el valor "0".

7001

Primera llamada con REQ=1: transmisión de datos iniciada. BUSY tiene el valor "1".

6192

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de error

Descripción

(W#16#...)
7002

Llamada intermedia (REQ irrelevante): Transmisión de datos activa; BUSY tiene el valor "1".

8081

El área de origen es mayor que el área de destino.
El área de destino se escribe por completo, el resto de bytes del área de origen se ignoran.

8092

Modo de operación incorrecto: Mientras "WRIT_DBL" estaba activo, la CPU ha pasado a STOP. Cuando
vuelva a pasar a RUN, se proporcionará este código de error. Vuelva a llamar "WRIT_DBL".

8093

En el parámetro SRCBLK no se ha indicado ningún bloque de datos o se ha indicado uno que no se
encuentra en la memoria de trabajo.

80B1

Con el parámetro DSTBLK no se ha indicado ningún bloque de datos o el bloque de datos indicado no es
un objeto de la memoria de carga (p. ej. un DB creado mediante "CREAT_DB (Página 6195)").

80B4

El DB con atributo F no debe modificarse

80C0

El destino está siendo procesado por otra instrucción o función de comunicación. Ejemplo: Se carga un DB
de la CPU en la programadora. El contenido de este DB se quiere modificar con "WRIT_DBL".

80C3

El número máximo de instrucciones "WRIT_DBL" activas simultáneamente ya se ha alcanzado en este
momento.

8xyy

Códigos de error generales
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

DEL_DB: Borrar bloque de datos
Descripción
Esta instrucción permite borrar un bloque de datos existente en la memoria de trabajo y, en su
caso, en la memoria de carga de la CPU. El DB que se va borrar no debe estar abierto en el
nivel de ejecución actual ni en otro de menor prioridad. Es decir, no debe estar registrado en
ninguno de los dos registros de DB ni en la pila B.
De lo contrario, al llamar la instrucción, la CPU inicia el OB 121. Si el OB 121 no está cargado,
la CPU pasa a STOP; con S7-300 (excepción: CPU 318) el DB se borra sin llamar el OB 121.
Nota
Borrar DBs de instancia con "DEL_DB" no es recomendable y provoca siempre errores de
programa. Evite siempre borrar DBs de instancia con "DEL_DB".
La tabla siguiente explica cuándo puede borrarse un DB con "DEL_DB".
Si el DB ...

"DEL_DB" ...

se creó llamando la instrucción "CREAT_DB",

permite borrarlo.

se transfirió a la CPU y no se creó con el atributo "Depositar sólo en
la memoria de carga"

permite borrarlo.

se creó con el atributo "Depositar sólo en la memoria de carga"

● puede borrarse en la S7-300
● no puede borrarse en la S7-400

se creó llamando la instrucción "CREA_DBL"

puede borrarse

está almacenado en la Flashcard,

no permite borrarlo.

Programación del PLC
Manual de programación y manejo, 11/2019

6193

Instrucciones
4.2 Instrucciones

Posibilidad de interrupción
La instrucción puede ser interrumpida por niveles de ejecución de mayor prioridad. Si se vuelve
a llamar la instrucción allí, esa segunda llamada se interrumpe, y en RET_VAL se registra
W#16#8091.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DEL_DB":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DB_NUMBER

Input

WORD

I, Q, M, D, L o constante Número del DB que se va a borrar

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8091

En llamadas de "DEL_DB" anidadas entre sí se ha superado la profundidad de anidamiento máxima de la
CPU utilizada.

8092

La función "Borrar un DB" no puede ejecutarse en este momento, porque
● está activa la función "Comprimir memoria de usuario"
● el DB que se debe borrar se está copiando de la CPU a un proyecto offline.
● la CPU con el software WinAC ha detectado un error en el sistema operativo del ordenador en el que
está instalado WinAC.

80A1

Error en el parámetro de entrada DB_NUMBER: El parámetro actual seleccionado
● tiene el valor "0"
● es mayor que el número de DB máximo posible en la CPU utilizada.

80B1

El DB con el número indicado no está presente en la memoria de trabajo de la CPU.

80B3

El DB se encuentra en la Flashcard.

80B4

No se ha podido borrar el DB. Causas posibles:
● Pertenece a un programa F.
● Es un DB de instancia de un bloque de la comunicación S7 (solo con S7-400).
● Es un DB de tecnología.

80C1

La función "Borrar un DB" no puede ejecutarse en este momento debido a escasez temporal de recursos.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

6194

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

CREAT_DB: Generar bloque de datos
Descripción
Esta instrucción permite crear en el programa de usuario un bloque carente de valores
preasignados. En su lugar, contiene datos casuales. Esta instrucción crea un bloque de datos
con un número perteneciente a un área especificada y con un tamaño definido. La instrucción
asigna al DB el número más bajo posible del área especificada. Para crear un DB con un
número determinado, debe asignarse el mismo número al límite superior y al límite inferior del
área definida. No se pueden asignar los números de los DBs ya contenidos en el programa de
usuario. La longitud del DB debe indicarse con un número par.

Posibilidad de interrupción
La instrucción puede ser interrumpida por OBs de mayor prioridad. Si en un OB de mayor
prioridad se llama a su vez otra instrucción "CREAT_DB", se rechaza esta llamada con el
código de error W#16#8091.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "CREAT_DB":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

LOW_LIMIT

Input

WORD

I, Q, M, D, L o constante El límite inferior es el número más bajo del
rango de los números que se pueden asig‐
nar al bloque de datos.

UP_LIMIT

Input

WORD

I, Q, M, D, L o constante El límite superior es el número más alto del
rango de los números que se pueden asig‐
nar al bloque de datos.

COUNT

Input

WORD

I, Q, M, D, L o constante El valor de contaje indica el número de bytes
de datos que se desea reservar para el blo‐
que de datos. Debe especificarse un núme‐
ro par de bytes (máximo 65534).

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución
de la instrucción, el valor de respuesta con‐
tendrá un código de error.

DB_NUMBER

Output

WORD

I, Q, M, D, L

El número de bloque de datos es el número
del bloque de datos creado. En caso de
error (bit 15 de RET_VAL activado) en
DB_NUMBER se registra el valor "0".

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6195

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

Sin error

8091

Se ha llamado CREAT_DB con anidamiento.

8092

La función "Generar bloque de datos" no puede ejecutarse en este momento, porque
● está activa la función "Comprimir memoria de usuario"
● ya se ha alcanzado el número máximo posible de DBs cargados en la CPU
● la CPU H se encuentra en una operación de acoplar y sincronizar.
● la CPU con el software WinAC ha detectado un error en el sistema operativo del ordenador en el que
está instalado WinAC.
● el borrado anterior todavía no ha finalizado.

80A1

Error en el número del DB:
● el número es "0"
● el número supera el número de DBs específico de la CPU
● Límite inferior > límite superior

80A2

Error en la longitud del DB:
● la longitud es "0"
● se ha indicado la longitud con un número impar
● la longitud es mayor que la admisible en la CPU

80B1

No hay ningún número de DB libre.

80B2

No hay suficiente espacio de almacenamiento libre.

80B3

No hay suficiente espacio de almacenamiento libre conexo. (Realizar compresión)

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

CREA_DB: Generar bloque de datos / remanente
Descripción
Esta instrucción permite crear en el programa de usuario un bloque carente de valores
preasignados. En su lugar, contiene datos casuales. Esta instrucción crea un bloque de datos
con un número perteneciente a un área especificada y con un tamaño definido. La instrucción
asigna al DB el número más bajo posible del área especificada. Para crear un DB con un
número determinado, debe asignarse el mismo número al límite superior y al límite inferior del
área definida. No se pueden asignar los números de los DBs ya contenidos en el programa de
usuario. La longitud del DB debe indicarse con un número par.

6196

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
En función de la selección del parámetro ATTRIB , el DB generado tiene la propiedad RETAIN
o NON_RETAIN:
● RETAIN (= remanente) significa que el DB se genera en la parte remanente de la memoria
de trabajo, es decir, los valores actuales del DB se conservan en cada transición Power
OFF-Power ON y en cada rearranque completo (en caliente).
● NON_RETAIN (= no remanente) significa que el DB se genera en la parte no remanente de
la memoria de trabajo, es decir, los valores actuales del DB no están definidos tras cada
transición Power OFF-Power ON y en cada rearranque completo (en caliente).
En el caso de que no se distinga entre la memoria de trabajo remanente y no remanente, el
parámetro ATTRIB se ignora, es decir, los valores del DB se conservan después de cada
transición Power OFF-Power ON y después de cada rearranque completo (en caliente).

Posibilidad de interrupción
La instrucción "CREA_DB" puede ser interrumpida por OBs de mayor prioridad. Si en un OB
de mayor prioridad se llama a su vez otra instrucción "CREA_DB", se rechaza esta llamada con
el código de error W#16#8091 .

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "CREA_DB":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

LOW_LIMIT

Input

WORD

I, Q, M, D, L o cons‐
tante

El límite inferior es el número más bajo del
rango de los números que se pueden asignar
al bloque de datos.

UP_LIMIT

Input

WORD

I, Q, M, D, L o cons‐
tante

El límite superior es el número más alto del
rango de los números que se pueden asignar
al bloque de datos.

COUNT

Input

WORD

I, Q, M, D, L o cons‐
tante

El valor de contaje indica el número de bytes
de datos que se desea reservar para el bloque
de datos. Debe especificarse un número par
de bytes (máximo 65534).

ATTRIB

Input

BYTE

I, Q, M, D, L o cons‐
tante

Atributos del DB:
● B#16#00: RETAIN
● B#16#04: NON_RETAIN

RET_VAL

Return

INT

I, Q, M, D, L

Si se produce un error durante la ejecución de
la instrucción, el valor de respuesta contendrá
un código de error.

DB_NUMBER

Output

WORD

I, Q, M, D, L

El número de bloque de datos es el número
del bloque de datos creado. En caso de error
(bit 15 de RET_VAL activado) en DB_NUM‐
BER se registra el valor "0".

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6197

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error
(W#16#...)

Explicación

0000

Sin error

8091

Se ha llamado CREA_DB con anidamiento.

8092

La función "Generar bloque de datos" no puede ejecutarse en este momento, porque
● está activa la función "Comprimir memoria de usuario"
● la CPU con el software WinAC ha detectado un error en el sistema operativo del ordenador en el que
está instalado WinAC.

8094

Valor no admisible en ATTRIB

80A1

Error en el número del DB:
● el número es "0"
● el número supera el número de DBs específico de la CPU
● Límite inferior > límite superior

80A2

Error en la longitud del DB:
● La longitud es "0"
● se ha indicado la longitud con un número impar
● la longitud es mayor que la admisible en la CPU

80B1

No hay ningún número de DB libre.

80B2

No hay suficiente espacio de almacenamiento libre.

80B3

No hay suficiente espacio de almacenamiento libre conexo. (Realizar compresión)

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

CREA_DBL: Generar bloque de datos en la memoria de carga
Descripción
Esta instrucción permite crear un bloque de datos nuevo en la memoria de carga (Micro
Memory Card). Esta instrucción crea un bloque de datos con un número perteneciente a un
área especificada y con un tamaño definido. La instrucción asigna al DB el número más bajo
posible del área especificada. Para crear un DB con un número determinado, debe asignarse
el mismo número al límite superior y al límite inferior del área definida. No se pueden asignar
los números de los DBs ya contenidos en el programa de usuario. Si ya existe en la memoria
de trabajo y/o en la memoria de carga un DB con el mismo número, o el DB existe ya como
variante copiada, la instrucción finaliza y se devuelve una información de error.
Nota
En caso necesario, puede consultarse con la instrucción "TEST_DB (Página 6201)" si ya existe
un DB con el mismo número.
El DB se rellena con el contenido del área de datos a la que apunta el parámetro
SRCBLK(source block). Esta área de datos debe ser un DB o un área de un DB. Para

6198

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
garantizar la coherencia de los datos, no se debe modificar esa área de datos durante el
procesamiento de "CREA_DBL" (es decir, mientras el parámetro BUSY tenga el valor TRUE).
Un DB con el atributo READ_ONLY solo se puede crear e inicializar mediante "CREA_DBL".
"CREA_DBL" no modifica la suma de verificación del programa de usuario.

Funcionamiento
La instrucción "CREA_DBL" es una instrucción asíncrona, de modo que la ejecución se
prolonga a lo largo de varias llamadas. Para iniciar la petición, debe llamarse "CREA_DBL" con
REQ=1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY.
Consulte también: Diferencia entre las instrucciones que funcionan síncronamente y las que
funcionan asíncronamente (Página 4813)

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "CREA_DBL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ = 1: Solicitud de creación del DB

LOW_LIMIT

Input

WORD

I, Q, M, D, L

Límite inferior del área de la cual "CREA_DBL"
extrae el número que se asigna al DB

UP_LIMIT

Input

WORD

I, Q, M, D, L

Límite superior del área de la cual
"CREA_DBL" extrae el número que se asigna
al DB

COUNT

Input

WORD

I, Q, M, D, L

El valor de contaje indica el número de bytes
de datos que se desea reservar para el DB.
Debe especificarse un número par de bytes.

ATTRIB

Input

BYTE

I, Q, M, D, L

Propiedades del DB:
Bit 0 = 1:

UNLINKED:
El DB se encuentra solo en la
memoria de carga.

Bit 1 = 1:

READ_ONLY:
El DB está protegido contra
escritura.

Bit 2 = 1:

NON_RETAIN:
El DB no es remanente.

Bits de 3 a 7:

Reservado

SRCBLK

Input

ANY

D

Puntero al bloque de datos con cuyos valores
se inicializará el bloque de datos que se va a
crear

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

BUSY

Output

BOOL

I, Q, M, D, L

BUSY = 1: La operación todavía no ha finali‐
zado.

DB_NUM

Output

WORD

I, Q, M, D, L

Número del DB creado

Programación del PLC
Manual de programación y manejo, 11/2019

6199

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Descripción

(W#16#...)
0000

Sin error

0081

El área de destino es mayor que el área de origen.
El área de origen se escribe por completo en el área de destino, y el resto de los bytes del área de destino
se rellenan con 0.

7000

Primera llamada con REQ=0: Ninguna transmisión de datos activa; BUSY tiene el valor "0".

7001

Primera llamada con REQ=1: Transmisión de datos iniciada; BUSY tiene el valor "1".

7002

Llamada intermedia (REQ irrelevante): transferencia de datos ya activa; BUSY tiene el valor "1"

8081

El área de origen es mayor que el área de destino.
El área de destino se escribe por completo, el resto de bytes del área de origen se ignoran.

8091

Se ha llamado "CREA_DBL" con anidamiento.

8092

La función "Generar bloque de datos" no puede ejecutarse en este momento, porque
● está activa la función "Comprimir memoria de usuario";
● se ha alcanzado ya el número máximo de bloques admisible en la CPU

8093

En el parámetro SRCBLK no se ha indicado ningún bloque de datos o se ha indicado uno que no se
encuentra en la memoria de trabajo.

8094

En el parámetro ATTRIB se ha indicado un atributo todavía no soportado.

80A1

Error en el número del DB:
● el número es 0 o no está dentro del rango válido de la CPU (CPU15xx: 60001 ... 60999)
● el número supera el número de DBs específico de la CPU
● Límite inferior > límite superior

80A2

Error en la longitud del DB:
● La longitud es "0"
● La longitud es un número impar
● La longitud es mayor que la admisible en la CPU

80B1

No hay ningún número de DB libre

80B2

Memoria de trabajo insuficiente

80BB

Memoria de carga insuficiente

80C0

El destino está siendo procesado por otra instrucción o por una función de comunicación.

80C3

El número máximo de instrucciones "CREA_DBL" activas simultáneamente ya se ha alcanzado en este
momento.

8xyy

Códigos de error generales, p. ej.:
● El DB de origen no existe o existe solo como variante copiada
● El área de origen no existe en el DB
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

6200

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

TEST_DB: Testear bloque de datos
Descripción
Con S7-300, la instrucción devuelve información sobre un bloque de datos que se encuentra
en la memoria de trabajo o la memoria de carga de la CPU y, con S7-400, devuelve información
sobre un bloque de datos que se encuentra en la memoria de trabajo de la CPU. Esta
instrucción calcula el número de bytes de datos correspondientes al DB seleccionado y
comprueba si está protegido contra escritura.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "TEST_DB":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

DB_NUMBER

Input

WORD

I, Q, M, D, L o cons‐
tante

Número del DB que se va a probar

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

DB_LENGTH

Output

WORD

I, Q, M, D, L

Número de bytes de datos que contiene el DB
seleccionado.

WRITE_PROT

Output

BOOL

I, Q, M, D, L

Información sobre el identificador de protec‐
ción contra escritura del DB seleccionado ("1"
significa protegido contra escritura).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

80A1

Error en el parámetro de entrada DB_NUMBER: El parámetro actual seleccionado
● tiene el valor "0"
● es mayor que el número de DB máximo posible en la CPU utilizada.

80B1

El DB con el número indicado no está cargado en la CPU.

80B2

El DB ha sido creado con la palabra clave UNLINKED.

8xyy

Información de error general,
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

6201

Instrucciones
4.2 Instrucciones

4.2.3.11

Funciones de tabla

ATT: Introducir valor en tabla
Descripción
Esta instrucción complementa el parámetro DATA como siguiente entrada de una tabla e
incrementa en uno el número de entradas. La tabla está compuesta de palabras. Esta
instrucción permite crear entradas de tabla que son utilizadas por "FIFO (Página 6203)" y
"LIFO (Página 6207)".
● La primera entrada de una tabla "FIFO (Página 6203)" o "LIFO (Página 6207)" indica la
longitud máxima de la tabla.
● La segunda entrada de una tabla indica el número de entradas que contiene la tabla.
● La tercera entrada de la tabla contiene la primera palabra de datos.
Nota
Al crear la tabla deben inicializarse las dos primeras entradas.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "ATT":
Parámetros

Declaración

Tipo de datos Área de memoria

Descripción

DATA

Input

WORD

I, Q, M, D, L, P o cons‐
tante

Datos que deben introducirse en la tabla.

TABLE

Input

*Puntero

I, Q, M, D

Apunta a la dirección inicial de la tabla "FIFO"
o "LIFO".

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Si el número de entradas es igual o menor que la longitud de la tabla, los datos no se introducen
en la tabla y el estado lógico de "BR" se ajusta a "0".

Ejemplo (KOP)
Con estado lógico en la entrada I 0.0 = 1 (activado), la instrucción "ATT" se ejecuta. En el
ejemplo, DATA se introduce en la tabla como quinta entrada, y el número de entrada se
incrementa de 4 a 5.
Si la instrucción "ATT" se ejecuta sin errores, los estados lógicos de "ENO" y Q 0.0 se ajustan
a "1".

6202

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
$77
,
:
3'%'%;

4
(1

(12

'$7$
7$%/(

Antes de la ejecución:
TABLE (longitud de tabla)

DBW10 = W#16#0006

Número de entradas

DBW12 = W#16#0004
DBW14 = W#16#0012
DBW16 = W#16#0029
DBW18 = W#16#0090
DBW20 = W#16#0002
DBW22 = W#16#0000
DBW24 = W#16#0000

Después de la ejecución:
TABLE (longitud de tabla)

DBW10 = W#16#0006

Número de entradas

DBW12 = W#16#0005
DBW14 = W#16#0012
DBW16 = W#16#0029
DBW18 = W#16#0090
DBW20 = W#16#0002
DBW22 = W#16#0024
DBW24 = W#16#0000

FIFO: Emitir primer valor de la tabla
Descripción
Esta instrucción devuelve la entrada más antigua de la tabla "FIFO" como valor de función. El
número se entrada se reduce en 1. Si todavía existen entradas en la tabla, se desplazan hacia
abajo. La tabla "FIFO" está compuesta de palabras. Con "ATT (Página 6202)" se pueden
introducir valores en la tabla "FIFO".
● La primera entrada de una tabla indica la longitud máxima de la tabla.
● La segunda entrada de una tabla indica el número de entradas que contiene la tabla.
● La tercera entrada de la tabla contiene la primera palabra de datos.

Programación del PLC
Manual de programación y manejo, 11/2019

6203

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "FIFO":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

TABLE

Input

*Puntero

I, Q, M, D

Apunta a la dirección inicial de la tabla "FI‐
FO".

RET_VAL

Return

WORD

I, Q, M, D, L, P

La entrada más antigua de la tabla "FIFO".

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Si la tabla "FIFO" está vacía (número de entradas = 0), RET_VAL no se modifica y el estado
lógico de "BR/ENO" se ajusta a "0".

Ejemplo (KOP)
Con estado lógico de la entrada I 0.0 = "1" (activado), se ejecuta "FIFO". En el ejemplo, se
emite la entrada más antigua de la tabla como valor de función (MW 2.0). El número de
entradas se reduce de 5 a 4, y las entradas restantes de la tabla se desplazan hacia abajo.
Si "FIFO" se ejecuta sin errores, los estados lógicos de "BR/ENO" y Q 0.0 se ajustan a "1".
),)2
,

3'%'%;

4
(1
7$%/(

(12
5(7B9$/

0:

Antes de la ejecución:
TABLE (longitud de tabla)

DBW10 = W#16#0006

Número de entradas

DBW12 = W#16#0005
DBW14 = W#16#0012
DBW16 = W#16#0029
DBW18 = W#16#0090
DBW20 = W#16#0002
DBW22 = W#16#0024
DBW24 = W#16#0000

RET_VAL

6204

MW2 = W#16#0000

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Después de la ejecución:
TABLE (longitud de tabla)

DBW10 = W#16#0006

Número de entradas

DBW12 = W#16#0004
DBW14 = W#16#0029
DBW16 = W#16#0090
DBW18 = W#16#0002
DBW20 = W#16#0024
DBW22 = W#16#0024
DBW24 = W#16#0000

RET_VAL

MW2 = W#16#0012

TBL_FIND: Buscar valor en tabla
Descripción
Esta instrucción permite buscar expresiones en la memoria. La instrucción "TBL_FIND"
efectúa una comparación (parámetro CMD) entre la expresión de origen (parámetro PATRN)
y las entradas de la tabla de origen (parámetro SRC). Se busca la primera entrada de la tabla,
a partir de la entrada indicada en el parámetro INDX, que cumpla los criterios de comparación.
El número de la entrada se guarda en el parámetro INDX. Si no se encuentra ninguna
coincidencia, el parámetro INDXapunta más allá del final de la tabla y se desactiva la salida de
la instrucción "TBL_FIND".
● Si CMD = 1, la instrucción busca "TBL_FIND" el primer valor que coincida con el valor
indicado en el parámetro PATRN.
● Si CMD = 2, la instrucción busca "TBL_FIND" el primer valor que no coincida con el valor
indicado en el parámetro PATRN .
● La primera entrada de la tabla indica la longitud máxima de la tabla.
● La segunda entrada de la tabla contiene el primer valor de la tabla.
Nota
Debe inicializarse la primera entrada (longitud) de la tabla.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "TBL_FIND":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SRC

Input

*Puntero

I, Q, M, D

Apunta a la dirección inicial de la tabla.

PATRN

Input

*Puntero

I, Q, M, D

Apunta a la expresión que se desea buscar.

CMD

Input

BYTE

I, Q, M, D, L, P

Indica el comando:
● B#16#01 = igual
● B#16#02 = diferente

Programación del PLC
Manual de programación y manejo, 11/2019

6205

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

E_TYPE

Input

BYTE

I, Q, M, D, L, P

Indica el tipo de datos de las entradas de la
tabla:
B#16#02 = BYTE
B#16#04= WORD
B#16#05=INT
B#16#06=DWORD
B#16#07=DINT
B#16#08=REAL

RET_VAL

Return

WORD

I, Q, M, D, L, P

Emite el valor W#16#0000 si la operación se
ha llevado a cabo sin errores.

INDX

InOut

WORD

I, Q, M, D, L

Índice de la tabla, que contiene la siguiente
información:
● Entrada: Número de la entrada por la que
se debe iniciar la búsqueda.
● Salida: Número de la entrada que coincide
con el patrón especificado.

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Si se cumple una de las siguientes condiciones, los valores de la tabla no se modifican. El
estado lógico de "BR/ENO" se ajusta a "0" y el valor de retorno se ajusta como corresponde:
RET_VAL

Explicación

W#16#0007

El valor del parámetro INDX es mayor que el valor de longitud de la tabla.

W#16#0008

No se ha encontrado ninguna coincidencia.

W#16#0009

El parámetro E_TYPE y/o CMD es/son válido(s).

Ejemplo (KOP)
Con estado lógico en la entrada I 0.0 = 1 (activado), la instrucción "TBL_FIND" se ejecuta. En
el ejemplo, los datos de la tabla se guardan en palabras que empiezan en la dirección a la que
apunta el parámetro SRC , porque el parámetro E_TYPE es igual a "4". Estas palabras se
comparan con la expresión "5555", que se guarda en la dirección indicada por el parámetro
PATRN . Dado que CMD = 1, se busca el primer valor del parámetro SRC que coincide con la
expresión. El parámetro INDX apunta a la dirección en la que se desea iniciar la búsqueda.
Una vez procesada la operación, el parámetro INDX indica el número de la entrada de la tabla
en la que se ha encontrado una coincidencia con la expresión.
Si la instrucción "TBL_FIND" se ejecuta sin errores, los estados lógicos de ENO y Q 0.0 se
ajustan a "1", y RET_VAL se ajusta al valor W#16#0000.
La instrucción "MOVE" se utiliza únicamente para restablecer el valor de "MW2" en cada ciclo.

6206

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

,


029(

7%/B),1'

(1

(12

,1

287

(1

4

(12

0:

3'%'%;
3'%'%;
%
%
0:

65& 5(7B9$/
3$751
&0'
(B7<3(

0:

,1';

Antes de la ejecución:
SRC (longitud de tabla)

DBW0 = W#16#0004
DBW2 = W#16#1111
DBW4 = W#16#3333
DBW6 = W#16#5555

La primera entrada de la tabla indica la
longitud de la operación de búsqueda. El
valor 0004 indica que se examinarán las
cuatro próximas entradas.

DBW8 = W#16#7777
INDX

MW2 = W#16#0000

PATRN

DBW10 = W#16#5555

INDX se transfiere de DW0 (antes del
procesamiento) a DW6 (después del pro‐
cesamiento), porque la expresión de
DW6 es igual a la expresión de 5555 de
PATRN .

Después de la ejecución:
INDX

MW2 = W#16#0003

LIFO: Emitir último valor de la tabla
Descripción
Esta instrucción devuelve la entrada más reciente de la tabla "LIFO" como valor de función. El
número se entrada se reduce en 1. La tabla "LIFO" está compuesta de palabras. Con la
instrucción "ATT (Página 6202)" se pueden introducir valores en la tabla "LIFO".
● La primera entrada de la tabla indica el número máximo admisible de entradas de la tabla
(longitud de la tabla).
● La segunda entrada de una tabla indica el número de entradas que contiene la tabla.
● La tercera entrada de la tabla contiene la primera palabra de datos.

Programación del PLC
Manual de programación y manejo, 11/2019

6207

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "LIFO":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

TABLE

Input

*Puntero

I, Q, M, D

Apunta a la dirección inicial de la tabla
"LIFO".

RET_VAL

Return

WORD

I, Q, M, D, L, P

La entrada más reciente de la tabla "LI‐
FO".

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Si la tabla "LIFO" está vacía (número de entradas = 0), RET_VAL no se modifica y el estado
lógico de "BR/ENO" se ajusta a "0".

Ejemplo (KOP)
Con estado lógico en la entrada I 0.0 = 1 (activado), la instrucción "LIFO" se ejecuta. En el
ejemplo, se emite la entrada más reciente de la tabla "LIFO" como valor de función (MW 2.0).
El número de entradas se reduce de 5 a 4.
Si "LIFO" se ejecuta sin errores, los estados lógicos de "ENO" y Q 0.0 se ajustan a "1".
/,)2
,
3'%'%;

4
(1

(12

7$%/(
5(7B9$/

0:

Antes de la ejecución:
TABLE (longitud de tabla)

DBW10 = W#16#0006

Número de entradas

DBW12 = W#16#0005
DBW14 = W#16#0012
DBW16 = W#16#0029
DBW18 = W#16#0090
DBW20 = W#16#0002
DBW22 = W#16#0024
DBW24 = W#16#0000

RET_VAL

6208

MW2 = W#16#0000

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Después de la ejecución:
TABLE (longitud de tabla)

DBW10 = W#16#0006

Número de entradas

DBW12 = W#16#0004
DBW14 = W#16#0012
DBW16 = W#16#0029
DBW18 = W#16#0090
DBW20 = W#16#0002
DBW22 = W#16#0024
DBW24 = W#16#0000

RET_VAL

MW2 = W#16#0024

TBL: Ejecutar operación de tabla
Descripción
Esta instrucción ejecuta la operación indicada (parámetro CMD) con la tabla de origen y
guarda el resultado en la misma entrada de la tabla.
● La primera entrada de la tabla indica el número máximo admisible de entradas de la tabla
(longitud de la tabla).
● La segunda entrada de la tabla contiene el primer valor de la tabla.
● Si el parámetro E_TYPE se ajusta a REAL , el valor de CMD no es válido para el
complemento a 1.
Nota
Al crear la tabla debe inicializarse la primera entrada.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "TBL":
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

SRC

Input

*Puntero

I, Q, M, D

Apunta a la dirección inicial de la tabla.

CMD

Input

BYTE

I, Q, M, D, L, P

Indica la operación que se desea ejecutar. Son
válidas las siguientes operaciones:
B#16#03 = Complemento a 1
B#16#04 = Borrar
B#16#05 = Negar
B#16#06 = Raíz cuadrada

Programación del PLC
Manual de programación y manejo, 11/2019

6209

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos Área de memoria

Descripción

E_TYPE

Input

BYTE

Indica el tipo de datos de las entradas de la tabla.
Son posibles los siguientes tipos de datos:

I, Q, M, D, L, P

B#16#04 = WORD
B#16#05 = INT
B#16#06 = DWORD
B#16#07 = DINT
B#16#08 = REAL
RET_VAL

Return

WORD

I, Q, M, D, L, P

Emite el valor W#16#0000 si la operación se ha
llevado a cabo sin errores.

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Si el parámetro CMD o el parámetro E_TYPE no son válidos y/o el parámetro CMD y el
parámetro E_TYPE no coinciden, los valores de la tabla no se modificarán. El estado lógico de
BR/ENO se ajusta a "0" y RET_VAL se ajusta al valor W#16#0008 :

Ejemplo (KOP)
Con estado lógico en la entrada I 0.0 = 1 (activado), la instrucción "TBL" se ejecuta. En el
ejemplo, el parámetro SRC apunta a la dirección, dentro del bloque de datos, que la operación
debe procesar. Dado que el parámetro E_TYPE = 4, los datos de la tabla se guardan en las
palabras que empiezan en la dirección indicada por el parámetro SRC. Dado que CMD = 4
(borrar), cuando se ejecuta la instrucción TBL se borran (se ajustan a "0") todas las palabras
de la tabla. Dado que en la primera entrada de la tabla se indica una longitud de "5", se borran
las cinco primeras direcciones de la tabla.
Si la instrucción "TBL" se ejecuta sin errores, los estados lógicos de ENO y Q 0.0 se ajustan
a "1", y RET_VAL se ajusta al valor W#16#0000.
7%/
4

,

(1

3'%'%;
%
%

6210

65&
&0'
(B7<3(

(12
5(7B9$/

0:

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Antes de la ejecución:
SRC (longitud de tabla)

DBW0 = W#16#0005
DBW2 = W#16#2000
DBW4 = W#16#3000
DBW6 = W#16#4000
DBW8 = W#16#5000
DBW10 = W#16#6000

Después de la ejecución:
SRC (longitud de tabla)

DBW0 = W#16#0005
DBW2 = W#16#0000
DBW4 = W#16#0000
DBW6 = W#16#0000
DBW8 = W#16#0000
DBW10 = W#16#0000

TBL_WRD: Copiar valor de la tabla
Descripción
La instrucción "TBL_WRD" (Copiar valor de la tabla) copia de la tabla SRC en la salida DEST
la entrada que se indica en el parámetro INDX. Al hacerlo, el valor de INDX se incrementa, si
es inferior a la longitud máxima que se indica en la primera palabra de la tabla (SRC[0]). Si el
parámetro INDX indica la última entrada de la tabla, el bit de la salida se ajusta a "0" después
de la ejecución.
● La primera entrada de la tabla indica el número máximo admisible de entradas de la tabla
(longitud de la tabla).
● La segunda entrada de la tabla contiene el primer valor de la tabla.
Nota
Al crear la tabla debe inicializarse la primera entrada.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "TBL_WRD":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SRC

Input

*Pointer

I, Q, M, D

Apunta a la dirección inicial de la tabla.

DEST

Input

*Pointer

I, Q, M, D

Apunta a la dirección inicial del elemento de
destino.

Programación del PLC
Manual de programación y manejo, 11/2019

6211

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

E_TYPE

Input

BYTE

I, Q, M, D, L, P

Indica el tipo de datos de las entradas de la
tabla. Son posibles los siguientes tipos de da‐
tos:
● B#16#04 = WORD
● B#16#05 = INT
● B#16#06 = DWORD
● B#16#07 = DINT
● B#16#08 = REAL

RET_VAL

Return

WORD

I, Q, M, D, L, P

Emite el valor W#16#0000si la operación se
ha llevado a cabo sin errores.

Q

Output

BOOL

Q, M, D, L

Indica el valor "0" si, al llamar "TBL_WRD", la
variable INDXcontiene el último valor de la ta‐
bla.

INDX

InOut

WORD

I, Q, M, L

Número de la entrada que se desea copiar.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Si se cumple una de las siguientes condiciones, "TBL_WRD" no se ejecuta. El estado lógico de
ENO se ajusta a "0" y el valor de retorno se ajusta como corresponde:
RET_VAL

Explicación

W#16#0007

El índice es igual a "0".

W#16#0008

E_TYPE no es válido.

W#16#0009

El índice se encuentra fuera del rango de la tabla.

Ejemplo
Con estado lógico de la entrada I 0.0 = "1" (activado), se ejecuta "TBL_WRD". Dado que en el
ejemplo E_TYPE = 4, en la entrada indicada por el parámetro DEST se copia una palabra de
datos que se guarda en la entrada de la tabla a la que apunta el parámetro SRC. El valor de
INDX apunta a la entrada de la tabla que se desea copiar. Una vez ejecutada correctamente
"TBL_WRD", el valor de INDX se incrementa automáticamente en una entrada. Si, al llamar
TBL_WRD, el parámetro INDX no contiene la última entrada de la tabla, la salida del parámetro
ENO se ajusta a "1" después de la ejecución.
Si "TBL_WRD" se ejecuta sin errores, el estado lógico de ENO se ajusta a "1" y RET_VAL se
ajusta al valor W#16#0000.

6212

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
7%/B:5'
4

,

(1

3'%'%;
3'%'%;
%
0:

65&
'(67

(12
5(7B9$/
4

0:
0

(B7<3(
,1';

Antes de la ejecución:
SRC (longitud de tabla)

DBW0 = W#16#0004
DBW2 = W#16#2000
DBW4 = W#16#3000
DBW6 = W#16#4000
DBW8 = W#16#5000

INDX

MW1 = W#16#0001

DEST

DBW20 = W#16#0000

Antes de la ejecución:
INDX

MW1 = W#16#0002

DEST

DBW20 = W#16#2000

WRD_TBL: Combinar un valor lógicamente con un elemento de la tabla y guardarlo
Descripción
Esta instrucción ejecuta la operación indicada (parámetro CMD) con el elemento de origen y
la entrada de la tabla en el offset que se indica en el parámetro INDX. La operación solo se
ejecuta mientras el parámetro INDX sea menor que la longitud de la tabla, que se guarda en
la primera palabra de la tabla.
● La primera entrada de la tabla indica el número máximo admisible de entradas de la tabla
(longitud de la tabla).
● La segunda entrada de la tabla contiene el primer valor de la tabla.
● Si el parámetro E_TYPE es del tipo de datos REAL, el parámetro CMD solo puede ser
"Transferir".
Nota
Al crear la tabla debe inicializarse la primera entrada.

Programación del PLC
Manual de programación y manejo, 11/2019

6213

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "WRD_TBL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SRC

Input

*Puntero

I, Q, M, D

Apunta a los datos de origen

TABLE

Input

*Puntero

I, Q, M, D

Apunta al inicio de la tabla.

CMD

Input

BYTE

I, Q, M, D, L, P

Apunta a la operación que se desea ejecu‐
tar. Son posibles las siguientes operaciones:
B#16#0E = Transferir
B#16#07 = Operación lógica Y
B#16#08 = Operación lógica O
B#16#09 = Operación lógica O-exclusiva

E_TYPE

Input

BYTE

I, Q, M, D, L, P

Indica el tipo de datos de las entradas de la
tabla. Son posibles los siguientes tipos de
datos:
B#16#04 = WORD
B#16#05 = INT
B#16#06 = DWORD
B#16#07 = DINT
B#16#08 = REAL

RET_VAL

Return

WORD

I, Q, M, D, L, P

Emite el valor W#16#0000 si la operación se
ha llevado a cabo sin errores

Q

Output

BOOL

Q, M, D, L

Indica el valor "0" si la variable del paráme‐
tro INDX contiene el número de la última en‐
trada de la tabla.

INDX

InOut

WORD

I, Q, M, D, L

Número de la entrada con la que se desea
ejecutar la operación.

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Si se cumple una de las siguientes condiciones, la instrucción "WRD_TBL" no se ejecuta. El
estado lógico de ENO se ajusta a "0" y el valor de retorno se ajusta como corresponde:
RET_VAL

Explicación

W#16#0007

El índice es igual a 0.

W#16#0008

El parámetro CMD o el parámetro E_TYPE no son válidos o el parámetro CMD y el parámetro E_TYPE no
coinciden.

W#16#0009

El índice se encuentra fuera del rango de la tabla.

6214

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Ejemplo (KOP)
Con estado lógico en la entrada I 0.0 = 1 (activado), la instrucción "WRD_TBL" se ejecuta.
Dado que, en el ejemplo, el parámetro E_TYPE es igual a "6", la palabra doble de los datos de
la tabla se guarda en la dirección a la que apunta el parámetro TABLE . La primera palabra de
la tabla indica que la tabla contiene tres palabras dobles. El valor de INDX apunta a la entrada
de la tabla que se desea procesar. Dado que CMD = 8, se ejecuta una operación lógica O con
el valor al que apunta el parámetro INDX . Dado que INDX = 2, la segunda palabra (66665544)
se combina mediante operación lógica O con el valor al que apunta el parámetro SRC
(11111111). Una vez ejecutada la operación, el resultado de la operación lógica O (77775555)
se escribe en la tabla, y el valor de INDX se incrementa automáticamente en una entrada. Si
el parámetro INDX apunta a la última entrada de una tabla, el bit de la salida "Q" se ajusta a "0"
después de la ejecución de la operación. En el ejemplo, el valor de INDX no contiene la última
entrada de la tabla, por lo que la salida "Q" se ajusta a "1" después de la ejecución.
Si la instrucción "WRD_TBL" se ejecuta sin errores, los estados lógicos de ENO y Q 0.0 se
ajustan a "1", y RET_VAL se ajusta al valor W#16#0000.
:5'B7%/
4

,

(1

3'%'%;
3'%'%;
%
%
0:

65&
7$%/(

(12
5(7B9$/

0:

4

0

&0'
(B7<3(
,1';

Antes de la ejecución:
SRC

DBD20 = DW#16#11111111

TABLE (longitud de tabla)

DBW0 = W#16#0003
DBD2 = DW#16#99998877
DBD6 = DW#16#66665544
DBD10 = DW#16#33332222

INDX

MW1 = W#16#0002

Después de la ejecución:
TABLE (longitud de tabla)

DBW0 = W#16#0003
DBD2 = DW#16#99998877
DBD6 = DW#16#77775555
DBD10 = DW#16#33332222

INDX

Programación del PLC
Manual de programación y manejo, 11/2019

MW1 = W#16#0003

6215

Instrucciones
4.2 Instrucciones

DEV: Calcular desviación estándar
Descripción
La instrucción calcula la desviación estándar de un grupo de valores guardados en una tabla
(instrucción "TBL (Página 6209)"). El resultado se guarda en OUT . La desviación estándar se
calcula con la siguiente fórmula:
'HVYLDFLµQHVW£QGDU 

1 6XPD&X 6XPD



1  1

Donde:
● Suma = suma de los valores de la instrucción "TBL (Página 6209)"
● N= número de valores de la instrucción "TBL (Página 6209)"
● SumaCu = suma de todos los valores de la instrucción "TBL (Página 6209)" al cuadrado
Todos los cálculos utilizan valores en coma flotante IEEE, y en caso necesario la instrucción
"DEV" convierte automáticamente los tipos de datos.
● La primera entrada de la tabla indica el número de entradas (longitud de la tabla).
● La segunda entrada de la tabla contiene el primer valor de la tabla.
● El tamaño de las entradas de la tabla y el valor calculado (parámetro OUT) se definen en
el parámetro E_TYPE.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "DEV":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

TBL

Input

*Puntero

I, Q, M, D

**Apunta a la dirección inicial de la tabla con
los valores.

OUT

Input

*Puntero

I, Q, M, D

**Apunta a la dirección que contiene el valor
calculado para la desviación estándar.

E_TYPE

Input

BYTE

I, Q, M, D, L, P

Indica el tipo de datos de las entradas de la
tabla. Son válidos los siguientes tipos de datos:
B#16#05 = INT
B#16#07 = DINT
B#16#08 = REAL

RET_VAL

Return

WORD

I, Q, M, D, L, P

Emite el valor W#16#0000 si la operación se
ha llevado a cabo sin errores.

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas
** Los bloques de datos de origen y destino deben ser idénticos

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6216

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Si se cumple una de las siguientes condiciones, la instrucción "DEV" no se ejecuta. El estado
lógico de BR/ENO se ajusta a "0" y el valor de retorno se ajusta como corresponde:
RET_VAL

Explicación

W#16#0001

Se ha indicado un área de memoria no válida para un parámetro de "DEV".

W#16#0002

El parámetro E_TYPE no es válido.

W#16#0004

La longitud de la tabla es igual a cero.

Ejemplo (KOP)
Con estado lógico en la entrada I 0.0 = 1 (activado), la instrucción "DEV" se ejecuta. En el
ejemplo hay cinco valores de la tabla. Así lo indica la primera palabra de la tabla. Los valores
de la tabla son del tipo de datos REAL. Así lo indica el parámetro E_TYPE.
Si la instrucción "DEV" se ejecuta sin errores, los estados lógicos de ENO y Q 0.0 se ajustan
a "1", y RET_VAL se ajusta a "W#16#0000".
'(9
4

,

(1

3'%'%;

7%/

3'%'%;

287

%

(12
5(7B9$/

0:

(B7<3(

Antes de la ejecución:
TBL (longitud de tabla)

DBW100 = W#16#0005
DBD102 = 2.0
DBD106 = 4.0
DBD110 = 8.0
DBD114 = 16.0
DBD118 = 32.0

OUT

DBD130 = 0.0

Después de la ejecución:
OUT

Programación del PLC
Manual de programación y manejo, 11/2019

DBD130 = 12.19836055

6217

Instrucciones
4.2 Instrucciones

CDT: Tablas de datos correlativas
Descripción
Esta instrucción compara un valor de entrada (parámetro IN) con una tabla ya existente con
valores de entrada (parámetro IN_TBL) y busca el primer valor mayor o igual que el valor de
entrada. Tras ello, usando el índice del valor encontrado, se copia el valor en el valor de salida
correspondiente (parámetro OUT) en la tabla de valores de salida (parámetro OUT_TBL).
● Los valores de la tabla de entrada deben estar consignados en orden ascendente. Es decir:
el valor más bajo se encuentra en la primera entrada de la tabla, y el mayor en la última.
● El tamaño del valor de entrada, los valores de la tabla y los valores de salida se definen en
el parámetro E_TYPE.
● La primera entrada de la tabla indica el número de entradas (longitud de la tabla).
● La segunda entrada de la tabla contiene el primer valor de la tabla.
● El número de entradas debe ser idéntico en las dos tablas y mayor que cero.
Nota
Al crear las tablas debe inicializarse en cada una la primera entrada.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "CDT":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IN_TBL

Input

*Puntero

I, Q, M, D

Apunta al inicio de la tabla de entrada.

OUT_TBL

Input

*Puntero

I, Q, M, D

Apunta al inicio de la tabla de salida.

IN

Input

*Puntero

I, Q, M, D

Apunta a la tabla de entrada.

OUT

Input

*Puntero

I, Q, M, D

Apunta a la tabla de salida.

E_TYPE

Input

BYTE

I, Q, M, D, L, P

Indica el tipo de datos de las entradas de la
tabla. Son válidos los siguientes tipos de da‐
tos:
B#16#05 = INT
B#16#07 = DINT
B#16#08 = REAL

RET_VAL

Return

WORD

I, Q, M, D, L, P

Emite el valor W#16#0000 si la operación se
ha llevado a cabo sin errores.

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

6218

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Si se cumple una de las siguientes condiciones, CDT no se ejecuta. El estado lógico de BR/
ENO se ajusta a "0" y el valor de retorno se ajusta como corresponde:
RET_VAL

Explicación

W#16#0001

Se ha indicado un área de memoria no válida para un parámetro de CDT .

W#16#0002

El parámetro E_TYPE no es válido.

W#16#0003

Las longitudes de las tablas de entrada y de salida no coinciden.

W#16#0004

La tabla tiene una longitud igual a cero.

W#16#0007

El parámetro IN_TBL no contiene ningún valor mayor o igual que el valor de entrada.

Ejemplo (KOP)
Con estado lógico en la entrada I 0.0 = 1 (activado), la instrucción "CDT" se ejecuta. En el
ejemplo, los parámetros IN_TBL y OUT_TBL contienen cada uno cinco entradas de tabla. Así
lo indica la primera palabra de cada una de las tablas. El tipo de datos de los valores de la tabla
es INTEGER. Así lo indica el parámetro E_TYPE. El valor del parámetro IN es 22. El valor del
parámetro IN_TBL, mayor o igual que "22", es "64", a lo que corresponde el índice "5". El valor
correspondiente de OUT_TBL es "25". Por eso el valor "25" se escribe en el parámetro OUT.
Si la instrucción "CDT" se ejecuta sin errores, los estados lógicos de ENO y Q 0.0 se ajustan
a "1", y RET_VAL se ajusta a W#16#0000 .
&'7
,
3'%'%;

4
(1
,1B7%/

3'%'%;

287B7%/

3'%'%;
3'%'%;
%

,1
287
(B7<3(

Programación del PLC
Manual de programación y manejo, 11/2019

(12
5(7B9$/

0:

6219

Instrucciones
4.2 Instrucciones
Antes de la ejecución:
IN_TBL (longitud de tabla)

DBW0 = W#16#0005
DBW2 = 2
DBW4 = 4
DBW6 = 8
DBW8 = 16
DBW10 = 64

OUT_TBL (longitud de tabla)

DBW100 = W#16#0005
DBW102 = 5
DBW104 = 10
DBW106 = 15
DBW108 = 20
DBW110 = 25

IN

DBW200 = 22

OUT

DBW210 = 0

Después de la ejecución:
OUT

DBW210 = 25

TBL_TBL: Enlazar tablas
Descripción
Esta instrucción ejecuta el comando indicado en el parámetro CMD con las correspondientes
entradas de las dos tablas de origen (parámetros TBL1 y TBL2) y escribe el resultado en las
correspondientes entradas de la tabla de destino (DEST_TBL).
● Los tipos de datos INT, DINT y REAL solo son válidos para operaciones aritméticas.
● La primera entrada de la tabla indica el número de entradas (longitud de la tabla).
● El número de entradas debe ser en todas las tablas igual o mayor que cero.
Nota
Al crear las tablas debe inicializarse en cada una la primera entrada.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "TBL_TBL":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

TBL1

Input

*Puntero

I, Q, M, D

Apunta al inicio de la primera tabla de origen.

TBL2

Input

*Puntero

I, Q, M, D

Apunta al inicio de la segunda tabla de origen.

DEST_TBL

Input

*Puntero

I, Q, M, D

Apunta al inicio de la tabla de destino.

6220

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

CMD

Input

BYTE

I, Q, M, D, L, P

Indica el comando que se va a ejecutar: Son
válidos los siguientes comandos:
B#16#07 = Operación lógica Y
B#16#08 = Operación lógica O
B#16#09 = Operación lógica O-exclusiva
B#16#0a = Sumar
B#16#0b = Restar
B#16#0c = Multiplicar
B#16#0d = Dividir

E_TYPE

Input

BYTE

I, Q, M, D, L, P

Indica el tipo de datos de las entradas de la
tabla. Son válidos los siguientes tipos de datos:
B#16#04 = WORD
B#16#05 = INT
B#16#06 = DWORD
B#16#07 = DINT
B#16#08 = REAL

RET_VAL

Return

WORD

I, Q, M, D, L, P

Emite el valor W#16#0000 si la operación se
ha llevado a cabo sin errores.

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Si se cumple una de las siguientes condiciones, la instrucción "TBL_TBL" no se ejecuta. El
estado lógico de BR/ENO se ajusta a "0" y el valor de retorno se ajusta como corresponde:
RET_VAL

Explicación

W#16#0001

Se ha indicado un área de memoria no válida para un parámetro de la instrucción "TBL_TBL".

W#16#0002

El parámetro E_TYPE no es válido.

W#16#0003

Las longitudes de las tablas de entrada y salida no coinciden.

W#16#0004

La tabla tiene una longitud igual a cero.

W#16#0005

Los parámetros E_TYPE y CMD no coinciden.

W#16#0006

El parámetro CMD no es válido

Ejemplo (KOP)
Con estado lógico en la entrada I 0.0 = 1 (activado), la instrucción "TBL_TBL" se ejecuta. En
el ejemplo, todas las tablas contienen tres entradas cada una. Así lo indica la primera palabra
de cada una de las tablas. El tipo de datos de los valores de la tabla es WORD. Así lo indica
E_TYPE. CMD emite el comando con el que deben enlazarse TBL1 y TBL2 .
Si la instrucción "TBL_TBL" se ejecuta sin errores, los estados lógicos de ENOy Q 0.0 se
ajustan a "1", y RET_VAL se ajusta al valor W#16#0000.

Programación del PLC
Manual de programación y manejo, 11/2019

6221

Instrucciones
4.2 Instrucciones
7%/B7%/
,
3'%'%;

4
(1

(12
5(7B9$/

7%/

3'%'%;

7%/

3'%'%;
%
%

'(67B7%/
&0'
(B7<3(

0:

Antes de la ejecución:
TBL1 (longitud de tabla)

DBW0 = W#16#0003
DBW2 = W#16#00FF
DBW4 = W#16#FF00
DBW6 = W#16#FFFF

TBL2 (longitud de tabla)

DBW20 = W#16#0003
DBW22 = W#16#1111
DBW24 = W#16#2222
DBW26 = W#16#3333

DEST_TBL (longitud de tabla)

DBW40 = W#16#0003
DBW42 = W#16#0000
DBW44 = W#16#0000
DBW46 = W#16#0000

Después de la ejecución:
DST_TBL (longitud de tabla)

DBW40 = W#16#0003
DBW42 = W#16#0011
DBW44 = W#16#2200
DBW46 = W#16#3333

PACK: Recoger/distribuir datos de tabla
Descripción
Esta instrucción transfiere datos que se encuentran entre un conjunto cualquiera de
direcciones y una tabla. El sentido de la transferencia se define en el parámetro DIR . Cada
operación de la instrucción "PACK" procesa como máximo cinco bloques con datos de
(P_DATA1 a P_DATA5). Si el parámetro DIR contiene el valor "hacia", la instrucción "PACK"
transfiere datos de las direcciones a la tabla indicada. Si el parámetro DIRcontiene el valor
"desde", los datos se distribuyen desde la tabla a las direcciones indicadas.

6222

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Normas para la transferencia de datos "hacia" una tabla:
● Los bits individuales (BOOL) se transfieren al próximo bit disponible de la tabla.
● Los tipos de datos de 8 bits se transfieren al próximo byte disponible de la tabla. Cuando se
escribe un byte en la tabla, los bits no utilizados del byte anterior se rellenan con ceros.
● Los tipos de datos de 16 y 32 bits se transfieren a la próxima palabra disponible de la tabla.
Cuando se escribe una palabra en la tabla, los bits no utilizados de la palabra anterior se
rellenan con ceros.
Normas para la transferencia de datos "desde" una tabla:
● No debe omitirse sección alguna de la tabla.
● Todos los datos indicados del tipo de datos BOOL se transfieren desde la tabla.
● Los tipos de datos de 8 bits se transfieren desde el primer byte disponible de la tabla. Por
eso, el byte que se transfiere desde la tabla no contiene bits no utilizados del byte anterior
de la tabla.
● Los tipos de datos de 16 y 32 bits se transfieren desde la primera palabra disponible de la
tabla. En consecuencia, la palabra que se transfiere desde la tabla no contiene bits no
utilizados de la palabra anterior de la tabla.
Tipos de datos válidos para el puntero ANY y soportados por "PACK": BOOL, WORD, INT,
BYTE, DINT, REAL, CHAR, DWORD.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "PACK":
Parámetros

Declaración

Tipo de datos

Área de memoria

Descripción

TABLE

Input

*Puntero

I, Q, M, D

Apunta al inicio de la tabla.

P_DATA1

Input

ANY

I, Q, M, D

Apunta al inicio del bloque cuyos datos se
desean transferir.

P_DATA2

Input

ANY

I, Q, M, D

Apunta al inicio del bloque cuyos datos se
desean transferir.

P_DATA3

Input

ANY

I, Q, M, D

Apunta al inicio del bloque cuyos datos se
desean transferir.

P_DATA4

Input

ANY

I, Q, M, D

Apunta al inicio del bloque cuyos datos se
desean transferir.

P_DATA5

Input

ANY

I, Q, M, D

Apunta al inicio del bloque cuyos datos se
desean transferir.

ERR_CODE

Output

WORD

I, Q, M, D, L, P

Emite el valor W#16#0000si la operación se
ha llevado a cabo sin errores.

DIR

Static

BOOL

I, Q, M, D, L

Sentido de la transferencia. Son posibles los
siguientes estados lógicos: 0=hacia, 1=des‐
de.

* Puntero en formato de palabra doble para el direccionamiento indirecto por registro abarcando varias áreas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6223

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Si se cumple una de las siguientes condiciones de error, la instrucción "PACK" no se ejecuta.
El estado lógico de BR/ENO se ajusta a "0" y el ERR_CODE se ajusta como corresponde:
ERR_CODE

Explicación

W#16#0001

Se ha indicado un área de memoria no válida para un parámetro de la instrucción "PACK".

W#16#0002

La instrucción "E_TYPE" no es válida.

Ejemplo (KOP)
Con estado lógico de la entrada I 0.0 = 1 (activado), se ejecuta "PACK". En el ejemplo se
transfieren cuatro bloques con datos "hacia" la tabla.
Si la instrucción "PACK" se ejecuta sin errores, los estados lógicos de ENOy O 0.0 se ajustan
a "1", y ERR_CODE se ajusta a "W#16#0000".
Nota
Los parámetros estáticos pueden inicializarse con ayuda del editor de bloques de datos.
3$&.B'%
3$&.
4

,

(1

3'%'%;
30%22/
30%<7(
30%22/
30:25'

7$%/(

(12
(55B&2'(

0:

3B'$7$
3B'$7$
3B'$7$
3B'$7$
3B'$7$

Antes de la ejecución:
TABLE

DBB0 = B#16#00
DBB1 = B#16#00
DBB2 = B#16#00
DBB3 = B#16#00
DBB4 = B#16#00
DBB5 = B#16#00

P_DATA1

M 200.0 = TRUE
M 200.1 = TRUE

P_DATA2

MB210 = B#16#FF

P_DATA3

M 300.0 = TRUE
M 300.1 = TRUE

P_DATA4

6224

MW330 = W#16#FFFF

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
DB de instancia
PACK_DB
DIR

DBX58.0 = FALSE

Después de la ejecución:
TABLE

DBB0 = B#16#03
DBB1 = B#16#FF
DBB2 = B#16#03
DBB3 = B#16#00
DBB4 = B#16#FF
DBB5 = B#16#FF

4.2.3.12

Direccionamiento

GEO_LOG: Determinar la dirección inicial de un módulo
Descripción
Supongamos que se conoce el slot de módulo correspondiente al canal de un módulo de señal.
La instrucción "GEO_LOG" permite determinar a partir de él la correspondiente dirección inicial
del módulo, es decir, la dirección I o Q más baja.
Si se aplica la instrucción "GEO_LOG" a módulos de potencia o módulos con direcciones
comprimidas (ET 200S), se devuelve la dirección de diagnóstico.

Programación del PLC
Manual de programación y manejo, 11/2019

6225

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "GEO_LOG":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

MASTER

Input

INT

I, Q, M, D, L o cons‐
tante

Identificación de área:
● 0 si el slot se encuentra en una
configuración centralizada: Racks de 0 a 3
(con S7-300) o de 0 a 21 (con S7-400)
● de 1 a 32: ID de sistema maestro DP del
aparato de campo correspondiente, si el
slot se encuentra en un aparato de campo
conectado a PROFIBUS
● de 100 a 115: ID de sistema PROFINET IO
del aparato de campo correspondiente, si
el slot se encuentra en un aparato de
campo conectado a PROFINET

STATION

Input

INT

I, Q, M, D, L o cons‐
tante

● Número del rack, si la identificación de
área = 0
● Número de estación del aparato de campo,
si la identificación de área > 0

SLOT

Input

INT

I, Q, M, D, L o cons‐
tante

Número de slot

SUBSLOT

Input

INT

I, Q, M, D, L o cons‐
tante

Slot de submódulo (si no puede insertarse nin‐
gún módulo, debe indicarse aquí 0)

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

LADDR

Output

WORD

I, Q, M, D, L

Dirección inicial del módulo
En el bit 15 de LADDR se especifica si se trata
de una dirección de entrada (bit 15 = 0) o de
salida (bit 15 = 1).

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8094

No está configurada ninguna subred con la SUBNETID indicada.

8095

Valor no válido en el parámetro STATION

8096

Valor no válido en el parámetro SLOT

8097

Valor no válido en el parámetro SUBSLOT

8099

El slot no está configurado.

6226

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
809A

La dirección de submódulo para el slot seleccionado no está configurada.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

LOG_GEO: Determinar el slot que corresponde a una dirección lógica
Descripción
Esta instrucción permite determinar el slot correspondiente a una dirección lógica, así como el
offset del área de direcciones de datos útiles del módulo.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "LOG_GEO":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

LADDR

Input

WORD

I, Q, M, D, L o constante Cualquier dirección lógica del módulo
En el bit 15 se especifica si se trata de
una dirección de entrada (bit 15 = 0) o de
salida (bit 15 = 1).

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

AREA

Output

INT

I, Q, M, D, L

Identificación de área: Indica cómo de‐
ben interpretarse los parámetros de sali‐
da restantes.

MASTER

Output

INT

I, Q, M, D, L

Identificación de área:
● 0 si el slot se encuentra en una
configuración centralizada: Racks de
0 a 3 (con S7-300) o de 0 a 21 (con
S7-400)
● de 1 a 32: ID de sistema maestro DP
del aparato de campo
correspondiente, si el slot se
encuentra en un aparato de campo
conectado a PROFIBUS
● de 100 a 115: ID de sistema
PROFINET IO del aparato de campo
correspondiente, si el slot se
encuentra en un aparato de campo
conectado a PROFINET

STATION

Output

INT

I, Q, M, D, L

N.º del rack, si:
● Identificación de área = 0
● Número de estación del aparato de
campo, si la identificación de área > 0

SLOT

Output

Programación del PLC
Manual de programación y manejo, 11/2019

INT

I, Q, M, D, L

Número de slot

6227

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

SUBSLOT

Output

INT

I, Q, M, D, L

Número de submódulo

OFFSET

Output

INT

I, Q, M, D, L

Offset en el área de direcciones de datos
útiles del módulo correspondiente

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro AREA
Valor de AREA

Sistema

Significado de MASTER, STATION, SLOT, SUBSLOT y OFFSET

0

S7-400

MASTER: 0
STATION: número de rack
SLOT: número de slot
SUBSLOT: 0
OFFSET: diferencia entre la dirección lógica y la dirección base lógica

1

S7-300

MASTER: 0
STATION: número de rack
SLOT: número de slot
SUBSLOT: 0
OFFSET: diferencia entre la dirección lógica y la dirección base lógica

2

PROFIBUS DP

MASTER: ID del sistema maestro DP
STATION: número de estación
SLOT: número de slot en la estación
SUBSLOT: 0
OFFSET: offset en el área de direcciones de datos útiles del módulo co‐
rrespondiente

PROFINET IO

MASTER: ID de sistema de PROFINET IO
STATION: número de estación
SLOT: número de slot en la estación
SUBSLOT: número de submódulo
OFFSET: Offset en el área de direcciones de datos útiles del módulo
correspondiente

3

Área S5-P

MASTER: 0
STATION: número de rack
SLOT: número de slot de la cápsula de adaptación
SUBSLOT: 0
OFFSET: dirección en el área S5-x

4

Área S5-Q

MASTER: 0
STATION: número de rack
SLOT: número de slot de la cápsula de adaptación
SUBSLOT: 0
OFFSET: dirección en el área S5-x

5

Área S5-IM3

MASTER: 0
STATION: número de rack
SLOT: número de slot de la cápsula de adaptación
OFFSET: Dirección en el área S5-x

6

Área S5-IM4

MASTER: 0
STATION: número de rack
SLOT: número de slot de la cápsula de adaptación
SUBSLOT: 0
OFFSET: dirección en el área S5-x

6228

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error
(W#16#...)

Explicación

0000

No ha ocurrido ningún error.

8090

La dirección lógica indicada no es válida

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

RD_LGADR: Determinar todas las direcciones lógicas de un módulo
Descripción
Se toma como punto de partida una dirección lógica de un módulo, de un submódulo central
o de un submódulo en PNIO. La instrucción permite determinar todas las direcciones lógicas
de ese módulo o submódulo. Es necesario que esté configurada previamente la asignación de
direcciones lógicas a módulos o submódulos. La instrucción "RD_LGADR" introduce las
direcciones lógicas determinadas en los parámetros PEADDR o PAADDR en orden
ascendente.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "RD_LGADR":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IOID

Input

BYTE

I, Q, M, D, L o constante Identificador del área de direcciones:
● B#16#00: El bit 15 de LADDR indica si
se trata de una dirección de entrada (bit
15=0) o de salida (bit 15=1).
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)

LADDR

Input

WORD

I, Q, M, D, L o constante Una dirección lógica

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

PEADDR

Output

ANY

I, Q, M, D, L

Campo para las direcciones PI; los elemen‐
tos del campo deben ser del tipo de datos
WORD.

PECOUNT

Output

INT

I, Q, M, D, L

Número de direcciones PI devueltas

PAADDR

Output

ANY

I, Q, M, D, L

Campo para las direcciones PQ; los elemen‐
tos del campo deben ser del tipo de datos
WORD.

PACOUNT

Output

INT

I, Q, M, D, L

Número de direcciones PQ devueltas

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Programación del PLC
Manual de programación y manejo, 11/2019

6229

Instrucciones
4.2 Instrucciones

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8090

La dirección lógica indicada no es válida o se ha usado un valor no admisible en el parámetro IOID

80A0

Error en el parámetro de salida PEADDR: El tipo de datos de los elementos del campo no es WORD. (Este
código de error solo existe con S7-400 y en la CPU 318.)

80A1

Error en el parámetro de salida PAADDR: El tipo de datos de los elementos del campo no es WORD. (Este
código de error solo existe con S7-400 y en la CPU 318.)

80A2

Error en el parámetro de salida PEADDR: El campo indicado no ha podido alojar todas las direcciones
lógicas.

80A3

Error en el parámetro de salida PAADDR: El campo indicado no ha podido alojar todas las direcciones
lógicas.

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

GADR_LGC: Determinar la dirección base lógica de un módulo
Descripción
Supongamos que se conocen el slot y el offset del área de direcciones de datos útiles
correspondientes al canal de un módulo de señal. La instrucción "GADR_LGC" permite
determinar a partir de ellos la correspondiente dirección base lógica base del módulo, es decir,
la dirección I o Q más baja.
Si se aplica la instrucción "GADR_LGC" a módulos de potencia o módulos con direcciones
comprimidas (ET 200S), se devuelve la dirección de diagnóstico.

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "GADR_LGC":
Parámetro

Declaración

Tipo de datos

Área de memoria

SUBNETID

Input

BYTE

I, Q, M, D, L o constante Identificación de área:

Descripción
● 0 si el slot se encuentra en uno de los
racks 0 (aparato central) o de 1 a 21
(aparatos de ampliación)
● ID de sistema maestro DP del sistema
de periferia descentralizada
correspondiente, si el slot se encuentra
en un sistema de periferia
descentralizada

RACK

Input

WORD

I, Q, M, D, L o constante ● Número del rack, si la identificación de
área es 0
● Número de estación del sistema de
periferia descentralizada, si la
identificación de área > 0

6230

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Declaración

Tipo de datos

Área de memoria

SLOT

Input

WORD

I, Q, M, D, L o constante Número de slot

Descripción

SUBSLOT

Input

BYTE

I, Q, M, D, L o constante Slot de submódulo (si no puede insertarse
ningún módulo, debe indicarse aquí 0)

SUBADDR

Input

WORD

I, Q, M, D, L o constante Offset en el área de direcciones de datos
útiles del módulo

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

IOID

Output

BYTE

I, Q, M, D, L

Identificador del área de direcciones:
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
En los módulos mixtos, la instrucción de‐
vuelve la identificación de área de la direc‐
ción más baja. Si las direcciones son igua‐
les, la instrucción devuelve la identificación
B#16#54.

LADDR

Output

WORD

I, Q, M, D, L

Dirección base lógica del módulo

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8093

Valor no admisible en el parámetro SUBNETID (la instrucción "GADR_LGC" no es admisible para PRO‐
FINET IO).

8094

No está configurada ninguna subred con la SUBNETID indicada.

8095

Valor no válido en el parámetro RACK

8096

Valor no válido en el parámetro SLOT

8097

Valor no válido en el parámetro SUBSLOT

8098

Valor no válido en el parámetro SUBADDR

8099

El slot no está configurado.

809A

La subdirección correspondiente al slot seleccionado no está configurada (posible solo con periferia
central para CPU e IM)

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

6231

Instrucciones
4.2 Instrucciones

LGC_GADR: Determinar el slot que corresponde a una dirección lógica
Descripción
Esta instrucción permite determinar el slot correspondiente a una dirección lógica, así como el
offset del área de direcciones de datos útiles del módulo.
Nota
No es posible aplicar la instrucción "LGC_GADR" a un módulo con direcciones comprimidas
(ET 200S).

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "LGC_GADR":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

IOID

Input

BYTE

I, Q, M, D, L o constante Identificador del área de direcciones:
● B#16#00: El bit15 de LADDR indica si se
trata de una dirección de entrada
(bit15=0) o de salida (bit15=1).
● B#16#54 = entrada de periferia (PI)
● B#16#55 = salida de periferia (PQ)
Si se trata de un módulo mixto, debe indi‐
carse la identificación de área de la direc‐
ción más baja. Si se trata de las mismas di‐
recciones, debe indicarse B#16#54 .

LADDR

Input

WORD

I, Q, M, D, L o constante Dirección lógica
Con un módulo mixto debe indicarse la di‐
rección más baja de las dos.

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

AREA

Output

BYTE

I, Q, M, D, L

Identificación de área: Indica cómo deben
interpretarse los parámetros de salida res‐
tantes.

RACK

Output

WORD

I, Q, M, D, L

Número de rack

SLOT

Output

WORD

I, Q, M, D, L

Número de slot

SUBADDR

Output

WORD

I, Q, M, D, L

Offset en el área de direcciones de datos
útiles del módulo correspondiente.

6232

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".
Nota
Si se utiliza un sistema de automatización S7-400H en modo redundante y al llamar la
instrucción "LGC_GADR" se indica en el parámetro LADDR la dirección lógica de un módulo
de un esclavo DP conectado, se devuelve en el byte más significativo del parámetro RACK la
ID de sistema maestro DP del canal activo. Si no hay ningún canal activo, se devuelve la ID del
correspondiente sistema maestro DP de la CPU maestra.

Parámetro AREA
El parámetro AREA indica cómo deben interpretarse los parámetros de salida RACK, SLOT y
SUBADDR . La tabla siguiente explica esa dependencia.
Valor de AREA

Sistema

Significado de RACK, SLOT y SUBADDR

0

S7-400

RACK : Número de rack
SLOT : Número de slot
SUBADDR : Diferencia entre la dirección lógica y la dirección base lógica

1

S7-300

RACK : Número de rack
SLOT : Número de slot
SUBADDR : Diferencia entre la dirección lógica y la dirección base lógica

2

DP

RACK : (byte menos significativo): Número de estación
RACK : (byte más significativo): ID del sistema maestro DP
SLOT : Número de slot en la estación
SUBADDR : Offset en el área de direcciones de datos útiles del módulo corres‐
pondiente

3

Área S5-P

RACK : Número de rack
SLOT : Número de slot de la cápsula de adaptación
SUBADDR : Dirección en el área S5-x

4

Área S5-Q

RACK : Número de rack
SLOT : Número de slot de la cápsula de adaptación
SUBADDR : Dirección en el área S5-x

5

Área S5-IM3

RACK : Número de rack
SLOT : Número de slot de la cápsula de adaptación
SUBADDR : Dirección en el área S5-x

6

Área S5-IM4

RACK : Número de rack
SLOT : Número de slot de la cápsula de adaptación
SUBADDR : Dirección en el área S5-x

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

8090

La dirección lógica indicada no es válida o se ha usado un valor no admisible en el parámetro IOID

Programación del PLC
Manual de programación y manejo, 11/2019

6233

Instrucciones
4.2 Instrucciones
Código de error

Explicación

(W#16#...)
8093

Esta instrucción no es válida para el módulo seleccionado mediante los parámetros IOID y LADDR .

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

4.2.3.13

Otras funciones

iSlave
SET_ADDR: Establecer dirección de red como iSlave propio
Descripción
Esta instrucción permite modificar la dirección DP de de un iSlave DP-Interface. El
direccionamiento se realiza mediante la dirección de diagnóstico de la interfaz DP. Desde el
punto de vista del maestro DP, el esclavo DP con la dirección antigua se desconecta del bus
y se conecta otro esclavo DP con la dirección nueva.
● Si la dirección ya está ocupada por una estación en la red DP, los dos esclavos DP se
desconectan de la red.
● Si la dirección se utiliza también como dirección MPI para la conexión a la programadora,
el acceso al dispositivo puede quedar bloqueado. Para saber si los dispositivos están
accesibles, puede consultarse el cuadro de diálogo "Dispositivos accesibles".
La dirección de red no se escribe en el SDB (bloque de datos del sistema) ni se carga en la
memoria de trabajo. Cuando la CPU pasa a STOP, o en caso de arranque en caliente, la
dirección de red se mantiene. Después de un reset o un arranque en frío, se utiliza la dirección
configurada originalmente.
Esta instrucción no puede usarse para PROFINET IO, ya que las direcciones de Ethernet
pueden definirse como disjuntas en todo el mundo. Si se utiliza con PROFINET IO, se devuelve
el código de error 16#809B.

Funcionamiento
La instrucción "SET_ADDR" es una instrucción asíncrona, de modo que la ejecución se
prolonga a lo largo de varias llamadas. Para iniciar la petición, debe llamarse "READ_DBL" con
REQ = 1.
El estado de la petición se indica a través de los parámetros de salida RET_VAL y BUSY .

6234

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Parámetros
La tabla siguiente muestra los parámetros de la instrucción "SET_ADDR":
Parámetro

Declaración

Tipo de datos

Área de memoria

Descripción

REQ

Input

BOOL

I, Q, M, D, L

REQ=1: llamada de función

LADDR

Input

WORD

I, Q, M, D, L o constante Dirección base lógica

ADDR

Input

BYTE

I, Q, M, D, L o constante Nueva dirección del dispositivo

RET_VAL

Return

INT

I, Q, M, D, L

Información de error

BUSY

Output

BOOL

I, Q, M, D, L

BUSY=1: la orden no ha finalizado toda‐
vía.

Encontrará más información sobre los tipos de datos válidos en "Vista general de los tipos de
datos válidos (Página 241)".

Parámetro RET_VAL
Código de error

Explicación

(W#16#...)
0000

No ha ocurrido ningún error.

700x

La orden no ha finalizado todavía. Parámetro BUSY=1

8091

La nueva dirección de estación (ADDR) no es válida

8092

La estación no es una dirección de esclavo propia del esclavo I

8093

LADDR no es válido o no es una interfaz

809B

No se puede ejecutar la instrucción (p. ej. la interfaz no es un esclavo DP o está activa).

80C3

Recursos insuficientes (p. ej. varias llamadas de instrucciones con diferentes parámetros).

8xyy

Información de error general
Consulte también: Evaluación de errores con el parámetro de salida RET_VAL (Página 174)

Programación del PLC
Manual de programación y manejo, 11/2019

6235

Instrucciones
4.2 Instrucciones

4.2.4

Tecnología

4.2.4.1

Control PID

Funciones básicas de PID
CONT_C
Descripción de CONT_C
La instrucción CONT_C permite regular procesos técnicos con magnitudes continuas de
entrada y salida en los sistemas de automatización SIMATIC S7. Mediante parametrización se
pueden activar o desactivar funciones parciales del regulador PID para adaptarlo al sistema
regulado. Además de las funciones de las ramas de valor real y de consigna, la instrucción
realiza un regulador PID terminado con salida continua de magnitud manipulada y posibilidad
de controlar manualmente la variable manipulada.

Aplicación
El regulador se puede utilizar como regulador PID de valor fijo de manera individual o también
en regulaciones de varios lazos como regulador en cascada, mixto o de relación. El modo de
funcionamiento se basa en el algoritmo de regulación PID del regulador por muestreo con
señal de salida analógica, complementada dado el caso con una etapa de formación de
impulsos para generar señales de salida con modulación de ancho de impulsos para
regulaciones de dos o tres puntos con elementos finales de control proporcionales.

Llamada
La instrucción CONT_C dispone de una rutina de inicialización, que se ejecuta cuando el
parámetro de entrada COM_RST = TRUE está activado. El integrador se ajusta al valor de
inicialización I_ITVAL durante la inicialización. Todas las salidas de señal restantes se ponen
a cero. Una vez ejecutada la rutina de inicialización, debe activarse COM_RST = FALSE.
El cálculo de los valores en los bloques de regulación sólo se realiza correctamente si el bloque
se llama en intervalos regulares. Por ello, los bloques de regulación deben llamarse en un OB
de alarma cíclica (OB 30 a OB 38). El tiempo de muestreo se indica en el parámetro CYCLE.
Si se efectúa una llamada a la instrucción CONT_C como DB multiinstancia, no se crea ningún
objeto tecnológico. No se dispone de interfaz de parametrización y puesta en servicio. Los
CONT_C se deben parametrizar directamente en el DB multiinstancia y ponerse en servicio a
través de una tabla de observación.

Información de error
El bloque no evalúa la palabra de notificación de error RET_VAL.

6236

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Consulte también
Diferencias respecto a CONT_C S7-300/400 (Página 3828)

Funcionamiento de CONT_C
Rama de consigna
La consigna se indica en la entrada SP_INT en formato de coma flotante.

Rama de valor real
El valor real se puede leer en formato de coma flotante o en formato de periferia. La función
CRP_IN transforma el valor de periferia PV_PER en un formato en coma flotante de -100 ...
+100 %, según la siguiente fórmula:
Salida de CRP_IN = PV_PER * 100 / 27648
La función PV_NORM normaliza la salida de CRP_IN según la siguiente norma:
Salida de PV_NORM = (salida de CRP_IN) *PV_FAC + PV_OFF
PV_FAC tiene preasignado el valor 1 y PV_OFF el valor 0.

Cálculo del error de regulación
La diferencia entre la consigna y el valor real es el error de regulación. Para suprimir una
pequeña oscilación permanente provocada por la cuantificación de las magnitudes
manipuladas (p. ej. en caso de una modulación de ancho de impulsos con PULSEGEN), el
error de regulación se deriva a través de una zona muerta (DEADBAND). Con DEADB_W = 0
la zona muerta está desactivada.

Algoritmo PID
El algoritmo PID trabaja en el algoritmo de posición. Las acciones proporcional, integral (INT)
y derivativa (DIF) están conectadas en paralelo y pueden conectarse y desconectarse
individualmente. De esta forma pueden parametrizarse reguladores P, PI, PD y PID. Pero
también son posibles reguladores I.

Procesamiento de valores en manual
Es posible conmutar entre los modos manual y automático. En el modo manual, la magnitud
manipulada se corrige según un valor manual.
El integrador (INT) se pone internamente a LMN - LMN_P - DISV y el diferenciador (DIF) se
pone a 0 y se compensa internamente. La conmutación al modo automático se efectúa así con
suavidad.

Programación del PLC
Manual de programación y manejo, 11/2019

6237

Instrucciones
4.2 Instrucciones

Procesamiento de valores manipulados
La variable manipulada se limita con la función LMNLIMIT a valores especificables. El rebase
de los límites por la magnitud de entrada se señaliza mediante bits de aviso.
La función LMN_NORM normaliza la salida de LMNLIMIT según la siguiente regla:
LMN = (salida de LMNLIMIT) * LMN_FAC + LMN_OFF
LMN_FAC tiene preasignado el valor 1 y LMN_OFF el valor 0.
La variable manipulada también está disponible en formato de periferia. La función CRP_OUT
convierte el valor en coma flotante LMN en un valor de periferia según la siguiente regla:
LMN_PER = LMN * 27648 / 100

Control anticipativo
En la entrada DISV se puede aplicar una magnitud perturbadora de manera aditiva.

Consulte también
Diferencias respecto a CONT_C S7-300/400 (Página 3828)

6238

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Diagrama de bloques de CONT_C
63B,17
*$,1

393(5B21
39B,1
&53B,1
39B3(5

39B1250



;







'($'%$1'



'($'%B:

39

(5

39B)$&
39B2))
3B6(/

/01B3




,17






,B6(/

',69




7,,17B+2/'
,B,7/B21
,B,7/9$/


/01B,

',)





7'70B/$*

'B6(/

/01B'

4/01B+/0
4/01B//0

0$1B21
0$1


/01/,0,7

/01B1250

/01
&53B287



/01B+/0
/01B//0

/01B3(5

/01B)$&
/01B2))

Consulte también
Diferencias respecto a CONT_C S7-300/400 (Página 3828)

Programación del PLC
Manual de programación y manejo, 11/2019

6239

Instrucciones
4.2 Instrucciones

Parámetros de entrada de CONT_C
Tabla 4-267
Parámetro

Tipo
de da‐
tos

Ajuste
prede‐
termi‐
nado

Descripción

COM_RST

BOOL

FALSE La instrucción tiene una rutina de inicialización, que se ejecuta cuando está activada la
entrada "Rearranque completo".

MAN_ON

BOOL

TRUE

PVPER_ON

BOOL

FALSE Si el valor real se debe leer de la periferia, la entrada PV_PER debe estar interconectada
con la periferia, y la entrada "Activar valor real de periferia" debe estar activada.

P_SEL

BOOL

TRUE

En el algoritmo PID las acciones PID se pueden conectar y desconectar individualmente.
La acción P está conectada si está activada la entrada "Activar acción P".

I_SEL

BOOL

TRUE

En el algoritmo PID las acciones PID se pueden conectar y desconectar individualmente.
La acción I está conectada si está activada la entrada "Activar acción I".

INT_HOLD

BOOL

FALSE La salida del integrador se puede congelar. Para ello debe estar activada la entrada
"Congelar acción I".

I_ITL_ON

BOOL

FALSE La salida del integrador se puede aplicar a la entrada I_ITLVAL. Para ello, la entrada
"Inicializar acción I" debe estar activada.

D_SEL

BOOL

FALSE En el algoritmo PID las acciones PID se pueden conectar y desconectar individualmente.
La acción D está conectada si está activada la entrada "Activar acción D".

CYCLE

TIME

T#1s

Si está activada la entrada "Conectar modo manual", el lazo de regulación está interrum‐
pido. Como variable manipulada se especifica un valor manual.

El tiempo entre las llamadas del bloque debe ser constante. La entrada "Tiempo de
muestreo" indica el tiempo entre las llamadas del bloque.
CYCLE >= 1ms

SP_INT

REAL

0.0

La entrada "Consigna interna" sirve para preseleccionar una consigna.
Se admiten los valores de -100 a 100 % o una magnitud física 1).

PV_IN

REAL

0.0

En la entrada "Valor real de la entrada" se puede parametrizar un valor de puesta en
servicio, o se puede conectar un valor real externo en coma flotante.
Se admiten los valores de -100 a 100 % o una magnitud física 1).

PV_PER

WORD W#16# El valor real en formato de periferia se conecta al regulador a través de la entrada "Valor
0000
real de la periferia".

MAN

REAL

0.0

La entrada "Valor manual" sirve para establecer un valor manual mediante una función de
manejo/visualización.
Se admiten los valores de -100 a 100 % o una magnitud física 2).

GAIN

REAL

2.0

TI

TIME

T#20s

La entrada "Ganancia proporcional" indica la ganancia del regulador.
La entrada "Tiempo de integración" determina el comportamiento temporal del integrador.
TI >= CYCLE

TD

TIME

T#10s

La entrada "Tiempo de acción derivada" determina el comportamiento temporal del dife‐
renciador.
TD >= CYCLE

TM_LAG

TIME

T#2s

Tiempo de retardo de la acción D
El algoritmo de la acción D contiene un retardo que se puede parametrizar en la entrada
"Tiempo de retardo de la acción D".
TM_LAG >= CYCLE/2

6240

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Tipo
de da‐
tos

Ajuste
prede‐
termi‐
nado

Descripción

DEADB_W

REAL

0.0

El error de regulación se conduce por una zona muerta. La entrada "Ancho de zona
muerta" determina el tamaño de la zona muerta.
DEADB_W >= 0.0 (%) o una magnitud física 1)

LMN_HLM

REAL

100.0

La variable manipulada está limitada siempre por un límite superior y uno inferior. La
entrada "Límite superior de la variable manipulada" indica el límite superior.

LMN_LLM

REAL

0.0

PV_FAC

REAL

1.0

La entrada "Factor de valor real" se multiplica por el valor real. La entrada sirve para
adaptar el rango del valor real.

PV_OFF

REAL

0.0

La entrada "Offset de valor real" se suma al valor real. La entrada sirve para adaptar el
rango del valor real.

LMN_FAC

REAL

1.0

La entrada "Factor de la variable manipulada" se multiplica por la variable manipulado. La
entrada sirve para adaptar el rango de la variable manipulada.

LMN_OFF

REAL

0.0

La entrada "Offset de la variable manipulada" se suma a la variable manipulada. La en‐
trada sirve para adaptar el rango de la variable manipulada.

I_ITLVAL

REAL

0.0

La salida del integrador se puede aplicar en la entrada I_ITL_ON. En la entrada "Valor de
inicialización para la acción I" está el valor de inicialización.

DISV

REAL

0.0

Se admiten valores reales desde LMN_LLM (%) o una magnitud física 2).
La variable manipulada está limitada siempre por un límite superior y uno inferior. La
entrada "Límite inferior de la variable manipulada" indica el límite inferior.
Se admiten valores reales hasta LMN_HLM (%) o una magnitud física 2).

Se admiten valores desde -100 hasta 100.0 (%) o una magnitud física 2).
Para realizar un control anticipativo, la magnitud perturbadora se conecta a la entrada
"Variable perturbadora".
Se admiten valores desde -100 hasta 100.0 (%) o una magnitud física 2).

1) Parámetros en la rama de consigna, rama de valor real, con la misma unidad
2) Parámetros en la rama de variable manipulada con la misma unidad

Consulte también
Diferencias respecto a CONT_C S7-300/400 (Página 3828)

Parámetros de salida de CONT_C
Tabla 4-268
Parámetro

Tipo de
datos

Ajuste
prede‐
termi‐
nado

Descripción

LMN

REAL

0.0

En la salida "Variable manipulada" se indica la variable manipulada realmente efectiva en
formato de coma flotante.

LMN_PER

WORD

W#16# La variable manipulada en formato de periferia se conecta al regulador en la salida "Va‐
0000
riable manipulada de la periferia".

Programación del PLC
Manual de programación y manejo, 11/2019

6241

Instrucciones
4.2 Instrucciones
Parámetro

Tipo de
datos

Ajuste
prede‐
termi‐
nado

Descripción

QLMN_HLM

BOOL

FALSE La variable manipulada está limitada siempre por un límite superior y uno inferior. La
salida "Se ha alcanzado el límite superior de la variable manipulada" indica que se ha
alcanzado el límite superior.

QLMN_LLM

BOOL

FALSE La variable manipulada está limitada siempre por un límite superior y uno inferior. La
salida "Se ha alcanzado el límite inferior de la variable manipulada" indica que se ha
alcanzado el límite inferior.

LMN_P

REAL

0.0

La salida "Acción P" contiene la acción proporcional de la magnitud manipulada.

LMN_I

REAL

0.0

La salida "Acción I" contiene la acción integral de la magnitud manipulada.

LMN_D

REAL

0.0

La salida "Acción D" contiene la acción derivativa de la magnitud manipulada.

PV

REAL

0.0

En la salida "Valor real" se indica el valor real que actúa efectivamente.

ER

REAL

0.0

En la salida "Error de regulación" se indica el error de regulación que actúa realmente.

Consulte también
Diferencias respecto a CONT_C S7-300/400 (Página 3828)

CONT_S
Descripción de CONT_S
La instrucción CONT_S permite regular procesos técnicos con señales de salida binarias de la
variable manipulada para elementos finales de control integrales en los sistemas de
automatización SIMATIC S7. Mediante parametrización es posible activar o desactivar
funciones parciales del regulador paso a paso PI para adaptarlo al sistema regulado. Junto a
las funciones de la rama de valor real, la instrucción realiza un regulador PI terminado con
salida binaria de variable manipulada y posibilidades de influir manualmente sobre la variable
manipulada. El regulador paso a paso opera sin realimentación de posición.

Aplicación
El regulador puede utilizarse como regulador PI de valor fijo, ya sea individualmente o en lazos
de regulación subordinados en regulaciones en cascada, mixtas o de relación, pero no como
regulador piloto. El modo de funcionamiento se basa en el algoritmo de regulación PI del
regulador por muestreo y se completa con los elementos funcionales que generan la señal de
salida binaria a partir de la señal manipulada analógica.

Llamada
La instrucción CONT_S dispone de una rutina de inicialización, que se ejecuta cuando el
parámetro de entrada COM_RST = TRUE está activado. Todas las salidas de señal se ponen
a cero. Una vez ejecutada la rutina de inicialización, debe activarse COM_RST = FALSE.
El cálculo de los valores en los bloques de regulación sólo se realiza correctamente si el bloque
se llama en intervalos regulares. Por ello, los bloques de regulación deben llamarse en un OB
de alarma cíclica (OB 30 a OB 38). El tiempo de muestreo se indica en el parámetro CYCLE.

6242

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Si se efectúa una llamada a la instrucción CONT_S como DB multiinstancia, no se crea ningún
objeto tecnológico. No se dispone de interfaz de parametrización y puesta en servicio. Los
CONT_S se deben parametrizar directamente en el DB multiinstancia y ponerse en servicio a
través de una tabla de observación.

Información de error
El bloque no evalúa la palabra de notificación de error RET_VAL.

Consulte también
Diferencias respecto a CONT_S S7-300/400 (Página 3828)

Funcionamiento de CONT_S
Rama de consigna
La consigna se indica en la entrada SP_INT en formato de coma flotante.

Rama de valor real
El valor real se puede leer en formato de coma flotante o en formato de periferia. La función
CRP_IN transforma el valor de periferia PV_PER en un formato en coma flotante de -100 ...
+100 %, según la siguiente fórmula:
Salida de CRP_IN = PV_PER * 100 / 27648
La función PV_NORM normaliza la salida de CRP_IN según la siguiente norma:
Salida de PV_NORM = (salida de CRP_IN) * PV_FAC + PV_OFF
PV_FAC tiene preasignado el valor 1 y PV_OFF el valor 0.

Cálculo de error de regulación
La diferencia entre la consigna y el valor real constituye el error de regulación. Para suprimir
una pequeña oscilación permanente provocada por la cuantificación de las magnitudes
manipuladas (resolución limitada de la variable manipulada por parte de la servoválvula), el
error de regulación se conduce a través de una zona muerta (DEADBAND). Con DEADB_W
= 0 la zona muerta está desactivada.

Algoritmo paso a paso PI
La instrucción opera sin realimentación de posición. La acción I del algoritmo PI y la
realimentación de posición supuesta se calculan en un integrador (INT) y se comparan como
valor de realimentación con la acción P restante. La diferencia pasa a un elemento de tres
puntos (THREE_ST) y a un generador de impulsos (PULSEOUT), que genera los impulsos
para la servoválvula. Mediante una adaptación del umbral de respuesta del elemento de tres
puntos se reduce la frecuencia de conmutación del regulador.

Programación del PLC
Manual de programación y manejo, 11/2019

6243

Instrucciones
4.2 Instrucciones

Control anticipativo
En la entrada DISV se puede aplicar una magnitud perturbadora de manera aditiva.

Consulte también
Diferencias respecto a CONT_S S7-300/400 (Página 3828)

6244

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Diagrama de bloques de CONT_S
63B,17
*$,1

393(5B21
39B,1
&53B,1
39B3(5

39B1250

;







'($'%$1'





'($'%B:

39

(5

39B)$&
39B2))

/01/,0,7

,17
/015B+6
/015B/6

/015B6,0
/0156B21
/01569$/

/0183
/01'1

/016B21

',69


7+5((B67
DGDSWLY







$1'

38/6(287

$1'

$1'

4/0183

$1'

4/01'1

38/6(B70
%5($.B70

075B70









25

/016B21



,17




;




;





075B70



7,










Consulte también
Diferencias respecto a CONT_S S7-300/400 (Página 3828)

Programación del PLC
Manual de programación y manejo, 11/2019

6245

Instrucciones
4.2 Instrucciones

Parámetros de entrada de CONT_S
Tabla 4-269
Parámetro

Tipo
de da‐
tos

Ajuste
prede‐
termi‐
nado

Descripción

COM_RST

BOOL

FALSE

La instrucción tiene una rutina de inicialización, que se ejecuta cuando está activada la
entrada "Rearranque completo".

LMNR_HS

BOOL

FALSE

La señal "Servoválvula en el tope superior" se aplica en la entrada "Señal de tope superior
de la realimentación de posición". LMNR_HS=TRUE significa: La servoválvula se en‐
cuentra en el tope superior.

LMNR_LS

BOOL

FALSE

La señal "Servoválvula en el tope inferior" se aplica en la entrada "Señal de tope inferior
de la realimentación de posición". LMNR_LS=TRUE significa: La servoválvula se en‐
cuentra en el tope inferior.

LMNS_ON

BOOL

FALSE

En la entrada "Activar el modo manual de las señales de variable manipulada" el proce‐
samiento de las señales manipuladas pasa a manual.

LMNUP

BOOL

FALSE

En el modo manual de las señales de variable manipulada se controla la señal de salida
QLMNUP en la entrada "Señal alta de variable manipulada".

LMNDN

BOOL

FALSE

En el modo manual de las señales de variable manipulada se controla la señal de salida
QLMNDN en la entrada "Señal baja de variable manipulada".

PVPER_ON

BOOL

FALSE

Si se debe leer el valor real de la periferia, la entrada PV_PER debe estar conectada a la
periferia, y la entrada "Activar valor real de la periferia" debe estar activada.

CYCLE

TIME

T#1s

El tiempo entre las llamadas del bloque debe ser constante. La entrada "Tiempo de
muestreo" indica el tiempo entre las llamadas del bloque.

SP_INT

REAL

0.0

CYCLE >= 1ms
La entrada "Consigna interna" sirve para preseleccionar una consigna.
Se admiten los valores de -100 a 100 % o una magnitud física 1).
PV_IN

REAL

0.0

En la entrada "Valor real de la entrada" se puede parametrizar un valor de puesta en
servicio, o se puede conectar un valor real externo en coma flotante.
Se admiten los valores de -100 a 100 % o una magnitud física 1).

PV_PER

WORD W#16#
0000

El valor real en formato de periferia se conecta al regulador a través de la entrada "Valor
real de la periferia".

GAIN

REAL

2.0

La entrada "Ganancia proporcional" indica la ganancia del regulador.

TI

TIME

T#20s

La entrada "Tiempo de integración" determina el comportamiento temporal del integrador.
TI >= CYCLE

DEADB_W

REAL

1.0

El error de regulación se conduce por una zona muerta. La entrada "Ancho de zona
muerta" determina el tamaño de la zona muerta.
Se admiten los valores de 0 a 100 % o una magnitud física 1).

PV_FAC

REAL

1.0

La entrada "Factor de valor real" se multiplica por el valor real. La entrada sirve para
adaptar el rango del valor real.

PV_OFF

REAL

0.0

La entrada "Offset de valor real" se suma al valor real. La entrada sirve para adaptar el
rango del valor real.

PULSE_TM

TIME

T#3s

En el parámetro "Duración mínima de impulso" se puede parametrizar una duración de
impulso mínima.
PULSE_TM >= CYCLE

6246

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Tipo
de da‐
tos

Ajuste
prede‐
termi‐
nado

Descripción

BREAK_TM

TIME

T#3s

En el parámetro "Duración mínima de pausa" se puede parametrizar una longitud de
pausa mínima.
BREAK_TM >= CYCLE

MTR_TM

TIME

T#30s

DISV

REAL

0.0

En el parámetro "Tiempo de posicionamiento del motor" se introduce el tiempo de ope‐
ración de la servoválvula de tope a tope.
MTR_TM >= CYCLE
Para realizar un control anticipativo, la magnitud perturbadora se conecta a la entrada
"Variable perturbadora".
Se admiten los valores de -100 a 100 % o una magnitud física 2).

1)

Parámetros en la rama de consigna, rama de valor real, con la misma unidad

2)

Parámetros en la rama de variable manipulada con la misma unidad

Consulte también
Diferencias respecto a CONT_S S7-300/400 (Página 3828)

Parámetros de salida de CONT_S
Tabla 4-270
Parámetro

Tipo
de da‐
tos

Ajuste prede‐
terminado

Descripción

QLMNUP

BOOL

FALSE

Si la salida "Señal alta de variable manipulada" está activada, la servoválvula debe
abrirse.

QLMNDN

BOOL

FALSE

Si está activada la salida "Señal baja de variable manipulada", la servoválvula debe
cerrarse.

PV

REAL

0.0

En la salida "Valor real" se indica el valor real que actúa efectivamente.

ER

REAL

0.0

En la salida "Error de regulación" se indica el error de regulación que actúa real‐
mente.

Consulte también
Diferencias respecto a CONT_S S7-300/400 (Página 3828)

Programación del PLC
Manual de programación y manejo, 11/2019

6247

Instrucciones
4.2 Instrucciones

PULSEGEN
Descripción de PULSEGEN
La instrucción PULSEGEN permite establecer un regulador PID con salida de impulsos para
actuadores proporcionales. PULSEGEN transforma la magnitud de entrada INV (= LMN del
regulador PID) mediante modulación de ancho de impulsos en una secuencia de impulsos con
duración de periodo constante, que corresponde al tiempo de ciclo con el que se actualiza la
magnitud de entrada.

Aplicación
La instrucción PULSEGEN permite generar reguladores PID de dos o tres puntos con
modulación de ancho de impulsos. La función se aplica casi siempre en combinación con el
regulador continuo CONT_C.
&217B&

38/6(*(1
/01

,19

Llamada
La instrucción PULSEGEN dispone de una rutina de inicialización, que se ejecuta cuando el
parámetro de entrada COM_RST = TRUE está activado. Todas las salidas de señal se ponen
a cero. Una vez ejecutada la rutina de inicialización, debe activarse COM_RST = FALSE.
El cálculo de los valores en los bloques de regulación sólo se realiza correctamente si el bloque
se llama en intervalos regulares. Por ello, los bloques de regulación deben llamarse en un OB
de alarma cíclica (OB 30 a OB 38). El tiempo de muestreo se indica en el parámetro CYCLE.

Comportamiento en caso de error
El bloque no evalúa la palabra de notificación de error RET_VAL.

Consulte también
Diferencias respecto a PULSEGEN S7-300/400 (Página 3829)

6248

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Funcionamiento de PULSEGEN
Modulación de ancho de impulsos
La duración de un impulso por duración de período es proporcional a la magnitud de entrada.
El ciclo parametrizado con PER_TM no es idéntico al ciclo de ejecución de la instrucción
PULSEGEN. Es más, un ciclo PER_TM está compuesto por varios ciclos de ejecución de la
instrucción PULSEGEN, y la cantidad de llamadas de PULSEGEN por ciclo PER_TM
representa una medida para la precisión del ancho de impulso.
,19 
/01







W



4326B3




W
&LFOR38/6(*(1
3(5B70

FLFOR&217B&

Así, una magnitud de entrada del 30 % y 10 llamadas de PULSEGEN por PER_TM significan:
● "uno" en la salida QPOS_P para las tres primeras llamadas de PULSEGEN (30% de 10
llamadas)
● "cero" en la salida QPOS_P para otras siete llamadas de PULSEGEN (70% de 10 llamadas)

Programación del PLC
Manual de programación y manejo, 11/2019

6249

Instrucciones
4.2 Instrucciones

Diagrama de bloques
326B3B21

6<1B21
67(3B21
67%,B21

1(*B3B21



0$1B21

4326B3

,19

41(*B3


3(5B70
3B%B70
5$7,2)$&

Precisión de variable manipulada
En este ejemplo, con una "relación de muestreo" de 1:10 (llamadas de CONT_C respecto a
llamadas de PULSEGEN) la precisión de la variable manipulada se reduce al 10%, es decir,
los valores de entrada predeterminados INV sólo se pueden representar en intervalos del 10%
en una duración de impulso en la salida QPOS_P.
Del mismo modo aumenta la precisión con la cantidad de llamadas de PULSEGEN por cada
llamada de CONT_C.
Si por ejemplo PULSEGEN se llama con una frecuencia 100 veces mayor que CONT_C, se
consigue una resolución del 1% del rango de la variable manipulada.
Nota
La desmultiplicación de la frecuencia de llamada debe ser programada por el usuario.

Sincronización automática
Existe la posibilidad de sincronizar automáticamente la salida de impulsos con la instrucción
que actualiza la magnitud de entrada INV (p. ej. CONT_C). De este modo se garantiza que una
magnitud de entrada cambiante también se pueda emitir como impulso con la mayor rapidez
posible.
El formador de impulsos evalúa siempre la magnitud de entrada INV en el intervalo
correspondiente a la duración de período PER_TM y transforma el valor en una señal de
impulso con la correspondiente duración.

6250

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Pero como INV se calcula casi siempre en un nivel de alarma cíclica más lento, el formador de
impulsos debería iniciar la transformación del valor discreto en una señal de impulso con la
máxima rapidez posible tras la actualización de INV.
Para ello, el bloque puede sincronizar él mismo el inicio del período según el siguiente
procedimiento:
Si INV ha cambiado y la llamada de bloque no se encuentra en el primer ciclo de llamada o en
los dos últimos ciclos de un período, se realiza una sincronización. La duración de impulso se
calcula de nuevo, y en el siguiente ciclo se inicia la emisión con un nuevo periodo.
/01 ,19 

/01 ,19 

/01 ,19 

3URFHVDPLHQWRGH&217B&
W

&<&/(YRQ&217B&
,QLFLRGHOSHU¯RGR







































 


W

3(5B70

&<&/(YRQ
38/6(*(1

6LQFURQL]DFLµQGHO
LQLFLRGHOSHU¯RGR
38/6(*(1GHWHFWD
,19KDFDPELDGR\ODOODPDGDQR
VHHQFXHQWUDHQHOSULPHUFLFORQL
HQQLQJXQRGHORVGRV¼OWLPRV
FLFORVGHOSHU¯RGR

3URFHVDPLHQWRGH38/6(*(1

3(5B70
6LQVLQFURQL]DFLµQ
QHFHVDULR
38/6(*(1GHWHFWD
,19KDFDPELDGRDR\OD
OODPDGDVHHQFXHQWUDHQHOSULPHU
FLFORRHQORVGRV¼OWLPRVFLFORVGHO
SHU¯RGR
3URFHVDPLHQWRGH38/6(*(1HQHOSULPHUFLFORRHQORVGRV
¼OWLPRVFLFORVGHOSHU¯RGR

La sincronización automática se desactiva con SYN_ON = FALSE.
Nota
Con el inicio del periodo nuevo, el valor antiguo de INV (es decir, de LMN) se representa en la
señal de impulso de manera más o menos precisa una vez concluida la sincronización.

Consulte también
Diferencias respecto a PULSEGEN S7-300/400 (Página 3829)

Programación del PLC
Manual de programación y manejo, 11/2019

6251

Instrucciones
4.2 Instrucciones

Modos de operación de PULSEGEN
Modos de operación
Dependiendo de la parametrización del formador de impulsos, los reguladores PID se pueden
configurar con comportamiento de tres puntos o con salida de dos puntos bipolar o unipolar. La
siguiente tabla contiene los ajustes de las combinaciones de conmutadores para los modos de
operación posibles.
Modo de operación

MAN_ON

STEP3_ON

ST2BI_ON

Regulación de tres puntos

FALSE

TRUE

cualquiera

Regulación de dos puntos con rango de valores

FALSE

FALSE

TRUE

FALSE

FALSE

FALSE

TRUE

cualquiera

cualquiera

manipulados bipolar (-100 % ... 100 %)
Regulación de dos puntos con rango de valores
manipulados unipolar (0 % ... 100 %)
Modo manual

Modo manual en la regulación de dos o de tres puntos
En el modo manual (MAN_ON = TRUE) las salidas binarias del regulador de tres puntos o del
regulador de dos puntos pueden activarse independientemente de INV a través de las señales
POS_P_ONy NEG_P_ON.
Regulación

POS_P_ON

NEG_P_ON

QPOS_P

QNEG_P

Regulación de tres
puntos

FALSE

FALSE

FALSE

FALSE

TRUE

FALSE

TRUE

FALSE

FALSE

TRUE

FALSE

TRUE

TRUE

TRUE

FALSE

FALSE

FALSE

cualquiera

FALSE

TRUE

TRUE

cualquiera

TRUE

FALSE

Regulación de dos
puntos

Consulte también
Diferencias respecto a PULSEGEN S7-300/400 (Página 3829)

6252

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones

Regulación de tres puntos
Regulación de tres puntos
En el modo de operación "Regulación de tres puntos" se pueden generar tres estados de la
señal de salida. Para ello se asignan los valores de estado de las señales binarias de salida
QPOS_P y QNEG_P a los correspondientes estados operativos del actuador. La tabla muestra
el ejemplo de una regulación de temperatura:
Señales de salida

Calentar

OFF

Enfriar

QPOS_P

TRUE

FALSE

FALSE

QNEG_P

FALSE

FALSE

TRUE

A partir de la magnitud de entrada se calcula la duración del impulso mediante una
característica. La forma de esta característica está definida por la duración mínima de impulso
o de pausa y por el factor de relación. El valor normal del factor de relación es 1.
Los puntos escalonados de las características son originados por la duración mínima de
impulso o de pausa.
Duración mínima de impulso o de pausa
La correcta parametrización de la duración mínima de impulso o de pausa P_B_TM evita
tiempos de conexión o desconexión breves, que merman la vida útil de los elementos de
contacto y de los elementos de control final. Se suprimen valores absolutos pequeños de la
magnitud de entrada LMN que generarían una duración de impulso inferior a P_B_TM. Los
valores de entrada grandes que generarían una duración de impulso superior a PER_TM P_B_TM se ajustan a 100 % o a -100 %.
La duración de los impulsos positivos o negativos se calcula multiplicando la magnitud de
entrada (en %) por la duración del período:
Duración de impulso = INV / 100 * PER_TM
La siguiente figura muestra una característica simétrica del regulador de tres puntos (factor de
relación = 1)

Programación del PLC
Manual de programación y manejo, 11/2019

6253

Instrucciones
4.2 Instrucciones
'XUDFLµQGHOLPSXOVR
SRVLWLYR
FRQWLQXDPHQWHFRQHFWDGR
3(5B70
3(5B703B%B70



3B%B70

FRQWLQXDPHQWHGHVFRQHFWDGR



'XUDFLµQGHOLPSXOVRQHJDWLYR

Regulación de tres puntos asimétrica
A través del factor de relación RATIOFAC puede modificarse la relación de la duración de
impulsos positivos respecto a los negativos. Durante un lazo de regulación de temperatura,
ello permite tener en cuenta p. ej. constantes temporales de proceso distintas para calentar y
refrigerar.
Factor de relación < 1
La duración de impulso obtenida de la multiplicación de la magnitud de entrada por la duración
del período en la salida de impulsos negativa se multiplica por el factor de relación.
Duración de impulso positiva = INV /100 * PER_TM
Duración de impulso negativa = INV / 100 * PER_TM * RATIOFAC
La siguiente figura muestra una característica asimétrica del regulador de tres puntos (factor
de relación = 0.5)

6254

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
'XUDFLµQGHOLPSXOVRSRV

3(5B70
3(5B703B%B70

3B%B70



3B%B70



 3(5B70
'XUDFLµQGHOLPSXOVRQHJ

Factor de relación > 1
La duración de impulso obtenida de la multiplicación de la magnitud de entrada por la duración
del período en la salida de impulsos positiva se divide por el factor de relación.
Duración de impulso positiva = INV / 100 * PER_TM / RATIOFAC
Duración de impulso negativa = INV / 100 * PER_TM

Consulte también
Diferencias respecto a PULSEGEN S7-300/400 (Página 3829)

Regulación de dos puntos
En la regulación de dos puntos sólo se conecta la salida de impulsos positiva QPOS_P de
PULSEGEN al actuador de conexión/desconexión en cuestión. Según cuál sea el rango
utilizado de la variable manipulada, el regulador de dos puntos tiene un rango bipolar o
unipolar.
Regulación de dos puntos con rango de variable manipulada bipolar (-100% ... 100%)
'XUDFLµQGHOLPSXOVRSRVLWLYR

FRQWLQXDPHQWH
FRQHFWDGR

3(5B70
3(5B703B%B70

FRQWLQXDPHQWH
GHVFRQHFWDGR
3B%B70






Regulación de dos puntos con rango de variable manipulada unipolar (0%...100%)

Programación del PLC
Manual de programación y manejo, 11/2019

6255

Instrucciones
4.2 Instrucciones
'XUDFLµQGHOLPSXOVRSRVLWLYR
3(5B70
3(5B703B%B70

3B%B70




En QNEG_P está disponible la señal de salida negada, si la interconexión del regulador de dos
puntos en el lazo de regulación exige una señal binaria invertida lógicamente para los impulsos
de la señal manipulada.
Impulso

Actuador ON

Actuador OFF

QPOS_P

TRUE

FALSE

QNEG_P

FALSE

TRUE

Consulte también
Diferencias respecto a PULSEGEN S7-300/400 (Página 3829)

Parámetros de entrada de PULSEGEN
Los valores de los parámetros de entrada no se limitan en el bloque; no tiene lugar una
comprobación de los parámetros.
Tabla 4-271
Parámetro

Tipo de
datos

Ajuste
prede‐
termi‐
nado

Descripción

INV

REAL

0.0

En el parámetro de entrada "Variable de entrada" se aplica una variable manipulada
analógica.
Se admiten valores entre -100 y 100 %.

PER_TM

TIME

T#1s

En el parámetro "Duración de período" se introduce la duración de período constante de
la modulación de ancho de impulsos. La duración corresponde al tiempo de muestreo del
regulador. La relación entre el tiempo de muestreo del formador de impulsos respecto al
tiempo de muestreo del regulador determina la precisión de la modulación de ancho de
impulsos.
PER_TM >=20*CYCLE

P_B_TM

TIME

T#50m
s

En el parámetro "Duración mínima de impulso" o "Duración mínima de pausa" se puede
parametrizar una duración de pausa o de impulso mínima.
P_B_TM >= CYCLE

6256

Programación del PLC
Manual de programación y manejo, 11/2019

Instrucciones
4.2 Instrucciones
Parámetro

Tipo de
datos

Ajuste
prede‐
termi‐
nado

Descripción

RATIOFAC

REAL

1.0

Con el parámetro de entrada "Factor de relación" puede modificarse la relación de la
duración de impulsos negativos a impulsos positivos. De ese modo, en un lazo de regu‐
lación de temperatura se pueden compensar constantes temporales distintas para ca‐
lentar y refrigerar (p. ej. proceso con calefacción eléctrica y refrigeración por agua).
Se admiten valores comprendidos entre 0.1 y 10.0.

STEP3_ON

BOOL

TRUE

En el parámetro de entrada "Activar la regulación de tres puntos" se activa el correspon‐
diente modo de operación. En la regulación de tres puntos trabajan ambas señales de
salida.

ST2BI_ON

BOOL

FALSE En el parámetro de entrada "Activar la regulación de dos puntos para el rango de valores
manipulados bipolar" puede elegirse entre los modos de operación "Regulación de dos
puntos para rango de valores manipulados bipolar" y "Regulación de dos puntos para el
rango de valores manipulados unipolar". Para ello es necesario que STEP3_ON = FAL‐
SE.

MAN_ON

BOOL

FALSE La activación del parámetro de entrada "Activar modo manual" permite ajustar las seña‐
les de salida manualmente.

POS_P_ON

BOOL

FALSE En el modo manual Regulación de tres puntos se puede controlar la señal de salida
QPOS_P en el parámetro de entrada "Activar impulso positivo". En modo manual Regu‐
lación de dos puntos QNEG_P siempre está invertido respecto a QPOS_P.

NEG_P_ON

BOOL

FALSE En el modo manual Regulación de tres puntos se puede controlar la señal de salida
QNEG_P en el parámetro de entrada "Activar impulso negativo". En modo manual Re‐
gulación de dos puntos QNEG_P siempre está invertido respecto a QPOS_P.

SYN_ON

BOOL

TRUE

COM_RST

BOOL

FALSE La instrucción tiene una rutina de inicialización que se ejecuta cuando está activada la
entrada de rearranque completo.

CYCLE

TIME

T#10m
s

La activación del parámetro de entrada "Activar sincronización" permite sincronizar au‐
tomáticamente la salida de impulsos con el bloque que actualiza la magnitud de entrada
INV. De ese modo se garantiza que una magnitud de entrada cambiante también se
pueda emitir como impulso con la mayor rapidez posible.

El tiempo entre las llamadas del bloque debe ser constante. La entrada "Tiempo de
muestreo" indica el tiempo entre las llamadas del bloque.
CYCLE >= 1ms

Consulte también
Diferencias respecto a PULSEGEN S7-300/400 (Página 382